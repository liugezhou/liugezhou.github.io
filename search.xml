<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>每周小结(*103):开启新博客纪录</title>
      <link href="/202404-No103/"/>
      <url>/202404-No103/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://liugezhou.github.io/image/blog/202404.webp" alt="我的桌面" style="display: block; margin-top: 20px; margin-right: auto; margin-bottom: 20px; margin-left: auto; max-width: 100%; width: 100%; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; object-fit: fill; box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px;"><figcaption style="display: block; color: rgb(136, 136, 136); font-size: 14px; line-height: 1.5em; letter-spacing: 0em; text-align: center; font-weight: normal; margin-top: 5px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;"><span style="background-image: url('https://img.alicdn.com/tfs/TB1Yycwyrj1gK0jSZFuXXcrHpXa-32-32.png'); display: inline-block; width: 18px; height: 18px; background-size: 18px; background-repeat: no-repeat; background-position-x: center; background-position-y: center; margin-right: 5px; margin-bottom: -5px;"></span>我的桌面</figcaption></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 10px; padding-right: 10px; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; font-family: Optima-Regular, Optima, PingFangTC-Light, PingFangSC-light, PingFangTC-light; font-size: 16px; color: rgb(43, 43, 43); line-height: 1.25; word-spacing: 0em; letter-spacing: 2px; word-break: break-word; overflow-wrap: break-word; text-align: left;"><section class="block-2" data-tool="mdnice编辑器" style="margin-top: 20px; margin-bottom: 20px; margin-left: 0px; margin-right: 0px; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; background-attachment: scroll; background-clip: border-box; background-color: rgb(250, 250, 250); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px; display: block;"><section class="block-2-inner"><p style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">本周是2024年的第<strong style="color: rgb(53, 148, 247); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;"><span>「</span>4周<span>」</span></strong>(01.22-01.28).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a href="https://blog.liugezhou.online" style="color: rgb(64, 184, 250); font-weight: 700; border-top-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; text-decoration-line: none; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(59, 170, 250);">我的博客<span style="width: 1em;"></span></a>，同步更新至公众号：Wakaka。<br><span style="display:block;text-align:right;color:blue;">No.*103</span></p></section></section><hr data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: 1px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-right-width: initial; border-bottom-width: initial; border-left-width: initial; border-right-style: none; border-bottom-style: none; border-left-style: none; border-right-color: initial; border-bottom-color: initial; border-left-color: initial; border-image-source: initial; border-image-slice: initial; border-image-width: initial; border-image-outset: initial; border-image-repeat: initial; border-top-width: 2px; border-top-style: solid; border-top-color: rgb(59, 170, 250);"><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block; border-bottom-width: 4px; border-bottom-style: solid; border-bottom-color: rgb(64, 184, 250);"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url('https://files.mdnice.com/fullstack-1.png'); margin-bottom: -22px;"></span><span class="content" style="font-size: 20px; color: rgb(64, 184, 250); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: flex; margin-left: 25px;">本周主题: 只要写就是好的</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background-image: initial; background-position-x: initial; background-position-y: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: rgba(64, 184, 250, 0.5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; overflow-wrap: break-word; float: right; margin-top: -10px;"></span></h2><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">本周在X上，看到有人写道：<br><strong style="color: rgb(53, 148, 247); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;"><span>「</span>写博客一定要输出见解么，突然觉得流水账也挺好的。<span>」</span></strong></p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">分析这句话可以得到的观点是：写博客可以输出见解，可以写流水账，甚至其它的任何东西，而正常情况下来看，输出的见解似乎要比流水账也好。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">作者的轻轻一句感受，会让不同的人有不同的想法。<br>但更多的好像是我的这种感觉：长久来说流水账更好，但最终只有不论内容，坚持写就最好的的。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">眼瞅着这周又过去了，本周的小结似乎又处在还未开始又要结束的趋势，于是乎，赶紧跑上来抒发几句，坚持写就是好的。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block; border-bottom-width: 4px; border-bottom-style: solid; border-bottom-color: rgb(64, 184, 250);"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url('https://files.mdnice.com/fullstack-1.png'); margin-bottom: -22px;"></span><span class="content" style="font-size: 20px; color: rgb(64, 184, 250); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: flex; margin-left: 25px;">小目标</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background-image: initial; background-position-x: initial; background-position-y: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: rgba(64, 184, 250, 0.5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; overflow-wrap: break-word; float: right; margin-top: -10px;"></span></h2><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">本周的时候，我给自己立了四个flag，意在锻炼一种目标性导向的生活，他们分别是：</p><ul data-tool="mdnice编辑器" style="list-style-type: circle; margin-top: 8px; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 25px; padding-right: 0px; color: rgb(89, 89, 89); font-size: 15px;"><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">百词斩单词深度打卡</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">X平台即时想法输出10+</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">早起</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">一篇博客输出。</section></li></ul><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">然后他们的本周完成情况是：</p><ul data-tool="mdnice编辑器" style="list-style-type: circle; margin-top: 8px; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 25px; padding-right: 0px; color: rgb(89, 89, 89); font-size: 15px;"><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">百词斩早起通勤时间斩必 ✅</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">X的随想、随记完成 ✅</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">一天也没早起 ❌</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">博客输出正在进行。 ✅</section></li></ul><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block; border-bottom-width: 4px; border-bottom-style: solid; border-bottom-color: rgb(64, 184, 250);"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url('https://files.mdnice.com/fullstack-1.png'); margin-bottom: -22px;"></span><span class="content" style="font-size: 20px; color: rgb(64, 184, 250); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: flex; margin-left: 25px;">想法输出</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background-image: initial; background-position-x: initial; background-position-y: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: rgba(64, 184, 250, 0.5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; overflow-wrap: break-word; float: right; margin-top: -10px;"></span></h2><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">捡出来三条想法输出，补充本周内容：</p><ol data-tool="mdnice编辑器" style="list-style-type: decimal; margin-top: 8px; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 25px; padding-right: 0px; color: rgb(89, 89, 89); font-size: 15px;"><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;"><p style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">如果读书没有思考，那你读书有什么用呢？</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;"><p style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">对于还是 X 新人的我来说，突然有感：在社交网络上想要增进自己的存在感，除了及时的记录想法，高频发帖且保证质量下，在看到一些有趣的想法后，应该及时点赞、互动，发自内心由衷的赞美，这似乎是高质量平民 x油的优良素质<br>然后，首先想到的是优美的、热心肠的  @yihong0618</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;"><p style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">在这个的世界背景下选择就像是一场无尽的战争。买桶油、换件衣服、运营个账号、搞个副业，每个方向的选择都像有一道枷锁，让人无法逃脱。我们总是在选择中疲惫不堪，被无尽的纠结和焦虑所困扰。然而，生活就是这样，选择是不可避免。</p></section></li></ol><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">发完上面第二条的这个X 后，艾特的这位大佬点了个赞，还收获了他的关注，突然激动了一把，似乎发现新大陆似的：<br>当时我就在想：这是不是一个适用于X平台的流量密码：即抱紧大腿的重要性。<br>当时我就想当个舔狗，把互联网大佬们都舔一遍，这么操作一波，流量是不是就蹭到了？<br>但无奈，我清醒的认识到，在这个论不清真假的年龄和世界，在所有方面，<strong style="color: rgb(53, 148, 247); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;"><span>「</span>真诚才是必杀技。<span>」</span></strong></p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block; border-bottom-width: 4px; border-bottom-style: solid; border-bottom-color: rgb(64, 184, 250);"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url('https://files.mdnice.com/fullstack-1.png'); margin-bottom: -22px;"></span><span class="content" style="font-size: 20px; color: rgb(64, 184, 250); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: flex; margin-left: 25px;">小结</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background-image: initial; background-position-x: initial; background-position-y: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: rgba(64, 184, 250, 0.5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; overflow-wrap: break-word; float: right; margin-top: -10px;"></span></h2><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">最后，经过深思和熟虑，还要把博客捡起来。<br>每周进行一次思想的整理，一周的总结，下周的计划，或者是有的没的输出，习惯给人力量。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">我之前一直认为我缺少的优良品质是不够不要脸，虽然我总是自诩不怎么在乎面子，可当处于团体环境中时，还是会觉得在表达想法，事情叙述、发表见解等时候，瞻前顾后，生怕哪里出了差错，索性闭嘴不言，每当看到那些大胆的自我叙述、不在乎别人想法，我行我素的人，我就会觉得，这他么真是个人才，活的是自己，就即使他是坏人。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">这个世界是他们的，也是我的。<br>老人言：沉默是金，意思是当你老了你沉默是金，而一个小年轻，搁东墙根在那自怨自艾，自我沉默，精神内耗，不见得是一件好事。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">最后，当生活没有什么明确的目标，理不清自己的想法，时间充裕，还保持对美好生活的向往。<br>那么静下心，尝试记录些什么吧，当你写下一句话的时候，思考就会如期而至。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">你想去的城市你会马上计划。<br>你想谈的对象你会着手采取行动。<br>你对生活的期望就在眼前。<br>你内心充盈，心满意足。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;"><code style="font-size: 14px; letter-spacing: 0em; width: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(53, 148, 247); background-image: initial; background-position-x: initial; background-position-y: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: rgba(59, 170, 250, 0.1); padding-top: 0px; padding-right: 2px; padding-bottom: 0px; padding-left: 2px; border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; height: 21px; line-height: 22px;">That's All, See you Next Week.</code></p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023 年终小结</title>
      <link href="/202401-No102/"/>
      <url>/202401-No102/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202402.webp" alt="AI 美女镇楼" style="display: block; margin-top: 20px; margin-right: auto; margin-bottom: 20px; margin-left: auto; max-width: 100%; width: 100%; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; object-fit: fill; box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px;"><figcaption style="display: block; color: rgb(136, 136, 136); font-size: 14px; line-height: 1.5em; letter-spacing: 0em; text-align: center; font-weight: normal; margin-top: 5px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;"><span style="background-image: url('https://img.alicdn.com/tfs/TB1Yycwyrj1gK0jSZFuXXcrHpXa-32-32.png'); display: inline-block; width: 18px; height: 18px; background-size: 18px; background-repeat-x: no-repeat; background-repeat-y: no-repeat; background-position-x: center; background-position-y: center; margin-right: 5px; margin-bottom: -5px;"></span>AI 美女镇楼</figcaption></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 10px; padding-right: 10px; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat-x: no-repeat; background-repeat-y: no-repeat; background-size: auto; width: auto; font-family: Optima-Regular, Optima, PingFangTC-Light, PingFangSC-light, PingFangTC-light; font-size: 16px; color: rgb(43, 43, 43); line-height: 1.25; word-spacing: 0em; letter-spacing: 2px; word-break: break-word; overflow-wrap: break-word; text-align: left;"><section class="block-2" data-tool="mdnice编辑器" style="margin-top: 20px; margin-bottom: 20px; margin-left: 0px; margin-right: 0px; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; background-attachment: scroll; background-clip: border-box; background-color: rgb(250, 250, 250); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat-x: no-repeat; background-repeat-y: no-repeat; background-size: auto; width: auto; height: auto; box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px; display: block;"><section class="block-2-inner"><p style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">本周是2024年的第<strong style="color: rgb(53, 148, 247); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat-x: no-repeat; background-repeat-y: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;"><span>「</span>3周<span>」</span></strong>(01.15-01.21).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a href="https://blog.liugezhou.online" style="color: rgb(64, 184, 250); font-weight: 700; border-top-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; text-decoration-line: none; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(59, 170, 250);">我的博客<span style="width: 1em;"></span></a>，同步更新至公众号：Wakaka。<br><span style="display:block;text-align:right;color:blue;">No.*102</span></p></section></section><hr data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat-x: no-repeat; background-repeat-y: no-repeat; background-size: auto; width: auto; height: 1px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-right-width: initial; border-bottom-width: initial; border-left-width: initial; border-right-style: none; border-bottom-style: none; border-left-style: none; border-right-color: initial; border-bottom-color: initial; border-left-color: initial; border-image-source: initial; border-image-slice: initial; border-image-width: initial; border-image-outset: initial; border-image-repeat: initial; border-top-width: 2px; border-top-style: solid; border-top-color: rgb(59, 170, 250);"><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block; border-bottom-width: 4px; border-bottom-style: solid; border-bottom-color: rgb(64, 184, 250);"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url('https://files.mdnice.com/fullstack-1.png'); margin-bottom: -22px;"></span><span class="content" style="font-size: 20px; color: rgb(64, 184, 250); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: flex; margin-left: 25px;">本周主题:年终总结</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background-image: initial; background-position-x: initial; background-position-y: initial; background-size: initial; background-repeat-x: initial; background-repeat-y: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: rgba(64, 184, 250, 0.5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; overflow-wrap: break-word; float: right; margin-top: -10px;"></span></h2><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">你是否有这样的体会，打开某个 App，想要进行一个很着急的操作，这个时候脑子里突然被别的什么事情打断了一下，紧接着两件事都记不得了。<br>你起床去刷牙，突然想起来家里的油没了，刚要提醒下下次去超市记得买油，忽然牙刷触碰牙齿的那一刻，你要提醒自己什么来着，忘了。<br>你在工作的时候，看到一个不优雅的代码片段，提醒自己这块内容得做合并优化，然后你看到了一个新的变量，刚才在想什么优化的绝妙点子又溜走了。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">凡此种种。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">2023 年的总结大概也就是这样：我在哪里，我做了什么，我有什么思考，进行了哪些实践？想法乍出、瞬间溜走。也就是说，并没有什么拿得出手或者可以为之深度炫耀的事情。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">因为，前段时间我还打了很多草稿，写了很多鸡汤，进行了一轮又一轮碎片化自我总结。<br>而最终还是没有找到之前那种下笔如有神、管他人与神、文思如尿崩的输出感觉。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">2023 年的 flag 一个也未达成，2024 年的 flag 是在我新建了一个「悠闲八卦鱼塘」微信群聊后，引发思考，再不总结下 2023，展望下 2024，2024就马上过去了。也想享受一下用一篇文章埋葬过去一年同时又指明未来方向的那种快感。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">自此，正文开始。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">人应该绝对坦诚，这个世界上没有几个人在乎你，甚至包括你自己，所以保持对自己的极度坦诚，在面对各种非议和内耗时亦可以坦然自若。<br>是为题记。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block; border-bottom-width: 4px; border-bottom-style: solid; border-bottom-color: rgb(64, 184, 250);"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url('https://files.mdnice.com/fullstack-1.png'); margin-bottom: -22px;"></span><span class="content" style="font-size: 20px; color: rgb(64, 184, 250); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: flex; margin-left: 25px;">回顾 2023</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background-image: initial; background-position-x: initial; background-position-y: initial; background-size: initial; background-repeat-x: initial; background-repeat-y: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: rgba(64, 184, 250, 0.5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; overflow-wrap: break-word; float: right; margin-top: -10px;"></span></h2><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">因为我有写日记流水账的习惯，于是花了两个小时翻阅了 2023 年一整年的记录，将主要流水账事件提炼出来后，使用文心一言模型总结、加修改如下：</p><ul data-tool="mdnice编辑器" style="list-style-type: circle; margin-top: 8px; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 25px; padding-right: 0px; color: rgb(89, 89, 89); font-size: 15px;"><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">1月安心过年充希望，辞旧迎新展翅翔。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">2月牛马职场启新章，梦想与现实碰撞。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">3月工作专注如痴迷，项目进展势如虹。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">4月博客暂别意难忘，旧友相聚话短长。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">5月复阳小潮心忐忑，健康状况需留神。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">6月上地耕田贺新郎，田园生活乐无疆。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">7月动物园中游海洋，赛博朋克体验狂。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">8月接口ChatGPT交锋，生活挑战不曾停。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">9月双人成行游戏忙，合伙协议新篇章。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">10月iPhone15 Max到，科技新品入怀抱。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">11月举国默哀心沉重，悼念逝者情更浓。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">12月年底躁动迎元旦，霉运退散好运连。</section></li></ul><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block; border-bottom-width: 4px; border-bottom-style: solid; border-bottom-color: rgb(64, 184, 250);"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url('https://files.mdnice.com/fullstack-1.png'); margin-bottom: -22px;"></span><span class="content" style="font-size: 20px; color: rgb(64, 184, 250); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: flex; margin-left: 25px;">新年Flag</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background-image: initial; background-position-x: initial; background-position-y: initial; background-size: initial; background-repeat-x: initial; background-repeat-y: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: rgba(64, 184, 250, 0.5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; overflow-wrap: break-word; float: right; margin-top: -10px;"></span></h2><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">博客迟迟拖拉的原因，也是因为我每次想到我要立新的 flag，我就开始慌张。因为一年又一年，无外乎是 学英语、技术增进、读书、写读后感、写博客、搞副业。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">可一天又一天，激情被无力埋葬。<br>现在想来我根本不知道，我立 flag 的原始动机是什么。<br>现在想来，只是由于这一成不变的生活，总要去找些什么事去维持下去，来证明生活还有些许意义，还是一个有追求的少年。<br>这是压力的释放。<br>是对生活的憧憬。<br>当然，也是自我的某种程度麻痹。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">奈何眼界依然维持在一个高度，不曾精进，看不到其它，于是周而复始，依然环绕着那些想到的做起来最简单的，也最能安慰心灵的事。<br>于是我开始厌倦，开始质问自己，为何我要忍受这一轮一轮的相同体验？<br>没有经过苦苦追问，所以我也没有答案。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">这个时候，我突然文思如尿崩了，必须要写些话语开始一波升华了。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">怎么说呢。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">一次又一次的 flag 重合，恰恰说明这件事本身存在可持续的空间。<br>他不一定对，念念不忘虽然不是必有回响，但在找没有找到下一个坚持的事物之前，就继续拽着那个能引起自己心灵自豪的点滴事物不放，这即是一个最好的选择了。<br>好过止步不前，什么也不做。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">铺垫了这么久，一切都是为了我可以忍住对自己的丝丝不满，进行又一轮的 flag 文字记录。</p><h3 data-tool="mdnice编辑器" style="margin-top: 20px; margin-bottom: 20px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block; font-size: 17px; font-weight: bold; text-align: center; position: relative;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(43, 43, 43); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block; border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: rgba(79, 177, 249, 0.65); padding-bottom: 2px;"><span style="display: block; width: 30px; height: 30px; background-position-x: 50%; background-position-y: 50%; background-size: 30px; margin-top: auto; margin-right: auto; margin-left: auto; opacity: 1; background-repeat-x: no-repeat; background-repeat-y: no-repeat; margin-bottom: -8px;"></span>百词斩</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">虽然我仍未找到背单词的意义，但我就还是喜欢背背单词，权当爱茶者品茶、爱酒者喝酒，图的就是一个瘾。<br>这次立flag，不要什么数据，不要每日必斩，就是爱这口，想到就去斩。最近百词斩推出了一个新的深度模式，每日就是斩。</p><h3 data-tool="mdnice编辑器" style="margin-top: 20px; margin-bottom: 20px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block; font-size: 17px; font-weight: bold; text-align: center; position: relative;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(43, 43, 43); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block; border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: rgba(79, 177, 249, 0.65); padding-bottom: 2px;"><span style="display: block; width: 30px; height: 30px; background-position-x: 50%; background-position-y: 50%; background-size: 30px; margin-top: auto; margin-right: auto; margin-left: auto; opacity: 1; background-repeat-x: no-repeat; background-repeat-y: no-repeat; margin-bottom: -8px;"></span>Diary</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">对于近几年的我来说，坚持最久的事或许就是记日记了。<br>从 19 年，确切是 20 年开始，中间断断续续的记录，这个习惯已经很久了。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">而姜文编剧和导演的电影《邪不压正》中，有这么个台词：<br><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202401.webp" alt="202401" style="display: block; margin-top: 20px; margin-right: auto; margin-bottom: 20px; margin-left: auto; max-width: 100%; border-top-left-radius: 6px; border-top-right-radius: 6px; border-bottom-right-radius: 6px; border-bottom-left-radius: 6px; object-fit: contain; box-shadow: rgb(153, 153, 153) 2px 4px 7px; width: 100%;"></p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">原话内容是：</p><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="margin-top: 20px; margin-bottom: 20px; margin-left: 0px; margin-right: 0px; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; width: auto; height: auto; box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px; display: block; overflow-x: auto; overflow-y: auto; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-top-left-radius: 6px; border-top-right-radius: 6px; border-bottom-right-radius: 6px; border-bottom-left-radius: 6px; color: rgb(89, 89, 89); font-style: normal; text-align: left; box-sizing: inherit; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-left-style: solid; border-top-color: rgba(64, 184, 250, 0.4); border-right-color: rgba(64, 184, 250, 0.4); border-bottom-color: rgba(64, 184, 250, 0.4); border-left-color: rgba(64, 184, 250, 0.4); border-image-source: initial; border-image-slice: initial; border-image-width: initial; border-image-outset: initial; border-image-repeat: initial; background-image: initial; background-position-x: initial; background-position-y: initial; background-size: initial; background-repeat-x: initial; background-repeat-y: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: rgba(64, 184, 250, 0.1);"><span style="display: none; letter-spacing: 0em; text-align: left; color: rgba(64, 184, 250, 0.5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; word-spacing: 2px; font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; color: rgb(89, 89, 89);">“那日本人靠不住，我靠谁啊？老蒋？”<br>“更靠不住。”<br>“一个写日记的人。”<br>“正经人谁写日记啊。”<br>“是啊。”<br>“你写日记吗。”<br>“我不写。”<br>“你写日记吗？”<br>“谁能把心里话写日记里？”<br>“写出来的哪能叫心里话？”<br>“下贱。”<br>“下贱。”<br>碰杯~</p><span style="float: right; color: rgba(64, 184, 250, 0.5);">❞</span></blockquote><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">之前看到这个台词的时候，脸皮薄，迟迟不敢暴露自己悄无声息的写了好几年的流水账这个事。可时光流逝，愈发感觉流水账的记录对于个人记忆的追随是如此重要，成年人的时间一瞬即逝，你在某一天做的某一件事，如果不记录下来，等到后来的日子，大多数剩下的都是遗忘。<br>随着对这件事的愈发成熟和愈发敷衍，新的一年，我唯一的要求是：每日的记录不需要多么抒情，能够认认真真的进行完整的流水账记录，就是对记忆最好的尊重：记录生活点滴，留下美好回忆。</p><h3 data-tool="mdnice编辑器" style="margin-top: 20px; margin-bottom: 20px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block; font-size: 17px; font-weight: bold; text-align: center; position: relative;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(43, 43, 43); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block; border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: rgba(79, 177, 249, 0.65); padding-bottom: 2px;"><span style="display: block; width: 30px; height: 30px; background-position-x: 50%; background-position-y: 50%; background-size: 30px; margin-top: auto; margin-right: auto; margin-left: auto; opacity: 1; background-repeat-x: no-repeat; background-repeat-y: no-repeat; margin-bottom: -8px;"></span>发推文</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">对于现在的我来说，最主要的资讯阵地就是 X，我时常在想，那些游刃有余的家伙们，哪里来的激情能发几万条的推，对于一件事情，怎么就能从各个角度大谈特谈，随心抒发自己的想法。<br>于是记不起是在什么时候就立了个 Flag：要发一千条推文。<br>我总是有这么个毛病，要做一件事的时候，雷声必须大，雨点先不管，于是到后来，下了几滴雨就不了了之了。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">今年我又重操旧业，立一个相对清晰可见的 Flag：抛弃自我内耗，勇敢表达自我，每天将所思所想时势记录，至少发两条推，就是要输出。</p><h3 data-tool="mdnice编辑器" style="margin-top: 20px; margin-bottom: 20px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block; font-size: 17px; font-weight: bold; text-align: center; position: relative;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(43, 43, 43); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block; border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: rgba(79, 177, 249, 0.65); padding-bottom: 2px;"><span style="display: block; width: 30px; height: 30px; background-position-x: 50%; background-position-y: 50%; background-size: 30px; margin-top: auto; margin-right: auto; margin-left: auto; opacity: 1; background-repeat-x: no-repeat; background-repeat-y: no-repeat; margin-bottom: -8px;"></span>读书</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">老生常谈一下 之 人为什么要读书？<br>想到这个问题，随手问了下 AI，他的回答是：</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">读书是一个非常有价值的行为，它不仅可以增加知识，提高思维能力和写作技巧，还可以帮助我们更好地理解世界和人性。以下是一些关于为什么读书的理由：</p><ol data-tool="mdnice编辑器" style="list-style-type: decimal; margin-top: 8px; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 25px; padding-right: 0px; color: rgb(89, 89, 89); font-size: 15px;"><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">知识：读书是获取知识的最有效途径。通过阅读，我们可以了解历史、文化、科技、艺术等领域的知识，不断扩大自己的视野。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">思维能力：读书可以锻炼我们的思维能力。通过阅读不同类型的书籍，我们可以培养批判性思维、创造性思维和逻辑思维能力，提高我们的思考水平。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">写作技巧：阅读有助于提高写作技巧。通过模仿和学习优秀作家的写作技巧和风格，我们可以逐渐掌握写作的技巧和方法，提升自己的表达能力。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">精神寄托：读书可以成为人们的精神寄托。在阅读中，我们可以体验不同的人生、感受不同的情感，找到心灵的慰藉和力量。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">个人成长：通过读书，我们可以不断成长和发展。无论是职业发展、个人兴趣还是人生规划，阅读都可以为我们提供启示和指导，帮助我们成为更好的人。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">社交：读书也可以成为社交的桥梁。通过共同的兴趣和爱好，我们可以结交志同道合的朋友，拓展社交圈。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;">总之，读书是一个非常有益的行为，它可以让我们更好地了解世界和人性，提高自己的思维能力和写作技巧，同时也可以成为我们的精神寄托和个人成长的源泉。因此，我们应该珍惜阅读的机会，尽可能多地阅读不同类型的书籍，不断拓展自己的视野和知识储备。</section></li></ol><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">与我而言，<br>一，平淡太无趣了，读书更显得自己是个文化人，通过他潜移默化的影响，让你在想装逼的时候，用更优雅的不讨人厌的方式方法下进行。<br>二，读书是一种人生体验，短短几个小时就过完了一种人生，刺激又回味，又震撼，相比看电影而言，更深刻一些。三，激发思考，隐藏人之本性，更好的在社会团体中生存。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">最后，flag 还没想到怎么立，总之一定要"博览群书",尽情体验，最好形成几行思考文字的留存。</p><h3 data-tool="mdnice编辑器" style="margin-top: 20px; margin-bottom: 20px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block; font-size: 17px; font-weight: bold; text-align: center; position: relative;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(43, 43, 43); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block; border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: rgba(79, 177, 249, 0.65); padding-bottom: 2px;"><span style="display: block; width: 30px; height: 30px; background-position-x: 50%; background-position-y: 50%; background-size: 30px; margin-top: auto; margin-right: auto; margin-left: auto; opacity: 1; background-repeat-x: no-repeat; background-repeat-y: no-repeat; margin-bottom: -8px;"></span>写博客</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">扪心自问，不管是博客、记账、发朋友圈等一系列关乎文字记录的事情，我似乎很少去回顾，不管多么精彩，无论如何深刻。<br>于是我就不明白为什么每次写一篇文章的记录的时候，冥思苦想、遣词造句，好似进京赶考一样，一定要如何如何。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">现在有些明白了，这种行为源于对当下生活的紧迫记录和对未来的紧急追赶。<br>及时知道紧迫的追赶的都不重要，但就是停不下来。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">在过去的年月中，世界变化莫测，职场风起云涌，舆论四起，让人眼花缭乱。这一切使我无法对未来抱有太多的期待，思想一度陷入混乱。我曾试图寻找自我救赎，但最终还是放弃了。<br>对，最直接的表现就是博客的停滞。</p><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">虽然我依然不确定，新的一年是否会开启新的博客旅程，但还是要在此点自己这么几下，博客不能停，思考不能停，自我审视不能停，记录更不能停，就好像呼吸不能停。</p><h3 data-tool="mdnice编辑器" style="margin-top: 20px; margin-bottom: 20px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block; font-size: 17px; font-weight: bold; text-align: center; position: relative;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(43, 43, 43); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block; border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: rgba(79, 177, 249, 0.65); padding-bottom: 2px;"><span style="display: block; width: 30px; height: 30px; background-position-x: 50%; background-position-y: 50%; background-size: 30px; margin-top: auto; margin-right: auto; margin-left: auto; opacity: 1; background-repeat-x: no-repeat; background-repeat-y: no-repeat; margin-bottom: -8px;"></span>结语</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="color: rgb(43, 43, 43); font-size: 14px; line-height: 1.8em; letter-spacing: 2px; text-align: left; text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; word-spacing: 2px;">劈哩叭啦一顿输出，一气呵成，不知所云，时间来不及了。<br>通篇看下来，2023 已成回忆。<br>愿 2024 年的年度总结是：<br><strong style="color: rgb(53, 148, 247); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat-x: no-repeat; background-repeat-y: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;"><span>「</span>有文字有回忆的一年。<span>」</span></strong></p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*101):暂时告个别</title>
      <link href="/202314-No101/"/>
      <url>/202314-No101/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue101.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周是2023年的第<strong style="color: #3594F7; font-weight: bold;"><span>「</span>14周<span>」</span></strong>(04.03-04.09)。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这里记录过去一周我的一些所见所闻。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本篇内容包含：本周主题、关注&amp;工具、一周图片、文摘。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">每周日晚发布，首更自<a href="https://blog.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>我的博客<span>」</span></strong><span style="width: 1em;"></span></a>,同步至<a href="https://zhouzhou.zhubai.love/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>竹白<span>」</span></strong><span style="width: 1em;"></span></a>、公众号 <a href="https://day.liugezhou.online/official.png" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>Wakaka<span>」</span></strong><span style="width: 1em;"></span></a>。</p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周主题:暂时告个别</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">不知不觉100期周报完结撒花。<br>年初的时候还信誓旦旦要写52周的竹白，今年刚过去四分之一，还是决定不玩了。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">主要是这几周的写作感受，极其无趣，仅是为了达成一个目标而干。<br>而且100这个数字的目标达成，有种劫后重生、高考毕业、新的生活等错综复杂的感觉。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">之前每周的那种稀里哗哩、霹雳吧啦写点东西的满足感不再，个人成长、情绪收获也是杯水车薪，以至于吃饭的时候还在想着写周报，这种感觉就跟头上顶着房贷一样，极度不适。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">思前没想后，应该做出暂时的告别，给自己的周末放一个假，降低对自己的期待，展开对生活新的联想。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">读读书，看看报，调整一下对生活的新鲜感。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">关注&amp;工具</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://github.com/ObservedObserver/chatgpt-i18n" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">chatgpt-i18n<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Github上一个开源项目，借助ChatGpt，翻译i18n的的json文件，只需要十几秒就可以完成多语言的国际化。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue101-01.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://adinunz.io/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">3D个人网站<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue101-02.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://www.indiehackers.com/post/why-browser-extensions-are-a-good-way-to-start-indie-hacking-d534627540" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">Why browser extensions are a good way to...<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">为什么浏览器扩展是开始独立开发的最好方法。</p><ol data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; list-style-type: decimal; font-size: 15px; color: #595959;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">Chrome本身拥有大约30亿用户，而Chrome商店只列出了大约20万个扩展程序。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">Chrome应用商店可以毫不费力的带来惊人的自然流量</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">制作和分发扩展免费，开发人员只需支付一次性的5美元费用</section></li></ol><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://looka.com/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">Design your own beautigul brand<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">用人工智能的力量设计一个标志，做一个网站，创建一个你会喜欢的品牌标识。100%免费使用。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue101-03.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">一周图片</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue101-04.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue101-05.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue101-06.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue101-07.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue101-08.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">文摘</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">人类最无聊的脑活动之一：思考别人怎么看自己<br>人生最徒劳的事情之一：太在乎不在乎自己的人</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">不要把提高效率当作自己的目标，你要找出那些对你重要的事情，把它们放在更优先的位置，学会享受现在，不要把快乐推迟到未来。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">任何软件工具都应该遵循一个原则：做对的操作应该很容易，做错的操作应该很难。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">真正的强大里没有沾沾自喜的优越感，也没有惴惴不安的得失心，只有沉静的自信，以及壮阔的谦卑。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">管理不是为了控制，而是激发热情和创造力。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">人生中一半的麻烦源于答应得太快，拒绝得太慢。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">That's All.<br></p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*100):总结过去，提升幸福感</title>
      <link href="/202313-No100/"/>
      <url>/202313-No100/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue100.42yz9u3q6no0.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周是2023年的第<strong style="color: #3594F7; font-weight: bold;"><span>「</span>13周<span>」</span></strong>(03.27-04.02)。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这里记录过去一周我的一些所见所闻。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本篇内容包含：本周主题、关注&amp;工具、一周图片、文摘。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">每周日晚发布，首更自<a href="https://blog.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>我的博客<span>」</span></strong><span style="width: 1em;"></span></a>,同步至<a href="https://zhouzhou.zhubai.love/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>竹白<span>」</span></strong><span style="width: 1em;"></span></a>、公众号 <a href="https://day.liugezhou.online/official.png" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>Wakaka<span>」</span></strong><span style="width: 1em;"></span></a>。</p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周主题:记录生活，提升幸福感</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一不小心就鸽了两期。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">上上周想的是，这就100期了，终于跟100这个数字有了点关联，应该认真的做一个总结，写点走心的内心独白，来场心灵的洗礼。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">无奈上上周回了趟家，赶回来的时候又是劳累，状态不在，于是就拖着，再然后到了上周由于日常工作的专注和周六的加班，使得大脑深感疲累，就又鸽了一周。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">两周没有写总结，开始的时候觉得没有什么，不用有什么心灵负担，慢慢觉得发现幸福感不是那么强烈。<br>不写周报的时候就不会想着去凑素材，不会想着去看到一个网站、工具、好玩的时候去体验一下再来记录，信息的繁杂，眼花缭乱，只有说对某个事情尝试一番，才知道适合不适合，好玩不好玩。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这两周没有了素材形成文字记录的这个过程，自然就连走马观花的初尝试都没有，少了一些乐趣、见识和体验。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">特别是最近的ChatGPT的一些运用、扩展。<br>想想若不是之前有记录的习惯，可能就不会倒腾账号、注册、使用等，也就感受不到最近技术的变革带给心灵的震撼和对工作的高效率帮助。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">当然，时间长了确实是乏味和缺乏激情的，为此前段时间还在想写完了100期，我就再去找一个跟100有关的数字去搞搞，换种生活方式，可找了一圈，发现还是每周坐在电脑桌前，刷刷网页，写写心得最是心安和简单。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">倘若我找到了新的消遣，我就去干。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">关注&amp;工具</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://uxchi.notion.site/881b4c0179a74935a3f607ad3521cdb5" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">界面灵感<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Web/AppEmail/more 灵感类网站合集。<br>这个文档收集了一系列的酷炫网站，用来寻找灵感。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue100-01.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>ChatGPT Plugins</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">OpenAI最近发布了ChatGPT的插件系统Plugins，它可以帮助ChatGPT的用户检索实时信息、知识库信息或者执行各种操作，而开发这些Plugins或者使用这些Plugins的用户需要加入等待列表。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Plugins目前可以访问实时数据、餐厅推荐、旅行计划、网店价格比较，甚至可以连接第三方平台，自动化工具Zapier也在其中。OpenAI也提供了两个自家的插件：一个是网络浏览器，一个是代码解释器。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issu100-02.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://github.com/liugezhou/ChatGPT-Next-Web" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">ChatGPT-Next-Web<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Github开源项目：一键免费部署你的私人 ChatGPT 网页应用，一分钟使用Vercel免费一键部署。<br>步骤：</p><ol data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; list-style-type: decimal; font-size: 15px; color: #595959;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">fork项目</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">准备好OpenAI API Key</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">使用Github登录Vercel、一键部署</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">域名配置(可选)</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">部署成功后预览图</section></li></ol><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue100-03.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://orbstack.dev/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">orbstack.dev<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">0配置，在Mac上快速运行Docker容器和Linux虚拟机。最近比较火的Mac客户端OrbStack，是 Docker + Dektop + 类VirtualBox虚拟机。<br>在它上面Linux虚拟机的创建只需要不到一分钟，且和Mac系统深度集成，Docker的启动和销毁速度也很快。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue100-04.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://freeopenai.xyz/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">openapikey免费分享<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这个网站每天分享15个免费的key和4个chatGPT账号，由于我的key目前还够使用，因此不是很了解这个key的使用是否丝滑，感兴趣的朋友可以试试。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue100-05.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">一周图片</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue100-06.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue100-07.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue100-08.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue100-09.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue100-10.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue100-11.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue100-12.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue100-13.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue100-14.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">文摘</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://m.huxiu.com/article/805619.html" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">ChatGPT创始人：取得成功的13个法则<span style="width: 1em;"></span></a><p>ChatGPT创始人 Sam Altman,曾写过一篇文章，关于如何实现卓越成功，总结了13个小的法则。<br><br>下面是这篇翻译文章的小小总结。</p></p><ol data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; list-style-type: decimal; font-size: 15px; color: #595959;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">追求复利效应<br>复利效应是神奇的，我们应该去四处寻找它，要具有长期思维，相信指数，保持耐心，收获惊喜。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">有着过分的自信我认识的最成功的人都是自信无比，几乎到了妄想的地步。尽早培养这一点，相信自己的判断力。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">独立思考“我会失败很多次，也会真的对一次”是企业家的思维方式。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">善于“销售”某种程度上，所有伟大的职业都是销售工作，做好销售的前提是，真正相信你所销售的产品。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">适度冒险将短期利益置于长期成就之上是很容易也是人类的天性。<br>冒险是很重要的，因为不可能一直正确，在职业生涯的早期冒险往往更容易，因为没什么可失去的。</p></section></li></ol><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">6.聚焦要务一旦你弄清楚要做什么，就应该迅速找到核心要务，立刻执行，我还没遇到一个行动缓慢的人，能够获得卓越成功。</p><ol start="7" data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; list-style-type: decimal; font-size: 15px; color: #595959;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">努力工作勤奋工作就像利息一样有复利效应，你越早开始做，你就有越多的时间来获得收益回报。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">要大胆一个重大问题取得进展，就会不断出现想要帮助你的人，让自己变得雄心勃勃，为你真正想做的事业，大胆去做吧。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">要有意志力要想成为有意志力的人，你必须要乐观，我要一直坚持下去，直到成功为止，不管有什么挑战，我都要把他们解决掉。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">难与之竞争大多数人都在学习周围人做的事，这种模仿行为通常是一个错误，如果你只有模仿，你将很难在未来与之竞争。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">建立一个网络你所认识的有才华的人的网络的大小，往往成为你取得成就的限制因素。<br>建立网络的一个有效方法是尽可能地帮助别人。建立好的口碑，让别人都知道你，对和你合作的人要照顾有加。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">通过拥有资产致富无论如何，你需要拥有某些东西的股权，而不是仅仅出售你的时间。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">内部驱动靠内部驱动的人，他们所做的事情是为了给自己留下深刻印象，因为他们觉得有必要在这个世界上有所作为，越早朝这个方向起步，你就能走的越远。</p></section></li></ol><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周小结</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">最近的工作日常，从早起到下班就处于一种紧绷的状态，日常修bug。<br>虽然我挺喜欢修bug，但是数不完的bug在等着修，没有那种所有bug清掉的爽感，还是会让人疲惫不堪，小小的小结一篇，顿时神清气爽。<br>好了，要去修bug了。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*99):鸽了一期</title>
      <link href="/202310-No99/"/>
      <url>/202310-No99/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue99.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周是2023年的第<strong style="color: #3594F7; font-weight: bold;"><span>「</span>10周<span>」</span></strong>(03.06-03.12)。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这里记录过去一周我的一些所见所闻。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本篇内容包含：本周主题、关注&amp;工具、一周图片、文摘。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">每周日晚发布，首更自<a href="https://blog.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>我的博客<span>」</span></strong><span style="width: 1em;"></span></a>,同步至<a href="https://zhouzhou.zhubai.love/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>竹白<span>」</span></strong><span style="width: 1em;"></span></a>、公众号 <a href="https://day.liugezhou.online/official.png" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>Wakaka<span>」</span></strong><span style="width: 1em;"></span></a>。</p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周主题:鸽了一期，简单补个</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周鸽了一期，眨眼来到了第二天的周一，补个。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">周末的时候，躺在家刷《黑暗荣耀》。<br>到了晚上，突然身体动弹不得，左思右想，不知哪里出了问题。<br>遂倒下就睡，终于鸽了一把。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">之前总有<strong style="color: #3594F7; font-weight: bold;"><span>「</span>100次挑战<span>」</span></strong>的想法。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">比如挑战100次早起、100篇周小结、100本读书笔记、新加100个笔友、100次XXXX等等。<br>之所以有各种想法，就是想在各种尝试中，使用<strong style="color: #3594F7; font-weight: bold;"><span>「</span>穷游<span>」</span></strong>的方式去发现自己的喜好和好玩的事。然后 100 这个数字，就是将目标数字化，不要管做的怎么样，不要管喜不喜欢，不要管做成做不成，先朝着这个数字去做、再看。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">后来，果然发现，很多的事情和小想法，不是没有坚持，也不是有多么难，也不是多么无趣，就单单是根本没有开始。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">当想做一件事，想了好多次而一直没做的原因是什么？</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">你想过吗？</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">我没有想过，所以我也不知道这是为什么，Wakaka。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">关注&amp;工具</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>ChatGPT Sidebar</span><span class="suffix" style="display: none;"></span></h3><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue99_01.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Chrome浏览器插件，快捷键 Commend + P 调出菜单，可以非常的方便的向 ChatGPT 提问：总结、翻译、代码解释等等。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>ChatHub - All-in-one chatbot client</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">浏览器插件，将chatGPT和bing集合在一个窗口中。<br>关于 bing 流程，<a href="https://juejin.cn/post/7205011573395832887" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">参考掘金<span style="width: 1em;"></span></a>的这篇文章开通即可。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue99_02.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://www.chatmind.tech/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">chatMind<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一个能自动生成思维导图的工具 —— #ChatMind。<br>输入想做的事，它就能列出步骤，生成思维导图。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue99_03.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://go.itab.link/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">itab.link<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">iTab新标签页，免费无广告的组件式浏览器桌面。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue99_04.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://mp.weixin.qq.com/s/l725LEuPrLFO-l4B9oinDw" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">前端已死？我的观察与思考<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">有些人说前端工作不好找，也没有升职机会。他们感到忧虑和沮丧。<br>有些人在网上抱怨，还有些人制作了一些有趣的图片来表达他们的感受。<br>他们说前端工作技术含量低，很容易被替代。<br>但是，一些前端大佬不认同这些观点，并且认为只有不够自信的人才会说前端已死。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">虽然我们没有采访到更多的前端工程师来了解他们的看法，但是我们可以看到那个产业现在的就业环境不是十分好。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="http://blog.haoji.me/chrome-plugin-develop.html" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">Chrome插件开发指南<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Chrome插件开发的入门指南。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://fakedetail.com/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">Fake Details<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这个网站专门用来生成各种虚假信息。<br>例如电子邮件、个人信息、姓名、地址、社交聊天截图等。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue99_05.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>OpenCat for macOS</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一个简单的 Mac 客户端，方便用户用自己的API使用 ChatGPT，可以解决中国用户每次登陆 ChatGPT 网页的时候都需要验证刷新的问题，在逐步优化。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue99_06.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">一周图片</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue99_07.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue99_08.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue99_09.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue99_10.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue99_11.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue99_12.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue99_13.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">文摘</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">曾经我问一个和尚，他是如何找到内心的平静的。<br>他说，“无论发生什么，我都说 '好的'”</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">当你不敢下决定的时候，你就想一下这个决定带来的最差的结果是什么，如果这个结果你能承受，那就去做，如果承受不了，那就算了。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">在所有的人生模式中，为了未来而牺牲现在是最坏的一种，它把幸福永远向后推延，实际上是取消了幸福。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">在你的生命里，你唯一真正拥有的就是时间。如果你把时间投资在那些可以丰富你人生经历的事情上，那你绝对不会输。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">没有目标的时候人就很容易虚无<br>看剧也不想看，玩游戏也不想玩，什么都不想做</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">大多数工作的意义只是为了生存。<br>年轻人有个很大的误区，非要通过工作来追求理想、表达自我。工作更多是你出卖劳动力以此谋生的事，要的是劳动力而不是情绪。很多人工作的不开心，其实对工作赋予太多的意义了。在事业上能取得成功本身就是极少数。<br>如果遇到工作中的不开心，不如先调整下心态看看。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周小结</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*98):情绪 EMO</title>
      <link href="/202309-No98/"/>
      <url>/202309-No98/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue98.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周是 2023 年的第<strong style="color: #3594F7; font-weight: bold;"><span>「</span>09 周<span>」</span></strong>(02.27-03.05)。<br>这里记录过去一周我的一些所见所闻。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本篇内容包含：本周主题、关注&amp;工具、一周图片、文摘。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">每周日晚发布，首更自<a href="https://blog.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>我的博客<span>」</span></strong><span style="width: 1em;"></span></a>,同步至<a href="https://zhouzhou.zhubai.love/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>竹白<span>」</span></strong><span style="width: 1em;"></span></a>、公众号 <a href="https://day.liugezhou.online/official.png" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>Wakaka<span>」</span></strong><span style="width: 1em;"></span></a>。</p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周主题: 情绪emo</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">最近这两周，我突然感到生活不甚真实，对一切事物的好奇心逐渐降低，也开始怀疑社会的发展与进步。<br>每当这种情绪浮现时，我会感受到是不是周围人们也过着无聊、没有激情的生活，他们的经验只不过是一遍又一遍的描绘。<br>由此，我不由自主地问ChatGPT这是为什么？</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">ChatGPT回答说，我可能处于厌倦期或倦怠期。<br>我想了想，或许确实如此。最近我在工作和学习中严重缺乏好奇心，无论是在心理上还是身体上，我都感觉受到了些许困扰。ChatGPT进一步指出可能的原因，包括焦虑和抑郁，缺乏动力和目标，生活缺乏变化和社交孤立等等。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">考虑到这些，我也反思了一下自身问题。我发现设定的很明确的目标，并没有计划真正去实现它们。<br>有时候我感到自己对未来毫无方向感，只是在不断地徘徊。此外，随着工作的不断重复和生活的单调，我渐渐感到无聊和缺乏动力。<br>我还注意到，自己逐渐脱离了社交圈子，变得比以往更加孤独和沉默。<br>最后，这些问题积累到一定的程度后，终于让我感到了“倦怠”——即一种心理疲乏的状态。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">要摆脱倦怠的情绪，ChatGPT提供了几个有效的建议。<br>首先，我们可以寻求心理医生或医生的帮助，来化解焦虑抑郁的情绪。<br>其次，设定明确目标和制定计划来提高自己的动力和方向感。<br>第三，尝试新事物来打破生活的单调，找回对生活的热情。最后，加强社交联系，和朋友、家人或社区组织保持联系和交流，找回属于自己的归属感和支持。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">总之，这种情绪的质疑和倦怠，常常让我们的生活失去原有的光彩和意义。虽然摆脱它并不是一件容易的事情，但只要我们能够找到适合自己的方法，坚持不懈地执行，就能够打破倦怠的情绪，找回自己的热情和动力。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">愿我们都能早日找到心灵的归宿，重拾生活的美好。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">关注&amp;工具</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://freegpt.one/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">免费的ChatGPT 3.5-turbo<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周OpenAI 发布了 ChatGPT 3.5 的 API，每 1k 个 tokens 的价格为 0.002 美元，比之前的 GPT-3.5 模型便宜 10 倍。<br>👆这个网站的访问很流畅，不用登录，速度很快。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://mp.weixin.qq.com/s/xpA7EovlB6hWzgIBkLV1mw" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">中产回到二线<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">近来，社交媒体上，越来越多人发帖讲述自己的困惑——30岁之后，当职业发展、孩子求学、老人看病等现实问题一一浮现，他们对一线城市的生活感到倦怠，开始犹豫要不要离开。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">公众号《人物》采访的四位女性，从工作、养娃两方面影响的生活选择。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://maomaoyu.zhubai.love/posts/2240190010286874624" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">快速掌握 Midjourney AI 画图神奇用法<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Midjourney 系列教程，一步步地学习 AI 绘画技术，轻松掌握并创造出高质量的作品,文章持续更新中。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://github.com/rockbenben/ChatGPT-Shortcut" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">ChatGPT-Shortcut<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Github上的一个开源项目：<br>让生产力加倍的 ChatGPT 快捷指令，按照领域和功能分区，可对提示词进行标签筛选、关键词搜索和一键复制。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue98_01.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>ChatGPT革命</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">关于“翻译”这份工作的实际实践，接下来一大批工种可能要被革新，可能会比我们想象的要早。<img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue98_12.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://www.ainavpro.com/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">AI产品导航<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">网站介绍：<br>这是一个专注于人工智能产品的导航站。<br>在这里，您可以找到各种各样的AI工具、应用、技术，以及商业应用等等。我们对AI产品进行了分类，包括文本处理、图片处理、代码工具、音频处理、视频处理、3D建模、商业应用、以及其他等等，方便您快速找到所需的工具和资源。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue98_02.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>Glarity</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">浏览器插件Glarity，基于chatgpt和Youtube字幕生成视频摘要，配合中文翻译，20 秒看完梗概，看外文视频效率高。<br>非常的nice。<br>在[https://platform.openai.com/account/api-keys]新增一个API keys,下载插件Glarity，刷新即可。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">一周图片</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue98_03.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue98_04.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue98_05.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue98_06.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue98_07.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue98_08.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue98_09.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue98_10.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue98_11.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">文摘</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">事不压垮人，但负面情绪和消息行为压得垮。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">请珍惜你能拥有的长块时间和专注力，这可是碎片化时代。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">多把一个好消息告诉你身边的人，这可不是让你炫耀。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">个人对宏观层面的改变无能为力，只能在微观层面有所作为。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">好奇心是人最珍贵的品质之一，只有对世界好奇，你才会产生思考，而思考则会令你成长。随波逐流之人的典型特征：很少提问。<br>提出问题不是为了向别人寻求答案。你关注什么样的问题，决定了你会成为什么样的人，过什么样的生活。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*97):累瘫了</title>
      <link href="/202308-No97/"/>
      <url>/202308-No97/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue97.png" alt="" style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"><figcaption style="margin-top: 5px; text-align: center; display: block; font-size: 13px; color: #2b2b2b;"><span style="background-image: url(https://img.alicdn.com/tfs/TB1Yycwyrj1gK0jSZFuXXcrHpXa-32-32.png); display: inline-block; width: 18px; height: 18px; background-size: 18px; background-repeat: no-repeat; background-position: center; margin-right: 5px; margin-bottom: -5px;"></span>midjourney</figcaption></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周是 2023 年的第<strong style="color: #3594F7; font-weight: bold;"><span>「</span>08 周<span>」</span></strong>(02.20-02.26)。<br>这里记录过去一周我的一些所见所闻。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本篇内容包含：本周主题、关注&amp;工具、一周图片、文摘。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">每周日晚发布，首更自<a href="https://blog.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>我的博客<span>」</span></strong><span style="width: 1em;"></span></a>,同步至<a href="https://zhouzhou.zhubai.love/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>竹白<span>」</span></strong><span style="width: 1em;"></span></a>、公众号 <a href="https://day.liugezhou.online/official.png" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>Wakaka<span>」</span></strong><span style="width: 1em;"></span></a>。</p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周主题: 累瘫了</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">周六到家就到晚上六七点了，周日慢悠悠到家差不多要九点了，开了两天车，感觉脑子也转不动了。<br>想到无意义的输出一篇，不如鸽一期。<br>可又有些强迫症，简单记录一波。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周二入职了新东家，做 web3 相关的业务。<br>目前在做的方向是基于浏览器插件、整合Web3相关的内容，感觉还挺有意思。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">就是通勤时间有些长，上下班差不多四个小时了，过段时间要考虑搬家了。<br>就这，洗洗刷刷，准备迎接新的一周。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">关注&amp;工具</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>推特源码</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">简单翻了一下没有找到消息源，应该是真的，看到消息说：马斯克宣布马上全部公开推特的源代码。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>WebFlow设计师</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">UXZE大会--就是一个会。<br>这个大会的网站和后台都是基于无代码平台制作，<strong style="color: #3594F7; font-weight: bold;"><span>「</span>Webflow<span>」</span></strong>制作前端 ，<strong style="color: #3594F7; font-weight: bold;"><span>「</span>Artable<span>」</span></strong> 负责后端数据库。<br>关于WebFlow的体验之前感受过，因为关乎设计多一点，因此没有深入的了解，公司官网的展示感觉 WebFlow确实针不错。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://github.com/saveweb/review-2022" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">review-2022<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">上周在看2022年终总结的时候，<a href="https://bestxtools.zhubai.love/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">好工具周刊<span style="width: 1em;"></span></a>的作者之前看到的一个仓库:review-2022，专门关于年终总结的文章合集。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周由于注意力在刚入职的代码开发上，加上心理状态较疲惫，还没有成块的时间去阅读。<br>码住。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>NAS</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">NAS-网路附属存储。<br>最近看到有好多人都有购买自己的 NAS，之前就有想法去了解一下，一直鸽了。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">下周有时间了解一下。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">一周图片</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue97_01.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue97_02.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue97_03.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue97_04.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue97_05.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">文摘</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">人生失败时常态  成功是偶然。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">"态度温和还是激烈，不是看你的内容，而是看你的身份"</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">没有人能照顾你一辈子，没有完全的外部力量。<br>越早主动地生活，越早能培养内在力量的人，越能掌控自己的生活。<br>人不能一边说别人有“掌控欲”，一边任别人大包大揽地去安排；更不能一边独立，一边对其他人有不切实际的期望。<br>大多数的焦虑，都来自“过于相信外部力量”。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">大脑喜欢确定性的东西，对非确定性有着天然的排斥，所以在遇到一个模糊的问题时，人们就会产生给问题找出一个明确答案的欲望，这种心理机制叫做认知闭合。为了尽快排解不确定性忧虑，往往会快速给一个问题下结论，有了这个结论，就可以达到一种认知闭合的状态。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*96):十分钟冥想</title>
      <link href="/202307-No96/"/>
      <url>/202307-No96/</url>
      
        <content type="html"><![CDATA[<!-- <figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue96_.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure> --><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周是 2023 年的第<strong style="color: #3594F7; font-weight: bold;"><span>「</span>07 周<span>」</span></strong>(02.13-02.19)。<br>这里记录过去一周我的一些所见所闻。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本篇内容包含：本周主题、关注&amp;工具、一周图片、文摘、编码相关。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">每周日晚发布，首更自<a href="https://blog.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>我的博客<span>」</span></strong><span style="width: 1em;"></span></a>,同步至<a href="https://zhouzhou.zhubai.love/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>竹白<span>」</span></strong><span style="width: 1em;"></span></a>、公众号 <a href="https://day.liugezhou.online/official.png" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>Wakaka<span>」</span></strong><span style="width: 1em;"></span></a>。</p></section></section><span id="more"></span><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周主题: 十分钟冥想</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周在看互联网上关于<a href="https://github.com/liugezhou/Annual-Summary-Archive/issues/2" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">2022年度总结<span style="width: 1em;"></span></a>的博文的时候，看到一位博主提到的一本书，《十分钟冥想》。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">我读了一些，感觉非常有趣。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">在各种地方，我们都或多或少听说过冥想。<br>而这本书对于冥想的引导和启蒙写得非常好。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">文章开头指出，要理解冥想，需要实践冥想。<br>作者引导读者尝试两分钟的冥想。<br>我恰好有意，便试着实践了一下。<br>打开计时器，闭上眼睛跟随着作者的指引，开始体验。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">当我睁开眼睛时，惊讶地发现已经过去了19分钟。<br>不知道是心理作用还是其他什么原因，突然感觉到一种精神震动。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">冥想可以带来许多好处，如减轻压力、增强注意力、提高情绪稳定性、改善睡眠等。据说非常可以，帮助我们更好地了解自己的思想和情绪，增强内心平静和自信心。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">接下来的时间，如果有情调，非常乐意去了解一些有关冥想的话题，毕竟不需要什么特殊的技能和装备，只要有一个宁静的地方和一些耐心。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">关注&amp;工具</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>45亿数据泄露</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">2月12日晚，Telegram各大频道突然大面积转发某隐私查询机器人链接。网传消息称该机器人泄露了国内45亿条个人信息,数据包大小达435GB，疑似电商或快递物流行业数据。用户仅需输入手机号,即可通过该机器人查询到姓名、手机号和详细的收货地址等隐私信息。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">找了个免费机器人试了一下，查询出来的内容令人<strong style="color: #3594F7; font-weight: bold;"><span>「</span>震惊<span>」</span></strong>，一般情况下输入的手机号，可以看到姓名、身份证、各个地址、甚至开房信息等私密信息一览无余。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>ChatGPT for Google</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Google浏览器插件，搜索的过程中给出ChatGPT的回答。<br>ChatGPT网页端登录成功后，输入 API Key 即可。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue96_01.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="http://chatgpt3.icu/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">ChatGPT国内版<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">如果有ChatGPT账号且注册成功，遇到经常性的网络访问问题，那么只需要在<a href="https://platform.openai.com/account/api-keys" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">这里<span style="width: 1em;"></span></a>获取API Key，在这个网站输入api，点击验证，国内网络即可使用。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue96_02.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">一周图片</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue96_03.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue96_04.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue96_05.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue96_06.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue96_07.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue96_08.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">文摘</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">如果你不知道如何选择伴侣，找一个真正好的人，而不是喜欢你的人，会更长久。因为喜欢会变，但一个人的底色是长久不变的（多看看他怎么和家人、朋友相处的），就能知晓。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">旧人不知我近况，新人不知我过往。<br>近况不该旧人知，过往不与新人讲。<br>纵你阅人何其多，再无一人恰似我。<br>一一《倾城之恋》</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">“短暂的陪伴,到底是礼物还是惩罚？”</p><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">“你不贪心，便是礼物，<br>你若还期待，便是惩罚。”</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">不要在乎自己聪不聪明，不要去向别人证明你是对的，不要渴望获得他人的认可。<br>只关心自己遇到的实际问题，并专心的解决它就可以了。<br>人生就是这样一个发现问题、解决问题的游戏。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">编码相关</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://github.com/AmazingAng/WTF-Solidity" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">WTF Solidity极简入门<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Solidity 语言极简入门教程。<br>通过短短几个小时的学习，就可以快速对 solidity 语言进行代码开发。<br>教程、社区较完备，学习中。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue96_09.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>Github排名查询</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">查看Gitub star数排名小技巧：<br>在搜索框中输入:<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">stars:&gt;100000</code>即可显示star数超1万颗星的项目。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>推特分享</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">在推特上分享有写网页有图文的card显示，有些就不会。<br>资料查询才知道，分享的网页上得有meta标签。<br>如果你的博客是基于HEXO生成，几乎是在主题的 layout_parial/head 进行设置：  ‘</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://blog.ichr.me/post/hexo-generate-link-sharing-card/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">ejs模板<span style="width: 1em;"></span></a>：<br><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue96_10.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;">我的是 pug 模板：首先需要在页面中添加 image 地址，和describle相关说明，然后在 主题的 layout_parial/head.pug 添加如图所示代码<br><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue96_11.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://blog.liugezhou.online/033-web3js%E5%AE%9E%E6%88%98%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">web3js 实战基本操作<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周对webjs的相关API操作进行了一个比较简单的学习，记录之。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/033_web3js.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://blog.liugezhou.online/034-ethereum/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">以太坊基础笔记<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">关于以太坊的基础学习，做了一个简单的小总结，语法非常简单，对于Web端开发者来说极易上手。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/web3/000_ether.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://bigfrontend.dev/zh" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">前端刷题面试600道<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue96_12.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>以太坊基础笔记</title>
      <link href="/034-ethereum/"/>
      <url>/034-ethereum/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.statically.io/gh/liugezhou/image@master/web3/000_ether.png" alt="ethereum"></p><span id="more"></span><p>这篇文章用来记录在学习以太坊的过程中,一些相关的基本概念和 solidity 语言的相关基础语法等。</p><h1>以太坊基础</h1><h2 id="涉及工具">涉及工具</h2><p><img src="https://cdn.statically.io/gh/liugezhou/image@master/web3/001_tools.png" alt="tools"></p><h2 id="区块链发展简史">区块链发展简史</h2><p><img src="https://cdn.statically.io/gh/liugezhou/image@master/web3/002_history.png" alt="history"></p><p><a href="https://cloud.tencent.com/developer/news/175867">EOS是什么</a></p><h2 id="以太坊中的重要概念">以太坊中的重要概念</h2><p><img src="https://cdn.statically.io/gh/liugezhou/image@master/web3/003_concept.png" alt="concept"></p><h2 id="以太坊的货币">以太坊的货币</h2><ul><li>以太坊 <code>ethereum</code> ,货币为 以太 <code>ether</code></li><li>2014年7/8月 众筹发行大约 7200万以太币(矿前)，后经过挖矿产生，每年被限制不超过 7200万的25%，未来产量变化不确定。</li><li><a href="https://etherscan.io/stat/supply">以太币供应量查询</a></li></ul><h2 id="以太币单位">以太币单位</h2><p><img src="https://cdn.statically.io/gh/liugezhou/image@master/web3/004_wei.png" alt="wei"></p><h1>Solidity</h1><h2 id="变量">变量</h2><h3 id="基本类型">基本类型</h3><ul><li><code>int</code> (整型)</li><li><code>uint</code> (无符号整型)</li><li><code>bool</code> (布尔类型)</li><li><code>address</code> (地址类型)</li><li><code>string</code> (字符串)</li><li><code>byte</code> (字节)</li></ul><h3 id="引用类型">引用类型</h3><ul><li><code>bytes32</code> (字节数组)</li><li><code>mapping(type =&gt; type)</code> (一对一映射)</li><li><code>strut</code>  结构体</li><li><code>Type[8]</code>  定长数组</li><li><code>Type[]</code>  动态数组</li><li><code>strut</code>  结构体</li></ul><h2 id="一些结构">一些结构</h2><ul><li><code>strut</code>  结构体</li><li><code>enum</code> (枚举类型)</li><li><code>contract</code>  合约</li><li><code>function</code>  函数</li><li><code>event</code>   事件</li><li><code>modifier</code>  修饰符</li></ul><h2 id="存储方式">存储方式</h2><ul><li><code>storage</code>: 成员变量，永久保存在状态树中(付费)</li><li><code>memory</code>:局部变量，临时存储(值传递)</li><li><code>calldata</code>: 函数参数变量(临时存储的一个数据位置)</li></ul><h2 id="表达式">表达式</h2><ul><li>逻辑运算符： <code>and</code> 、<code>or</code>、 <code>not</code></li><li>关系运算符:  <code>==</code>、 <code>=</code> 、<code>&gt;</code>、 <code>&lt;=</code></li><li>位运算符: <code>&amp;</code>、<code>|</code></li><li>条件运算符: <code>?:</code></li><li>算数运算符: <code>+</code> 、<code>-</code>、 <code>*</code>、 <code>/</code></li></ul><h2 id="控制流程">控制流程</h2><p><code>if, else, while, do, for, switch, continue, break, return</code></p><h2 id="内置对象-block">内置对象 block</h2><pre><code>Block 在调用某个方法的时候，solidity会提供一个block的变量，把当前块的信息返回。 </code></pre><ul><li><code>block.coinbase()</code>: 返回挖掘此块的节点地址</li><li><code>block.difficulty()</code>: 返回当前区块的难度</li><li><code>block.gaslimit()</code>: 返回当前块的最大燃气量</li><li><code>block.limit()</code>: 返回当前区块的gas消耗限制</li><li><code>block.number()</code>: 返回链上当前块高、编号</li><li><code>block.timestamp()</code>: 返回当前区块的时间戳</li></ul><h2 id="内置对象-msg">内置对象 msg</h2><ul><li><code>msg.sender()</code>: 返回当前调用合约的发送者的地址</li><li><code>msg.gas()</code>: 返回燃料的消耗量</li><li><code>msg.sig()</code>: 返回数据的前四个字节</li><li><code>msg.value</code>: 返回发送消息的数量</li></ul><h2 id="内置其他函数">内置其他函数</h2><ul><li><code>account.balance()</code>: 返回地的址余额（以wei为单位）</li><li><code>address.transfer()</code>: 在两个账户之间转移ether</li><li><code>assert(bool condition,string memory reason)</code>:自信某一条件一定成立，用于安全设计，如果不成立，扣光所有gas</li><li><code>require(bool condition,string memory reason)</code>:温和认定某条件成立，如果不满足，退回剩余的gas</li><li><code>revert(string memory reason)</code>:终止合约执行，并还原状态变更</li><li><code>now()</code>: 返回当前时间的时间戳（秒）</li><li>随机数：</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">random = <span class="built_in">uint</span>(<span class="built_in">keccak256</span>(abi<span class="selector-class">.encodePacked</span>(msg<span class="selector-class">.sender</span>,block<span class="selector-class">.difficulty</span>,now)))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ethereum </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web3js 实战基本操作</title>
      <link href="/033-web3js%E5%AE%9E%E6%88%98%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
      <url>/033-web3js%E5%AE%9E%E6%88%98%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/033_web3js.png" alt=""></p><span id="more"></span><h2 id="文章说明">文章说明</h2><p>这个篇文章的总结是在学习 <a href="https://www.bilibili.com/video/BV16L4y147Ly/?spm_id_from=333.337.search-card.all.click">b站web3.js的一个基础教程课</a> 的课程总结，方便后续在文章中查找API。</p><p>学习中涉及的一些l零碎代码上传到了 <a href="https://github.com/liugezhou/web3.js">这个仓库</a>。</p><p>关于 web3js 这个 JS 库的相关操作，后续会持续更新。</p><h2 id="获取-web3-对象">获取 web3 对象</h2><p>下面的示例代码就是指 web3 这个JS库的一些基础操作，不做介绍。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title class_">Web3</span> = <span class="built_in">require</span>(<span class="string">&#x27;web3&#x27;</span>); <span class="comment">//引入web3这个库</span></span><br><span class="line"><span class="keyword">const</span> &#123; log &#125; = <span class="variable language_">console</span></span><br><span class="line"><span class="comment">// 创建Provider</span></span><br><span class="line"><span class="keyword">const</span> provider = <span class="keyword">new</span> <span class="title class_">Web3</span>.<span class="property">providers</span>.<span class="title class_">HttpProvider</span>(</span><br><span class="line">  <span class="string">&quot;http://127.0.0.1:9545&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">const</span> provider2 = <span class="keyword">new</span> <span class="title class_">Web3</span>.<span class="property">providers</span>.<span class="title class_">HttpProvider</span>(</span><br><span class="line">  <span class="string">&quot;http://127.0.0.1:9999&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">let</span> web3 = <span class="keyword">new</span> <span class="title class_">Web3</span>(provider);</span><br><span class="line"></span><br><span class="line"><span class="title function_">log</span>(web3.<span class="property">modules</span>); <span class="comment">// 打印 web3 的 modules 属性</span></span><br><span class="line"><span class="title function_">log</span>(web3.<span class="property">version</span>); <span class="comment">// 打印 web3 的版本</span></span><br><span class="line"></span><br><span class="line">web3.<span class="property">eth</span>.<span class="title function_">getNodeInfo</span>().<span class="title function_">then</span>(log) <span class="comment">// 打印 web3 连接的节点信息</span></span><br><span class="line">web3.<span class="property">eth</span>.<span class="property">net</span>.<span class="title function_">isListening</span>().<span class="title function_">then</span>(log)  <span class="comment">//返回所连接节点的网络和检讨状态格式</span></span><br><span class="line">web3.<span class="property">eth</span>.<span class="property">net</span>.<span class="title function_">getId</span>().<span class="title function_">then</span>(log) <span class="comment">//获取 netWork id 网络号</span></span><br><span class="line">web3.<span class="property">eth</span>.<span class="title function_">getProtocolVersion</span>().<span class="title function_">then</span>(log) <span class="comment">//获取以太坊协议版本</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">log</span>(web3.<span class="property">providers</span>) <span class="comment">//web3可用的Providers</span></span><br><span class="line"><span class="title function_">log</span>(web3.<span class="property">currentProvider</span>) <span class="comment">//web3当前正在使用的Providers</span></span><br><span class="line"><span class="title function_">log</span>(web3.<span class="property">givenProvider</span>) <span class="comment">//查看浏览器环境设置的 web3 provider</span></span><br><span class="line">web3.<span class="title function_">setProvider</span>(provider2) <span class="comment">//设置新的 Provider</span></span><br></pre></td></tr></table></figure><h2 id="批处理请求">批处理请求</h2><p>批处理请求是指几个请求打包在一起提交提交、串联执行 (一个个按顺序执行，速度不快，可保证代码执行顺序)</p><p>通过<code>BatchRequest</code>实现批处理,核心代码为：</p><ul><li>new web3.BatchRequest()</li><li>add(request) // 将请求对象添加到批调用中</li><li>execute() //执行批处理请求</li></ul><p>代码示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> batch = <span class="keyword">new</span> web3.<span class="title class_">BatchRequest</span>();<span class="comment">//创建批量请求对象</span></span><br><span class="line">batch.<span class="title function_">add</span>(web3.<span class="property">eth</span>.<span class="property">getBalance</span>.<span class="title function_">request</span>(<span class="string">&#x27;0xxxx&#x27;</span>, <span class="string">&#x27;latest&#x27;</span>, callback)) <span class="comment">//指定定的钱包地址信息</span></span><br><span class="line">batch.<span class="title function_">add</span>(contract.<span class="property">methods</span>.<span class="title function_">getNumber</span>().<span class="property">call</span>.<span class="title function_">request</span>(&#123; <span class="attr">from</span>: <span class="string">&#x27;0xxxx&#x27;</span> &#125;, callback2)) <span class="comment">//合约的number值</span></span><br><span class="line">batch.<span class="title function_">execute</span>()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Ganache-客户端">Ganache 客户端</h2><p>项目在启动的时候，由于没有 ETH币，于是:</p><ul><li>下载了 Ganache 软件</li><li>并且在浏览器插件中自定义网络接口为 7545</li><li>账户 ETH 币通过 Ganache客户端复制 私钥导入的方式获得</li><li>remix 部署的时候采取 Injected-MetaMask、切换账户</li></ul><h2 id="BigNumber大数据等处理工具">BigNumber大数据等处理工具</h2><p><strong>大数据处理简介</strong><br>JS中，默认的数字精度较小，对于以太坊，推荐内部以 wei 来表示余额(大整数)，只要显示余额的时候才转为 ether 或其它单位。<br>在web3js中，自动添加一个依赖库 BigNumber，精度非常高，不会丢失。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> bigNumber = <span class="built_in">require</span>(<span class="string">&#x27;bignumber.js&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> n = <span class="keyword">new</span> <span class="title function_">bigNumber</span>(<span class="string">&#x27;1234356789765432123456786543213456&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n.<span class="title function_">toString</span>()) <span class="comment">//打印科学计数法</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n.<span class="title function_">toString</span>(<span class="number">10</span>))<span class="comment">//以10进制数完整显示，只会保存20位浮点计数(小数点后20位)</span></span><br></pre></td></tr></table></figure><p><strong>判断是否为大数</strong><br><code>web3.utils.isBigNumber(n)</code> :来判断一个数是否为大数。</p><p><strong>以太单位转换</strong><br><code>web3.utils.fromWei(number,[unit])</code> :将一个数值转换为以太单位<br><code>web3.utils.toWei(number,[unit])</code>:将一个单位转换为Wei,1 ether为 10的18次方 wei</p><p><strong>数值转换</strong><br><code>web3.utils.toHex()</code>:数字转换为16进制，文本转换为utf-8字符串</p><p><strong>地址相关</strong><br><code>web3.utils.isAddress(address)</code>:检查指定的字符串是否是有效的以太坊地址，使用了大小写会校验和。</p><h2 id="查询区块信息">查询区块信息</h2><p><strong>查询最新的区块号（区块高度）</strong></p><p><code>web3.eth.getBlockNumber().then(console.log)</code></p><p><strong>查询区块信息</strong></p><p>返回指定区块编号或块哈希对应的块:<br><code>web3.eth.getBlock(blockHashOrBlockNumber [,returnTransactionsObjects,callback])</code></p><p>blockHashOrBlockNumber 为可选值：可输入区块号、区块hash 、或者字符串【‘earliest’,‘latest’,‘pending’】</p><p><strong>查询块中的交易信息</strong></p><p><code>web3.eth.getTransactionFromBlock(hasStringOrNumber,indexNumber)</code></p><p>hasStringOrNumber同上面的blockHashOrBlockNumber</p><p>indexNumber：区块中交易的索引，从0开始<br>显示的内容和 getBlock 设置为true后返回的 transactions 交易信息一致</p><p><strong>查询块中的交易数量</strong></p><p><code>web3.eth.getBlockTransactionCount(blockHashOrBlockNumber [,callback])</code></p><h2 id="Web3-js交易操作">Web3.js交易操作</h2><p><strong>账户相关操作</strong><br>返回当前节点控制的账户列表：<br><code>web3.eth.getAccounts()</code></p><p>创建一个新账户：<br><code>web3.eth.personal.newAccount(password,[callback])</code></p><p>获得当前接收挖矿奖励的账户地址：<br><code>web3.eth.getCoinbase()</code></p><p><strong>交易相关操作</strong><br><code>web3.eth.getBalance(address,[defaultBlock])</code>:获得指定区块中特定账户地址的余额<br><code>web3.eth.getGasPrice()</code>:根据最近几个区块，计算平均gas价格</p><p><strong>交易执行相关操作</strong><br>向以太网络提交一个交易：<br><code>web3.eth.sendTransaction(transactionObject [,callback])</code></p><p>transactionObject参数说明：</p><ul><li>from: 发送者地址</li><li>to: 可选参数，接收者地址，若发送的为合约，则为空</li><li>value: 发送的币</li><li>gas: gas的限制</li><li>gsaPrice: 每个gas的价格</li><li>data: 若发送的为合约，则为当前合约的 ABI 文件，否则为说明信息</li><li>noce: 账户的前一个交易计数，这个数必须是十六进制， web3.utils.toHex()进行转换</li></ul><p><a href="./%E9%92%B1%E5%8C%85%E8%BD%AC%E9%92%B1%E5%8C%85.js">示例代码</a></p><p>返回具有指定哈希值的交易对象、查看交易细节：<br><code>web3.eth.getTransaction()</code></p><p>返回指定交易的收据对象，如果交易是pending，返回null：<br><code>web3.eth.getTransactionReceipt()</code></p><h2 id="Web3-js-合约交互">Web3.js 合约交互</h2><p><strong>应用程序二进制接口(ABI)</strong></p><p>ABI文件以JSON形式表示，在JSON文件中，不能写注释.</p><p>ABI表现形式：functions、events</p><p>作用：将这些ABI文件传递给web3.js(或其它sdk)，根据这些接口类型构建出js对象，js对象操作合约。</p><p><strong>创建合约</strong></p><p>合约中可用编写的内容：函数、结构体、构造函数、状态变量、事件、枚举类型等。</p><p>合约要部署到区块链，需要编译为 字节码文件(remix中可直接复制)。</p><p>合约要想被外部应用程序访问，需要编译 ABI文件(remix中可直接复制)。</p><p><strong>js在区块链上部署合约</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">contract<span class="selector-class">.deploy</span>(&#123;</span><br><span class="line">  data:data</span><br><span class="line">&#125;)<span class="selector-class">.send</span>(&#123;</span><br><span class="line">  from:<span class="string">&#x27;&#x27;</span>, <span class="comment">//从哪个账户发送</span></span><br><span class="line">  gas:<span class="number">150000</span>,</span><br><span class="line">  gasPrice:<span class="string">&#x27;1000000&#x27;</span></span><br><span class="line">&#125;,<span class="built_in">function</span>(err,transactionHash)&#123;<span class="built_in">log</span>(transactionHash)&#125;)</span><br></pre></td></tr></table></figure><p><a href="https://github.com/liugezhou/web3.js/blob/main/deploy.js">示例代码</a>：这的代码是指，不是通过 remix 的 发布按钮，而是通过自己写的js脚本去发布的一个合约。</p><p><strong>调用合约函数</strong></p><ol><li>调用智能合约读(view,pure)函数时，一般使用call，无收费，但有gas费。</li></ol><p><code>myContract.methods.myMethod([param1 [,p2]]).call(options [,defaultBlock] [,callback])</code></p><ul><li>myMethod为合约中的方法名</li><li>params1 为函数的参数</li><li>options参数说明：<ul><li>from:String 可选 调用交易的地址</li><li>gasPrice:String 可选，交易的每个Gas的价格</li><li>gas：Number可选，交易的Gas限制</li></ul></li></ul><ol start="2"><li>调用智能合约写函数：相当于发送了交易</li></ol><p><code>MyContract.methods.myMethod([params [,param2]]).send(options [,callback])</code></p><ul><li>options参数说明：<ul><li>from:String 可选 调用交易的地址</li><li>gasPrice:String 可选，交易的每个Gas的价格</li><li>gas：Number可选，交易的Gas限制</li></ul></li><li>返回的结果触发事件：<ul><li>transactionHash: string，发送交易且得到交易哈希值后立即触发</li><li>receipt：object。以事件名称为键，以事件本身为属性值的 events</li><li>confirmation：number。触发时第一个参数为接收到的确认数，第二个参数为收到交易数据</li><li>error：交易发生过程中出错时触发</li></ul></li></ul><p><strong>调用合约事件</strong></p><p><code>MyContract.methods.emitEvent(&quot;eventName&quot;).send(options [,callback])</code></p><p><strong>执行事件查询</strong></p><p>区块链是由一个个区块组成的列表，这些块的内容基本上是交易记录。<br>每个交易都有一个交易日志，事件结果存放在交易日志里。<br>合约发出的事件可以使用合约地址访问</p><p><code>MyContract.getPassEvents(event [,options] [,callback])</code></p><ul><li>event: ‘AllEvents’ //获取全部事件</li></ul><h2 id="Web-js应用案例">Web.js应用案例</h2><p><a href="https://github.com/liugezhou/web3.js/tree/main/demo">代码示例</a></p><p><strong>需求：简单创建投票DApp</strong><br>与区块进行通信的方式是通过 RPC（Remote Procedure Call)<br>web3.js是一个js库，抽象出了所有的 RPC 调用，便于通过 js与区块链进行交互。<br>实现一个最简单的投票DApp</p><p><strong>创建合约</strong><br>写一个叫做 Voting 的合约，合约的内容</p><ul><li>初始化候选者</li><li>用来投票的方法</li><li>返回候选者所获得的总票数</li><li><a href="https://github.com/liugezhou/web3.js/blob/main/demo/Voting.sol">合约代码</a></li></ul><p><strong>部署合约</strong></p><p>将以上sol文件在 remix 中编写。<br>发布到 External Http Provider（选择倒数第二个账户发布）</p><ul><li>发布时，需要传入十六进制参数，通过 <a href="https://github.com/liugezhou/web3.js/blob/main/demo/DemoUtils.js">web3.utils.toHex</a> 转成一个三个候选人的数据后，在deploy中加入数组参数，发现 remix 不支持部署</li><li>于是使用 web3.js发布的方式实现  <a href="https://github.com/liugezhou/web3.js/blob/main/demo/DeployUtils.js">DeployUtils.js 代码示例</a></li><li>通过步骤一发布，步骤二测试检查</li></ul><p><strong>网页交互</strong><br><a href="https://github.com/liugezhou/drag/blob/main/src/view/HelloWorld.vue">前端内容代码</a></p>]]></content>
      
      
      <categories>
          
          <category> Web3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web3js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*95):小酒</title>
      <link href="/202306-No95/"/>
      <url>/202306-No95/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue95.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周是 2023 年的第<strong style="color: #3594F7; font-weight: bold;"><span>「</span>06 周<span>」</span></strong>(02.06-02.12)。<br>这里记录过去一周我的一些所见所闻。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本篇内容包含：本周主题、关注&amp;工具、一周图片、文摘。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">每周日晚发布，首更自<a href="https://blog.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>我的博客<span>」</span></strong><span style="width: 1em;"></span></a>,同步至<a href="https://zhouzhou.zhubai.love/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>竹白<span>」</span></strong><span style="width: 1em;"></span></a>、公众号 <a href="https://day.liugezhou.online/official.png" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>Wakaka<span>」</span></strong><span style="width: 1em;"></span></a>。</p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.pngnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周主题: 小酒</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">今晚又是小聚，小聚就要喝酒。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">局后差不多十点半结束，微醺。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">我不喜欢微醺，喜欢醉醺，然后又独自饮了几杯。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">接着，回想本周种种。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">感慨颇多，趁着醉醺，来上几句。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">停顿无数秒。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">然后。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">发现一句也来不了🤣。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">只要一个小想法：本周的事，就不要拖到明天了。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>挣扎<span>」</span></strong>一周，多活一周。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周没有地域的变迁、没有超常规的体验、没有非要感慨一番的事物，当然这是幸运。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">我没感受到这种幸运，单单因为我足够幸运。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.pngnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">关注&amp;工具</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://zblogs.top/how-to-register-openai-chatgpt-in-china/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">7RMB注册ChatGPT<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周关于ChatGPT的咨询，渐渐让人有生理上的不适。<br>各种消息，都是关于它的消息。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">而由于地域限制，一直使用的都是体验版，它的🔥，让你不得不亲自去想法注册、体验。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">根据这篇文章，通过支付宝付款，花了 ¥7.04 注册成功。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue95_01.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">PS：有种资本在操作的错觉。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>视频无法播放页面</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">微信视频号内容违规后显示：</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue95_02.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://cnodejs.org/topic/63ddd83cc903c20eb74ebde8" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">2022大前端总结和2023就业分析<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这篇文章分析了2022年前端的一些技术发展、现状、之后的发展。<br>并以作者的角度分析2023年的就业分析。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">内容较长，逻辑清晰，涵盖挺广。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue95_03.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>TVBox盒子</span><span class="suffix" style="display: none;"></span></h3><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue95_04.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">之前周小结提到的TVBox盒子，已有同好用上了。<br>本周我也安装了一下，果然非常的丝滑、令人惊艳。<br>这里简单记录一下安装步骤 - 核心流程是将安装包装到电视中，添加源文件：</p><ol data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; list-style-type: decimal; font-size: 15px; color: #595959;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><a href="https://github.com/o0HalfLife0o/TVBoxOSC/releases" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">Github这个仓库<span style="width: 1em;"></span></a> 下载安装包。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">将此安装包拷贝到优盘。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">创维电视参考知乎的这篇文章：<a href="https://zhuanlan.zhihu.com/p/506825550" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">创维电视安装第三方应用<span style="width: 1em;"></span></a></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">雷鸟电视参考: <a href="https://zhou.ge/2023-02-02.html" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">雷鸟电视安装TVbox影视仓<span style="width: 1em;"></span></a></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">在不同电视机将安装包安装成功后，关键词搜索<strong style="color: #3594F7; font-weight: bold;"><span>「</span>TVbox源<span>」</span></strong>，添加配置地址即可。</section></li></ol><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://immersive-translate.owenyoung.com/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">沉浸式双语网页翻译扩展<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">我们平时使用的翻译插件很多，这个翻译扩展集合了一系列的翻译源，可以同时显示中英文双语，免费开源。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue95_05.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://chrome.google.com/webstore/detail/chatgpt-for-zhihu/dgoinfidjelfolhnkaableghhppplbak" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">ChatGPT for zhihu<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">ChatGPT for zhihu。可以根据知乎的问题得到ChatGPT的回答结果，用户还可以复制此回答结果到表单中，作为问题答案的参考。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://tool.browser.qq.com/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">帮小忙<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">轻松办公，腾讯出品的工具助你一臂之力。这个推荐有点水：字数不够，素材来凑。<br>看到有推荐，记录之，暂未体验。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue95_06.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.pngnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">一周图片</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue95_07.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue95_08.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue95_09.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue95_10.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue95_11.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.pngnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">文摘</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">比较是应试教育带来的习惯。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">人往往在饿的时候，做出错误的选择。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">时代过得真快，如今没人提“公民”这个词了。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">如果爱一个人  就让他多喝水吧。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">谨言慎行，言而有信。<br>长此以往，你讲话会越来越有份量，人们会认真倾听你的话语。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*94):KTV小小感</title>
      <link href="/202305-No94/"/>
      <url>/202305-No94/</url>
      
        <content type="html"><![CDATA[<h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue94.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周是 2023 年的第<strong style="color: #3594F7; font-weight: bold;"><span>「</span>05 周<span>」</span></strong>(01.30-02.05)。<br>这里记录过去一周我的一些所见所闻。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本篇内容包含：本周主题、关注&amp;工具、一周图片、文摘、编码相关。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">每周日晚发布，首更自<a href="https://blog.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>我的博客<span>」</span></strong><span style="width: 1em;"></span></a>,同步至<a href="https://zhouzhou.zhubai.love/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>竹白<span>」</span></strong><span style="width: 1em;"></span></a>、公众号 <a href="https://day.liugezhou.online/official.png" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>Wakaka<span>」</span></strong><span style="width: 1em;"></span></a>。</p></section></section><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周主题: KTV小小感</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Wakaka,时间来不及了。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">今天晚上和朋友一起去KTV唱歌，快速小结一下。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">元宵节呢，主流媒体乏力，节日的气氛烘托的不是那么热烈。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">然后就是一起吃个烤肉吧，吃完烤肉没有灯可转，那就传统一点的唱歌。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">KTV一点也不饱满。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">距离上次去唱歌可能过去两三年了，娱乐场所还在，会觉得：害，挺不容易的。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">00后或许都不去寻找这种唱歌的氛围了。<br>90后是好久没有几次像样的聚会了。<br>即使聚，也难有闲心喝完两杯小酒去KTV唱个歌去了。<br>80后70后就更不了解了。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">怎么说呢，社会潜移默化的影响、变化、塑造。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">有这个感受，是在想下次再去喝完酒再去想到唱歌的几率有几何？能形成共识的概率更加单调。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">除非真的很无聊或者真的爱唱歌。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">PS:量贩式KTV不设最低消费和人头费，相对安全和健康。<br>普通KTV，易引起暧昧联想。<br>商务KTV，通常会配备小弟、DJ公主，适合商务洽谈，那个啥服务。也就是说，友情提示，你下次想到去KTV，一定要区别量贩式和普通、商务。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">关注&amp;工具</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://zhuanlan.zhihu.com/p/372134084" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">iPhone共享相册白嫖iCloud空间200GB<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">iPhone的iCloud空间有限，通过IPhone的共享相册，每个ID最多可以创建200个共享相簿，每个相簿最多可以共享图片数量5000张，大小为1G,不占用iCloud空间。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue94_01.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>华为挑战</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">美国的制裁大招已经用上了。<br>如果华为能挺过去，美国就会面对一个更不好对付的华为。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue_02.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="http://www.daziba.cn/zflx/zflx1.aspx" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">键盘正确的手势训练<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">打了这么多年字，突然发现指头的按键与标准的使用，很不相同，通过这个网站测验，发现很多指头对不上。<br>比如 g这个字母正确的应该是左手食指，而我养成的习惯是右手的食指，练习了一会发现之前的习惯已经形成肌肉记忆难以更改了。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue_03.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>Damus</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">2月1日，一款名为<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">Damus</code>的社交网络应用上架AppStore；在一天就冲到了AppStore社交媒体类别下载榜单的第十位。<br>在Twitter、Facebook、以及微信朋友圈上，更是随处可见用户分享着自己的链接以及二维码。<br>本质上，Damus只是基于Nostr协议的一个iOS平台客户端，发帖不可删除，注册不需要任何账户，通过共钥添加好友，只需要保留好自己的私钥即可。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue_04.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://privnote.com/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">privnote<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一款分享可以阅后即焚的笔记的工具，可以设置阅读密码、定时销毁的时间。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue94_05.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">一周图片</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="issue94_06" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue94_06.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="issue94_06" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue94_07.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="issue94_06" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue94_08.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="issue94_06" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue94_09.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="issue94_06" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue94_10.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="issue94_06" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue94_11.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="issue94_06" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue94_12.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="issue94_06" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue94_13.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="issue94_06" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue94_14.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="issue94_06" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue94_15.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="issue94_06" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue94_16.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; line-height: 26px; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">文摘</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">你和任何人的关系，其实并不取决于你对别人有多好，而是取决于你的强弱，手上筹码的多少。<br>人们普遍对强者比较宽容，而即便弱者没做错什么，也会被苛刻对待。就算你一味忍气吞声，往往也会被看成廉价的讨好。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">翻脸不如翻身  生气不如争气<br>小事稳  大事狠<br>没人扶的自己站稳</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">创业公司死亡只有两个原因：创始人放弃，或者现金用完了。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">不是春来偏爱酒，应须得酒遣春愁。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">生活最沉重的负担不是工作，而是无聊。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">编码相关</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>vuetify</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Vuetify 是建立在Vue.js之上的完备的界面框架。<br>Vuetify采用移动优先的设计，这意味着无论是在手机、平板电脑还是台式电脑上，你的应用程序都可以开箱即用。Github目前36.4k star。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue94_17.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://github.com/ben1234560/k8s_PaaS" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">Kubernetes教程<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">如何基于K8s(Kubernetes)部署成PaaS/DevOps(一套完整的软件研发和部署平台)--教程/学习。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue94_18.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://helpthisbook.com/sunny/the-newbies-guide-to-crypto" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">加密数字货币新手指南<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一本通俗小册子，介绍加密数字货币的基本知识。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue94_19.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*93):离职后很焦虑怎么缓解</title>
      <link href="/202304-No93/"/>
      <url>/202304-No93/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue93.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周是 2023 年的第<strong style="color: #3594F7; font-weight: bold;"><span>「</span>04 周<span>」</span></strong>(01.23-01.29)。<br>这里记录过去一周我的一些所见所闻。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本篇内容包含：本周主题、关注&amp;工具、一周图片、文摘、编码相关。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">每周日晚发布，首更自<a href="https://blog.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>我的博客<span>」</span></strong><span style="width: 1em;"></span></a>,同步至<a href="https://zhouzhou.zhubai.love/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>竹白<span>」</span></strong><span style="width: 1em;"></span></a>、公众号 <a href="https://day.liugezhou.online/official.png" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>Wakaka<span>」</span></strong><span style="width: 1em;"></span></a>。</p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周主题: 离职后很焦虑怎么缓解</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">2023年打工人的日常生活又开始了。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">我由于年跟前的公司大优化，当大家都开始发开工红包的时候，我还躲在被窝里追《狂飙》。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这周会时不时想到简历还没优化、想到2023年大环境不行啊、想到找工作还得准备面试题、想到我的周小结还没结呢、想到我还没有开始充足的准备呢。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">总之各种拦路虎想法出来之后，找工作这件事显得尤其的坏氛围。<br>于是，为了尽可能让自己放松心态，这段时间刷剧、玩游戏、吃好吃的、看电影，算是对短时间内还没做好开始找工作的短期逃避，也算是暗示不要给自己太大压力。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">当然，求职过渡期对于打工者来说都会经历一段承受煎熬的日子，而在这段日子里，保持平和的心态，保持豁达的态度说起来容易，深处之中难免焦虑。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">回到我们本周的这个题干，那么应该怎么缓解呢？</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>放平自己的心态，让自己安静下来，换一种心情，然后再认真准备一下，找下一份工作<span>」</span></strong>就可以了。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">其实就是这么容易，生活中遇到的所有事情，只要心态完好，学会控制自己的情绪调节，那可真是一个不简单的人儿啊。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">关注&amp;工具</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>满江红</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">春节档去看了电影《满江红》，四点感受如下：</p><ol data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; list-style-type: decimal; font-size: 15px; color: #595959;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">没有值回票价，距离家最近的影院我选择的最便宜价格 79RMB，直观感受是 30RMB 不能再多了。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">电影整体给人的感觉：小品演员大荧幕段子的拼凑</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">在家看或许会打四分，而去电影院因为消费了、打三分</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">在还没看别人的评价、讨论前提下，不记得电影演了什么，要表达什么，或许是精忠报国？</section></li></ol><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">目前票房超过《流浪地球2》，以我自身为例的的感受可能是 流浪2 的主演 吴京老师，给人一种主旋律的印象，当在两大资本电影的媒体轰炸中，对于大多数观众而言，战狼精神的审美疲劳，在面对二选一的问题上，选择了《满江红》。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://beartalking.com/a-failed-wechat-app" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">我是如何做出一个失败的小程序的？<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这篇博文，是<strong style="color: #3594F7; font-weight: bold;"><span>「</span>2017<span>」</span></strong>年作者讲述的自己做出一个小程序的整个流程以及一些自己的经验。<br>核心观点是：</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">将小程序当做了内容媒体提供渠道，定位错了。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">低估了微信对于小程序的谨慎态度。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">现在对于小程序来说，最大的一个问题是用户没有合适打开它的逻辑关系，它的价值，在于帮助完成最终的连接。</section></li></ul><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://zhuanlan.zhihu.com/p/556225456" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">Arc:一个试图改变历史的浏览器<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">知乎上一篇介绍Arc浏览器的文章：<br>Arc 关于介绍可以看到 Version 0.64.0 (34177) 是基于 Chromium Engine Version 104.0.5112.102 改造而来，走了类似于 Microsoft Edge 的路子，不同的是 Edge 只是对其进行局部优化，未改变浏览器核心交互方式，及操作习惯。而 Arc 则不然，大刀阔斧。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">暂未体验。<img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue93_01.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://panda995.xyz/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">熊猫不是猫<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这个网站，作者更新了一系列比较好玩的项目搭建的教程、推荐等。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue93_02.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://cupfox.app/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">茶杯壶<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">就我的观察来看，现在几乎很少再有人去开会员 看电影、电视了。<br>又一个在线电影免费看的在线网站，这个网站提供电影的观看链接。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue93_03.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">一周图片</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue93_04.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue93_05.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue93_06.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue93_07.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue93_08.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue93_09.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue93_10.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue93_11.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; line-height: 26px; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">文摘</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">万丈红尘三杯酒，千秋大业一壶茶</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">财富是对认知的奖赏，而不是对勤奋的补偿。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">杨绛：<br>“人和人如果不在一个层次上， 那么无论你做什么， 对方都觉得不对， 所谓层次，不是社会地位， 而是人品和认知事物的清晰程度。”<br>因此，当你发现很多人否定你的时候，意味着不是TA的人品有问题，只是你们认知不同，所以在我看来，尊重是人类最好的品德。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">人生下来的时候，只是无知，并不愚蠢。<br>愚蠢，是后来的教育导致的。<br>———罗素</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">可能这就是记录的价值：可以知道自己当年如何傻X，并保留未来的自己认为现在我是个傻X的权利。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">保持连续比单天做到完美更重要。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">编码相关</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://mp.weixin.qq.com/s/pFN0Bo8N6QBhr52qG4SVlg" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">加 3 行代码减少 80% 构建时间<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Jenkins构建项目部署过程中若耗时过长，对发版流程很有影响。<br>这篇文章先是介绍了Jenkins构建自动化部署的一个流程。<img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue93_12.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">从构建流程下手，优化点在<strong style="color: #3594F7; font-weight: bold;"><span>「</span>构建docker镜像<span>」</span></strong>这一步。</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">docker镜像优化的明显提速效果是：缓存策略。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">docker镜像缓存策略包括两类：<strong style="color: #3594F7; font-weight: bold;"><span>「</span>docker层缓存<span>」</span></strong>和<strong style="color: #3594F7; font-weight: bold;"><span>「</span>应用层缓存<span>」</span></strong>。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">docker层缓存是指docker build所产生的可重用镜像层，只要Dockerfile中的命令及相关的源文件未改变，就能直接使用这些镜像缓存。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">应用层缓存是指应用构建所产生的中间产物，这些中间产物主要是node_modules目录中的物理文件，其中包括npm install下载的依赖包和npm run build产生的.cache目录文件。</section></li></ul><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">介绍完流程后，开始优化：</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">开启应用层构建缓存，<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">webpack.config.js 设置 cache:true</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">BuildKit需要手工启用，可在 docker build 命令前添加环境变量 <code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">DOCKER_BUILDKIT=1</code> 启用</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">修改Dockerfile，将 RUN npm install 和 RUN npm run build 指令改为 <code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">RUN --mount=type=cache npm xxx</code>。</section></li></ul><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://blog.csdn.net/willingtolove/article/details/104242802" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">检测服务器端口是否被X<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这篇文章介绍了三个工具：</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><a href="https://tool.chinaz.com/port" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">在国内测试服务器端口是否通<span style="width: 1em;"></span></a></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><a href="https://www.yougetsignal.com/tools/open-ports/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">在国外测试服务器端口是否通<span style="width: 1em;"></span></a></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><a href="https://tcp6.ping.pe/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">在国内外同时测试服务器端口是否通<span style="width: 1em;"></span></a></section></li></ul><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">通过第三个工具，发现在腾讯云的香港云服务器开启的某服务的端口总是被X，提交工单之后，回复根据政策由于原因服务器IP会被境内拦截访问，这个拦截是永久的而且不可解封。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://github.com/psoho/fast-poster" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">fastposter<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一款快速开发海报的开源项目。<br>基于低代码理念设计，无需编写复杂代码，docker部署非常方便, 有详细的官方文档。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">服务器部署后 <a href="http://poster.liugezhou.online/#/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">预览<span style="width: 1em;"></span></a>：</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue93_13.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://vueuse.org/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">VueUse<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这个项目是Vue相关hooks的集合，包罗万象，使用ts编写，有 200+ 个hooks。<img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue93_14.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*92):新年快乐</title>
      <link href="/202303-No92/"/>
      <url>/202303-No92/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue92.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周是 2023 年的第<strong style="color: #3594F7; font-weight: bold;"><span>「</span>03 周<span>」</span></strong>(01.16-01.22)。<br>这里记录过去一周我的一些所见所闻。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本篇内容包含：本周主题、关注&amp;工具、一周图片、文摘、编码相关。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">每周日晚发布，首更自<a href="https://blog.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>我的博客<span>」</span></strong><span style="width: 1em;"></span></a>,同步至<a href="https://zhouzhou.zhubai.love/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>竹白<span>」</span></strong><span style="width: 1em;"></span></a>、公众号 <a href="https://day.liugezhou.online/official.png" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>Wakaka<span>」</span></strong><span style="width: 1em;"></span></a>。</p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周主题:新年快乐</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">┏━━┓┏━━┓┏━━┓┏━━┓<br>┗━┓┃┃┏┓┃┗━┓┃┗━┓┃<br>┏━┛┃┃┃┃┃┏━┛┃┏━┛┃<br><b>HAPPY &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NEW&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    YEAR</b><br>┃┏━┛┃┃┃┃┃┏━┛┗━┓┃<br>┃┗━┓┃┗┛┃┃┗━┓┏━┛┃<br>┗━━┛┗━━┛┗━━┛┗━━┛</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">又一新年将至，<br>人生不过匆匆数十载，<br>在最有民族仪式感的日子里，<br>我们珍惜每一次团聚、臻享每一份回忆。<br>时代是必然向前的。<br>在此，恭祝您及家人兔年吉祥幸福快乐！<br>“兔步青云”、“前兔似锦”！<br>🎉🎉🎉</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; color: blue;" align="right" data-tool="mdnice编辑器">~ 羔羊</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">关注&amp;工具</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://m.sousou.pro/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">阿里资源站<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">有想看的电影可以先在这个网站搜索，保存到阿里云盘观看。<br>由于都是网友的分享，质量一般都较上乘。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue92_01.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>好用的TV盒子</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">群友推荐的好用的TV盒子，可以看 cctv 和各省卫视，可以看爱又疼电影 无需会员何付费，Android 系统电视可以直接安装省了一个电视盒子。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">由于本周整理仓促，还没研究，贴两个分享链接：<br><a href="https://www.coolapk.com/feed/42647466?shareKey=OTk1OWQ3NmYyNTRlNjNjZDJjNjA~&amp;shareUid=3459340&amp;shareFrom=com.coolapk.app_5.1" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">可能是最舒服的春节Tv观影方式<span style="width: 1em;"></span></a></p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://mp.weixin.qq.com/s/-Umgj5okFZD5wV3EB5C5Fg" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">双版齐发，好用的TV。一般人我不告诉他。<span style="width: 1em;"></span></a></p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>付费内购项目收益抽成</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">群聊中分享一张照片。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue92_02.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://bestxtools.zhubai.love/posts/2227788146916585472" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">好工具周刊～特别放送<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">《好工具周刊》从发布第一期到现在马上就满一年了，每期发布了 7 个免费的在线工具，到现在已经累计有 300 多个工具了。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">我几乎期期必看必体验，而最新的一期为作者整理的2022年最佳免费在线工具，集合了一系列的年度最佳工具。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue92_03.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://www.ezindie.com/weekly" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">独立开发者变现周刊<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">周刊分享的内容包括几个开源项目、独立开发者变现的经历、经验介绍。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue92_04.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://www.decohack.com/Post/28" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">独立产品灵感周刊<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">和独立开发者变现周刊类似，灵感周刊每周罗列的一系列独立开发者的项目。<br><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue92_05.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://yicha.zhubai.love/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">YICHA设计周刊<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">互联网设计师的精读文章和设计资源。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue92_06.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">一周图片</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue92_13.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue92_07.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue92_08.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue92_09.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue92_10.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue92_11.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue92_12.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; line-height: 26px; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">文摘</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">关于沟通，大部分情况下最佳策略其实就是四个字：少说两句。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">爱好，是人生的避难所。一个人若是有终身挚爱的兴趣，再多的苦衷也许会被挚爱化解。无论何种境遇，都要记得取悦和犒赏自己。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">只有改变，才能迎来新生。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">你每天逼着自己超负荷运转，因为这世界上你最痛恨的人是你自己。你学会了许多东西，却始终不知道该如何放过你自己。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">如果一个人能力很强，但混得很差，大概率他人品很好。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">编码相关</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周主要是对香港云服务器配置的一些学习、实践，最终成功上网。<br>简单记录一下步骤：</p><ol data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; list-style-type: decimal; font-size: 15px; color: #595959;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">购买香港云服务器 <strong style="color: #3594F7; font-weight: bold;"><span>「</span>67RMB/month<span>」</span></strong></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">参考 <a href="https://www.choupangxia.com/2019/10/01/centos7-%E6%90%AD%E5%BB%BAss%EF%BC%88ssserver%EF%BC%89%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8F%8Ashadowsocks%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">这篇文章<span style="width: 1em;"></span></a> 进行配置、启动</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">配置过程出错，参考 <a href="https://l-fay.github.io/2021/01/09/proxy00/#:~:text=AttributeError%3A%20%2Fusr%2Flib%2Fx86_64-Linux-gnu%2Flibcrypto.so.1.1%3A%20undefined%20symbol%3A%20EVP_CIPHER_CTX_cleanup%20%E8%BF%99%E4%B8%AA%E9%97%AE%E9%A2%98%E6%98%AF%E7%94%B1%E4%BA%8E%E5%9C%A8openssl1.1.0%E7%89%88%E6%9C%AC%E4%B8%AD%EF%BC%8C%E5%BA%9F%E5%BC%83%E4%BA%86EVP_CIPHER_CTX_cleanup%E5%87%BD%E6%95%B0%EF%BC%8C%E5%A6%82%E5%AE%98%E7%BD%91%E4%B8%AD%E6%89%80%E8%AF%B4%EF%BC%9A,EVP_CIPHER_CTX%20was%20made%20opaque%20in%20OpenSSL%201.1.0." style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">这篇文章<span style="width: 1em;"></span></a> 进行源文件修改</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">根据教程: ssserver 启动</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">iOS/Mac 下载 🚀，根据服务端的配置进行链接即可。</section></li></ol><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*91):寻觅意义</title>
      <link href="/202302-No91/"/>
      <url>/202302-No91/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue91.png" alt="" style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"><figcaption style="margin-top: 5px; text-align: center; display: block; font-size: 13px; color: #2b2b2b;"><span style="background-image: url(https://img.alicdn.com/tfs/TB1Yycwyrj1gK0jSZFuXXcrHpXa-32-32.png); display: inline-block; width: 18px; height: 18px; background-size: 18px; background-repeat: no-repeat; background-position: center; margin-right: 5px; margin-bottom: -5px;"></span>寻觅</figcaption></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周是 2023 年的第<strong style="color: #3594F7; font-weight: bold;"><span>「</span>02 周<span>」</span></strong>(01.09-01.15)。<br>这里记录过去一周我的一些所见所闻。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本篇内容包含：本周主题、关注&amp;工具、一周图片、文摘、编码相关、本周小结等。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">每周日晚发布，首更自<a href="https://blog.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>我的博客<span>」</span></strong><span style="width: 1em;"></span></a>,同步至<a href="https://zhouzhou.zhubai.love/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>竹白<span>」</span></strong><span style="width: 1em;"></span></a>、公众号 <a href="https://day.liugezhou.online/official.png" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>Wakaka<span>」</span></strong><span style="width: 1em;"></span></a>。</p><p align="right" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; display: block; text-align: right; color: blue;">No.*91</p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周主题:寻觅意义</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue91_01.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">复旦大学哲学系教授<strong style="color: #3594F7; font-weight: bold;"><span>「</span>王德峰<span>」</span></strong>曾在一场讲座中深刻剖析了当下普遍存在于我们心中的不安、虚无和痛苦，解释了这些时代情绪的来龙去脉，令人醍醐灌顶。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://mp.weixin.qq.com/s/wvg_V0SQI_rEO91NRKemDQ" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">除了挣钱，人生还有什么意义？<span style="width: 1em;"></span></a>  这篇文章就是对书中其中的这场讲座实录的内容分享，文章篇幅略长。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">在这篇文章中，王德峰教授通过通俗的大白话，首先引出了思考生命的意义这个人生大问题，通过分析资本的运作方式来剖析个人在各种实际行动中的意义和所谓理想。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">摘录其中几句，用来帮助理解意义何为、以达到内心的一丝平静。</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">在我们所处的现实社会本身中，隐含着很多规定性，正是这些规定性，形成了我们各种行动的意义以及所谓理想。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">这个时代区分了强者与弱者。强者是什么？是在资本世界中位居资本高位的人。弱者是什么？是远离资本的人。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">生命是通过痛苦来达到自我意识和自我保持的。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">按照叔本华的意思，就应当说「知识就是烦恼」。为什么知识就是烦恼？因为知识增加了我们实现欲望的力量，而这种力量本身同时也增添了烦恼。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">三条道路帮我们解脱：艺术(音乐)、哲学、最高的道德。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">真正善良的人明白这一点，他可以从他人那里推及自身，或者以己推人，感受别人的痛苦犹如自己的痛苦。叔本华说，这就是最高的道德。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">背上一个小小的行囊，去做一些并不起眼的小事情。</code></section></li></ul><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">关注&amp;工具</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://github.com/superleeyom/blog/issues/53" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">2022年终总结之我的买房经历<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">整篇文章记录了作者的整个买房的心路历程，买房城市是号称省会房价洼地的：长沙。<br>要买房的小伙伴可以走一遍作者的过程，熟悉一下买房的流程和准备工作。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://www.restorephotos.io/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">老照片修复工具<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">在看到这个工具的时候，我在想使用场景是什么？<br>突然就想到QQ空间-从初中开始就上传的照片。<br>挑选了几张进行修复后，照片的五官变得高清起来，但还原度真不太够。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue91_02.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://temp-mail.org/zh/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">临时邮件<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一次性临时电子邮件工具，注册临时使用的网站时可以用上。<br>类似的插件有很多，这款做得简洁好用，支持中文。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue91_03.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://discuss-cn.bestxtools.com/d/122" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">好工具周刊*45期推荐<span style="width: 1em;"></span></a></p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://cn.bing.com/create" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">图像创建者<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue91_04.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;">微软的搜索引擎 Bing，引入了 AI 作图引擎 <code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">DALL-E2</code>，根据搜索词生成图片。<br>目前只提供预览功能，根据搜素词生成图片的功能还未对外开放。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>Cloak:隐藏应用程序</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">AppStore上的一款小应用，可以将指定的 App 从 iPhone / iPad 上隐藏，主屏幕、App 资源库和通知等都不再显示这些应用程序, 直到将它们还原。<br>应用场景是"检查"?</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">下载体验后：</p><ol data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; list-style-type: decimal; font-size: 15px; color: #595959;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">需要访问屏幕使用时间才可正常使用</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">免费版可以隐藏三个应用程序、一个分组、三个安全区</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">免费版不提供替身密码和更换App图标功能。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">会员版本¥7.99 一次性买断。</section></li></ol><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue91_05.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://alleyread.com/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">AlleyRead<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">手机优质 Newsletter 的工具「AlleyRead」，收录了不少不错的各类型订阅站点。<br>目前收录量227，如果你也有自己的 Newsletter 推广或者推荐别人的内容，可以进行Newsletter 推荐。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue91_06.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://mp.weixin.qq.com/s/o5HDmW6byrJshq9DQeW8VQ" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">锚定效应与产品设计中的定价<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">来自公众号：田飞，产品随想、设计作品整理、成长与想法。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这篇文章作者分享的关于锚定效应归纳和案例，在产品设计和商业运用中无所不至。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">一周图片</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue91_07.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue91_08.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue91_09.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue91_10.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue91_11.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue91_12.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; line-height: 26px; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">文摘</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">自信是非常强大的，我认识的最成功的人，几乎相信自己到了产生错觉的地步。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">自信必须与自我意识互相平衡，我曾经讨厌任何形式的批评并积极避免，现在我总是试着假设它是真的，然后决定是否应该采取行动。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">我会失败很多次，但我会真正成功一次</code>，你必须给自己很多次机会，才能获得幸运。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">一旦你弄清楚了该做什么，就要势不可挡地、快速地，去完成其中一小部分优先事项。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">大多数人靠外部驱动，他们做事只是想给别人留下深刻印象，这很糟糕。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">你会非常在意他人是否认为你在做正确的事，你会非常专注于跟上他人的脚步，这会阻止你做真正有趣的事。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">在你不痴迷的任何事情上努力，都很难取得巨大成功。</section></li></ul><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周文摘选摘自 <a href="https://blog.samaltman.com/how-to-be-successful" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">how-to-be-successful<span style="width: 1em;"></span></a></p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">编码相关</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://mp.weixin.qq.com/s/HfgifbdzBSOZkDb0ru0XsA" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">2022前端大事记<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue91_13.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;">这篇文章干货挺多的，摘录其中几个点如下：</p><ol data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; list-style-type: decimal; font-size: 15px; color: #595959;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">Chrome 开始实施私有网络控制策略需要部署以下两个Header</section></li></ol><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_code.jpg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; letter-spacing: 0px; padding-top: 15px; background: #282c34; border-radius: 5px;"><span class="hljs-string" style="color: #98c379; line-height: 26px;">Request：Access-Control-Request-Private-Network:</span>&nbsp;<span class="hljs-literal" style="color: #56b6c2; line-height: 26px;">true</span><br><span class="hljs-string" style="color: #98c379; line-height: 26px;">Resonse：Access-Control-Allow-Private-Network:</span>&nbsp;<span class="hljs-literal" style="color: #56b6c2; line-height: 26px;">true</span><br></code></pre><ol start="2" data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; list-style-type: decimal; font-size: 15px; color: #595959;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">Vue 3 在 2022 年 2 月 7 日 成为新的默认版本</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">在最新的 Node.js v17.5 版本中，增加了对 Fetch API 的支持，后续无需再借助 axios、needle、node-fetch、request 等第三方请求库了！</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">JavaScript 即将推出两个新的数据类型：Record 和 Tuple ，该提案目前已经到达  Stage: 2。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">微软 TypeScript 团队提出了一项新的提案，在提案中希望可以为 JavaScript 带来可选的类型注释语法。提案的目的是让开发者能够直接运行用 TypeScript、Flow 或其他静态类型库编写的程序，而不需要再编译一次。<br>目前提案已经到达 Stage: 1 阶段。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">PsScript-浏览器支持直接运行 Python 代码</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">目前，Chrome、Firefox 等主流浏览器均表示支持 HTTP/3</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">Lerna V6 发布</section></li></ol><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">......</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://zhuanlan.zhihu.com/p/32615963" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">IPFS是什么？包含哪些内容<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>IPFS<span>」</span></strong>:星际文件系统(InterPlanetary File System ),是一个分布式的Web，点到点超媒体协议，可以让我们的互联网速度更快, 更加安全, 并且更加开放。是一个旨在实现文件的分布式存储、共享和持久化的网络传输协议，IPFS协议的目标是取代传统的互联网协议HTTP。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">对于传统的HTTP来说：</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">中心化低效且成本高</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">Web文件被经常删除</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">中心化限制了web的成长</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">互联网应用高度依赖主干网。</section></li></ul><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">而IPFS协议的特点有：</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">IPFS是一个协议，类似http协议</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">IPFS是一个文件系统</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">IPFS是一个web协议</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">IPFS是模块化的协议</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">IPFS是一个p2p系统</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">IPFS天生是一个CDN</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">IPFS拥有命名服务</section></li></ul><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">PS：关于IPFS的普及和相关技术细节，公众号「ipfs_guide」有介绍，不过2019年就停更了,顺带着跟着这个介绍体验买了点fil币🥱。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://ipfs.tech/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">ipfs.tech<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">ipfs官网教学。<br>该官网提供的一些文档、教学、客户端下载等内容可以有效的帮助初次了解ipfs的童鞋。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue91_14.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://forum.conflux.fun/t/ipfs/14771/1" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">如何快速搭建自己的 IPFS 网关<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这篇文章详细记录了如何自己搭建。<br>这里做一个文章内容的极简总结：</p><ol data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; list-style-type: decimal; font-size: 15px; color: #595959;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">IPFS网关允许访问者通过 HTTP 请求从 IPFS 网络访问数据。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">默认情况下，IPFS 网关配置在 8080 端口上。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">linux上手动安装和 ipfs-update 安装的两种方式(我使用的第一种)</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">初始化仓库:<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">ipfs init</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">使用 Systemd 来启动 IPFS 守护进程（配置内容见原文）</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">配置 IPFS HTTP 网关（配置内容见原文）</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">重启服务：sudo systemctl restart ipfs</section></li></ol><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>Github用户的 SSH 公钥</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">GitHub有个隐藏的URL pattern:<br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">https://github.com/$&#123;username&#125;.keys</code> 会显示用户的 SSH 公钥。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://github.com/microfeed/microfeed#readme" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">Microfeed<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Microfeed是基于Cloudflare的可以自我托管的轻量级内容管理系统(CMS)。是一个开源项目，可以轻松地将各种内容(如音频、视频、照片、文档、博客文章和外部url)以web、RSS和JSON的形式发布。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue91_15.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">暂未体验，码住等有需要再研究。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="read.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">read.liugezhou.online<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue91_16.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://github.com/book-searcher-org/book-searcher" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">book-searcher<span style="width: 1em;"></span></a>:上周提到的这个项目的自定义部署进展。<br>简要回顾：这个项目是用来搜公开图书的，上周在部署的时候出了问题。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">该项目更新后，服务端Docker部署步骤如下：</p><ol data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; list-style-type: decimal; font-size: 15px; color: #595959;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">cd /root</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">mkdir book-searcher&amp;&amp;cd book-searcher</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">wget https://raw.githubusercontent.com/book-searcher-org/book-searcher/master/docker-compose.yml</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">通过 <a href="https://github.com/zlib-searcher/index/releases" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">zlib-searcher/index/<span style="width: 1em;"></span></a> 下载索引</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">docker-compose run --rm -v "<span class="span-inline-equation" style="cursor:pointer"><span class="inline-equation" role="presentation" data-formula="PWD:" data-formula-type="inline-equation" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" role="img" focusable="false" viewBox="0 -683 3182.8 705" aria-hidden="true" style="vertical-align: -0.05ex; width: 7.201ex; height: 1.595ex;"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="50" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"/></g><g data-mml-node="mi" transform="translate(751, 0)"><path data-c="57" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"/></g><g data-mml-node="mi" transform="translate(1799, 0)"><path data-c="44" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"/></g><g data-mml-node="mo" transform="translate(2904.8, 0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"/></g></g></g></svg></span></span>PWD" -w "$PWD" book-searcher /book-searcher index -f *.csv</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">docker-compose up -d</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">阿里云免费ssl证书申请</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">服务器配置、测试</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">read.liugezhou.online</code> 访问，由于服务端不支持 IPFS网关设置，因此在客户端设置中需要加入网关设置，如：<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">https://dweb.link/</code>、<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">https://ipfs.io/</code>等。</section></li></ol><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周小结</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周干了点啥：</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><a href="https://blog.liugezhou.online/read004-%E5%B0%8F%E7%8B%97%E9%92%B1%E9%92%B1/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">小狗钱钱读书笔记<span style="width: 1em;"></span></a></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">Motto:<br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">一个人只有一种命运，早日相遇，尽情拥抱。</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">read.liugezhou.online</code> 网站部署</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">山西长治游玩</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">初步数据化确立2023目标</section></li></ul><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小狗钱钱</title>
      <link href="/read004-%E5%B0%8F%E7%8B%97%E9%92%B1%E9%92%B1/"/>
      <url>/read004-%E5%B0%8F%E7%8B%97%E9%92%B1%E9%92%B1/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/2023Goals.png" alt="" style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"><figcaption style="margin-top: 5px; text-align: center; display: block; font-size: 13px; color: #2b2b2b;"><span style="background-image: url(https://img.alicdn.com/tfs/TB1Yycwyrj1gK0jSZFuXXcrHpXa-32-32.png); display: inline-block; width: 18px; height: 18px; background-size: 18px; background-repeat: no-repeat; background-position: center; margin-right: 5px; margin-bottom: -5px;"></span>2023Goals</figcaption></p><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>关于本书</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">小狗钱钱这本书定位于一个童话般的理财故事。<br>主要讲的是一个叫做吉娅的12岁小女孩，一次偶然情况救助了一只拉布拉多猎犬，取名“钱钱”。<br>钱钱为报答吉娅，开口说话，一步步指引吉娅如何实现自己的愿望、如何正确理财、如何像富人思考...的故事。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">「PS:《小狗钱钱》这个钱钱指的是小狗，也就是在说一个主语，之前一直自认为，书名包含的是小狗和钱钱两个主语，但书名表现出来的意思确又在说的是两个主语。」</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>作者</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">博多·舍费尔 1960年9月10日出生在德国科隆，16岁时移民美国。代表作《小狗钱钱 》，出版《财务自由之路》。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一个小彩蛋：在维基百科上未搜到此作者。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>两句话感受</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">纯真的故事、温馨的事件，回归儿童时刻，通过各种肥美的鸡汤。<br>倘若对比书中提到的几个方面付出思想上的头脑风暴，可以享受三分钟的鸡血。<br>假如真的按书中所写去实践了，我倒觉得结果不是那么重要了，生活在找寻的实践的过程中一定会变得更有意义了。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>记录</span><span class="suffix" style="display: none;"></span></h3><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content" style="height: 16px; line-height: 16px; font-size: 16px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle3.png); display: inline-block; width: 16px; height: 16px; background-size: 100%; background-position: left bottom; background-repeat: no-repeat; width: 16px; height: 15px; line-height: 15px; margin-right: 6px; margin-bottom: -2px;"></span>1. 童话与理财。</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这部微小说开篇提到：<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">如果你想富有，请把自己变成一个小孩。</code></p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">小孩子的框框最少，他们<strong style="color: #3594F7; font-weight: bold;"><span>「</span>诚实<span>」</span></strong>、<strong style="color: #3594F7; font-weight: bold;"><span>「</span>快乐<span>」</span></strong>、<strong style="color: #3594F7; font-weight: bold;"><span>「</span>乐于学习<span>」</span></strong>。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content" style="height: 16px; line-height: 16px; font-size: 16px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle3.png); display: inline-block; width: 16px; height: 16px; background-size: 100%; background-position: left bottom; background-repeat: no-repeat; width: 16px; height: 15px; line-height: 15px; margin-right: 6px; margin-bottom: -2px;"></span>2. 困难</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">并非困难使我们放弃，而是因为我们放弃，才显得如此困难。 </code></p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">PS: 当回顾我们之前没有做下去的事，是因为事情很难没去做吗？ 似乎确实是先有了心态上的放弃，显示出事情的困难。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content" style="height: 16px; line-height: 16px; font-size: 16px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle3.png); display: inline-block; width: 16px; height: 16px; background-size: 100%; background-position: left bottom; background-repeat: no-repeat; width: 16px; height: 15px; line-height: 15px; margin-right: 6px; margin-bottom: -2px;"></span>3. 如何面对不喜欢你的人</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">其实跟别人喜不喜欢一件事没有关系，他是因为不喜欢自己，所以也不愿意让别人过得快乐。</code></p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">PS:这是自我安慰的一个手段，当你面对那些不喜欢你的人的时候，你会想到：哦，原来是他不喜欢他自己，与我无关。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content" style="height: 16px; line-height: 16px; font-size: 16px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle3.png); display: inline-block; width: 16px; height: 16px; background-size: 100%; background-position: left bottom; background-repeat: no-repeat; width: 16px; height: 15px; line-height: 15px; margin-right: 6px; margin-bottom: -2px;"></span>4. 10个愿望</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">钱钱对吉娅说：<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">请你在明天之前想出10个你想变得富有的原因，也就是你的10个愿望，然后用笔写下来。明天下午6点钟，我们一起去树林里散步。但前提条件是，你自己必须真的有‘想要变得富有’这个愿望，所以你必须找到10个‘想要变得富有’的理由</code>。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">文中这段对话，是深有感触，并且在第一次看到这里的时候(约两三年前)，我还努力去想了一下，现在是半个都记不起来了。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">钱钱之所以让吉娅想10个愿望，是因为：<br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">大多数人并不清楚自己想要的是什么，他们只知道，自己想得到更多的东西。你可以把自己的生活想象成一家很大的邮购公司。如果你给一家邮购公司写信说‘请给我寄一些好东西来’，你肯定什么都得不到。我们的愿望也是一样。我们必须确切地知道自己心里渴望的是什么才行。</code></p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">之后，吉娅用了足足三个小时写下了10个愿望，当然除了提高英语水平这一项外，其它9项有钱即可轻松办到。<br>最后，狗钱钱让吉娅选择了最重要的三个去实现。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content" style="height: 16px; line-height: 16px; font-size: 16px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle3.png); display: inline-block; width: 16px; height: 16px; background-size: 100%; background-position: left bottom; background-repeat: no-repeat; width: 16px; height: 15px; line-height: 15px; margin-right: 6px; margin-bottom: -2px;"></span>5.清单愿望实现</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">接着，狗钱钱对于如何实现愿望，给了一个较清晰的方法：</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">从现在开始，你必须每天都把这张写着自己的愿望的单子从头到尾看一遍，它会不断地提醒你自己想得到什么，那么你就会密切关注一切可以帮助你实现这些愿望的机遇了.</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">通过做3件事，可轻易改变对此想法是否有效的质疑。</code><ul style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: square;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">第一，拿一本相册作为你的梦想相册。收集一些与自己的愿望有关的照片，把它们贴在相册里。要通过图片来思考。</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">第二，通过视觉化的行为，不停地想象着自己实现了理想时的情形</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">第三，梦想储蓄罐，随便拿一个罐子，然后在这个罐子上写上你的梦想，把它作为你的储蓄罐。你要为自己的每一个梦想各准备一个储蓄罐。一旦储蓄罐准备好，就应当把省下的每一分钱放进去</code></section></li></ul></section></li></ul><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content" style="height: 16px; line-height: 16px; font-size: 16px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle3.png); display: inline-block; width: 16px; height: 16px; background-size: 100%; background-position: left bottom; background-repeat: no-repeat; width: 16px; height: 15px; line-height: 15px; margin-right: 6px; margin-bottom: -2px;"></span>6.自信心的树立</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">狗钱钱说，<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">自信是很容易树立的。你想知道应该怎样做吗？</code></p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">你去准备一个本子，给它取名叫‘成功日记’，然后把所有做成功的事情记录进去。你最好每天都做这件事，每次都写至少5条你的个人成果，任何小事都可以。开始的时候也许你觉得不太容易，可能会问自己，这件或那件事情是否真的可以算作成果。在这种情况下，你的回答应该是肯定的。过于自信比不够自信要好得多。</code></p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">吉娅在狗钱钱的引导下，庄严的宣誓：<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">我要从现在开始，每天记录我的成功，并不间断地设想我的未来，我发誓。</code></p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">吉娅在之后的成功日记中，不但开始准时记录，而且慢慢开始将成功的原因也记录了下来。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content" style="height: 16px; line-height: 16px; font-size: 16px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle3.png); display: inline-block; width: 16px; height: 16px; background-size: 100%; background-position: left bottom; background-repeat: no-repeat; width: 16px; height: 15px; line-height: 15px; margin-right: 6px; margin-bottom: -2px;"></span>7. 72法则</span><span class="suffix" style="display: none;"></span></h4><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">当你决定做一件事情的时候，你必须在72小时之内完成，否则你很可能永远不会再做了</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">用72除以你们投资的年利润百分比，得出的数字就是这笔钱翻一倍所要的年数。</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">按72除以3%的通货膨胀率计算，得到24，就是说24年以后，你的钱只值现在的一半。</code></section></li></ul><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>小感</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">先说十个愿望。<br>开始的时候，基于现实这个情况，或许是对于当下的状态来说还比较满足，竟一个也没想到。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">再然后变成人生长河的临时清单，却显得格局狠小，于是直接放开想象力去梦，敞开了怀的去想：</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">如果有100亿就算作一个愿望，有了这100个亿、别墅豪车旅游这些鸡毛蒜皮的小事那么就不能在清单上了，还有9个愿望一定就是金钱所不能买到的。<br>绞尽脑汁的想了近俩小时，列出来八个：</p><ol data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; list-style-type: decimal; font-size: 15px; color: #595959;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">家庭：其乐融融、父慈子孝。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">健康：雄赳赳、气昂昂。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">朋友：一生大笑能几回，斗酒相逢须醉倒。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">英语：谈笑风生。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">帮助1000个人实现他们的愿望</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">成立公司：为全人类作出卓越的贡献</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">根据阅历、想法、经验等写一部属于自己的作品。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">100 亿 dollar。</section></li></ol><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">写到上面第七个的时候，我竟然去Google 有什么是钱买不到的。搜索出来的结果和我想到的大同小异。<br>那这上面我冥思苦想的想法究竟是不是我的？疑惑了。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">有了做梦的机会，都没好好的把握。<br>一方面是，这么记录10个愿望有点文不对题，没有满足狗钱钱的前提条件：<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">必须真的有‘想要变得富有’这个愿望</code>。<br>另一方面，比较偏向如狗钱钱说的那样：<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">大多数人并不清楚自己想要的是什么</code>。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">务实一点的，结合<a href="https://blog.liugezhou.online/202252-No89/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">每周小结(*89):立个Flag<span style="width: 1em;"></span></a>的一部分，重新调整一下2023年的十大目标：</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">入职新东家</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">竹白每周小结52期，获得订阅者100 +</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">Running ，500KM +</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">读书笔记 ，10 +</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">英语扇贝打卡 280d +</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">开源项目 2+</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">旅游城市 3+</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">Drinking 3+</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">发推文 365+</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">不保证质量的视频创作 12+</section></li></ul><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">在初步制定十个愿望之后，根据书中提示，接下来要做的是：</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">必须每天都把这张写着自己的愿望的单子从头到尾看一遍</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">相册或者张贴海报、放在显眼的位置</section></li></ul><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">最终打印了一个极简的文字输出，贴在了我的桌面。<img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/2023Goals.png" alt="2023Goals" style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></p></section>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*90):回到最开始的样子</title>
      <link href="/202301-No90/"/>
      <url>/202301-No90/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90.png" alt="" style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"><figcaption style="margin-top: 5px; text-align: center; display: block; font-size: 13px; color: #2b2b2b;"><span style="background-image: url(https://img.alicdn.com/tfs/TB1Yycwyrj1gK0jSZFuXXcrHpXa-32-32.png); display: inline-block; width: 18px; height: 18px; background-size: 18px; background-repeat: no-repeat; background-position: center; margin-right: 5px; margin-bottom: -5px;"></span>题图</figcaption></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周是 2023 年的第<strong style="color: #3594F7; font-weight: bold;"><span>「</span>01 周<span>」</span></strong>(01.02-01.08).这里记录过去一周，我的一些记录。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">内容包含：本周主题、关注&工具、一周图片、文摘、编码相关、本周小结六个部分。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">每周日晚发布，首更自<a href="https://blog.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>我的博客<span>」</span></strong><span style="width: 1em;"></span></a>,同步至<a href="https://zhouzhou.zhubai.love/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>竹白<span>」</span></strong><span style="width: 1em;"></span></a>、公众号 <a href="https://day.liugezhou.online/official.png" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>Wakaka<span>」</span></strong><span style="width: 1em;"></span></a>。<span style="display:block;text-align:right;color:blue;">No.*90</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周主题:回到最开始的样子</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">不知道其它的周报写作者是一个什么状态。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">对于最近的我来说，</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">一会看到一个工具想简单记录一下，找到赞美它的点。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">一会看到一本书，还没开始读，就已经在想写心得了。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">一会看到一个开源项目，赞叹它的优雅之外，又想自己折腾一番介绍使用、部署为己所用。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">一会看到一句鸡汤，又想记录下来准备meditation一下。</section></li></ul><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">倘若我做的头头是道也就不会在这逼逼咧咧，由于todolist太多，造成的结果是都想做、都不理想。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">我回想最开始写周报的样子：<br>开始的时候遇到一些好玩的工具、新闻、文摘、图片后觉得很赞，而我又不太善于基于社交的分享(多数的人或许也有同样的问题吧)，可人需要社交，这就造成我势必会想找个人说道说道。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">信息流爆炸，这个工具还没赞美出去，那边又来了另一个冲刷大脑的八卦。<br>久而久之，有太多的东西、想法需要去输出了，当初感觉哪怕有个小黄鸭，我也要说一遍，不然这个信息似乎就是没有消化。<br>这一个一个转移注意力的网页让人应接不暇，稍纵即逝，最后想到最能够沉淀的方式就是记录。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">最开始的定位就是写给自己看，记录备份好玩的东西算是一个 个人信息字典，也就几乎不考虑内容的质量、关注、阅读量等等了。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">后来慢慢收到了一丁点的关注后，即使知道最忠实的读者还是自己，也还是发生了一丝变化：<br>现在对于文章在各个平台的访问量、关注数、留言等，相比文章本身而言更加分神，也就有了开头提到的一会这个，一会那个。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>记录更应该的是忠于自己，而不是娱乐别人<span>」</span></strong>，一篇文章的记录若是脱离了真挚的想法输出，为什么而什么，他是没有灵魂的，他应该回归他本来的样子。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一些事情最开始决定的时候往往就是开始的样子了，对于我来说，比如：</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">大学刚入学发放的银行卡初始密码，后来成为了所有的密码项</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">对于一瞬间随便想到的昵称，后来就成为了所有社交平台的昵称。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">对于曾经碎碎念念的一些小事，过去了好多年还是在那几个方面叨逼叨</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">对于开始随机拟定的一个想法，慢慢也就成为了后来的输出原则</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">对于新的想法，你以为你是在寻找他，其实一直在深化他，辅佐证明他，不可改变</section></li></ul><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">回归到他最开始的样子，然后直接探索到要达到的样子，是什么，就随它去吧。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">关注&amp;工具</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>🔥 豆瓣2022年度读书榜单</span><span class="suffix" style="display: none;"></span></h3><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_01.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">关于豆瓣2022榜单内书籍，整理好的阿里云盘资源：<br><a href="https://www.aliyundrive.com/s/CndNL5q4h3e" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">https://www.aliyundrive.com/s/CndNL5q4h3e<span style="width: 1em;"></span></a></p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>37%法则</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">"37%法则"的意思就是，寻找阶段进行到37%就要停止。</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">相亲时，假定有10个相亲对象，那么前3～4个可以作为寻找阶段，后面只要遇到一个比前面更好的人，就可以同意了。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">租房时，假定有一个月的找房子时间，那么30天的37﹪也就是11天。在找了11天之后，你就要出手了。只要发现比先前更令人心动的房子，就不要犹豫，马上租下来。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">读书时，假定这本书有100页，如果读了37页，还没有发现感兴趣的内容，那就可以放弃了。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">一个10集的电视剧，第4集是最佳弃剧时间。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">一个10分钟的视频，看了3分42秒，如果还是觉得不好看，就可以关掉了。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">一个年轻人想在18岁到24岁，一共7年时间里找到人生方向，确定未来想做什么。那么，他有2.59年（7 * 0.37）的时间自由尝试。也就是说，到了大三下学期就应该初步定下自己的方向，后面除非遇到更有吸引力的事情，否则就不应该转换事业方向。<span style="display:block;text-align:right;color:blue;">阮一峰的网络日志·238期</span></section></li></ul><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://weread.qnmlgb.tech/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">微信读书组队<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">微信读书用户组队的工具。<br>打开网址后显示如下，页面非常简洁。<br>可以加入组队无限卡抽奖、联名卡、翻一番，还可以输入自己的vid一键组队。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_02.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">对于爱读书的朋友，更推荐下面的开源项目去搜书、下载，然后通过网页端导入到微信读书。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://lib.zuyang.wtf/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">zlib searcher<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">基于开源项目<a href="https://github.com/book-searcher-org/book-searcher" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">book-searcher<span style="width: 1em;"></span></a>部署的zlib搜书网站。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_03.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://rxresu.me/zh" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">免费的开源简历生成器<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_04.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;">Github上star数超过10K。<br><a href="https://github.com/AmruthPillai/Reactive-Resume" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">源码<span style="width: 1em;"></span></a></p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://he3.app/zh/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">He3<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">He3:开发者必备的万能工具箱。<br>各种工具实在太多了，想用的时候根本找不到，于是这个工具很温馨的加入两个快捷键<br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">option + space</code>快速打开和<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">command + k</code>快速检索。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_05.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://linktree.cn/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">Linktree<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一个链接，分享你的全部。<br>通过简单的几步，快速搭建一个精美的专属页面，聚合所有链接。<br>和周报之前提到的 <a href="https://mo.run/liugezhou/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">mo.run<span style="width: 1em;"></span></a>是同一类型的工具。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_06.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://github-contributions.vercel.app/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">GitHub Chart:贡献图表生成器<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Github贡献图表生成器，有多种主题样式可供选择。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_07.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://dto.pipecraft.net/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">DTO (Dev Topics Only) 社区<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">DTO 是一个只讨论技术话题的程序员社区。<br>它是一个类似 <a href="https://news.ycombinator.com/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">Hacker News<span style="width: 1em;"></span></a>, <a href="https://lobste.rs/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">Lobsters<span style="width: 1em;"></span></a> 的链接分享社区，在这里只可以分享与程序开发相关的链接与内容。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_08.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">DTO 100% 采用邀请制。<a href="https://github.com/dev-topics-only/lobsters/issues/1" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">申请成为DTO会员的方式<span style="width: 1em;"></span></a></p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">一周图片</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_09.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_10.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_11.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_12.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_13.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_14.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_15.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_16.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_17.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_18.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_19.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_20.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; line-height: 26px; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">文摘</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">乐观地设想、悲观地计划、坚定地执行。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">人生，最忌讳的是用力过猛，却半途而废.</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">让你陷入麻烦的，不是你不知道的事，而是你自以为知道、其实错误的事。——马克·吐温</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">人不是活一辈子，不是活几年、几个月、几天，而是活一瞬间。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">事实上，每个人的朋友都有限，假若你觉得你的朋友非常多，那一定是你对朋友的定义出了错。<span style="display:block;text-align:right;color:blue;">躲猫猫3.0</span></p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">人不怕穷  只怕比。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">没有空间的变迁就无法刺激新的记忆产生，没有新的记忆也就没有“活过”的感觉。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">编码相关</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://aicodehelper.com/utm_source=blog.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">AICodeHelper<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">AICodeHelper是一款AI编程助手，旨在帮助程序员提高他们的编码技能。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">类似于ChatGPT，不过是只针对编码的，还不错的样子。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_21.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>前端 npm 包投毒事件</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">vue 官方转发推文</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_22.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一个名为 <code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">chalk-next</code> 复刻 <code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">chalk</code> 的包文件中包含递归删除本地配置代码。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">该作者已被全网diss，被扒出项目买star、关闭issues、人肉信息等。<br>其开发的付费开源项目 <code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">vue-admin-beautiful</code>现已改名<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">vue-admin-better </code>。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://www.v2ex.com/t/906834?p=1" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">V 站帖子<span style="width: 1em;"></span></a>上关于此事件的总结：</p><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">这个 作者自己建的一些诸如"chalk-next"的库是用来检测授权的，作者在自己的收费项目里引用这个包，引用后会上报密钥信息，如果是没花钱就使用的话会被这个包检测出来然后报复姓删除文件。简单来说就是个报复后门。结果由于起名太过敏感，"-next"一般用于大版本更新，于是有好心人（个人认为提 PR 的可能只是路人，跟作者无关）出于更新包的目的在其他开源项目中提 PR 更新包，也就出现了这次的“投毒”事件。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="http://bluebiu.com/blog/linux-ssh-session-alive.html" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">Linux使用ssh超时断开链接的原因<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Linux使用ssh登录的时候，几分钟不操作，链接就会自动断开，这篇文章详细分析了断开的原因。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">首先抛出了两个问题：<br>问题一：<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">ssh默认是多久时间，会自动断开连接？</code> (一般无设置情况下为三分钟)<br>问题二：<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">为什么ssh会断开连接？</code></p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">问题可能出现在一下这几个部分 ：</p><ol data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; list-style-type: decimal; font-size: 15px; color: #595959;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">服务器存在防火墙，会关闭超时空闲连接，或设置了关闭超时空闲连接。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">客服端和服务器之间存在路由器，路由器也可能带有防火墙，会关闭超时空闲连接。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">客服端存在防火墙，会关闭超时空闲连接。</section></li></ol><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>结论<span>」</span></strong><br>通过ssh连接后，客户端和服务端长时间没响应时，在两方机器设置中均没任何限制，但在各自的防火墙，或是中转网络连接路由的防火墙中，出现了「闲置超时断开」的缺省机制！</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>修改服务端配置<span>」</span></strong></p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">vim /etc/ssh/sshd_config</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">TCPKeepAlive yes</code> :表示TCP保持连接不断开</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">ClientAliveInterval 60</code>:指定服务端向客户端请求消息的时间间隔</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">ClientAliveCountMax 3</code>:服务端发出请求后客户端无响应则自动断开的最大次数</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">systemctl restart sshd</code>:重启</section></li></ul><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://github.com/book-searcher-org/book-searcher" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">book-searcher<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">上文提到的book-searcher的zlib图书下载项目。<br>在通过Github说明文档进行Docker部署的步骤：</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue90_23.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">但是我进行了多次，每次启动后的状态都是<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">Restarting (101) XX seconds ago</code>。<br>提了个issue，很是尴尬😅，作者回复描述不清，目前暂未部署成功。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://www.jianshu.com/p/9c2d6db2f855" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: 700; border-bottom: 1px solid #3BAAFA;">HEXO生成站点地图<span style="width: 1em;"></span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">通过<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">site:liugezhou.online</code>的方式可分别在谷歌和百度浏览器中搜索、查看是否被搜索引擎收录。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">如果没有收录，针对HEXO搭建的博客，创建站点地图文件的方式，直接安装依赖后 generate 即可。</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_code.jpg ); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; letter-spacing: 0px; padding-top: 15px; background: #282c34; border-radius: 5px;"><span class="hljs-string" style="color: #98c379; line-height: 26px;">npm</span>&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">install</span>&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">hexo-generator-sitemap</span>&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">--save</span><br><span class="hljs-string" style="color: #98c379; line-height: 26px;">npm</span>&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">install</span>&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">hexo-generator-baidu-sitemap</span>&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">--save</span><br></code></pre><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周小结</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">本周是2023年的第一周，这一周多数时间是在刷推、看剧、玩游戏中度过。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">英语单词打卡由原先的百词斩换成了扇贝。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">在读书籍：《毫无意义的工作》。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">思考本年度每周小结的实现方式。</section></li></ul><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*89):立个Flag</title>
      <link href="/202252-No89/"/>
      <url>/202252-No89/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue89.png" alt="" style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"><figcaption style="margin-top: 5px; text-align: center; display: block; font-size: 13px; color: #2b2b2b;"><span style="background-image: url(https://img.alicdn.com/tfs/TB1Yycwyrj1gK0jSZFuXXcrHpXa-32-32.png); display: inline-block; width: 18px; height: 18px; background-size: 18px; background-repeat: no-repeat; background-position: center; margin-right: 5px; margin-bottom: -5px;"></span>Flag</figcaption></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周是 2022 年的第<strong style="color: #3594F7; font-weight: bold;"><span>「</span>52 周<span>」</span></strong>(12.26-12.31).这里记录过去一周，我的一些记录。<br><!--more-->每周日晚发布，文章同步至公众号 <a href="https://day.liugezhou.online/official.png" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>Wakaka<span>」</span></strong><span style="width: 1em;">🔗</span></a>。<span style="display:block;text-align:right;color:blue;">No.*89</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://files.mdnice.com/fullstack-1.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周主题: 立个Flag</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">很多人想象回到过去时，他们担心做了一点小事，就会改变现在。</code><br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">但没有人意识到，如果我们现在做一些小事，没准能够改变未来。</code><span style="display:block;text-align:right;color:green;">题个记</span></p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周没有关注、工具、图片、文摘和编码相关。<br>2022年的最后一周、最后一天、最后一期，本来的设想是好好规划一下新的一年，充分享受规划过程--体验权当实现了的心灵愉悦。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">不料，Wakaka<br>最后一个工作日的前一个工作日，在被突然告知的裁员名单上、赫赫有名。<br>说不上多么悲伤，但确实影响了一小份心情，它是真实存在的。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">裁员带给个人影响心情的原因，无外乎猝不及防的通知，使得尘埃落定的结果没有落定，而是直接摔下，缺少一份人文关怀；<br>社畜的头衔突然被摘下，去找寻新东家的过程由开始的主动转为了结果的被动。<br>心理建设会在 开始由暂时的兴奋 转为暂时的失落，接着回归正常。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">在经历了第一天、第二天的兴奋后，2022年的最后一天的夜晚迎来一丢丢失落。<br>当我立下新年的Flag，也就回归了正常，并且更加充满力量。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>Flag</span><span class="suffix" style="display: none;"></span></h3><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content" style="height: 16px; line-height: 16px; font-size: 16px;"><span style="background-image: url(https://files.mdnice.com/fullstack-3.png); display: inline-block; width: 16px; height: 16px; background-size: 100%; background-position: left bottom; background-repeat: no-repeat; width: 16px; height: 15px; line-height: 15px; margin-right: 6px; margin-bottom: -2px;"></span>竹白</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">在经历了一年的<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">每周小结</code>的文章摸索后，2023年开始将文章同步至竹白。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一方面是觉得持续输出很有必要，而更重要的是，可能是因为这句鸡汤：</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">培养平静而不张扬的坚持，培养敢于自我推销的心态。</code></p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">52期每周小结。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content" style="height: 16px; line-height: 16px; font-size: 16px;"><span style="background-image: url(https://files.mdnice.com/fullstack-3.png); display: inline-block; width: 16px; height: 16px; background-size: 100%; background-position: left bottom; background-repeat: no-repeat; width: 16px; height: 15px; line-height: 15px; margin-right: 6px; margin-bottom: -2px;"></span>Running</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">跑步的Flag，没有一年做成，但每年还是要立的。<br>人最重要的两件事是身体健康和心情舒畅。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">跑步有益身心健康，立Flag有益心情舒畅。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">2023年，跑步500KM，我又来了。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content" style="height: 16px; line-height: 16px; font-size: 16px;"><span style="background-image: url(https://files.mdnice.com/fullstack-3.png); display: inline-block; width: 16px; height: 16px; background-size: 100%; background-position: left bottom; background-repeat: no-repeat; width: 16px; height: 15px; line-height: 15px; margin-right: 6px; margin-bottom: -2px;"></span>读书</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">作为韭菜，我们其实没有自己的想法、没有自己的三观，更没有自己的抒发和表达。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">对万物的认识，通过宣传、通过教育、通过电影、通过视频、通过书籍等。最后经由我们的大脑思考、拼凑，于是就成为了我们认为的、我们自己的想法、我们自己的三观和我们自己的表达。<br>当然不免充满偏见、以偏概全、思考不完善、陷入思想陷阱。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">还是读书吧。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">2023年，写10本读书笔记，汲取精华，思考到底读了个啥。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content" style="height: 16px; line-height: 16px; font-size: 16px;"><span style="background-image: url(https://files.mdnice.com/fullstack-3.png); display: inline-block; width: 16px; height: 16px; background-size: 100%; background-position: left bottom; background-repeat: no-repeat; width: 16px; height: 15px; line-height: 15px; margin-right: 6px; margin-bottom: -2px;"></span>英语</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">百词斩的单词打卡，累计七百多天了，单词记住没有并不晓得。<br>好的一方面是在读一些英文文章的时候，没有那么排斥了。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">新的一年除了单词的日常消遣外，有意识的培养英文的阅读。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">2023年，单词打卡280天 + ，英文文章精度、翻译10篇+。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content" style="height: 16px; line-height: 16px; font-size: 16px;"><span style="background-image: url(https://files.mdnice.com/fullstack-3.png); display: inline-block; width: 16px; height: 16px; background-size: 100%; background-position: left bottom; background-repeat: no-repeat; width: 16px; height: 15px; line-height: 15px; margin-right: 6px; margin-bottom: -2px;"></span>Github</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">最近一年，才愈发感觉到Github的魅力。<br>新的一年，争取探索5+ 开源项目。<br>想好好搞一下的目前有两个：</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">今日前端</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">Github网站说明书</section></li></ul><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content" style="height: 16px; line-height: 16px; font-size: 16px;"><span style="background-image: url(https://files.mdnice.com/fullstack-3.png); display: inline-block; width: 16px; height: 16px; background-size: 100%; background-position: left bottom; background-repeat: no-repeat; width: 16px; height: 15px; line-height: 15px; margin-right: 6px; margin-bottom: -2px;"></span>视频</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">纵然我有做视频的理想，但是缺少做视频的才华。<br>2023年，探索新鲜好玩的事，尝试做做视频。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content" style="height: 16px; line-height: 16px; font-size: 16px;"><span style="background-image: url(https://files.mdnice.com/fullstack-3.png); display: inline-block; width: 16px; height: 16px; background-size: 100%; background-position: left bottom; background-repeat: no-repeat; width: 16px; height: 15px; line-height: 15px; margin-right: 6px; margin-bottom: -2px;"></span>旅游</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">世界这么大，应该去看看。<br>2023年去6+个城市、或者去8个公园？要么转10个商场？<br>总之要看看。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content" style="height: 16px; line-height: 16px; font-size: 16px;"><span style="background-image: url(https://files.mdnice.com/fullstack-3.png); display: inline-block; width: 16px; height: 16px; background-size: 100%; background-position: left bottom; background-repeat: no-repeat; width: 16px; height: 15px; line-height: 15px; margin-right: 6px; margin-bottom: -2px;"></span>喝酒</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">霍，这个也要立个Flag吗？<br>2022年疫情肆虐，喝大酒的次数屈指可数。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">2023年，喝三次大酒，Wakaka。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content" style="height: 16px; line-height: 16px; font-size: 16px;"><span style="background-image: url(https://files.mdnice.com/fullstack-3.png); display: inline-block; width: 16px; height: 16px; background-size: 100%; background-position: left bottom; background-repeat: no-repeat; width: 16px; height: 15px; line-height: 15px; margin-right: 6px; margin-bottom: -2px;"></span>新年祝福</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">2023年<br>愿中国尽快恢复元气<br>各个公司蒸蒸日上<br>老板有钱赚<br>员工有钱花<br>人人尽职尽责<br>人民安居乐业<br>精神物质双丰收</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*88):年终小结</title>
      <link href="/202251-No88/"/>
      <url>/202251-No88/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88.png" alt="" style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"><figcaption style="margin-top: 5px; text-align: center; display: block; font-size: 13px; color: #2b2b2b;"><span style="background-image: url(https://img.alicdn.com/tfs/TB1Yycwyrj1gK0jSZFuXXcrHpXa-32-32.png); display: inline-block; width: 18px; height: 18px; background-size: 18px; background-repeat: no-repeat; background-position: center; margin-right: 5px; margin-bottom: -5px;"></span>2022</figcaption></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周是 2022 年的第<strong style="color: #3594F7; font-weight: bold;"><span>「</span>51 周<span>」</span></strong>(12.19-12.25).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章同步至公众号 <a href="https://day.liugezhou.online/official.png" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>Wakaka<span>」</span></strong><span style="width: 1em;">🔗</span></a>。<span style="display:block;text-align:right;color:blue;">No.*88</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周主题:年终小结</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">不觉间，2022年就要过去。<br>随着一年的时间在我们已经历的年岁长河中，所占据的跨度越来越短，一年也就弹指🫰之间。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>这一年</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这一年，<br>一月，迎接新生命；<br>二月，冬季奥林匹克运动会开幕、女足夺得第20届亚足联女子亚洲杯冠军；<br>三月，俄乌战争充斥头条、港股步入金融海啸；<br>四月，上海之声；<br>五月，2023年亚足联亚洲杯异地举办；<br>六月，中国神舟十四号载人飞船发射、唐山暴力攻击事件；<br>七月，河南村镇银行取款难、安倍晋三遇刺身亡；<br>八月，佩洛西访台激民愤；<br>九月，涉疫隔离转运ke车～侧翻事故；<br>十月，新班子走马、上任。<br>十一月，凡凡压火、卡塔尔世界杯拉开帷幕。<br>十二月，ChatGPT、新十条、通行码下线、羊羊羊。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这一年，每周小结伴我左右；<br>这一年，疫情肆虐，政策变化此起彼伏。<br>这一年，科技发展，实验室里热火朝天。<br>这一年，大脑清空，顺势而为。<br>这一年，明星娱乐不再占据头条。<br>这一年，没有新上映的中国电影。<br>这一年，皆在自保中闷声。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">过去的一年，我都做了什么？留下些什么？翻看一下记录，总结一波，又是一个<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">胶带</code>。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>每周小结</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">从今年三月份开始，以<a href="https://blog.liugezhou.online/202210(3.7-3.13)/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">破局<span style="width: 1em;">🔗</span></a>为基点，开始了我新一轮的每周小结，截止到这一篇，无断更情况下，累计输出42篇。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_01.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">从最初的随便写写，到开始慢慢成为一种周末陶冶情操的活动，这件事带给个人的好处暂时也说不清，只是能够坚持下来觉得还挺欣慰的。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">做什么事情都有沉没成本，我想在写周报的同时，可能缺失了对技术某个方面的持续性深入研究、失去了周末把酒言欢的机会、失去了周末的更多可能性，可还好，看着一篇篇文章的产出，这种沉没成本可以承受。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">关于每周小结的写作过程是这样的：</p><ol data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; list-style-type: decimal; font-size: 15px; color: #595959;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">Github上新建了一个私密仓库，所有的md文档的原始内容备份于此。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">每周将看到的文章、工具、图片、鸡汤等内容、链接发送至微信对话框做素材收集。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">每个周末打开公众号排版工具<a href="https://www.mdnice.com/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">墨滴<span style="width: 1em;">🔗</span></a>，详细记录每一个素材，素材不够的情况下去刷推、看博客、Github等。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">文章图床在Github上新建仓库，通过<a href="https://picx.xpoet.cn/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Picx<span style="width: 1em;">🔗</span></a>工具上传。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">将写好的文章首先同步至博客，然后同步在公众号发布。</section></li></ol><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>百词斩</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">由于上班通勤时间很长，地铁背单词便成了上班通勤的最合适消遣。<br>背单词的初衷也仅仅是习惯性的过一过，并没有什么特别的目标和压力，很是随意，自11月底开始居家办公，就搁置了。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_02.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>跑步</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">跑步这个事很是尴尬，之前Github上看到一个开源项目，集合跑步数据。<br>我在各个平台的数据导入后，当时摩拳擦掌，想要大展拳脚，年初的500KM目标又又又歇菜了，还是没有迈开步子😩。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_03.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_04.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>Github</span><span class="suffix" style="display: none;"></span></h3><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_05.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Github的代码提交，也还没有能力为开源项目奉献什么，多数的提交都是博客、日记、周报、图片、学习的demo项目等。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>上线网站</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">用自己的域名上线了几个小小网站：</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><a href="https://blog.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">blog.liugezhou.online<span style="width: 1em;">🔗</span></a></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><a href="https://day.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">day.liugezhou.online<span style="width: 1em;">🔗</span></a></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><a href="https://list.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">list.liugezhou.online<span style="width: 1em;">🔗</span></a></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><a href="https://run.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">run.liugezhou.online<span style="width: 1em;">🔗</span></a></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><a href="https://blog.liugezhou.online/password-generator" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">password-generator<span style="width: 1em;">🔗</span></a></section></li></ul><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>读书</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">总觉得读过的书，没有做读书笔记或者记录，就不算是读过了，没有吸收。<br>只写了三篇读书笔记：</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_06.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>朋友圈</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">看到推特上别人动不到就几万条推文，基于<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">记录生活点滴，留下美好回忆</code>的想法，我们在各种社交平台的记录都是为了个人生活、想法、风景、美食的历史记录。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">身处汹涌的互联网时代，没有记录总是会错漏回忆。老了刷刷自己的朋友圈回忆下历史，想想挺美的。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">在微信小号内，过去一年发了若干朋友圈瞬间、一百多张照片。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">我不只是在生活，还是在记录历史。</code></p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">关注&amp;工具</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://crossub.xiaowude.com/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">视频字幕工具<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">.srt 字幕文件 转 .ass、.txt、fcpxml、prxml。<br>.lrc 歌词文件 转 .srt、.ass、.txt、fcpxml、prxml。<br>使用波形图工具手动选取字幕时间线、同步文稿，跟踪替换、逐行校对、批量替换。云端同步保存。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_07.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://music.y444.cn/#/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">下歌吧<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">免登录音乐免费下载，支持歌词下载。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_08.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>该装就装</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">周一的时候，通过上面提到的视频字幕工具、下歌吧平台，将郝云的《该装就装》结合上周日录了一天的视频，非常简单粗暴的制作了一个视频。</p><iframe src="//player.bilibili.com/player.html?aid=518607248&amp;bvid=BV1me4y1K7Tf&amp;cid=919346838&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="500" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts" data-tool="mdnice编辑器"> </iframe><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://www.storytrain.info" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">在线短信接收<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">云短信是一个免费的在线接收验证码-接码平台（Free SMS Recieve），可以在线接收短信，接收短信验证码，显示迅速，每2天更新一次号码。<br>上面号码比较多，全球大部分国家的号码都有，而且支持chatgpt的接码，不过大部分号码都被使用到了最大次数。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_09.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本文来自: https://www.ahhhhfs.com/35324/</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>药品助理</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">无码科技出的一个<strong style="color: #3594F7; font-weight: bold;"><span>「</span>药品助理<span>」</span></strong>微信小程序：查明白，再用药。<br>在该账号主体下，可查看到所有的该账号相关小程序。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_10.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>iOS16.2</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">iPhone、iPad升级到16.2 版本后，系统预装的一款应用：无边记。<br>使用“无边记”App进行多人在线笔记处理，不仅可以看到所有用户的实时修改，还可以在软件内添加图片、视频、音频、PDF、文档在内，任意类型的文件，并实时进行预览，软件功能十分强大，非常适用于多人会议。<br>在 iPhone 上的 无边记 由于屏幕较小可能编辑不太方便，在 iPad 上则可以大放异彩。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_11.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://www.guoguofen.com/android/sjxw/170936.html" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">iOS16.2无边记功能介绍<span style="width: 1em;">🔗</span></a></p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://mp.weixin.qq.com/s/jcXhOmWSvpWe6iTW2WdjSg" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">把云盘变成本地硬盘<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">公众号<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">电脑DIY圈</code>介绍的一款可以使用云盘变成本地硬盘的工具，未亲测。<br>对于电脑内存吃紧的用户可以尝试一波。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_12.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://podcast.adobe.com/enhance" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">PodCast<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Adobe 公司推出的一个工具，用来增强语音效果，使得普通的录音变得像在专业录音室录制的。<br>测试了一把，非常的nice，做视频的配音录制，可以在此网站将配音增强了。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_13.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://www.an2.net/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">一份爱小工具<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">田字格字帖生成器系列工具，这个网站支持字帖生成、看拼音写汉字、算术口算题生成等，均可自己定制后打印，非常nice。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_14.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>微信键盘</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">腾讯在 2021 年 1 月份就说要做键盘。<br>直到今年 9 月初才开始进行测试，直到最近几天，微信键盘 1.0.0 正式版才终于面世，目前已经可以在各大应用商店下载。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">App Store 目前评分4.0(2398个评分)，低分评论主要为以下几点：<br>功能使用、<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">不谈隐私</code>、光标移动、兼容性不好等等。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_15.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">关于之前的各种输入法存在的各种问题，在网上扒拉了一个图：<img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_16.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">鉴于输入法被各种诟病，过度收集用户隐私，于是在下载微信键盘后，第一时间去看了一下用户隐私。<br>主要内容为：微信键盘分为<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">隐私保护模式</code>和<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">拼写Plus模式</code>。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">默认的隐私保护模式下，输入的内容<strong style="color: #3594F7; font-weight: bold;"><span>「</span>不会上传至腾讯服务器，仅在本地设备存储<span>」</span></strong>。<br>开启Plus模式，信息会被<strong style="color: #3594F7; font-weight: bold;"><span>「</span>上传至腾讯服务器<span>」</span></strong>，经过<strong style="color: #3594F7; font-weight: bold;"><span>「</span>实时处理<span>」</span></strong>，向用户返回对应的内容或服务，并且不会储存用户上传的信息。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">当然了，一旦输入法将内容上传至云端，那么必定会经过后台数据分析，有被用于营销、推广、构建用户画像等的风险，因此非常介意"隐私信息泄露"的，还是不要开启Plus权限为好吧。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">从隐私内容的文案来看，诚意满满，虽然腾讯的产品总被大家诟病，但在经过短短几分钟的体验后，算是最贴近iPhone原生体验的键盘，除了游标不习惯外，还是不错的，蹲后续吧。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>刚降温，不要洗澡</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">知名主持人涂磊，发布视频，由于降温后洗澡，引起多次发烧，善意提醒发烧降温后最好不要洗澡。<br>评论中，还有人说最好也不要洗头。。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">一周图片</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_17.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_18.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_19.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_20.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_21.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_22.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_23.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_24.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_25.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_26.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; line-height: 26px; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">文摘</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">对抗焦虑的唯一有效办法就是直面焦虑，搞定它。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">If you only see one solution to a problem, you do not understand the problem.</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">好几次，我都被工作搞得精疲力尽，了无生趣，觉得这辈子再也不能编程了。不过每一次，都是因为又接触到新东西，让我慢慢恢复，能够重新开始工作。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">编码相关</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://fouber.github.io/lottery/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">年会抽奖小工具<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">代码开源在 Github，年会抽奖的一个小工具，替换 member 中内容即可。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_27.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>Chrome 插件开发初体验</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>需求<span>」</span></strong>每次打开 CSDN 的时候，都是由于未登录不能进行代码的拷贝。<br>然后每次我都在控制台输入： <code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">document.body.contentEditable = true</code>。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">于是，为了解决不登录 CSDN 也可以直接 copy，且不需要每次控制台输入代码的方式，使用 Chrome 插件的方式。关于Chrome插件开发教程很多，这里记录一下我在解决不能代码拷贝情况下的过程：</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">新建一个项目 csdn-edit,进入项目新建文件：manifest.json</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_code.jpg ); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; letter-spacing: 0px; padding-top: 15px; background: #282c34; border-radius: 5px;">&nbsp;&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">&#123;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">"manifest_version"</span><span class="hljs-string" style="color: #98c379; line-height: 26px;">:2,</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="color: #d19a66; line-height: 26px;">"name":</span>&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">"Can&nbsp;Copy&nbsp;It"</span><span class="hljs-string" style="color: #98c379; line-height: 26px;">,</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">"version"</span><span class="hljs-string" style="color: #98c379; line-height: 26px;">:"1.0",</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">"description"</span><span class="hljs-string" style="color: #98c379; line-height: 26px;">:"解决CSDN非登录情况下，不可以复制的尴尬",</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">"icons"</span><span class="hljs-string" style="color: #98c379; line-height: 26px;">:&#123;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">"128"</span><span class="hljs-string" style="color: #98c379; line-height: 26px;">:"img/logo.png",</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">"48"</span><span class="hljs-string" style="color: #98c379; line-height: 26px;">:"img/logo.png",</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">"16"</span><span class="hljs-string" style="color: #98c379; line-height: 26px;">:"img/logo.png"</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">&#125;,</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">"browser_action"</span><span class="hljs-string" style="color: #98c379; line-height: 26px;">:&#123;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">"default_icon"</span><span class="hljs-string" style="color: #98c379; line-height: 26px;">:"img/logo.png"</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">&#125;,</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="color: #d19a66; line-height: 26px;">"content_scripts":</span>&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">[</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">&#123;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="color: #d19a66; line-height: 26px;">"matches":</span>&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">["https://blog.csdn.net/*"],</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="color: #d19a66; line-height: 26px;">"js":</span>&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">["script.js"]</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">&#125;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">]</span><br>&nbsp;&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">&#125;</span><br></code></pre><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">logo添加忽略，新建script.js：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_code.jpg ); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; letter-spacing: 0px; padding-top: 15px; background: #282c34; border-radius: 5px;"><span class="hljs-string" style="color: #98c379; line-height: 26px;">document.body.contentEditable</span>&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">=</span>&nbsp;<span class="hljs-literal" style="color: #56b6c2; line-height: 26px;">true</span><br></code></pre><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">然后在Chrome扩展程序中，加载已解压的扩展程序即可。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://github.com/liugezhou/csdn-edit" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Github代码托管<span style="width: 1em;">🔗</span></a><br>PS: 本来想将这一个小小的demo发不到Chrome上，5美元的注册费以及可能后续有什么问题，暂时打住了。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://twitter.com/haoel/status/1605424396176306176" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Github|Git SSH代理<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">左耳朵耗子</code>推特分享的关于Git SSH 速度过慢问题的配置。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue88_28.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://bt.ht/1kb/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">页面关闭 favicon 请求<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">让浏览器不发出 favicon 请求的方法：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_code.jpg ); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; letter-spacing: 0px; padding-top: 15px; background: #282c34; border-radius: 5px;">&lt;link&nbsp;rel=<span class="hljs-string" style="color: #98c379; line-height: 26px;">"icon"</span>&nbsp;href=<span class="hljs-string" style="color: #98c379; line-height: 26px;">"data:,"</span>&gt;<br></code></pre><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这行代码阻止了浏览器进行标准的favicon请求（通常是从favicon.ico中提取）。<br>通过添加这个元标签，可以告诉浏览器加载一个空的图像，而不运行另一个服务器请求。<br>本身节省了约400字节的带宽。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/picture" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">picture<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">MDN文档中关于<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">picture</code>标签的介绍。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">该标签通常包含零或多个<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">source</code>元素和<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">img</code>元素，来为不同的显示设备场景提图像版本。<br><a href="https://jfhr.me/optimizing-images-with-the-html-picture-tag/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Optimizing images with the HTML <picture> tag</picture><span style="width: 1em;">🔗</span></a> 这篇文章就是用来介绍 <code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">picture</code> 标签的使用。</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">对于包含图片过多的网站，可以使用HTTP2服务器推送优化。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">几乎每个浏览器都支持 <code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">PNG</code>、<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">JPEG</code>、<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">GIF</code>，但是新的格式<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">AVIF</code>、<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">WEBP</code>、<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">JPEG XL</code>通常更有效、在不牺牲图片质量前提下体积更小。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">使用<a href="https://imagemagick.org/index.php" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">image magic<span style="width: 1em;">🔗</span></a>转换图像格式。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">Safari目前不支持<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">AVIF</code>,<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">WebP</code>格式只在MacOS11+ 上工作。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">使用 picture标签的示例</section></li></ul><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_code.jpg ); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; letter-spacing: 0px; padding-top: 15px; background: #282c34; border-radius: 5px;">&lt;picture&gt;<br>&nbsp;&nbsp;&lt;<span class="hljs-built_in" style="color: #e6c07b; line-height: 26px;">source</span>&nbsp;srcset=<span class="hljs-string" style="color: #98c379; line-height: 26px;">"/demo.avif"</span>&nbsp;<span class="hljs-built_in" style="color: #e6c07b; line-height: 26px;">type</span>=<span class="hljs-string" style="color: #98c379; line-height: 26px;">"image/avif"</span>&gt;<br>&nbsp;&nbsp;&lt;<span class="hljs-built_in" style="color: #e6c07b; line-height: 26px;">source</span>&nbsp;srcset=<span class="hljs-string" style="color: #98c379; line-height: 26px;">"/demo.jxl"</span>&nbsp;<span class="hljs-built_in" style="color: #e6c07b; line-height: 26px;">type</span>=<span class="hljs-string" style="color: #98c379; line-height: 26px;">"image/jxl"</span>&gt;<br>&nbsp;&nbsp;&lt;img&nbsp;src=<span class="hljs-string" style="color: #98c379; line-height: 26px;">"/demo.jpeg"</span>&nbsp;alt=<span class="hljs-string" style="color: #98c379; line-height: 26px;">"Screenshot&nbsp;on&nbsp;iOS&nbsp;with&nbsp;selected&nbsp;text,&nbsp;showing&nbsp;a&nbsp;popup&nbsp;with&nbsp;options&nbsp;to&nbsp;make&nbsp;text&nbsp;Bold,&nbsp;Italic,&nbsp;or&nbsp;Underlined"</span>&nbsp;width=<span class="hljs-string" style="color: #98c379; line-height: 26px;">"375"</span>&nbsp;height=<span class="hljs-string" style="color: #98c379; line-height: 26px;">"153"</span>&nbsp;class=<span class="hljs-string" style="color: #98c379; line-height: 26px;">"border"</span>&gt;<br>&nbsp;&nbsp;&lt;/picture&gt;<br></code></pre><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">还可以通过判断 <code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">User-Agent</code> 头猜测浏览器使用哪种格式，从而获得一个很好的近似值。</section></li></ul><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周小结</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*87):新十条之后</title>
      <link href="/202250-No87/"/>
      <url>/202250-No87/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87.webp" alt="" style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"><figcaption style="margin-top: 5px; text-align: center; display: block; font-size: 13px; color: #2b2b2b;"><span style="background-image: url(https://img.alicdn.com/tfs/TB1Yycwyrj1gK0jSZFuXXcrHpXa-32-32.png); display: inline-block; width: 18px; height: 18px; background-size: 18px; background-repeat: no-repeat; background-position: center; margin-right: 5px; margin-bottom: -5px;"></span>Web3.0</figcaption></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周是2022年的第<strong style="color: #3594F7; font-weight: bold;"><span>「</span>50周<span>」</span></strong>(12.12-12.18).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章同步至公众号 <a href="https://day.liugezhou.online/official.png" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>Wakaka<span>」</span></strong><span style="width: 1em;">🔗</span></a>。<span style="display:block;text-align:right;color:blue;">No.*87</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周主题:新十条之后</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">2022年12月7日，"新十条"出台。<br>刚刚过去11天，彷佛发生在上一年。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">短短的10天左右时间，几乎人尽皆阳。<br>简单叨逼叨几句最近社交媒体上发生的一些事。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">"新十条"出台后，因为布洛芬的强烈需求，以新华制药为首的一系列上市公司股价大涨，从12月7号算起，粗略计算新华制药上涨了百分之五十多。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">"新十条"出台后，卡塔尔世界杯从四分之一决赛开始打到决赛。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">"新十条"出台前后，全民居家办公已近一个月。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">"新十条"出台后，通行码12月13日正式下线。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">"新十条"出台后，羊羊羊。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">"新十条"出台后，全民核酸在可见的环境下似要退出历史舞台。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">"新十条"出台后，《三体》B站上线了。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">"新十条"出台后，人民在经历阵痛之后，充满对未来的期待。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">新的开始，焕发青春，迎接元旦，祛除霉运，回归如常，如是过渡。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">关注&amp;工具</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://www.healthline.com/health/five-reasons-to-eat-spicy-foods" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">经常吃辣，延年益寿<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">经常吃辣，延年益寿，可将死亡率降低 14%，将死于心脏病或癌症的可能性分别降低 26% 和 23%。<br>辣椒会产生一种叫做辣椒素的物质，具有抗氧化、抗炎和抗菌的特性。<br>当然，食用富含辣椒素的食物也存在风险，包括刺激口腔、胃和肠道。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_01.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">MacFamilyTree 10<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">个人家族史的族谱家谱管理软件，$34.99 买断制，做的非常的全面，内容十分丰富，什么时候开源人员可以完美复刻呢。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_02.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://fffuel.co" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">fffuel<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">fffuel</code> 网站是一个颜色工具和免费 SVG 生成器的集合，用于渐变、图案、纹理、形状和背景。<br>网站本身的配色、设计十分生动，提供的各种工具、生成的图片也是十分漂亮。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">随机下载了几个：</p><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_03.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_04.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_05.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_06.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_07.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_08.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; line-height: 26px; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://chrome.google.com/webstore/detail/user-agent-switcher-for-c/djflhoibgkdhkhhcedjiklpkjnoahfmg?hl=zh-CN" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">User-Agent Switcher for Chrome<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">谷歌浏览器插件，它的作用是切换用户代理(user-Agent或者UA)，通俗说就是一些伪装、欺骗。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_09.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">浏览器的UserAgent是一个非常重要的属性，是浏览器的身份标识，UA中包含的很多信息比如：操作系统版本、浏览器内核等，通过变化浏览器的UA，就可以“假装身份”，实现很多的神奇用途，比如下面百度网盘不限速下载的实现。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>百度网盘不限速下载</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">虽然阿里云盘下载速度快，但是很多的分享还是基于百度网盘，本周由于Navicat损坏再次下载的时候，破解版只找到了百度网盘。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">百度网盘不限速分享：PanDownload网页复刻版，Github地址：https://github.com/yuantuo666/baiduwp-php。</p><ol data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; list-style-type: decimal; font-size: 15px; color: #595959;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">http://pan.10zv.com/ 输入分享链接，关注该页面提示公众号获取密码</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">获取下载链接成功</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">安装Chrome插件 :User-Agent Switcher for Chrome</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">根据网页提示，设置UA</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">设置完毕，亲测下载秒速。</section></li></ol><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_10.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>用支付宝给美区 iTunes 充值办法</span><span class="suffix" style="display: none;"></span></h3><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_11.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>世界杯决赛预测</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">今天晚上11点，阿根廷 VS 法国的决赛正式打响，盲猜法国。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">一周图片</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_12.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_13.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_14.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_15.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_16.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_17.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_18.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_19.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_20.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_21.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_22.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; line-height: 26px; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">文摘</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">A day without distractions is a very long day</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">如果年轻的时候，你只顾着享受生活，等你老了以后你就会发现——你做对了！</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">克制自己去纠正别人的欲望，成年人只能筛选不能教育。伴侣、朋友、合伙人，皆是如此。收起自己改造他人的执着，人教人教不会，事教人一次就够。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">Twenty years from now you will be more disappointed by the things that you didn't do than by the ones you did do. So throw off the bowlines. Sail away from the safe harbor. Catch the trade winds in your sails. Explore. Dream. Discover.</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">编码相关</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://github.com/usememos/memos" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">memos<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">An open-source,self-hosted memo hub with knowledge management and socialization.一个具有知识管理和社交功能的开源、<strong style="color: #3594F7; font-weight: bold;"><span>「</span>自我托管<span>」</span></strong>的备忘录中心，技术栈为 go + ts。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">基本仿照flomo定制，项目比较有意思可玩的在于数据自我托管、且提供Api-iOS版本、自定义CSS、账户设置等等。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">将玩转该项目的记录如下：</p><ol data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; list-style-type: decimal; font-size: 15px; color: #595959;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本地预览<br>本地安装docker的情况下，且docker处于启动状态，那么一行代码，则直接项目预览：<br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">docker run -d --name memos -p 5230:5230 -v ~/.memos/:/var/opt/memos neosmemo/memos:latest</code><br>数据库文件位于 <code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">~/.memos/memos_prod.db</code>下。这个时候 http://localhost:5230 即可预览。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">自我托管</p></section></li></ol><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">首先要有一台服务器，我在腾讯云领了一个体验一个月的服务器。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">服务器安装docker，同样执行上面的命令即可。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">这个时候公网ip:5230即可访问。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">为了适配移动App，需要加入https证书</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">我的域名服务在阿里云、申请了一个https免费证书，下载 nginx 版本备用</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">将腾讯云服务器上传证书到指定文件夹</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">然后添加 nginx + docker + ssl 配置文件(百度获得，修改地址)</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">接着docker pull nginx</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">最后使用 docker 启动 nginx 即可。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">访问链接： https://memos.liugezhou.online</section></li></ul><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/issue87_23.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; width: 100%;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://hellogithub.com/article/9aed28d4d64b4649bb364685ef557ae4" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Git 的奇技淫巧<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这个网站列举了常用的Git命令和一些小技巧：</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">抛弃本地的所有修改，回到远程仓库状态的快捷命令<br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">git fetch --all &amp;&amp; git reset --hard origin/master</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">重设第一个commit<br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">git update-ref -d HEAD</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">快速切换到上一个分支<br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">git checkou -</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">展示本地关联远程仓库的分支情况<br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">git branch -vv</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">只列出远程仓库的分支<br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">git branch -r</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">远程删除分支，本地也想删除<br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">git remote prune origin</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">重命名本地分支<br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">git branch -m new-branch-name</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">查看标签<br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">git tag</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">本地创建标签<br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">git tag version-number</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">推送标签到远程仓库<br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">git push origin vsersion-number</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">放弃所有修改<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">git checkout .</code></section></li></ul><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">.......</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>VSCODE插件-ChatGPT中文版</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">继上周提到的 wehchat-chatgpt之后，各种插件工具集成如雨春笋般应运而生。<br>Vscode出来一系列的ChatGPT插件，其中的中文版插件可以免费使用10次，其他的均需要已有账号配置。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">购买一个Google Voice越来越有必要了。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>仓库Archived</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周在整理个人Github仓库的过程中，发现很多的仓库扔在那里早已不再过问，也是应该有选择的删除和archived的了，顺带着简单总结一下一些仓库demo的主要内容，算是一个<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">胶带</code>了。</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://github.com/liugezhou/make-plugin" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">make plugin<span style="width: 1em;">🔗</span></a>:如何写一个webpack插件的代码示例：<br>本质是一个class，具有apply方法，apply方法的参数是compiler，通过compiler操作。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://github.com/liugezhou/I-Study-Vue" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">I-Study-Vue<span style="width: 1em;">🔗</span></a>:B站的尚硅谷的Vue课程。<br>这个仓库是当初用来学习尚硅谷的Vue课程，讲师的讲解非常的到位，可以二刷三刷。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://github.com/liugezhou/I-Study-React" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">I-Study-React<span style="width: 1em;">🔗</span></a>:B站的尚硅谷的React课程。<br>这个仓库是当初用来学习尚硅谷的React课程，和Vue是同一个讲师，非常的nice。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://github.com/liugezhou/koajs-demo" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">koajs-demo<span style="width: 1em;">🔗</span></a>:基于Node.js平台的下一代web开发框架<br>koajs学习完之后，并没有在生产环境中实践应用过。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://github.com/liugezhou/umi-component-test" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">umi-component-test<span style="width: 1em;">🔗</span></a>:umi<br>可扩展的企业级前端应用框架，在React用的还不熟练下，一个umi框架的初体验demo代码。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://github.com/liugezhou/vue-router-demo" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">vue-router-demo<span style="width: 1em;">🔗</span></a><br>vue-router 4.0.0源码调试demo代码,代码的readme写的不够友好，这个仓库的代码主要内容没有写出来，archived。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://github.com/liugezhou/mongodb-test" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">mongodb-test<span style="width: 1em;">🔗</span></a><br>本demo项目主要为mongodb的连接基本操作，以及使用mongoose操作mongodb。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://github.com/liugezhou/sequelize-test" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">sequelize-test<span style="width: 1em;">🔗</span></a><br>本deomo项目主要为sequlize操作mysql数据库基本操作，以及redis的简单配置操作。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://github.com/liugezhou/express-test" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">express-test<span style="width: 1em;">🔗</span></a><br>Express-generator是Express的应用生成器，通过使用生成器工具，可以快速创建一个Express的应用骨架。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://github.com/liugezhou/angular-heroes" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">angular-heroes<span style="width: 1em;">🔗</span></a><br>这个仓库demo代码是当初有angular项目需要维护时，对Angualr官方网站Hero-demo的一点学习，早已经忘干净了。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://github.com/liugezhou/github-actions-demo" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">github-actions-demo<span style="width: 1em;">🔗</span></a><br>这个仓库是在刚接触GitHub action的时候的记录，关于action的非常简单的demo，竟也使用gh-pages部署了一个项目。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://github.com/liugezhou/weather-action" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">weather-action<span style="width: 1em;">🔗</span></a><br>这个项目是在学习阮一峰定时发送天气预报的action代码项目的个人配置，每天将北京的天气情况发送到配置邮件，玩了两天也over了。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://github.com/liugezhou/make-loader" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">make-loader<span style="width: 1em;">🔗</span></a>:如何写一个loader的代码示例：<br>编写loader时，使用函数而不能使用箭头函数，因为在loader中取得的值多从this中取得</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://github.com/liugezhou/Mithril" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Mithril<span style="width: 1em;">🔗</span></a><br>Mithril中文文档翻译、学习，半吊子项目，开始了一丁点就结束了。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://github.com/liugezhou/typescript_webpack" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">typescript_webpack<span style="width: 1em;">🔗</span></a><br>TypeScript的webpack打包配置的小demo步骤。</p></section></li></ul><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">还有很多一些乱七八糟的demo，粗略的删掉了20个，今后要得认真对待每一个新建仓库了，也算是见证在Github上的不成熟过往了。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周小结</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">居家办公的一周，想念外面的美好时光。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">目前小羊人也还没找上门来，静静地等待他的光临。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">想去哪就去哪的美好就在眼前。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">2023年将至，新的一年，保持激情，享受生活，勤勤恳恳背单词，认认真真读书。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">写文章、拍视频、写代码、旅游、vlog、编故事、找热爱，搞起来。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*86):积极心态</title>
      <link href="/202249-No86/"/>
      <url>/202249-No86/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly86.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"><figcaption style="margin-top: 5px; text-align: center; display: block; font-size: 13px; color: #2b2b2b;"><span style="background-image: url(https://img.alicdn.com/tfs/TB1Yycwyrj1gK0jSZFuXXcrHpXa-32-32.png); display: inline-block; width: 18px; height: 18px; background-size: 18px; background-repeat: no-repeat; background-position: center; margin-right: 5px; margin-bottom: -5px;"></span>ChatGPT</figcaption></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周是2022年的第<strong style="color: #3594F7; font-weight: bold;"><span>「</span>49周<span>」</span></strong>(12.05-12.11).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章同步至公众号 <a href="https://day.liugezhou.online/official.png" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;"><strong style="color: #3594F7; font-weight: bold;"><span>「</span>Wakaka<span>」</span></strong><span style="width: 1em;">🔗</span></a>。<span style="display:block;text-align:right;color:blue;">No.*86</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周主题:积极心态</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">心态是一个人成长、成功与失败的关键因素，它能够影响我们的心情、态度与行为。<br>所以，积极心态狠是重要的，它能够让我们获得更多的乐趣、快乐与成功。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">积极心态的重要性，首先体现在阅读上。<br>阅读正能量、温馨的文章，能够给我们带来积极的心态，让我们看到人生的美好，感受到人间的温馨。<br>比如，阅读一篇感人至深的小说，能够让我们感受到爱的力量；<br>阅读一篇幽默风趣的故事，能够让我们抛开忧虑，释放心情，能够让我们获得快乐与愉悦。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">此外，积极心态还能够让我们与周围的人相处得更好。<br>正能量、温馨的文章能够给读的人带来心情的愉悦与感动，让我们的心与周围的人产生共鸣。  比如，我们与朋友聊天时，能够给对方带来安慰与鼓励；我们与同事相处时，能够给对方带来支持与鼓舞。所以，积极心态能够让我们与周围的人相处得更加融洽。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">然而，悲观一类的文章才是引起共鸣、吸引眼球的流量密码，除了增加局外人的愤怒、增加似乎拥有的家国情怀外、体现的不过是“徒有虚表”的那种满怀苍生般意淫的心灵拯救。<br>当看到过多的坏事情在身边徘徊，缺少了积极心态，就会把自己的幸福忽略掉，甚至产生悲观、消极情绪，得不偿失。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">so，请保持积极的心态。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">PS：以上部分为ChatGPT生成，人工补充生成。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">关注&amp;工具</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>ChatGPT</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">科技圈中，本周巨爆的大事件 非<strong style="color: #3594F7; font-weight: bold;"><span>「</span>ChatGPT<span>」</span></strong>不可了：一个人工智能聊天机器人程序。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">他的回答质量非常高，有人说现存的大学模式不复存在，有人说小说以后不再是人写了，有人说引发教育革命，有的人说他能替代普通雇员的时候不会很远了，也有的人说目前的ChatGPT只是一个不成熟的玩具，会带一些没有价值的日常聊天问题，有的人拿他写程序，有的人调教他打灰机，有的人代笔写小说，总之玩法是非常广泛。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">由于官方的站点需要使用国外的手机接收验证码，而且需要使用代理才能访问网站。<br>于是多数人，使用的是ChatGPT的反向代理站，无需注册直接开撩：<br><a href="https://gpt.chatapi.art/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">https://gpt.chatapi.art/<span style="width: 1em;">🔗</span></a></p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly86_01.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://github.com/wong2/chat-gpt-google-extension" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Google插件-搜索结果与Google并排显示<span style="width: 1em;">🔗</span></a><br><a href="https://m.okjike.com/originalPosts/638c6bb9c3f4e245defdec37?s=eyJ1IjoiNWZmYzA5YmZmOTUxNGYwMDE3YzQ2MGQ3IiwiZCI6NH0%3D" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">如何与ChatGPT进行有效对话的有趣案例<span style="width: 1em;">🔗</span></a><br><a href="https://codechina.org/2022/12/chatgpt-faq/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">ChatGPT常见问题解答【官方/非官方版】<span style="width: 1em;">🔗</span></a></p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://new.qq.com/rain/a/20221208A0191Z00" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">iCloud带来端到端加密<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">随着iOS 16.2和iPadOS 16.2的发布，本周周四(12月8日)的RC版本为其他iCloud功能带来了可选的<strong style="color: #3594F7; font-weight: bold;"><span>「</span>端到端加密服务<span>」</span></strong>，这一功能将向所有美国用户开放。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">针对‌iCloud‌的高级数据保护为‌iCloud‌备份、备忘录、照片、iCloud Drive等添加了端到端加密。启用高级数据保护后，端到端加密不包括的唯一‌iCloud‌类别包括‌iCloud‌邮件、联系人和日历。<img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly86_02.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>时刻助理</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一个时间管理小程序，大道至简、解决痛点。<br>推荐体验。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly86_03.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://amemei.github.io/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">小黄油游戏<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这个是十八禁的网页游戏，项目做的确实不错。<br>由于颜色较重，慎点。。。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly86_04.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://qwerty.kaiyi.cool/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Qwerty Learner<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">为键盘工作者设计的单词记忆与英语肌肉记忆锻炼软件。<br>页面UI很是舒适，英文单词的键盘输入、声音很是舒适。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly86_05.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"><span style="display:block;text-align:right;color:blue;"><a href="https://www.decohack.com/Post/1192" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">来源-5<span style="width: 1em;">🔗</span></a></span></p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://s.kongfandong.cn/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Howdz起始页<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这是一个开源的浏览器起始页。基于 Vite+Vue3+TypeScript 构建，预设了很多简洁的主题，能添加不同的组件，支持浏览器插件和网页两种使用方式。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">或许是目前遇到的最炫酷的浏览器起始页，组件的预设排版简洁、快速。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly86_06.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><span style="display:block;text-align:right;color:blue;"><a href="https://www.decohack.com/Post/1192" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">来源-Howdz<span style="width: 1em;">🔗</span></a></span></p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://weekly.ursb.me/posts/weekly-16/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">个人信息流分享<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">简单总计一下作者的这篇个人信息流的阅读记录流程。</p><ol data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; list-style-type: decimal; font-size: 15px; color: #595959;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">输入，即订阅的信息源。<br>作者通过订阅公众号推送、B站Up主、V2ex、少数派、掘金、豆瓣小组、知乎热榜、RSS、newsletter等，将所有数据统一输入到<strong style="color: #3594F7; font-weight: bold;"><span>「</span>inoreader<span>」</span></strong>上。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">采集，通过自动化初筛信息源。通过<strong style="color: #3594F7; font-weight: bold;"><span>「</span>inoreader<span>」</span></strong>的自定义规则监控，通过Webhook转发服务(inoreader需付费)。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">阅读文章并标注笔记使用 Reeder 或者 inoreader 阅读均可。<br>使用类Vim键快速阅读，标注划线即可。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">整理输出使用Logseq或者Obsidian定期同步标注笔记到本地笔记中，之后进行整理加工。</section></li></ol><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">PS:<strong style="color: #3594F7; font-weight: bold;"><span>「</span>inoreader<span>」</span></strong>的真是非常赞啊，对RSS等的强大支持，体验了一个小时就有忍不住购买会员的冲动。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="http://magicmockups.com/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Mockup<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一款 Mockup 生成工具。<br><strong style="color: #3594F7; font-weight: bold;"><span>「</span>上传图片<span>」</span></strong>或者<strong style="color: #3594F7; font-weight: bold;"><span>「</span>网址<span>」</span></strong>，可以生成真机展示图，并且可以下载不同尺寸的图片。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">上传该网址的网址最终生成的图片:</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly86_07.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">一周图片</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly86_08.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly86_09.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly86_10.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly86_11.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly86_12.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly86_13.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly86_14.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; line-height: 26px; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">文摘</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">众所周知，大家都闭嘴，问题就不会存在了。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">无论如何我们都处于一个伟大的时代，原因不为别的，而是因为AI已经突破图灵测试，未来的发展无法想象。从谷歌机器学习论文发布到现在，科幻小说里面的事情一件件蹦出成为现实。这明明是一个AI帝国的前夕，我们就别为人类旧时代的阴暗而太伤神了。    <span style="display:block;text-align:right;color:blue;">Michael Anti</span></p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">程序员分成两派，一派是"如果东西没有损坏，就不要去修它"，另一派是"尽早更新，并经常发布"。<br>我的想法是，即使"东西没有坏"，你仍然可以改进它。你的客户会喜欢这样，你的竞争对手不会。永远不要停止挑战自己。</p></blockquote></blockquote><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">编码相关</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>免费可用的ios苹果企业证书</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">ios苹果企业证书分享资源：<a href="https://abskoop.lanzoue.com/i8hgm0i7fjni" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">链接地址<span style="width: 1em;">🔗</span></a><br>或许有人可以用的到。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://github.com/fuergaosi233/wechat-chatgpt/blob/main/README_ZH.md" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">wechat-chatgpt<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">在微信上迅速接入ChatGPT，让它成为你最好的助手。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly86_15.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://halo.run/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Halo<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一款好用强大的开源建站工具，基于 Spring，最近发布了2.0版。<br><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly86_16.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">PS:就在最近发现很多的网站，特别是个人开发，免费开源类的，做的极其的优秀、UI舒适，每一个建站工具都让人忍不住去尝试。 想通过该建站工具新起一个项目写读书笔记，尝试了一下，感觉稍微有点重，还有数据库、Spring相关的内容，放弃了。。。。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://superset.apache.org/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Apache Superset<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一个数据探索和数据可视化工具，可以与各种数据源很好地集成，Gitub有将近五万的星。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly86_17.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">PS:刚看到这个图片的时候，还以为是类Echarts的前端表了。后来才知道这是数据库的可视化工具，跟之前周报提到的 <strong style="color: #3594F7; font-weight: bold;"><span>「</span>ClickHouse<span>」</span></strong>和 <strong style="color: #3594F7; font-weight: bold;"><span>「</span>Neo4j<span>」</span></strong>是一类的。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周小结</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">居家办公的一周，又可以联网了，顿时充满了激情。<br>周六的时候，录了一个视频，写周报的日常：</p><iframe src="//player.bilibili.com/player.html?aid=518607248&amp;bvid=BV19g411J7W2&amp;cid=919346838&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="500" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts" data-tool="mdnice编辑器"> </iframe><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*85):挂了</title>
      <link href="/202248-No85/"/>
      <url>/202248-No85/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly85.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"><figcaption style="margin-top: 5px; text-align: center; display: block; font-size: 13px; color: #2b2b2b;"><span style="background-image: url(https://img.alicdn.com/tfs/TB1Yycwyrj1gK0jSZFuXXcrHpXa-32-32.png); display: inline-block; width: 18px; height: 18px; background-size: 18px; background-repeat: no-repeat; background-position: center; margin-right: 5px; margin-bottom: -5px;"></span>内涵</figcaption></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周是2022年的第<strong style="color: #3594F7; font-weight: bold;"><span>「</span>48周<span>」</span></strong>(11.28.-12.04).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a href="https://blog.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">我的博客<span style="width: 1em;">🔗</span></a><br><span style="display:block;text-align:right;color:blue;">No.*85</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><h1 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 25px;"><span class="prefix" style="font-weight: bold; color: #40B8FA; display: none;"></span><span class="content" style="display: inline-block; font-weight: bold; color: #40B8FA;">本周主题:挂了</span><span class="suffix" style="display: inline-block; font-weight: bold; color: #40B8FA;"></span></h1><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">上周经历了互联网最严苛的平台审核之后，文发不出去，图在朋友圈被屏蔽，接着梯子亦挂亦跑了。<br>再者居家办公人数骤增，网速骤减，切断了在网上继续八卦的喜怒哀乐。<br>互联网再一次回归了他的寂寥。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">看不到网上的喧嚣、社会大事件也不能磕着瓜子第一时间亲临现场感同身受，有点小遗憾，但也顿时觉得世界清静了下来。<br>祥和袭来，有序恢复良好的和谐，早晨起来也不开始胡思乱想了。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">只不过Github也几乎连不上了，接触信息的渠道断崖式跌没了。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">当下亟需陶冶下情操，重整旗鼓，继续热爱生活，高呼：人间值得。</p><h1 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 25px;"><span class="prefix" style="font-weight: bold; color: #40B8FA; display: none;"></span><span class="content" style="display: inline-block; font-weight: bold; color: #40B8FA;">关注&amp;工具</span><span class="suffix" style="display: inline-block; font-weight: bold; color: #40B8FA;"></span></h1><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>不期而至</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">最近疫情肆虐，封控在家，刷到了这个电视剧。<br>这个电视剧啊真的是两星极不推荐。<br>一个五分钟就能讲的明明白白的剧情，愣是拍了三十八集，愣是全片漏洞。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">剧开始悬疑的配乐、镜头转场愣是把逼格拉到爆满，愣是在那各种刻意制造冲突，后面只能一笔带过。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>请回答1988</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">在挚爱的推荐下，打开这部豆瓣电视剧排名第一的韩剧。<br>对照着这部家庭青春温情剧去对应自己的感受，似乎可以体验到年龄大了没，心肠硬了没，感情粗鄙了没，还有没有小确幸的爱心，还有没有保持着青春的率真。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly85_01.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://www.zhubai.wiki/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">竹白百科<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">非官方版的竹白专栏收录网站，之前在其博客看到的工具，作者再次做了优化。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly85_02.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h1 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 25px;"><span class="prefix" style="font-weight: bold; color: #40B8FA; display: none;"></span><span class="content" style="display: inline-block; font-weight: bold; color: #40B8FA;">一周图片</span><span class="suffix" style="display: inline-block; font-weight: bold; color: #40B8FA;"></span></h1><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">无</p><h1 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 25px;"><span class="prefix" style="font-weight: bold; color: #40B8FA; display: none;"></span><span class="content" style="display: inline-block; font-weight: bold; color: #40B8FA;">文摘</span><span class="suffix" style="display: inline-block; font-weight: bold; color: #40B8FA;"></span></h1><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">那么多人去健身房，我一直想知道，他们健身释放的能量都去哪儿了？事实是，这些能量都没有利用起来，最终变成了热能，这真是人力的巨大浪费。<span style="display:block;text-align:right;color:blue;"> -- 《<a href="https://omattos.com/2022/06/19/gym-power.html" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">健身房能量<span style="width: 1em;">🔗</span></a>》</span></p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">平静而不张扬的坚持。培养敢于自我推销的心态。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">如果真心喜欢一个故事，还是要问自己，是否真正花时间了解了故事的全貌，是在乎故事的热度，还是在乎它和自己的心灵契合度。<span style="display:block;text-align:right;color:blue;">-- 事不过三</span></p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">把一个道理讲清楚是一件事，但是否能做到则是另一件事。<br>好的写作者，并不依赖于灵感，而是依赖系统和习惯。<span style="display:block;text-align:right;color:blue;">-- 事不过三</span></p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><h1 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 25px;"><span class="prefix" style="font-weight: bold; color: #40B8FA; display: none;"></span><span class="content" style="display: inline-block; font-weight: bold; color: #40B8FA;">本周小结</span><span class="suffix" style="display: inline-block; font-weight: bold; color: #40B8FA;"></span></h1><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">居家办公一个周。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*84):看今朝</title>
      <link href="/202247-No84/"/>
      <url>/202247-No84/</url>
      
        <content type="html"><![CDATA[<!-- <figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly84.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure> --><p>。。。</p><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px;  font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周是2022年的第<strong style="color: #3594F7; font-weight: bold;"><span>「</span>47周<span>」</span></strong>(11.21-11.27)。<br>这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a href="https://blog.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">我的博客<span style="width: 1em;">🔗</span></a><br><span style="display:block;text-align:right;color:blue;">No.*84</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周主题:看今朝</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周各个平台舆情汹涌，胡诌八扯一个糟。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">负面情绪太多怎么办？<br>跟着进去一起吵。<br>吵这方？骂那波？<br>么事么事<br>都无关紧要</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">勤思考，用大脑<br>梳理来龙去脉<br>整理事实观点<br>多读书，多看报<br>挂梯子，用力眺</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">哪里真，哪里假<br>辩证思维能知晓<br>哪里对 哪里错<br>眼瞅就要见分晓</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">要不想骂也很好<br>买瓜子，喝饮料<br>谁是谁非有公道<br>真有没有公道？<br>不知道<br>人心自在最美好</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">切莫指点说道德<br>这里夸，那里赞<br>里不熟，外不焦<br>有法可依就挺好</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">谁是熊 谁是英<br>千古已过无人晓<br>数风流人物<br>都在看今朝</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">挺好挺好！<br>行行行<br>就这样<br>发了 发了</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">关注&amp;工具</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://mp.weixin.qq.com/s/uz_6l7WgqYnBBe11-oPKhg" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">疫情期间吵架指南<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">法律先生</code>公众号发布的一篇博文，针对疫情期间如何进行吵架，帮助大家一'嘴'之力。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly84_01.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>路是通的</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周发生了自90年之后最大的一次舆情发酵，朋友圈沦陷，社会面呐喊。<br>娱乐圈灭火这一套这一次没有奏效。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly84_02.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://mp.weixin.qq.com/s/GCK6maAyBsD20WFJqcDENg" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">新冠周报<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">公众号<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">Hanson临床研究所</code>的新冠周报:<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">不得不直面新冠时，你准备好了吗？</code>。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="http://dollarstreet.org/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">dollar-street<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">瑞典国际卫生学教授<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">汉斯·罗斯林</code>写了一本书《事实》。<br>这本书推广的这个网站：在该网站上畅游世界，发现不同国家之间的不同和相似之处。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly84_03.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>微信日志</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://twitter.com/haoel/status/1572088563868782593" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">@Hao Chen<span style="width: 1em;">🔗</span></a> 在推特上的一篇分析 微信Mac客户端的日志在每分钟约100K的数据写入，写到本地文件夹且是加密的，如果要阻止写入，方法是：</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">进入微信日志目录：<br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">~/Library/Containers/com.tencent.xinWeChat/Data/Library/Caches/com.tencent.xinWeChat/2.0b4.0.9</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">执行以下命令</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">sudo chown root:wheel ./log</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">sudo chmod 400 ./log</section></li></ul><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>Finder模式</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Finder模式下，快捷键<br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">command + Shift + \</code><br>触发类似safari的 tab overview</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly84_04.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://www.canva.cn/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">canva.cn<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">个人开发者或者小企业，没有设计资源，怎么选择设计软件，自己动手搞定一些简单的插图和图片设计。我用过的平面设计软件里面，最好用的大概非 Canva 莫属。它有中文版 canva.cn，中文译名叫做"可画"。<span style="display:block;text-align:right;color:blue;">阮一峰的网络日志</span></p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly84_05.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">一周图片</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly84_06.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly84_07.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly84_08.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly84_09.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly84_10.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly84_11.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly84_12.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly84_13.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly84_14.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly84_15.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly84_16.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; line-height: 26px; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">文摘</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">和平年代，足球就是战争。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">勤劳根本不能致富<br>努力和回报，根本没有因果关系<br>盲目的努力，是在消耗生命<br>认知、资源、方法、选择，这些比努力都更重要<br><span style="display:block;text-align:right;color:blue;">张朝阳</span></p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">我做了几十年编码，我的职业生涯都被敏捷开发破坏了。没错，你始终是机器的一个齿轮，但敏捷开发让你每时每刻都感觉到这一点</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">如果你要说服其他人向你的项目投资，你应该先说服自己，为什么你愿意把时间和金钱投入这个项目，然后向其他人解释这一点，他们就会相信你。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">没有记录就没有发生，而记录本身已经是一种反抗。<span style="display:block;text-align:right;color:blue;"> 竹白·陆屿 </span></p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">编码相关</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://thetypingoftheregex.com/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Game-正则表达式<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">正则表达式游戏 – 这是个益智游戏，可以测试你写正则表达式的技能。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly84_17.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://github.com/studio-freight/lenis" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Lenis<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这是一个前端框架，用来做平滑滚动效果，那些很丝滑的网页动效看上去就很专业。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly84_18.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周小结</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*83):辩证眼光看审核</title>
      <link href="/202246-No83/"/>
      <url>/202246-No83/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly83.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px;  font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周是2022年的第<strong style="color: #3594F7; font-weight: bold;"><span>「</span>46周<span>」</span></strong>(11.14-11.20).</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这里记录过去一周，我的一些记录。<br>每周日晚发布，文章同步至公众号: <a href="https://cdn.statically.io/gh/liugezhou/image@master/common/Wakaka_.webp" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Wakaka<span style="width: 1em;">🔗</span></a>。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><span style="display:block;text-align:right;color:blue;">No.*83</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周主题: 辩证的眼光看审核</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">周三发了一篇简短的《邓小平时代》读后感，对于公众号审核能通过这件事是不报任何希望的，万万没想到一次审核通过。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一瞬间的小亢奋就像小学数学成绩拿了100分的感觉，手足舞蹈，那画质可真是贱啊。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">再之后在微信读书上看到朋友的想法有一条：<br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">当你怀疑这世界还会不会好的时候 可以看看这本书.  --《事实》</code>。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">然后打开后就看了那么一点点后，结合这次审核事件，将两者强行揉在一起，就算做是本周的主题了。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这本书开头给到13个问题，从全世界为维度，从教育、人口、收入、气候、电、疫苗、寿命、贫困等杂七杂八的大众事件，给出三个选项供读者选择。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">比如 在过去的20年里，全世界生活在极度贫困状态下的人口是如何变化的？</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">A.几乎翻倍</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">B.保持不变</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">C.几乎减半</section></li></ul><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这些题的在做的时候对于大多数人说都是靠猜，而这种猜的直觉又是靠我们对这个世界的认知、情绪思维。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">巴拉巴拉最终，题目回答的正确率很低。<br>作者通过一些数据统计，表达的是我们忽视了这个世界正在经历巨大进步的事实，负面思维由于媒体的渲染，各种公共事件的发生，让我们潜意识里认为世界越来越在走向崩坏。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">就这，目前只看到了这个点。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">就我个人而言，会认为审核不通过，是接触了太多的因言关押、全网封禁，这种负面的太多事已然影响到了思维定势。<br>审核不通过只是有它的一套规则框架，可如果因为思维定势没有尝试，就不会有那个贱兮兮的画面。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">情绪这件事落在谁头上，都是说一套情绪一套，真正想要辩证的看待事件的时候，情绪已经冲到了最前，并且留下了不能磨灭的印象。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">还不清楚这本书后面要论证的是什么，只是民众对负面事件的关注度是推动社会进步的有效媒介，如何不让过多的负面情绪裹挟是要关怀的。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">当下来说，还是多看书吧，当作是负面情绪的安慰剂也好，当作一次又一次事件的演练也好。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">关注&amp;工具</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://mp.weixin.qq.com/s/am10Sw2uC-c8R08qhlWl5g" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">16小时断食空腹健康法<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">日本著名医学博士青木厚,对“细胞的自体吞噬研究”，使他在2016年获得了诺贝尔生理学奖。<br>基于他的理论，然后在2019年左右他出了一本书《空腹才是最强的良药》，书中就提到了<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">细胞吞噬</code>为原理的断食法。<br>其科学依据是，通过16小时不进食，细胞在饥饿的时候可以把自己体内的无用和有害物质自行吃掉，以提供自己生存所需要的能量，达到减肥目的，缓解内脏器官疲劳。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_01.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://www.mindshow.fun/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">MinShow<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">免费的 Web 服务，根据大纲笔记的层级，自动生成幻灯片。可以选择主题和模板，直接在浏览器演示，也可以导出成 PDF，预览效果很棒。（@ruanyifeng 投稿）</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_02.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>Z Library创办人被抓捕有趣事实</span><span class="suffix" style="display: none;"></span></h3><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_03.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>星尘Infinity AI声库官方试听曲</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">AI唱歌，<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">最终祈愿</code>。（@ruanyifeng 投稿）</p><iframe frameborder="0" src="https://v.qq.com/txp/iframe/player.html?vid=u336353v8te" allowfullscreen="true" width="100%" height="300" data-tool="mdnice编辑器"></iframe><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://webflow.com/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">WebFlow<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一个不需要使用代码的网站搭建平台，这使得初学者和高级用户都很容易上手。<br>使用WebFlow，可以创建自定义网站、博客、投资组合、电子商务商店等。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_04.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://www.madeinwebflow.xyz/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">webflow 设计开发的网站收集<span style="width: 1em;">🔗</span></a><br><a href="https://cabulous.gitbooks.io/webflow-guide-chinese/content/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Gitbook上的WebFlow中文教程<span style="width: 1em;">🔗</span></a></p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>Mac图书源文件查找</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">当我们下载了一些书上传到Mac的图书后，源文件在图书应用中藏的极深。<br>最终找到的源文件目录地址为：<br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">~/Library/Containers/com.apple.BKAgentService/Data/Documents/iBooks/Books</code></p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_05.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>Mac鼠标灵敏度太低的解决办法</span><span class="suffix" style="display: none;"></span></h3><ol data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; list-style-type: decimal; font-size: 15px; color: #595959;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">打开终端</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">输入以下代码查看当前鼠标移动速度<br><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">defaults read -g com.apple.mouse.scaling</code>你会看到输出的是 “3”，这是初始速度</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">输入以下代码改变鼠标移动速度</p></section></li></ol><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">defaults write -g com.apple.mouse.scaling 7</code></p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">调完之后重启电脑.</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://www.upscale.media/zh/upload" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Upscale.media<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一款免费图片分辨率提高工具，使用 AI 技术，最高提高到 4 倍。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_07.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://www.panshenlian.com/2022/08/07/trial-001-zhubai/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">竹白网站实现专栏与文章检索<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">由于竹白文章的推广主要靠作者自我引流，没有官方首页推荐，这篇文章作者对于一些已知竹白作者做了一个创作榜以及内容的搜索功能。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_08.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">一周图片</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_09.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_10.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_11.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_12.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_13.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_14.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_15.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_16.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_17.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_18.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_19.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_20.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_21.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; line-height: 26px; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">文摘</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">人们倾向于与自己群体内的人保持一种“一致性”，而不是思考事情本身的对与错。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">男人不是因为足够好才有了婚姻，而是好的婚姻让男人变好。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">我认识的那些不知道自己热衷什么的人，都努力得不够。他们只是坐在那里，等待事业的灵感来袭。<br>他们不应该等待，应该去创造，然后就会知道自己的激情在哪里。<br>-- David Perell</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">编码相关</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://mp.weixin.qq.com/s/zbYR0UdE8Ej5YzGraO3FEA" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">使用Webstack打造个人网址导航<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一款基于<code style="font-size: 14px; word-wrap: break-word; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: #3594F7; background: RGBA(59, 170, 250, .1); padding: 0 2px; border-radius: 2px; height: 21px; line-height: 22px;">WebStackPage</code> 的 Hexo 主题，打造属于自己的个人导航网址。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">我的个人网址导航，捣鼓上线后预览效果如下：</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_22.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;">,</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://www.swyx.io/css-100-bytes" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">100字节的CSS配置<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">作者逐行介绍一个网页样式的基本 CSS 设置，只要100字节。（@ruanyifeng 投稿）</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; letter-spacing: 0px; padding-top: 15px; background: #282c34; border-radius: 5px;"><span class="hljs-selector-tag" style="color: #e06c75; line-height: 26px;">html</span>&nbsp;&#123;<br>&nbsp;&nbsp;<span class="hljs-attribute" style="color: #98c379; line-height: 26px;">max-width</span>:&nbsp;<span class="hljs-number" style="color: #d19a66; line-height: 26px;">70ch</span>;<br>&nbsp;&nbsp;<span class="hljs-attribute" style="color: #98c379; line-height: 26px;">padding</span>:&nbsp;<span class="hljs-number" style="color: #d19a66; line-height: 26px;">3em</span>&nbsp;<span class="hljs-number" style="color: #d19a66; line-height: 26px;">1em</span>;<br>&nbsp;&nbsp;<span class="hljs-attribute" style="color: #98c379; line-height: 26px;">margin</span>:&nbsp;auto;<br>&nbsp;&nbsp;<span class="hljs-attribute" style="color: #98c379; line-height: 26px;">line-height</span>:&nbsp;<span class="hljs-number" style="color: #d19a66; line-height: 26px;">1.75</span>;<br>&nbsp;&nbsp;<span class="hljs-attribute" style="color: #98c379; line-height: 26px;">font-size</span>:&nbsp;<span class="hljs-number" style="color: #d19a66; line-height: 26px;">1.25em</span>;<br>&#125;<br><span class="hljs-selector-tag" style="color: #e06c75; line-height: 26px;">h1</span>,<span class="hljs-selector-tag" style="color: #e06c75; line-height: 26px;">h2</span>,<span class="hljs-selector-tag" style="color: #e06c75; line-height: 26px;">h3</span>,<span class="hljs-selector-tag" style="color: #e06c75; line-height: 26px;">h4</span>,<span class="hljs-selector-tag" style="color: #e06c75; line-height: 26px;">h5</span>,<span class="hljs-selector-tag" style="color: #e06c75; line-height: 26px;">h6</span>&nbsp;&#123;<br>&nbsp;&nbsp;<span class="hljs-attribute" style="color: #98c379; line-height: 26px;">margin</span>:&nbsp;<span class="hljs-number" style="color: #d19a66; line-height: 26px;">3em</span>&nbsp;<span class="hljs-number" style="color: #d19a66; line-height: 26px;">0</span>&nbsp;<span class="hljs-number" style="color: #d19a66; line-height: 26px;">1em</span>;<br>&#125;<br><br><span class="hljs-selector-tag" style="color: #e06c75; line-height: 26px;">p</span>,<span class="hljs-selector-tag" style="color: #e06c75; line-height: 26px;">ul</span>,<span class="hljs-selector-tag" style="color: #e06c75; line-height: 26px;">ol</span>&nbsp;&#123;<br>&nbsp;&nbsp;<span class="hljs-attribute" style="color: #98c379; line-height: 26px;">margin-bottom</span>:&nbsp;<span class="hljs-number" style="color: #d19a66; line-height: 26px;">2em</span>;<br>&nbsp;&nbsp;<span class="hljs-attribute" style="color: #98c379; line-height: 26px;">color</span>:&nbsp;<span class="hljs-number" style="color: #d19a66; line-height: 26px;">#1d1d1d</span>;<br>&nbsp;&nbsp;<span class="hljs-attribute" style="color: #98c379; line-height: 26px;">font-family</span>:&nbsp;sans-serif;<br>&#125;<br></code></pre><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://github.com/xuxiaodong/usingcli-book" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">usingcli-book<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Github开源项目：像黑客一样使用命令行。<br>一旦夯实了基础，在学了高级命令行用法后，你也可以像 Linux 黑客一样感受到使用命令行是何等的高效和令人愉悦。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">除了文字版本之外，本书亦有配套视频。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://garryui.cn/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">garryui.cn<span style="width: 1em;">🔗</span></a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">该网站使用 Cocos2d-x（开源的跨平台游戏开发框架） 进行开发，初次浏览体验有种颠覆传统网页的感受。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">作者是一个美工设计，关于网站的开发教程同时放在了B站上，</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly81_23.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;">,</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周小结</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">都挺好。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>邓小平时代</title>
      <link href="/read003-%E9%82%93%E5%B0%8F%E5%B9%B3%E6%97%B6%E4%BB%A3/"/>
      <url>/read003-%E9%82%93%E5%B0%8F%E5%B9%B3%E6%97%B6%E4%BB%A3/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/read003dxpsd.webp" alt="邓小平时代"></p><span id="more"></span><h2 id="背景">背景</h2><p>想写这本书的读后感已经很长、很长时间了。<br>直到发现这种读完一篇著作后，因为缺少了仪式感，因为没有一个很好的善后，再去做别的任何事情的时候，都觉心塞，味如嚼蜡，不能过去。</p><p>茶不思、饭不想。</p><p>久久制约我的地方在于很难知道红线在哪。<br>或者说明明知道，处处都是红线，但还是想摸索一把。</p><p>那就随想随记，最后若在微信公众号发布审核，可以通过，那自然是美滋滋的。</p><h2 id="书籍介绍">书籍介绍</h2><blockquote><p>《邓小平时代》（英语：Deng Xiaoping and the Transformation of China），是美国哈佛大学教授傅高义撰写的一本关于邓小平的传记。英文原版于2011年由哈佛大学出版社出版，随后在中国大陆、香港、台湾等地区进行翻译出版。<br>2012年4月，香港中文大学出版社发行了首个无删减的中文译本，包括简体和繁体中文版。<br>2012年6月，天下文化以《邓小平改变中国》之名发行中国台湾中文版。<br>2013年1月18日，生活·读书·新知三联书店发行中国大陆版，🈶️删减。<br>本书内容详实，基础扎实，普遍对此给予好评，但也不乏批评。</p></blockquote><p>– Wikipedia</p><h2 id="介绍">介绍</h2><p>邓小平在1977年分管的工作包括军事、科技、教育和外交。<br>这也是这本书在这几个方面着重比重描述的，很难想象，我们熟知的改革开发的1978年那会，邓小平已经74岁了。</p><p>这是写邓小平的个人传记，不过更可以看作一部微缩版的中国现代史。<br>豆瓣上关于这本书的最高赞评论里有这么一段如是说：</p><blockquote><p>这本书的出版，按习惯，多少可算作奇迹。虽然我没做实验，但根据经验主义，很多章节贴到微博上、BBS上，是会被屏蔽的。有好事者可以帮我做做这个实验，从数字上证明我的猜测。<br>这个猜测的另一个潜台词和意义，从字面上都可能读不到的东西，如果你看懂了字面里的意义，那么，会有多大的发现。</p></blockquote><p>诚然我不是好事者，只是单纯觉得读完这本书后，结合之前自己的所见、所看与这本书紧密结合，好似打通了任督二脉。<br>我们的生活为什么是现在这个样子，与我们息息相关的近三四十年到底发生了，这里的记录起码可以窥豹一斑。</p><p>书中的涵盖内容，我粗略的想了一下包括 邓公开言论、他的家庭、公共事件、历史节点、国际表现、中国香港、中国台湾、西藏、意识形态、教育、权利、法制、经验、共识、体制、其同事、户籍、其它等等。</p><h2 id="教育">教育</h2><p>其中的大多数内容都不可以谈，但是跟我们个人来说最比较息息相关的话题就是教育了。<br>我们老生常谈的应试教育挑几个点，会深有感触，当然，以下摘录的几句话仅为书中观点。</p><ol><li>从小学到大学直到官场。教育的目标不是促进社会平等，而是挑选最有才华的人，为其提供最好的教育机会。小学、初中、高中和大学都举行入学考试，考入竞争最激烈的学校的学生能够得到最好的教师和设施。</li><li>「科学技术是生产力」这句话在之前是不被毛认可的。</li><li>群众不仅需要在学校，而且需要在一生中不断接受宣传，要对他们进行「教育」，使之理解为何要遵守一定的规矩。单靠法规不足以服众。</li><li>从1978年到2007年的30年间，有超过100万的中国学生出国留学。到2007年底，其中大约有四分之一已经学成回国。</li><li>1991年11月发布了〈充分利用文化遗产进行爱国主义和革命传统教育〉的文件。後来又下发了〈关於在全国中小学开展爱国主义教育的通知〉。这两份文件的重点都是教育那些没有经历过抗日战争或内战的青少年。</li><li>在这些进行爱国主义教育的努力中，最有效者莫过於重拾抗战时期的反日宣传。</li><li>*****,诸如此类的宣传取得了预期的效果</li><li>为了赢得中国年轻人的心，爱国主义教育自90年代开始泛滥。<br>…</li></ol><h2 id="常识">常识</h2><p>内容实在浩瀚，其它的一些点，随手摘录总结：</p><ul><li>新加坡有75%的人口是华人</li><li>纵观中国帝制时代的历史，每当一个朝代衰落时，广袤的边境地区就开始试图摆脱中央的控制</li><li>给整个d 抹黑的要予以禁止，只反映某些个人不好的可以放行</li><li>冲击言论边界的人，通常都是勇敢的年轻人、党员和老干部，或是有当权的亲朋好友能够为他们提供保护的人</li><li>中国的科学工作者必须学习外语，以便能够阅读国外文献</li><li>不管什麽人，只要做事就会犯错误。一个人能做到七分正确就很不错了</li><li>没有话把嘴巴一闭⋯⋯会议和讲话是为了解决问题的</li><li>淮海战役从1948年11月初打到1949年1月，是世界战争史上规模最大的战役之一。国民党的参战军队大约为60万，由精明强干的将军指挥；我党投入的兵力大约为50万，此外我党还动员了一百多万农民为部队运送粮草军需，征用了七十多万头牲口作为运输工具。</li><li>在邓时代的鼎盛期，日本在为中国的工业和基础建设提供援助方面所发挥的作用，超过了其他任何一个国家。</li><li>1979年时毗邻香港的深圳只是一个有两万居民的小镇，二十年後的深圳市则已经扩展到了周边农村地区，人口接近一千万，而且还在迅速增加</li><li>为了减少粮食进口，增加国外技术的引进，在本世纪末使人均收入大幅提高，这项政策(计划生育)是必要的–于1979年宣布。</li><li>邓在1984年6月开始使用「有中国特色的社会主义」一说</li><li>法国总统庞比杜（Georges Pompidou）在1973年9月正式访问北京，并受到良好接待，成为第一个访华的欧洲领导人</li><li>1980年代，日本为中国提供的援助和在中国开设的工厂多於其他任何国家”,“自1974年以来，邓会见的日本代表团也多於其他任何国家。</li><li>坚信加快发展经济是保持人民拥护的关键，因此他一再表示实行能使经济不断进步的政策的重要性。</li><li>写作不能挑战以下四点：（1）社会主义道路；（2）无产阶级专政；（3）共产党的领导；（4）马克思列宁主义和毛泽东思想。</li><li>领导人要倾听「建设性意见」，以减少犯严重错误的危险；</li><li>邓认为：至少就中国而言，分权制是一种十分低效的治国方式，是中国应当避免的。</li><li>由上级选拔领导班子，授予他们相当大的独立性，只要他们的工作能使经济快速增长即可。</li></ul><h2 id="小结">小结</h2><p>本来我觉得我会多看几遍这本书，除了更清楚的知道一点历史，也可以更多了解与自己息息相关的那个时代发生的事。<br>只是大环境的氛围是不能过多的谈政史，这种不想都有一些窒息感的侵袭，直接导致在读欲望无限降低，记录热情也是一降再降。</p><p>想到我的上一个公众号，就仅仅因为提到一个人名就被永久封号，应该是要吸取前教(训)的。<br>可也不知道这个冲动哪来的，竟又在作死的边缘试探。</p><p>最后，五星好评推荐。</p><p>PS: 第一次公众号发布通过了审核。</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*82):双十一数据</title>
      <link href="/202245-No82/"/>
      <url>/202245-No82/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; padding: 0 10px; word-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; line-height: 1.25; color: #2b2b2b; letter-spacing: 2px;  font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周是2022年的第<strong style="color: #3594F7; font-weight: bold;"><span>「</span>45周<span>」</span></strong>(11.07-11.13).</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a href="https://blog.liugezhou.online" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">我的博客</a>。</p><p style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><span style="display:block;text-align:right;color:blue;">No.*82</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; height: 1px; padding: 0; border: none; border-top: 2px solid #3BAAFA;"><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周主题:双十一数据</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">2021年双11最终以天猫5403亿元，京东3491亿元成交额，落下帷幕。<br>2022年天猫、京东官方未披露最终交易数。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">下面这张是从网络上找到的图片，真假不知。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week81_.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">不但是双十一、以及本周刚举办的，连续9年的世界互联网大会、十一期间的上座电影，各种活动都是狠显冷清，网络上少了各种热闹和喧嚣。<br>更倾向于这是自我感受，还不是真的由于气氛如此，</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一个能表达自我感受的词就是：<strong style="color: #3594F7; font-weight: bold;"><span>「</span>死气沉沉<span>」</span></strong>。<br>不应是互联网少了活力，应是引导力不再如前，各领域垂直细化，难以形成新的共识，没有了共瓜可吃的互联氛围，不太好玩了。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">当物质领域达到了温饱，迈入了小康，精神娱乐得不到富足，就需要有一个信仰来平息内心活动的安宁，这个共识的信仰下一次会以什么方式来到？是好的还是坏的？</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">是民主改革？是技术变革？是贸易摩擦？是战争与和平？还是经济危机？</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">全球化发展到如今，群体的走向，不再是靠个人意志可以更改的，或早或晚，都蓄势待发。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">关注&amp;工具</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://pandavpnpro.com/blog/zh-cn/telegram-group-channel-bot" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">2022全新电报群推荐</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本文精选2022年优质电报 TG 群组、Telegram 频道以及 TG 搜索机器人等电报机器人，囊括技术、薅羊毛、合租、科学网路、海淘购物等等，花样繁多，应有尽有。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82_01.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://pandavpnpro.com/blog/zh-cn/unblock-netflix-in-china" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">解锁 Netflix 官网</a></span><span class="suffix" style="display: none;"></span></h3><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82_02.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://panda995.top:500/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">熊猫图床</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">免费的图床在线工具，可以批量上传图片，目前网站已托管359张照片，比较好的体验是可以批量上传图片。<br>只是上传的图片的开始不能修改名称、上传成功后的地址复制隐藏较深、以及对于网站的长期维护感觉是个问题。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82_03.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://panda995.xyz/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">这是该作者的网站</a></p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://www.casticle.fm/life-1/" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">给33岁自己的十条生活感悟</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">摘自 casticle 博客。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82_05.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>遥远的救世主</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周通勤又看了一遍小说：《遥远的救世主》。<br>爽文之典范、情节之设计，依然给人眼前一亮的感觉。<br>丁元英是运筹帷幄之中，决胜千里之外。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82_006.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">又想到《远在远方》中的冯刚地窖读书的场景。<br>一个天上一个地下，均是剑走偏锋、不走寻常路的空间想象。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span>黑白CSS</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">有传闻说大厂们已经开始准备黑白CSS了。<br>据说有大人要离开了。</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">一周图片</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82_007.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82_08.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82_09.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82_10.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82_11.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82_12.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82_13.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82_14.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82_15.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82_16.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82_17.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82_18.4qrwtulwybu0.png" class="imageflow-img" style="max-width: 100%; border-radius: 6px; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; line-height: 26px; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">文摘</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">纯粹的商人阶层会慢慢消失，官商一体化是未来的，不，是已经成型的结构。</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">中年人转行的障碍并不是脑子不行，也不是体力不行，而是固有的成见，把自己当个小白，每天学点东西，日日有所收获，心情也会好很多。不过，学什么都需要长时间的投入，平常心最为重要吧。 <span style="display:block;text-align:right;color:blue;">衛斯理</span></p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">每天充斥着大量的信息，让人很难思考，特别是深度思考。 <span style="display:block;text-align:right;color:blue;">Michael Wong</span></p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">你的每一个行动，都是对你想成为怎样的人的投票</p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="display: block; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; text-size-adjust: 100%; line-height: 1.55em; font-weight: 400; border-radius: 6px; color: #595959; font-style: normal; text-align: left; box-sizing: inherit; border-left: none; border: 1px solid RGBA(64, 184, 250, .4); background: RGBA(64, 184, 250, .1);"><span style="color: RGBA(64, 184, 250, .5); font-size: 34px; line-height: 1; font-weight: 700;">❝</span><p style="padding-top: 8px; padding-bottom: 8px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px; margin: 0px; line-height: 26px; color: #595959;">大家是不是都是：嘴里说着各种大道理，转身又把生活过烂的啊。 <span style="display:block;text-align:right;color:blue;">少女病</span></p><span style="float: right; color: RGBA(64, 184, 250, .5);">❞</span></blockquote><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">编码相关</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://mp.weixin.qq.com/s/zwmFoz0bf8O04fwCLjMiLA" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Chrome DevTools骚操作</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">这篇文章主要分享了Chrome DevTools中一些非常实用的功能和调试技巧,主要介绍的有：</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">保留日志</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">代码覆盖率</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">显示重绘</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">检查动画</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">截图</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">本地资源覆盖网页所使用资源</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">全局搜索代码</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">事件监听器、DOM操作、异步请求的断点</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">CSS Overview</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">CSP违规断点</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">新的字体编辑器工具</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">双屏模式</section></li></ul><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="http://neo4j.com.cn/public/cypher/default.html" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Neo4j</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Neo4j是世界领先的开源图形NOSQL数据库，它将结构化数据存储在网络上而不是表中。<br>闪电般的读写速度，无与伦比的高性能表现，非结构化的数据存储方式，设计上的灵活性，能很好的适应需求变化，适合敏捷开发。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82_19.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://www.yisu.com/zixun/491507.html" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">ClickHouse</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">ClickHouse是一个用于<strong style="color: #3594F7; font-weight: bold;"><span>「</span>联机分析[OLAP]<strong style="color: #3594F7; font-weight: bold;"><span>「</span>的<span>」</span></strong>列式<span>」</span></strong>数据库管理系统。</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 15px; color: #595959; list-style-type: circle;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">OLAP:是仓库型数据库，主要是读取数据、做复杂的数据分析。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: #595959;">OLTP:传统的行式关系型数据库，主要操作增删改查，强调事务一致性(传统的行式Mysql数据库)</section></li></ul><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">在业务问题上，Mysql中5000万数据量的大表及两个辅表，单次联表查询的开销在3min+，借助ClickHouse优化，查询时间降低至1s内，查询效率提升200倍。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="http://keg.cs.tsinghua.edu.cn/codegeex/index_zh.html" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">CodeGeex</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">一个国产的代码生成的人工智能工具，跟 GitHub Copilot 类似，可以将一种语言的代码翻译成另一种，并提供 VS Code 插件。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82_20.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://github.com/tw93/Pake" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Rust打包网页生成Mac App</a></span><span class="suffix" style="display: none;"></span></h3><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week82_21.png" alt style="max-width: 100%; border-radius: 6px; display: block; margin: 20px auto; object-fit: contain; box-shadow: 2px 4px 7px #999;"></figure><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://github.com/adambard/learnxinyminutes-docs" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">learnxinyminutes-docs</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">Gitub万star项目：lerarnxingyminutes。<br>里面有很多的中英文教程，网站把各种语言的核心要素以极简的方式整理出来，可对比各种编程语言进行速查学习。</p><h3 data-tool="mdnice编辑器" style="padding: 0px; color: black; font-size: 17px; font-weight: bold; text-align: center; position: relative; margin-top: 20px; margin-bottom: 20px;"><span class="prefix" style="display: none;"></span><span class="content" style="border-bottom: 2px solid RGBA(79, 177, 249, .65); color: #2b2b2b; padding-bottom: 2px;"><span style="width: 30px; height: 30px; display: block; background-image: url(https://files.mdnice.com/fullstack-2.png); background-position: center; background-size: 30px; margin: auto; opacity: 1; background-repeat: no-repeat; margin-bottom: -8px;"></span><a href="https://bbs.csdn.net/topics/609079576" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">Github Universe大会直播回放</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">2022年11月10日 Github Universe大会进行了直播。<br>更新Github Codespace，增添了全新的搜索和导航功能。<br>个人开发者每个月都能免费使用 60 小时的 GitHub Codespaces，且在几秒钟内就能启动构建。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;"><a href="https://blog.csdn.net/csdnnews/article/details/127783765" style="text-decoration: none; word-wrap: break-word; color: #40B8FA; font-weight: normal; border-bottom: 1px solid #3BAAFA;">AI语音编程来了！GitHub 势要颠覆程序员开发</a></p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; border-bottom: 4px solid #40B8FA;"><span class="prefix" style="display: flex; width: 20px; height: 20px; background-size: 20px 20px; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/newTitle.png); margin-bottom: -22px;"></span><span class="content" style="display: flex; color: #40B8FA; font-size: 20px; margin-left: 25px;">本周小结</span><span class="suffix" style="display: flex; box-sizing: border-box; width: 200px; height: 10px; border-top-left-radius: 20px; background: RGBA(64, 184, 250, .5); color: rgb(255, 255, 255); font-size: 16px; letter-spacing: 0.544px; justify-content: flex-end; float: right; margin-top: -10px; box-sizing: border-box !important; overflow-wrap: break-word !important;"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">本周开始写ts，一种眼前一亮的感觉。<br>但还是信誓旦旦的觉得，好好地动态语言加个类型的限制，实为不妥，转了一圈得到同样的结果。<br>对于小型网站来说总觉得没必要使用ts，可从职业角度来说，资本、大咖、培训的烘托，已成为一种职业选择不得不会的技能。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">当然，最终还是因为实践较少，未能体会其奥义。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: #2b2b2b; margin: 10px 0px; letter-spacing: 2px; font-size: 14px; word-spacing: 2px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*81):坚持100期</title>
      <link href="/202244-No81/"/>
      <url>/202244-No81/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week81.png" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="padding: 0 10px; word-spacing: 0px; word-wrap: break-word; text-align: left; line-height: 1.6; letter-spacing: .034em; color: rgb(63, 63, 63); font-size: 16px; word-break: all; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周是2022年的第<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">44周</strong>(10.31-11.06).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a href="https://blog.liugezhou.online" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">我的博客</a><br><span style="display:block;text-align:right;color:blue;">No.*81</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; border-top: 1px solid black; height: 1px; padding: 0; border: none; text-align: center; background-image: linear-gradient(to right,rgba(60,122,198,0),rgba(60,122,198,0.75),rgba(60,122,198,0));"><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周主题: 坚持100期</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">想到我要先坚持个100期周报，再坚持 100天每日前端出题，再想想还有什么坚持的，又想到坚持写100本读书笔记。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">接着，觉得<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">坚持</code>这个词有点不酷，就像是不喜欢的东西，折磨着自己要去做，于是就换成了：</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"><code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">享受</code>100期周报、<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">习惯性</code>100天前端、<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">沉浸式</code>100本读书笔记。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">前几天还想着展开论述一下<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">享受</code>做一件事带来的感受积极性的时候。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">这周日去天安门逛了一逛，没收了一个打火机，里里外外转了好几圈，步行好几步路路，晚上到家，困意袭来，顿时蔫了，什么积极性的不要了。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">还是坚持实实在在。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">那话怎么说来着，不是因为什么什么才坚持 ，是因为坚持才什么什么。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">目前也还不知道什么什么是什么，但总归是个什么。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">坚持什么不重要，主要是通过种种表现内涵自我，将有限的时间浪费在了看得见的事情之上，从中汲取了一些营养，留下了淡淡字迹。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">内容是什么不重要，<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">意识形态</code>告诉我们，不管内在如何，<u>表象一定要顺理成章</u>。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">关注&amp;工具</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://run.ialtone.xyz/message/index.php" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">无敌轰炸</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">仅供个人测试手机性能使用，严禁商业非法用途！</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week81_01.png" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://dan.com/zh-cn" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">买卖域名</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">域名交易平台。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week81_02.png" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://www.ooopn.com/tool/zlibrary/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">zlibrary</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">11月3日，美国司法部根据法庭判令，查封Z-Library部分域名。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">虽然通告写道，美国邮政检查局查封了该网站，但其发言人表示有关通告内容有误。<br>截至11月4日，网站的隐藏服务网址仍可继续使用。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">👆 上面这个网址，列出了一些还能 用的链接 。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week81_03.png" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://www.aliyundrive.com/s/aEEGWV4hF33" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">4K电影云盘</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">774部 4K电影阿里云盘分享(41.2TB)</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week81_04.png" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://www.ahhhhfs.com/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">A姐分享</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">这个网站有非常多有意思的资源、教程、影视、工具、羊毛福利等。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week81_05.png" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">一周图片</span><span class="suffix"></span></h1><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week81_06.png" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week81_07.png" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week81_08.png" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week81_09.png" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week81_10.png" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week81_11.png" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week81_12.png" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week81_13.png" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; line-height: 1.75em; font-size: 17px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">文摘</span><span class="suffix"></span></h1><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">宅家啃老多添一双碗筷；<br>出门奋斗掏空六个钱包。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">代码里的临时方案，最终都成了永久方案；<br>代码里的 TODO，最终都成了 Never Do；<br>代码里的 FIXME，最终都成了 Never Fix。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">在任何环境下，都坚持做自己是很难的，很多时候也是要付出代价的。但回首过去，坚持做自己反而是最大的收获</p></blockquote></blockquote><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">编码相关</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://storyset.com/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Storyset</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">Storyset 漂亮的可自定义动画的免费插画，很丰富易用，同时还可以导出动画代码.</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week81_14.png" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://emgithub.com/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">emgithub</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一个可以把 GitHub 文本文件或代码块嵌入到网页或博客里的工具。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/week81_15.png" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周小结</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">眨眼之间2022年就剩不到两个月的时间了，距离一百岁又近了一些。<br>本周是我生命中最年轻的一周，然而在我最年轻的这一周，回忆本周，竟不记得做了什么。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">遗憾吗？不遗憾。<br>失望吗？不失望。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">那是怎么了？</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">霍，困了。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*80):清空微博</title>
      <link href="/202243-No80/"/>
      <url>/202243-No80/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly80.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="padding: 0 10px; word-spacing: 0px; word-wrap: break-word; text-align: left; line-height: 1.6; letter-spacing: .034em; color: rgb(63, 63, 63); font-size: 16px; word-break: all; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周是2022年的第<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">43周</strong>(10.24-10.30).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章同步至<a href="https://cdn.statically.io/gh/liugezhou/image@master/common/Wakaka.webp" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">我的公众号</a><br><span style="display:block;text-align:right;color:blue;">No.*80</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; border-top: 1px solid black; height: 1px; padding: 0; border: none; text-align: center; background-image: linear-gradient(to right,rgba(60,122,198,0),rgba(60,122,198,0.75),rgba(60,122,198,0));"><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周主题:清空微博</span><span class="suffix"></span></h1><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly8001.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly8002.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">关注&amp;工具</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://wormhole.app/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">简单、私密文件共享</a></span><span class="suffix" style="display: none;"></span></h3><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly8003.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">上传文件(10GB以内),并设置在相应的时间或者达到下载次数后，分享链接失效。<br>以端到端加密的自动过期的方式分享文件。<br>之前看到过好多个分享的工具,这个工具体验后UI的设计非常棒。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://minicoursegenerator.com/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">mini-course: 迷你课程生成器</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">大的课程构建器具有许多高级功能，但如果你只需要创建交互式迷你课程来引导你的观众和创造动力，以创建和呈现内容作为目标。 那么可以试试👆这个在线工具。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly8004.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">lvlup</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一款颜值超高的习惯养成App，有iOS和安卓客户端。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">它遵循一个循序渐进的习惯养成过程，伴随着自我反思工具和个性化的习惯提醒，让你在这一过程中保持动力。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly8005.webp" alt='lvlup' width="200" height="400" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://hnnew.buzzing.cc/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Hacker News 中文预览</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一个Hacker News中文首页聚合页在线网站。<br>用中文浏览Hacker News。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://mp.weixin.qq.com/s/dAAFZEKlNQJOAXEdfvRmfA" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">钱对我们做了什么</a></span><span class="suffix" style="display: none;"></span></h3><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="border: none; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; background: rgba(0, 0, 0, 0.05); color: #6a737d; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; padding: 15px 20px; line-height: 27px; background-color: rgb(239, 239, 239); border-left: none; display: block;"><p style="padding-bottom: 8px; padding-top: 23px; margin: 0px; line-height: 26px; padding: 0px; font-size: 15px; color: rgb(89,89,89);">这篇文章从心理学的角度讨论自我与金钱的关系，对投资、消费角度的同类讨论来说是一个很好的补充切面。文章讨论了高频小额消费、只能够为他人消费、抠门这三种行为背后的内在动机。很奇妙的是，我们和金钱的关系背后往往折射的还是与人的关系。</p></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="border: none; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; background: rgba(0, 0, 0, 0.05); color: #6a737d; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; padding: 15px 20px; line-height: 27px; background-color: rgb(239, 239, 239); border-left: none; display: block;"><p style="padding-bottom: 8px; padding-top: 23px; margin: 0px; line-height: 26px; padding: 0px; font-size: 15px; color: rgb(89,89,89);">如果赚取、使用金钱的过程会带来「堵塞」的感受，那么除了学习增加财富的道与术，我们还可以透过自我与金钱的关系去认识自己的内心。</p></blockquote><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="border: none; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; background: rgba(0, 0, 0, 0.05); color: #6a737d; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; padding: 15px 20px; line-height: 27px; background-color: rgb(239, 239, 239); border-left: none; display: block;"><p style="padding-bottom: 8px; padding-top: 23px; margin: 0px; line-height: 26px; padding: 0px; font-size: 15px; color: rgb(89,89,89);">借用文末的一句话：愿你有虎虎生威的勇气，回望过去，享受当下，不仅有财更有情。</p></blockquote><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"><span style="display:block;text-align:right;color:blue;">by <a href="https://juicing.today/juice/20220221" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">梦妮</a></span></p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://www.tboxn.com/560.html" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">zlibrary</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">Zlibrary — 全球最大的电子图书馆，九百万本电子书免费下载。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">最近由于微信读书开始收费，或者查到的书籍需要会员，于是查找书籍全都从zlirary网站，下载epub格式后导入到App图书、或者微信读书后食用(网页版提供导入功能 👍)。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">由于该网站在国内经常失效，这个网站收集了一系列的备用域名。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">一周图片</span><span class="suffix"></span></h1><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly8010.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly8006.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly8007.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly8008.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly8009.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly8011.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly8012.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly8013.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly8014.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly8015.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; line-height: 1.75em; font-size: 17px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">文摘</span><span class="suffix"></span></h1><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">不能停下来，你唯一的出路（或者说对抗方法），就是保持工作，做一点有益于社会的事情，只有这样才能在没有意义的世界里找到一点意义。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">When you want something, all the universe conspires in helping you to achieve it.</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">投资收益，一定程度是由你在熊市做了什么决定的；一个人的成长，一定程度是由他在困难时做了什么定义的。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">真正的用户主义，是找到你的 1% 用户，并且，当这 1% 的用户和规模效应冲突的时候，敢于放弃好不容易积累起来的规模效应，选择和 1% 的用户站在一起。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">你要免于被恐惧，免于被口口相传、意识形态的宣传，不要因为恐惧止步不前，你是一个有主观能动性的人，不是机器。</p></blockquote></blockquote><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">编码相关</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://www.programmercarl.com?utm_source=blog.liugezhou.online" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">代码随想录</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"><img src="https://code-thinking-1253855093.file.myqcloud.com/pics/20211111115823.png" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;">网站介绍：本站是一套完整的刷题计划，旨在帮助大家少走弯路，循序渐进学算法。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">site的使用技巧</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">有时候，如果想要知道某个站点中有自己需要找的东西，就可以把搜索范围限定在这个站点中，提高查询效率。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">使用的方式，是在查询内容的后面，加上“site:站点域名”。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">例如，尼玛，就可以这样查询：<br><code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">site:blog.liugezhou.online 尼玛 </code></p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">经测试百度的搜索支持不是很友好。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://www.experte.com/web-vitals" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">web-vitals</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一款批量检查网页加载速度的工具，一次最多可以检查 500 个页面。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly8016.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://vercel.com/blog/turbopack" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Turbopack</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">Vercel 公司发布新一代打包器 Turbopack，号称比 Webpack 快700倍，比 Vite 快10倍。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://files.mdnice.com/user/32716/4b09b188-239c-45cd-9b08-6db36ae689cd.png" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">makefile文件简介</span><span class="suffix" style="display: none;"></span></h3><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/weekly8017.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">makefile文件由一组依赖关系和规则构成，每个依赖关系有一个目标和一组该目标所依赖的源文件组成，规则描述了如何通过这些依赖文件创建目标。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">mkkefile文件和make工具一起使用，用于控制工程项目的编译和链接，也可以用编写手册页和程序的安装。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"><a href="https://github.com/mrtazz/checkmake" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">一个检查 Makefile 文件有没有错误的工具</a></p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://day.liugezhou.online/github/before.html" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Github网站使用说明书</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">👆 Github网站的使用有很多有趣的feature,本周尝试搭建的对Github网站功能设置的一个在线说明文档。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周小结</span><span class="suffix"></span></h1><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: black; list-style-type: disc;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">百词斩日常打卡</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">新上的网站<a href="https://day.liugezhou.online/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">今日前端</a>七天访问数据:<b>2,577(pv)</b>, <b>734(uv)</b>, <b>725(ip)</b></p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"><a href="https://blog.liugezhou.online" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">个人博客</a>七天访问数据:<b>540(pv)</b>, <b>186(uv)</b>, <b>178(ip)</b></p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">读完《邓小平时代》后，一直心心念想写个读书笔记或者文摘记录，梳理一下中国近代史，对我的国家有一个近期历史的认知，但还未开始。</p></section></li></ul><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*79):尼玛</title>
      <link href="/202242-No79/"/>
      <url>/202242-No79/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202242.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="padding: 0 10px; word-spacing: 0px; word-wrap: break-word; text-align: left; line-height: 1.6; letter-spacing: .034em; color: rgb(63, 63, 63); font-size: 16px; word-break: all; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周是2022年的第<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">42周</strong>(10.17-10.23).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a href="https://blog.liugezhou.online" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">我的博客</a><br><span style="display:block;text-align:right;color:blue;">No.*79</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; border-top: 1px solid black; height: 1px; padding: 0; border: none; text-align: center; background-image: linear-gradient(to right,rgba(60,122,198,0),rgba(60,122,198,0.75),rgba(60,122,198,0));"><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周主题:尼玛</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">“尼玛”在藏族文化中是一个神圣的词汇。“尼玛”在藏语里是对太阳的尊称，同时也用作人的名字。“尼玛”一词来自于藏语的汉译，在藏语里译为：光明的，神圣的，同时也有“太阳”的意思。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">在藏语里，“尼玛”意为太阳，"达瓦"意为月亮。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">尼玛德</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">关注&amp;工具</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://lab.magiconch.com/china-ex/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">中国制霸</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周较火的一个有意思的在线网站。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">这是一个开源的在线工具，用来标记全国你去过的省级行政区域，对地图进行了简化处理，简化成方框，可以在线标记居住、短居、游玩、出差、路过，标记后可生成图片进行社区分享，标记过的信息会记录到本地存储，有什么新进展再次打开网页更新即可。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202242_01.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">PS:中国这么大，我想去看看。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">喷气飞行服</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一家生产喷气飞行服的英国公司，发布了产品视频，3分钟30秒飞上900多米的山峰，非常酷。<br>这种飞行服的背后有一个大的涡轮机，每条手臂上还各有一个小型涡轮机，用来产生推力。<br>该公司说，它可以用于山地救助，快速从山上抢救伤者。<span style="display:block;text-align:right;color:blue;">ruanyifeng.com</span></p><div style="position: relative; width: 100%; height: 0; padding-bottom: 100%;" data-tool="mdnice编辑器"><iframe src="https://v.qq.com/txp/iframe/player.html?vid=r3338ybh4oc" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://knb.im/mp/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">可能吧公众号排版</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">免费、免注册的在线公众号排版工具。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">提供多种主题。和墨滴在线编辑器相比，该网站没有提供在线图床、公众号底部链接等小功能，但相对于简单的纯文字输出者很是够用了。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202242_02.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://krausefx.com/blog/announcing-inappbrowsercom-see-what-javascript-commands-get-executed-in-an-in-app-browser" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">应用内浏览器的隐私风险</a></span><span class="suffix" style="display: none;"></span></h3><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="border: none; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; background: rgba(0, 0, 0, 0.05); color: #6a737d; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; padding: 15px 20px; line-height: 27px; background-color: rgb(239, 239, 239); border-left: none; display: block;"><p style="padding-bottom: 8px; padding-top: 23px; margin: 0px; line-height: 26px; padding: 0px; font-size: 15px; color: rgb(89,89,89);">当你在手机 App 里面打开一个网址（比如微信里面点击一个网址），你是在应用内浏览器打开，而不是在系统浏览器。这时，宿主 App 可以监听你的一举一动，很多巨头都这么干。<br><span style="display:block;text-align:right;color:blue;">ruanyifeng.com</span></p></blockquote><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">也就是说：虽然现在确实没有隐私可言，但浏览的网址内容还是尽量不要在微信里面浏览。这些巨头就像那些权威一样都很可怕，掌控的数据行为越来越多，比我们还有了解我们。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://mo.run/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">mo.run</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">Mo.run是帮助创意工作者和零售品牌与消费者建立连接的工具，相当于一个聚合的主页。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202242_03.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">通过简单配置后，我生成的链接地址为:<br><code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">https://mo.run/liugezhou/</code></p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202242_04.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">一周图片</span><span class="suffix"></span></h1><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202242_05.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202242_06.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202242_07.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202242_08.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202242_09.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202242_10.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202242_11.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; line-height: 1.75em; font-size: 17px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">文摘</span><span class="suffix"></span></h1><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">人是不同的，冲突是不会消失的，能相处的一定只是“我愿意”，而不是“我本来就是这样的人”。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">社交网络上待的久了，越觉得能和不同意见对话是一种美德。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">痛苦的秘密在于有闲工夫担心自己是否幸福。奇迹有时候是会发生的，但是你得为之拼命。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">真相是一种美丽又可怕的东西，需要格外谨慎地对待。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">所有人其实就是一个整体，别人的不幸就是你的不幸，不要以为丧钟为谁而鸣，它就是为你而鸣。</p></blockquote></blockquote><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">推荐</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周在读看的一本书：《邓小平时代》</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202242_12.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">这本书是美国哈佛大学教授 <strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">傅高义</strong> 撰写的一本关于邓小平的传记。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">英文原版于2011年由哈佛大学出版社出版，随后在中国大陆、香港、台湾等地区进行翻译出版。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">这本书内容详实、基础扎实、专业论述、资料组织，普遍对此给予好评。<br>推荐看由<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">香港中文大学出版社</code>出版的无删减版本，读这本书相当于在看中国的近代史。</p><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="border: none; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; background: rgba(0, 0, 0, 0.05); color: #6a737d; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; padding: 15px 20px; line-height: 27px; background-color: rgb(239, 239, 239); border-left: none; display: block;"><p style="padding-bottom: 8px; padding-top: 23px; margin: 0px; line-height: 26px; padding: 0px; font-size: 15px; color: rgb(89,89,89);">这本书的出版，按习惯，多少可算作奇迹。根据经验主义，很多章节内容贴到微博上、BBS、公众号等平台，是会被屏蔽、删除、封号的。</p></blockquote><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">编码相关</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://www.ezfuns.com/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">艺爪付费</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">为网站App提供会员、订阅、内购付费功能，支持微信支付、支付宝、收款码、比特币、PayPal等多种支付渠道，个人开发者也能收款，累计收款100万内免费。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202242_13.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://coding.zhangbingdev.com/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Dunizb的代码实验室</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">该网站提供了一些有意思的代码样式、效果等，非常有趣，不仅提供了一些有意思的创意，还提供了源代码。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">代码开发中的一些动效或者小技巧可以直接从该网站copy代码实现。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周小结</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">内部环境，很不乐观，好似脸被一块带有细孔的透明材料捂在了脸上，可以呼吸，但总不顺畅，要命的是这个孔可大可小，随时调节，以肉眼可见的速度越来越小。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">刚要开口说话，浓浓的鼻音传来，原来感冒了。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*78):活着</title>
      <link href="/202241-No78/"/>
      <url>/202241-No78/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202241.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="padding: 0 10px; word-spacing: 0px; word-wrap: break-word; text-align: left; line-height: 1.6; letter-spacing: .034em; color: rgb(63, 63, 63); font-size: 16px; word-break: all; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周是2022年的第<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">41周</strong>(10.10-10.16).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a href="https://blog.liugezhou.online" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">我的博客</a><br><span style="display:block;text-align:right;color:blue;">No.*78</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; border-top: 1px solid black; height: 1px; padding: 0; border: none; text-align: center; background-image: linear-gradient(to right,rgba(60,122,198,0),rgba(60,122,198,0.75),rgba(60,122,198,0));"><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周主题:活着</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">《 活着》是中国当代作家 余华创作 的长篇小说，首次发表于《收获》1992年第6期。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/read002_title.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">在整理这篇文章的时候，去猫了一眼电影的最后结尾，大相径庭。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">阅读背景</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">这本书最初的时候是在好几年前的一个除夕的夜晚，和两个高中好友广场游荡。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">他们同时提到了这本在读的书，并交换着心得，我没看过，谈论起来只是嗯嗯称道，听他们讲述，当时并没有什么体会。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">而这次机缘巧合读起来这本书,瞬时的源头是在看到这张梗图后：</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://tikolu.net/i/tlgjd" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">我是在通勤的上下班的地铁上、腿着看完的。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一边读一边叹，文字叙述朴素、讲述平淡。像我如此铁石心肠之人，竟也禁不住几次眼眶湿润，这究竟是何等的魔力，何种剧情，能用文字调起人如此的情绪感受。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/read002_02.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">叙述没有那么刻意、剧情推进也是缓和有序，可串起来后一个又一个的打击真是太悲了。<br>看完的时候，除了感受文笔力量之强大之外，面对平淡无奇的生活，唯知足尔。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">后来我就忍不住跟我的老伴分享，也没忍住透露了内容，实在该死，怎么能剧透呢。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">老伴听我评价如此之高，啧啧称奇，于是也就在上下班的通勤路上看完了这本书。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">也就泪眼婆娑。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">随之心潮澎湃的写了一篇她的读后感，<a href="https://blog.liugezhou.online/read002-%E6%B4%BB%E7%9D%80/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">这个链接是她的原文内容</a>。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">关注&amp;工具</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">The days are long, but the years are short.</span><span class="suffix" style="display: none;"></span></h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 100%;" data-tool="mdnice编辑器"><iframe src="https://lusun.com/v/kxqAJiiBUeh" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://mp.weixin.qq.com/s/er7SpPxL5tLcMlvtWRBbGw" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">我，阿里P7，找不到工作</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一篇公众号文章，内容如标题。<br>在今大环境下，经济就业的一个小小缩影。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://mp.weixin.qq.com/s/-BKNUAXzABGYSbmgPFSMUA" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">美国“芯片法案”对中国芯片产业究竟意味着什么？</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">公众号《环球网》发表的一篇文章。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://dartools.com/sites/2705.html" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">豆瓣Top250影视资源</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">👆 来自工具达人网站的豆瓣Top250阿里云盘电影资源。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202241_01.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://dartools.com/sites/2706.html" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">知乎付费合集</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">👆 也是来自工具达人。知乎付费合集的白嫖资源分享。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">一周图片</span><span class="suffix"></span></h1><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202241_02.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202241_03.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202241_04.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202241_05.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202241_06.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202241_08.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; line-height: 1.75em; font-size: 17px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">文摘</span><span class="suffix"></span></h1><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">不要强迫自己做任何内心讨厌的事情。因为一旦你习惯了做这些事情，就很难下决心退出了。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">很长一段时间，我真正的生活看似马上就要开始了，但是总有一些阻碍阻拦着，有些事得先解决，有些工作待完成，时间貌似还得花，还有一笔债务要去付清，然后生活就会开始。最后我终于明白，这些障碍，正是我的生活。这么想让我意识到，没有通往幸福之路，幸福就是路途本身。所以，珍惜你拥有的每一刻，记住时间不等人。</p></blockquote></blockquote><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">编码相关</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://github.com/soxoj/maigret" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">maigret</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">maigret，是一个开源的用户名查找工具，目前支持全球3000多个站点的数据。<br>这个工具是一个python库，可以从3000多个网站匹配查找存在的用户社交账户资料页，国内外的网站都有，搜索结果返回符合的用户名的社交页面资料链接，用户名不支持中文（大概是数据库不好存的缘故）。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://www.jetbrains.com/fleet/download/#section=mac" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Fleet</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">Jetbrains打造的下一代IDE，目前免费使用，下载体验了一波，对于使用习惯了的Vscode来说，可以试试Fleet，进行尝鲜。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202241_09.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://stormah.com/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Stormah: Own Your Data</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一个简易的网页笔记，可以指定远程 Git 仓库作为后端。你在浏览器里做笔记，储存到远程的 Git 仓库。<br>先码住。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://github.com/richtr/NoSleep.js" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">NoSleep.js</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">这个 JS 库可以让手机不进入休眠状态，网页窗口始终亮屏，原理是在页面插入一段不可见的、一直在播放的视频，代价是增加 CPU 负载和耗电。<br>使用步骤：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;"><span class="hljs-number" style="color: #d19a66; line-height: 26px;">1.</span>&nbsp;npm&nbsp;install&nbsp;nosleep.js<br><span class="hljs-number" style="color: #d19a66; line-height: 26px;">2.</span>&nbsp;<span class="hljs-keyword" style="color: #c678dd; line-height: 26px;">import</span>&nbsp;NoSleep&nbsp;<span class="hljs-keyword" style="color: #c678dd; line-height: 26px;">from</span>&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">'nosleep.js'</span><br><span class="hljs-number" style="color: #d19a66; line-height: 26px;">3.</span>&nbsp;<span class="hljs-keyword" style="color: #c678dd; line-height: 26px;">var</span>&nbsp;noSleep&nbsp;=&nbsp;<span class="hljs-keyword" style="color: #c678dd; line-height: 26px;">new</span>&nbsp;NoSleep()<br><span class="hljs-number" style="color: #d19a66; line-height: 26px;">4.</span>&nbsp;<span class="hljs-comment" style="color: #5c6370; font-style: italic; line-height: 26px;">//&nbsp;Enable&nbsp;wake&nbsp;lock.</span><br><span class="hljs-comment" style="color: #5c6370; font-style: italic; line-height: 26px;">//&nbsp;(must&nbsp;be&nbsp;wrapped&nbsp;in&nbsp;a&nbsp;user&nbsp;input&nbsp;event&nbsp;handler&nbsp;e.g.&nbsp;a&nbsp;mouse&nbsp;or&nbsp;touch&nbsp;handler)</span><br><span class="hljs-built_in" style="color: #e6c07b; line-height: 26px;">document</span>.addEventListener(<span class="hljs-string" style="color: #98c379; line-height: 26px;">'click'</span>,&nbsp;<span class="hljs-function" style="line-height: 26px;"><span class="hljs-keyword" style="color: #c678dd; line-height: 26px;">function</span>&nbsp;<span class="hljs-title" style="color: #61aeee; line-height: 26px;">enableNoSleep</span>(<span class="hljs-params" style="line-height: 26px;"></span>)&nbsp;</span>&#123;<br>&nbsp;&nbsp;<span class="hljs-built_in" style="color: #e6c07b; line-height: 26px;">document</span>.removeEventListener(<span class="hljs-string" style="color: #98c379; line-height: 26px;">'click'</span>,&nbsp;enableNoSleep,&nbsp;<span class="hljs-literal" style="color: #56b6c2; line-height: 26px;">false</span>);<br>&nbsp;&nbsp;noSleep.enable();<br>&#125;,&nbsp;<span class="hljs-literal" style="color: #56b6c2; line-height: 26px;">false</span>);<br><br><span class="hljs-comment" style="color: #5c6370; font-style: italic; line-height: 26px;">//&nbsp;Disable&nbsp;wake&nbsp;lock&nbsp;at&nbsp;some&nbsp;point&nbsp;in&nbsp;the&nbsp;future.</span><br><span class="hljs-comment" style="color: #5c6370; font-style: italic; line-height: 26px;">//&nbsp;(does&nbsp;not&nbsp;need&nbsp;to&nbsp;be&nbsp;wrapped&nbsp;in&nbsp;any&nbsp;user&nbsp;input&nbsp;event&nbsp;handler)</span><br>noSleep.disable();<br></code></pre><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://blog.liugezhou.online/032-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">微信小程序自动化实现:Automator</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周在做小程序测试的时候，总结一条博文。<br>微信小程序自动化测试的完全实现。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周小结</span><span class="suffix"></span></h1><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: black; list-style-type: disc;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">本周主要做了小程序的自动化测试。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">工作日日常百词斩打卡。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">工作日日常前端基础5道题。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">小说《活着》</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">电影《低俗小说》</section></li></ul><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>活着</title>
      <link href="/read002-%E6%B4%BB%E7%9D%80/"/>
      <url>/read002-%E6%B4%BB%E7%9D%80/</url>
      
        <content type="html"><![CDATA[<section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="padding: 0 10px; word-spacing: 0px; word-wrap: break-word; text-align: left; line-height: 1.6; letter-spacing: .034em; color: rgb(63, 63, 63); font-size: 16px; word-break: all; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">《 活着》是中国当代作家 余华创作 的长篇小说，首次发表于《收获》1992年第6期。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/read002_title.webp" alt="活着" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;"></figcaption></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">在整理这篇文章的时候，去猫了一眼电影的最后结尾，大相径庭。</p><span id="more"></span><h2 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; text-align: center; background-image: url(https://files.mdnice.com/mountain_2.png); background-position: center center; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-size: 63px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="text-align: center; display: inline-block; height: 38px; line-height: 42px; color: rgb(60, 112, 198); background-position: left center; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-size: 63px; margin-top: 38px; font-size: 18px; margin-bottom: 10px;">阅读背景</span><span class="suffix"></span></h2><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">这本书最初的时候是在好几年前的一个除夕的夜晚，和两个高中好友广场游荡。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">他们同时提到了这本在读的书，并交换着心得，我没看过，谈论起来只是嗯嗯称道，听他们讲述，当时并没有什么体会。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">而这次机缘巧合读起来这本书,瞬时的源头是在看到这张梗图后：</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/read002_01.webp" alt="梗" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;"></figcaption></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">我是在通勤的上下班的地铁上、腿着看完的。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一边读一边叹，文字叙述朴素、讲述平淡。像我如此铁石心肠之人，竟也禁不住几次眼眶湿润，这究竟是何等的魔力，何种剧情，能用文字调起人如此的情绪感受。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/read002_02.webp" alt="豆瓣" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;"></figcaption></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">叙述没有那么刻意、剧情推进也是缓和有序，可串起来后一个又一个的打击真是太悲了。<br>看完的时候，除了感受文笔力量之强大之外，面对平淡无奇的生活，唯知足尔。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">后来我就忍不住跟我的老伴分享，也没忍住透露了内容，实在该死，怎么能剧透呢。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">老伴听我评价如此之高，啧啧称奇，于是也就在上下班的通勤路上看完了这本书。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">也就泪眼婆娑。<br>随之心潮澎湃的写了一篇她的读后感，以下为她的原文内容。</p><h2 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 22px; display: block; text-align: center; background-image: url(https://files.mdnice.com/mountain_2.png); background-position: center center; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-size: 63px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="text-align: center; display: inline-block; height: 38px; line-height: 42px; color: rgb(60, 112, 198); background-position: left center; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-size: 63px; margin-top: 38px; font-size: 18px; margin-bottom: 10px;">兜里没糖的读后感</span><span class="suffix"></span></h2><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">今天看完了活着这本书，中间好几次哭着哭着笑了，笑了之后又想哭。只能说这里的人太苦了。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">福贵他混账忤逆，赌博家产被败光，爹替他还债被气死，不珍惜他拥有的一切。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">可家珍对福贵不离不弃，哪怕身怀三甲被福贵羞辱拳打脚踢，她仍然认定嫁鸡随鸡嫁狗随狗。或许是那个时代背景下女性的普遍认知，很悲哀，让人心疼。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/read002_03.webp" alt="富贵" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;">富贵</figcaption></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">直到搬出房子脱下地主的皮衣之后他意识到了之前的自己是个畜生，痛改前非，想和家人好好的过日子。在这里我相信富贵本性不坏，坏的是以前的他只是个孩子，孩子自然很多事情都不懂，不懂得明辨是非，不懂得他的岁月静好是有人在为他负重前行，不懂得有一些东西和人是要去爱惜的，也不懂得钱是会花完的。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">不过没关系，他会长大的。在他失去了一些东西之后他长大了。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/read002_04.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">福贵本就是乡下人，乡下人自然会种地。而在那个年代种地就可以养活一家子人。在之后过的苦日子期间家珍依然不离不弃。家珍是城里姑娘，算不上大富大贵也算家境殷实。夫家没落了，他爹要接她和她肚子里的孩子回城，城里日子起码要好过很多，她百般不愿但又不违背父亲的意思。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">当家珍带着半岁大的有庆回来的时候，作者以福贵的视角省略了家珍和她父亲间的对话。我认为这里多少有些理想化。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">我相信家珍这样的人一辈子就没有违背过任何一个人的意愿，她一直在扮演好妻子，好媳妇，好女儿，好母亲，但是她从来就没做成一个好女人。也或者我体会和理解不到那个时期女性对于婚姻和家庭的渴望或者其他的历史所带给女性的一些看不见的东西。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/read002_05.webp" alt="家珍" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;"></figcaption></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">娘年纪大了，身上的毛病自然就多了，不久就生病了。这个时候的福贵就是家里的顶梁柱了，他要养小的养老的，他懂了一些事情，又长大了一些。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">之后福贵进城拿药碰上了打仗，被强行抓了去当兵，这段看得我很窒息，福贵想活着，怕死。不光是福贵，所有人都想活着，都怕死。所以当有一个人拿着指着你时，你除了死什么都能干。就这样福贵当了兵。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/read002_06.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">在战场那段让人唏嘘心疼，战场上的人命如草芥。大部分只是去送人头的。没有人是不想活着的，尤其是在不容易活下来的时代里，士兵也一样，而且这个战场上的人很多不算是兵，将领也不算是将领。他们会饿，会冷，怕疼，怕死，但大多数把这些都经历了。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">"我就不报恩了，我记得解放军的好。"这大概是那时很多普通老百姓的心里话吧。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">我很少看战争片，因为我害怕不敢看。我不喜欢任何伤害人的事情，但我不喜欢没用。老百姓只是想过安稳的生活，可有时候的安稳就是一些人牺牲了性命换来的。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">有人自愿的，也有人不是自愿的。历史的脚步总会埋葬一堆又一堆的尸体。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/read002_07.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">福贵回来了，他娘死了，凤霞变聋哑了，幸运的是他更加懂得珍惜了。按着普通百姓的步伐往前走着，送儿子去读书，女儿等着出嫁，中间凤霞送人然后又回来。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/read002_08.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">之后人民公社来了，炼铁那段着实离谱，但他们又有什么办法。可怜了有庆的羊，在有庆的世界里羊是他的一部分，羊没了他就少了点什么。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">福贵虽说愚昧但还是宠孩子的，他又给有庆买了羊。之后人民公社的错误蔓延出来了，加上自然灾害，人们没有食物了，没有一顿是吃饱的。凤霞为了一个红薯和不是坏人的王四打起来了，只因为那块红薯可能是救命稻草。当家珍拿回来从她爹牙缝里挤出来的一兜米他们煮饭那节时，我非常紧张，生怕他们在煮自己的米的时候被别人发现和抢去。但实际上不是主角的所有其他人也饿呀。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">最心疼的是有庆，多么好的一个孩子，他们那群孩子善良，纯洁，他是他们家的宝贝，可别人却一点也不心疼他。他血被抽干死了，为了救县长夫人死了。戏剧的是县长是春生，是战场上相依为命的兄弟，是参加了解放军打了胜仗回来的士兵。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">然而文化大革命，春生这个县长成了走资派，忍受不了摧残自杀了。春生也不过是其中一个。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/read002_09.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">凤霞相亲也相到了她的如意郎君。二喜勤劳能干宠媳妇，凤霞很幸福。但没能熬过生孩子，二喜的保大不保小也没能救得了凤霞，这就是命啊。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">家珍也熬不过了，她的一双儿女都去了，她也没有力量了。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/read002_10.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">二喜和苦根相依为命，如果有小孩的人大概都会心疼苦根吧，出生便没了娘，在爸爸的背篓里靠着随便有奶的人喂几口长大的。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">二喜死了，福贵只剩下了苦根，苦根也只有富贵了。我倒不希望苦根死，当然也不希望福贵死，不然苦根更苦了。福贵能为了活着本身而活着。换做是我大概不会了。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/read002_11.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">福贵好像又是个很幸运的人，因为他的某些不幸可能是让他活下来的原因。福贵最起码童年少年都是锦衣玉食，胜过了大多数人的生活。赌博败家后才成了农民，土地改革后龙二死了，福贵没死。龙二说他是替福贵死的。去打仗运气好也活下来了。直到亲人相继离世，他也活下来了。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">书中的他们愚昧，善良，勤劳，怕死。在书中，篇篇有写人每天有十几里甚至几十里都习以为常，我从未想象过这种辛苦。还有现在很少人会为了吃的发愁，所以我们没有任何权利去批判他们中的任何人，因为你不知道他们身上发生了什么。很庆幸，国家变好了，人民能吃饱了，很多病都可以被治疗了。女性地位提高了，人民的认知也变得强了起来。虽然人们身上的一些东西由于某些原因比如害怕死，害怕失去等而变不了外，的确，幸福了很多。但历史总要被铭记的。</p></section>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序自动化实现:Automator</title>
      <link href="/032-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
      <url>/032-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p><img src="https://tikolu.net/i/kbtml" alt=""><br>微信小程序自动化测试完全实现。</p><span id="more"></span><p>参考:<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/auto/automator.html">官方文档</a></p><h3 id="单个测试文件测试流程">单个测试文件测试流程</h3><ol><li>安装小程序自动化SDK配合jest实现小程序自动化测试：<code>miniprogram-automator</code> 、<code>jest</code></li><li>示例 index.spec.js</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> automator = <span class="built_in">require</span>(<span class="string">&#x27;miniprogram-automator&#x27;</span>)</span><br><span class="line">automator.<span class="title function_">launch</span>(&#123;</span><br><span class="line">  <span class="attr">cliPath</span>: <span class="string">&#x27;/Applications/wechatwebdevtools.app/Contents/MacOS/cli&#x27;</span>, <span class="comment">// 工具 cli 位置</span></span><br><span class="line">  <span class="attr">projectPath</span>: <span class="string">&#x27;Users/liugezhou/Desktop/miniprogram&#x27;</span>, <span class="comment">// 项目文件地址</span></span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="keyword">async</span> miniProgram =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> page = <span class="keyword">await</span> miniProgram.<span class="title function_">reLaunch</span>(<span class="string">&#x27;/pages/index/index&#x27;</span>)</span><br><span class="line">  <span class="keyword">await</span> page.<span class="title function_">waitFor</span>(<span class="number">500</span>)</span><br><span class="line">  <span class="keyword">const</span> element = <span class="keyword">await</span> page.$(<span class="string">&#x27;.btn&#x27;</span>)</span><br><span class="line">  <span class="keyword">await</span> element.<span class="title function_">tap</span>()</span><br><span class="line">  <span class="keyword">await</span> miniProgram.<span class="title function_">close</span>()</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br></pre></td></tr></table></figure><ol start="3"><li>启动 <code>node index.spec.js</code>,完成单个示例测试。</li></ol><h3 id="自动化测试">自动化测试</h3><ol><li>在小程序根目录下新建，tests/pages/liugezhou.spec.js</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> automator = <span class="built_in">require</span>(<span class="string">&#x27;miniprogram-automator&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="title function_">describe</span>(<span class="string">&#x27;index&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> miniProgram;</span><br><span class="line">  <span class="keyword">let</span> page;</span><br><span class="line">  <span class="keyword">const</span> wsEndpoint = <span class="string">&#x27;ws://127.0.0.1:9420&#x27;</span>;</span><br><span class="line">  <span class="title function_">beforeAll</span>(<span class="title function_">async</span>() =&gt; &#123;</span><br><span class="line">    miniProgram = <span class="keyword">await</span> automator.<span class="title function_">connect</span>(&#123;</span><br><span class="line">      <span class="attr">wsEndpoint</span>: wsEndpoint</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;, <span class="number">30000</span>);</span><br><span class="line"> </span><br><span class="line">  <span class="title function_">it</span>(<span class="string">&#x27;test liugezhou/index.wxml&#x27;</span>, <span class="title function_">async</span>() =&gt; &#123;</span><br><span class="line">   page = <span class="keyword">await</span> miniProgram.<span class="title function_">reLaunch</span>(<span class="string">&#x27;/pages/liugezhou/index&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> page.<span class="title function_">waitFor</span>(<span class="number">500</span>)</span><br><span class="line">    <span class="keyword">const</span> element = <span class="keyword">await</span> page.$(<span class="string">&#x27;.liugezhou&#x27;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">await</span> element.<span class="title function_">attribute</span>(<span class="string">&#x27;class&#x27;</span>))</span><br><span class="line">    <span class="keyword">await</span> element.<span class="title function_">tap</span>()</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br></pre></td></tr></table></figure><ol start="2"><li>package.json中添加scripts命令</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;e2e&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jest ./tests/pages liugezhou.test.js --runInBand&quot;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>关闭开发工具客户端，</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd  /Applications/wechatwebdevtools.app/Contents/MacOS/ </span><br><span class="line"></span><br><span class="line">./cli --auto  /Users/liugezhou/Desktop/miniprogram  --auto-port 9420</span><br></pre></td></tr></table></figure><ol start="4"><li><p>在终端根目录下执行<code>npm run e2e</code>即可发现测试通过</p></li><li><p>miniProgram提供了控制小程序的方法<br>下面的方法用熟之后，可以熟练的编写自动化测试代码了。</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">miniProgram = <span class="keyword">await</span> automator.<span class="title function_">connect</span>(&#123;</span><br><span class="line">    wsEndpoint,</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><ul><li>miniProgram.pageStack():获取小程序页面堆栈</li><li>miniProgram.navigateTo():保留当前页面，跳转到某个页面</li><li>miniProgram.redirectTo():关闭当前页面，跳转到某个页面</li><li>miniProgram.navigateBack():关闭当前页面，返回上一页面或多级页面</li><li>miniProgram.reLaunch(): 关闭所有页面，打开到应用内的某个页面</li><li>miniProgram.currentPage(): 获取当前页面(路径、参数等)。</li><li>miniProgram.systemInfo():获取系统信息</li><li>miniProgram.callWxMethod(method,params):调用 wx 对象上的指定方法，调用的方法名。</li><li>miniProgram.pageScrollTo(number):将页面滚动到目标位置(同wx.pageScrollTo())</li><li>miniProgram.screenshot({path:‘’}):对当前页面进行截图，若不传options，则返回base64编码</li><li>miniProgram.exposeFunction(name,bindingFunction):在 AppService 全局暴露方法，供小程序侧调用测试脚本中的方法。</li><li>miniProgram.stopAudits({path:‘’}):停止体验评分并获取报告</li><li>miniProgram.disconnect():断开与小程序运行时的连接</li><li>miniProgram.close():断开与小程序运行时的连接并关闭项目窗口。</li><li>miniProgram.on(‘exception’,err=&gt;{}):页面JS出错时触发</li></ul><hr><ul><li>page.path: 页面路径</li><li>page.query: 页面参数</li><li>page.$(“.demo”):  获取页面元素</li><li>page.$$(“.list”): 获取页面元素数组</li><li>page.waitFor():等待直到指定条件成立。<ul><li>number - 指定时间之后，结束等待</li><li>string - 参数被当成选择器，当该选择弃元素个数不为0时，结束等待</li><li>Function - 断言函数，返回true时，结束等待。</li></ul></li><li>page.data():获取页面渲染数据</li><li>page.setData():设置页面渲染数据</li><li>page.size():获取页面的可滚动宽度和高度</li><li>page.scrollTop():获取页面的滚动位置</li><li>page.callMethod():调用页面指定方法</li></ul><hr><p>element 通过 page.$()获得</p><ul><li>element.tagName:标签名，小写</li><li>element.$():在元素范围内获取元素</li><li>element.$$():在元素范围内获取元素数组</li><li>element.size():获取元素的高度和宽度</li><li>element.offset():获取元素的绝对位置 left和top</li><li>element.text():获取元素文本</li><li>element.attribute():获取元素特性</li><li>element.property():获取元素属性</li><li>element.wxml():获取元素wxml</li><li>element.value():获取元素值</li><li>element.style(‘color’):获取元素样式值</li><li>element.tap(): 点击元素</li><li>element.longpress(): 长按元素</li><li>element.touchstart(): 手指开始触摸元素</li><li>element.trigger(str,obj):触发元素事件</li><li>element.input(str):输入文本，仅 input、textarea 组件可以使用</li><li>element.callMethod():调用组件实例指定方法，仅自定义组件可以使用。</li><li>element.data():获取组件实例渲染数据，仅自定义组件可以使用。</li></ul><p>我的博客即将同步至腾讯云开发者社区，邀请大家一同入驻：<a href="https://cloud.tencent.com/developer/support-plan?invite_code=2ptwka3frvuok">https://cloud.tencent.com/developer/support-plan?invite_code=2ptwka3frvuok</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*77):假期结束</title>
      <link href="/202240-No77/"/>
      <url>/202240-No77/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202240.webp" alt="电影:香水Perfume" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;"></figcaption></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="padding: 0 10px; word-spacing: 0px; word-wrap: break-word; text-align: left; line-height: 1.6; letter-spacing: .034em; color: rgb(63, 63, 63); font-size: 16px; word-break: all; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周是2022年的第<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">40周</strong>(10.02-10.09).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a href="https://blog.liugezhou.online" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">我的博客</a><br><span style="display:block;text-align:right;color:blue;">No.*77</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; border-top: 1px solid black; height: 1px; padding: 0; border: none; text-align: center; background-image: linear-gradient(to right,rgba(60,122,198,0),rgba(60,122,198,0.75),rgba(60,122,198,0));"><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周主题:假期结束</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">每到这个时候，我就像那些时刻在关注社会新闻的媒体人一样：焦虑的寻找社会热点、搜刮小作文素材，这一周的主题记录些什么？</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">虽然这个过程算不上痛苦，但确实很是犯难，每周的主题总是放在最后，半天憋不出来东西。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">没有笔墨非要抒发显得很做作。可<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">本周主题</code>这个模块的目的就是为了搜刮想法，进行一些思考，记录一些想法，养成做作的习惯。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">写了这么几期后，菜越发的发现根本就没有自己的想法。倘若没追个热点，没看些观点，没看些评论，根本就产生不了自己的想法。一次一次的验证想法后，自以为对的东西会愈加坚固，可坚持认为对的一定是对的吗？<br>那肯定不是。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">能确定对的是无数事件证明权力一定是应该关在笼子里的。<br><code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">贵族重权利，百姓重礼仪</code>。<br>突然觉得：在走向共同富裕的道路上，又不打击社会精英积极性，真是一门学问啊。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">最后再突然觉得一下：那些敢于批判、敢于说出真话的人，某些方面看真是一个不同寻常的人。<br>似乎仅仅只是一个不同寻常的人了。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">关注&amp;工具</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">2022诺贝尔物理学奖</span><span class="suffix" style="display: none;"></span></h3><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202240_01.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">凑个热闹，总结一下2022年诺贝尓物理学奖到底研究了个什么。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">首先，2022年的诺贝尔物理学奖颁发给了在<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">量子力学</code>领域有突出贡献的三位科学家，他们分别来自法国、美国和奥地利。奖励他们用纠缠光子验证了量子不遵循贝尔不等式，开创了量子信息学。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">然后，什么是量子纠缠？贝尔不等式又是什么呢？</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">首先，经典物理学或者说传统物理学，或者说爱因斯坦的相对论，说的是任何东西的传输都是有时间的，这个时间的上限是光速。<br>量子力学不遵循这个规律，比如这个<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">量子纠缠</code>,一对纠缠的光子对，只要测量了其中一个光子的状态，另外一个光子不用测量也能知道它的状态。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">之前我在看 <a href="https://mp.weixin.qq.com/s/-u3b1E9UXbO5H8attOeNvw" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">七堂物理极简课</a> 这本书的时候，总结如下：</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202240_02.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">可以简单理解为他们的获奖证明了爱因斯坦的错误，光速这个限制在量子力学中不成立。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://dartools.com/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">工具达人</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">工具达人是一个导航类网站，各种实用工具的导航，影视、资源、设计、工具、音乐、运营等等。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202240_03.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://cilitiantang.top/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">磁力天堂</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一个好用的磁力资源导航网站，网站介绍：一站在手资源我有!</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202240_04.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">一周图片</span><span class="suffix"></span></h1><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202240_05.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202240_06.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202240_07.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202240_08.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202240_10.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; line-height: 1.75em; font-size: 17px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">文摘</span><span class="suffix"></span></h1><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">我们曾经那么好，现在却连声问候，都怕是打扰。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">沉默带给你的好处很多，摆低姿态，变的谦虚，换言之就是，隐藏你的聪明。<br>越聪明的人，越懂得沉默，就像成熟的稻子，垂下稻穗。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">如果你们想成为重要人物，就必须首先使自己承认“我确实很重要”，而且要真正的这么觉得，别人才会跟着这么想。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">我行走于人世己近八十年，我见过不会吃牛排的人，却没有见过一个不贪心的人</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">平庸将你的心灵烘干到没有一丝水分，然后荣光才会拨动你心灵最深处的弦。</p></blockquote></blockquote><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">编码相关</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://dub.sh/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">dub.sh</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">dub.sh: 一个开源的短链接服务，内置分析+免费自定义域的开源链接缩短器。</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: black; list-style-type: disc;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">内置的分析 Dub为链接提供了一个强大的分析仪表板，包括地理位置、设备和浏览器信息。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">自定义的域：可以很容易地在Dub上配置自定义域-只需要添加一个A/CNAME记录到你的DNS提供程序，就可以开始了</section></li></ul><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202240_09.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://1024code.com/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">1024code</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">官方介绍：</p><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="border: none; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; background: rgba(0, 0, 0, 0.05); color: #6a737d; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; padding: 15px 20px; line-height: 27px; background-color: rgb(239, 239, 239); border-left: none; display: block;"><p style="padding-bottom: 8px; padding-top: 23px; margin: 0px; line-height: 26px; padding: 0px; font-size: 15px; color: rgb(89,89,89);">1024Code 是一个免费的、协作式的、基于浏览器的 IDE 环境，支持 10 多种编程语言，支持 Spring 、Vue 、React 等框架，还支持很多图形库，是刚入门的程序员学习编程，与朋友一起创造作品，分享交流的最佳选择。</p></blockquote><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">现在注册需要申请，体验了一下社区内的在线版本，感觉做的还挺棒，申请目前还么通过。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://github.com/mdn/js-examples" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">ES Module</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">MDN讲解 ESModule的代码仓库。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">看到这个仓库，是在看Vite的介绍中，提到了现在浏览器已经开始原生支持ES Module的导入到出，也就是说<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">import</code>和<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">export</code>现在是可以直接被浏览器解析的。<br>因此在了解Vite前对ESModule的代码示例掌握很有必要。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周小结</span><span class="suffix"></span></h1><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: black; list-style-type: disc;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">电影:《子弹列车》《香水》</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">小说:王小波的《future world》</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">十一假期一晃而过，没有什么特别的事</section></li></ul><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*76):国庆快乐</title>
      <link href="/202239-No76/"/>
      <url>/202239-No76/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202239.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="padding: 0 10px; word-spacing: 0px; word-wrap: break-word; text-align: left; line-height: 1.6; letter-spacing: .034em; color: rgb(63, 63, 63); font-size: 16px; word-break: all; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周是2022年的第<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">39周</strong>(09.26-10.02).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a href="https://blog.liugezhou.online" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">我的博客</a><br><span style="display:block;text-align:right;color:blue;">No.*76</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; border-top: 1px solid black; height: 1px; padding: 0; border: none; text-align: center; background-image: linear-gradient(to right,rgba(60,122,198,0),rgba(60,122,198,0.75),rgba(60,122,198,0));"><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周主题:国庆快乐</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">微博上看到一个作家<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">唐不闻</code>，关于谈爱国的博，文字坦白真挚又温和：</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"><code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">坦白说，我对这个国家的爱，大半是出于一种自私的感情。因为我从小沉迷于汉语文学，因为我生活在此处且有生之年也不打算移民去别处，因为我的家人孩子也都生于斯长于斯，我有什么理由不希望这片土地变得越来越好。我对这种“好”的定义是具体而又清晰的，以前说过，今天仍然可以再说一次。我希望这里，公民的权益和尊严可以得到更好的维护，文艺创作不被更多地干扰，每个人关注自己的修养胜过别人的道德，人与人的交流是温和的对话而非敌对的攻击，我把这种希望理解为一个普通人的爱国。</code></p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">关注&amp;工具</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://mp.weixin.qq.com/s/JAwiwS1Zudca9WxMwWk6VA" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">公号文章：王小波生前珍贵视频及录音</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">公众号的一篇文章，两段影音资料。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">第一则为1996年意大利纪录片制作人安德烈对王小波的访谈视频。<br>第二则为1995年中国作家黄集伟邀请王小波做客“孤岛访谈”广播时的录音。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">在这些对话中，王小波谈及了他对文学、同性恋、宗教等问题的看法，以及他的一些创作心路。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202239_01.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://wallstreetcn.com/articles/3665281" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">一代人经历衰退，一代人重拾信心</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">V社区看到上一篇帖子：简单介绍自己的生活状态，叹道为什么没有欲望了？</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">评论区中有人推荐了上面👆这篇文章。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202239_02.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://mpower.in-en.com/html/power-2285297.shtml" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">多余的电去哪了</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">阮一峰的科技周刊里面推荐的一篇文章科普。<br>我们经常看到哪哪哪停电，如果电发多了，那多余的电去哪了？</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">文章主要总结为：</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: black; list-style-type: disc;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">首先发电量一定等于用电量。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">目前电能储存微乎其微，忽略不计，不存在多余的电。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">弃风弃水指风能、太阳能、水电发多了，只能弃掉，目前是没办法的事。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">储电研究在在各大企业、各大高校如火如荼的研究中。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">发电机消耗的能源是根据用户的用电量决定的。</section></li></ul><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://lusun.com/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">录屏工具:芦笋</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">芦笋是一款极简录屏工具。<br>操作非常简单，界面简单，设置简单，大道至简，邀请20人得年度会员。<br>尝试了一下，录制2K视频的时候，电脑嗡嗡的响。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202239_03.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://github.com/keycastr/keycastr" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">keycastr</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">KeyCastr，一个开源的击键可视化工具。<br>对于录视频讲解过程中，拆解键盘输入非常友好，代码开源。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202239_04.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">一周图片</span><span class="suffix"></span></h1><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202239_05.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202239_06.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202239_07.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202239_08.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202239_09.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202239_10.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202239_11.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202239_12.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; line-height: 1.75em; font-size: 17px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">文摘</span><span class="suffix"></span></h1><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">人年纪越大越难感受到快乐，这是一个很难改变的事情。快乐说到底，只是人体内分泌大幅变动的结果，总会回落到正常水平，我们不可能永远维持在这个状态。<br>追求平静，比追求快乐，是一个更好的方向。 平静能带给人更长久的幸福。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">你从自己的一次失败中学到的东西，比阅读一千个成功故事学到的更多。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">你需要在互联网表达你自己。<br>如果你在互联网上表达了你真正的兴趣，有一股神奇的力量会将你推给志同道合的人，让你们靠近。这些人会成为你最好的朋友、同事，有时甚至是伴侣。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">大部分人心中带着某种优越感，自认为在某些方面比别人厉害、综合水平在平均线之上。要么比别人聪明，要么比别人有品位，要么比别人清醒——众人皆醉我独醒是一种普遍的天真。<br>这种“普信”是我们需要的“积极幻觉”，支撑我们活下去、去面对令人怀疑的人生，缓解现代社会给大多数人造成的失败感</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">🔆 对于技术来说，标准、通用、简化的功能和自动化的流程总是所有问题的最终的答案<br>💊 对于混职场来说，只有把代码搞复杂搞混乱，你才会被有更多的存在感，你的老板才会觉得你无法被取代</p></blockquote></blockquote><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">编码相关</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://ruanyifeng.com/blog/2020/04/git-cherry-pick.html" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">git cherry-pick 教程</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">阮老师的一篇关于cherry-pick的教程分享。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">对于多分支的代码库，将代码从一个分支转移到另一个分支是常见需求。<br>这时分两种情况。一种情况是，你需要另一个分支的所有代码变动，那么就采用合并（git merge）。另一种情况是，你只需要部分代码变动（某几个提交），这时可以采用 Cherry pick。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">Grammaly</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">Vscode插件，可以直接在vscode编辑器中进行英语语法或者单词的修正。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://www.jacopocolo.com/hexclock/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">hexclock</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">创意小网站，用十六进制颜色值显示当前时间。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周小结</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周囫囵吞枣的看了部小说《青瓷》。<br>主要讲述主人公张仲平在事业和女人之间论道权衡，直到最后几分钟的开放结局令人意犹未尽又不觉唏嘘。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*75):一篇就会速成法</title>
      <link href="/202238-No75/"/>
      <url>/202238-No75/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238.webp" alt="迪拜的女孩" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;"></figcaption></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="padding: 0 10px; word-spacing: 0px; word-wrap: break-word; text-align: left; line-height: 1.6; letter-spacing: .034em; color: rgb(63, 63, 63); font-size: 16px; word-break: all; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周是2022年的第<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">38周</strong>(09.19-09.25).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a href="https://blog.liugezhou.online" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">我的博客</a><br><span style="display:block;text-align:right;color:blue;">No.*75</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; border-top: 1px solid black; height: 1px; padding: 0; border: none; text-align: center; background-image: linear-gradient(to right,rgba(60,122,198,0),rgba(60,122,198,0.75),rgba(60,122,198,0));"><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周主题:一篇就会速成法</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">上周在Github上看到一个Vim教程的仓库,跟着教程学习,在博客上发了一篇技术文：<a href="https://blog.liugezhou.online/030-%E4%B8%80%E7%AF%87%E5%B0%B1%E5%AD%A6%E4%BC%9Avim" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">《一篇就学会vim》</a>。<br>然后突然最近几天博客访问相比平时暴增，最高的一天网站pv 390。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">和平常比很不平常，通过百度统计看到大多数的访问来源是weibo。<br>于是去weibo中搜相关资讯，果然发现被一互联网科技博主推荐。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">我就想了一下，为什么可以收获这么多的曝光。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">第一点毋庸置疑的是流量推荐。<br>第二点是大家对Vim的偏爱程度超过一般想象。<br>第三点是因为这篇文章的标题有靴微的诱惑力： <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">一篇就会</code>。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">速成的渴望在心间徘徊，想到我收藏了很多的课程，许多绚丽的网站，书单、电影，列出了很多的TODO List。信息的爆炸、专注力的持续下降，许多一直躺在收藏夹吃亏。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">记录于此，就是提醒自己，把收藏夹拿出来晾晾，找找想做的事，读读想读的书，多尝试几次，总会有一件宝贝，让人爱不释手。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">关注&amp;工具</span><span class="suffix"></span></h1><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content"><a href="https://www.autopiano.cn/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">自由钢琴</a></span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一个很Cool的网站，在线乐器弹奏网站。<br>可以使用键盘模拟演奏不同的乐器，还配有一些网友上传的乐谱，几个按键就可以体验弹奏一曲小星星。<img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_02.webp" alt="自由钢琴" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/2022_01.gif" alt="gif" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content"><a href="https://www.gif.cn/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">gif.cn</a></span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">gif中文网，可以将制作的视频合成gif。<br>适用几次后收费，终身买断199元。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_03.webp" alt="gif中文网" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;">gif中文网</figcaption></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">接着又搜到一个转gif图的在线免费网站 <a href="https://convertio.co/zh/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">convertio</a></p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_04.webp" alt="convertio" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;">convertio</figcaption></figure><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content"><a href="https://app.grammarly.com/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Grammarly</a></span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">Grammarly是一款在线语法纠正和校对工具，支持Windows、Mac、iOS和Android等多个平台，有免费体验和收费版。<br>它能够检查单词拼写、纠正标点符号、修正语法错误、调整语气以及给出风格建议等；<br>对学术写作来说，Grammarly还可以帮助查重。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_05.webp" alt="Grammarly" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;">Grammarly</figcaption></figure><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content"><a href="https://sspai.com/post/68706" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Infuse7介绍</a></span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">Infuse是一款Apple平台的播放器，这篇文章介绍了关于Infuse播放器的内容。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_06.webp" alt="Infuse7" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;">Infuse7</figcaption></figure><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content"><a href="https://www.anumberfromtheghost.com/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">A Number From The Ghost</a></span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">作者使用 Three.js 为他的音乐制作了这个基于浏览器的游戏。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">网站作者介绍：</p><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="border: none; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; background: rgba(0, 0, 0, 0.05); color: #6a737d; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; padding: 15px 20px; line-height: 27px; background-color: rgb(239, 239, 239); border-left: none; display: block;"><p style="padding-bottom: 8px; padding-top: 23px; margin: 0px; line-height: 26px; padding: 0px; font-size: 15px; color: rgb(89,89,89);">听音乐的虚拟世界。没有目标ーー只是探索和倾听。就好像我没有用音乐来支持游戏，而是用游戏来支持我的音乐。只不过这个游戏很简单，并不是真正的游戏。</p></blockquote><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_07.webp" alt="Ghost" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;">Ghost</figcaption></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://hackertyper.net/#" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Hacker Typer</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一个古老的网站，创建于2011年。<br>可以导入自己的本地文件输出，有形装逼的好利器。<img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_08.webp" alt="Hacker Typer" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">一周图片</span><span class="suffix"></span></h1><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_09.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_10.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_11.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_12.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_13.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_14.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_16.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_17.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_18.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_19.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; line-height: 1.75em; font-size: 17px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">文摘</span><span class="suffix"></span></h1><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">读书有三个目的，自己能学到什么方法，自己有什么可改进的，自己如何做到更好。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">人们想象自己是什么样子，那他们往往就是什么样子，他们终会变成自己所想的那样。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">上山擒虎易，开口告人难</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">人心难测，偶尔需要试一试；人言可畏，听之但不能因其而移志；人情难却，胜在礼尚往来；人缘难结，晓之以情，动之以利，即可。</p></blockquote></blockquote><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">编码相关</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://eastmanreference.com/complete-list-of-applescript-key-codes" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Complete list of AppleScript key codes</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">完整的 AppleScript 按键列表。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_20.webp" alt="AppleScript" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;">AppleScript</figcaption></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://devhints.io/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">cheatsheets</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一些开发语言和常用开发工具的命令集合。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_21.webp" alt="devhints" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;">devhints</figcaption></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://icons.radix-ui.com/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Radix Icons</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">开源的一套 SVG 图标网站</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_22.webp" alt="Radix" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;">Radix</figcaption></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">git clone</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">在国内网络环境下进行 git clone 和 git submodule update 前，执行这个命令可以解决 GitHub 无法访问或速度慢的问题。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202238_23.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://github.com/liugezhou/autoim.vim" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Vim自动切换输入法</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周在学习Vim的过程中，遇到了输入法切换的问题。<br>经过一番折腾，还是失败了，这个仓库用来记录我在Vim自动切换输入法过程中的旅程。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周小结</span><span class="suffix"></span></h1><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: black; list-style-type: disc;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">Vim仓库基础语法学习。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">博文-Vim输入法切换(最终失败)</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">电影《迪拜的女孩》</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">back to basic frontend (5 days)</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">百词斩(5 days)</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">游戏《God of War》</section></li></ul><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim切换输入法</title>
      <link href="/031-Vim%E6%8F%92%E4%BB%B6/"/>
      <url>/031-Vim%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="背景">背景</h3><p>最近刚入门vim。<br>这篇文章，记录对 vim 切换输入法进行了解的一个过程，以及在了解 vim 插件过程中的一些心路历程。</p><h3 id="历程">历程</h3><ol><li>最开始了解 vim 插件是有这么一个需求：</li></ol><blockquote><p>每次 Vim 编辑从 insert mode 切换到 normal mode 的时候，若在输入模式中是中文，切回到普通模式的时候，仍旧是中文，这个时候总是需要切换一下输入法到英文，才可以在普通模式下快速输入命令，每次都这么搞的话，非常不方面，那么有没有一个插件可以解决这个问题呢？</p></blockquote><ol start="2"><li>然后我在 Github 上搜 <code>vim输入法切换</code>，搜到一个仓库<a href="https://github.com/lipingcoding/autoim.vim">lipingcoding/autoim.vim</a></li></ol><blockquote><p>看到仓库的 star 少，源码也不多，于是我就想那我为什么不自己在本地先去实现一下呢?</p></blockquote><ol start="3"><li>vim插件开发第一次接触</li></ol><blockquote><p>于是先去搜插件开发入门版，看到了这篇文章：<a href="https://wxnacy.com/2017/12/30/vim-plugin-write-helloworld/">Vim 如何编写插件：Hello World</a><br>这篇文章学到的内容是：</p><ul><li>source引入vim文件</li><li>在~/.vim/plugin下的.vim文件会自动查找，不用source声明</li><li>函数名和执行命令首字母必须大写</li></ul><p>最后照着这篇文章几分钟后在本地就实现了一个 <code>Hello World</code>的入门级插件体验。</p></blockquote><ol start="4"><li>然后我又回来看<code>vim输入法切换</code>的这个仓库，核心代码就四个文件：<br><img src="https://tikolu.net/i/quehu" alt="autoim"></li></ol><blockquote><p>仓库 fork、clone到本地，查看源代码。<br>发现<code>cmd_space.scpt</code>和<code>ctrl_space.scpt</code>这两个文件打不开，也没接触过。且这个仓库只提供了<code>command+space</code>和<code>ctrl + space</code>两种输入法方式切换，而我本地用的是<code>caps lock</code>键。</p></blockquote><ol start="5"><li>然后看仓库说明文档，文档最后给出思路来源为<a href="https://taoshu.in/vim/vim-auto-im.html">涛叔的博客</a><br>接着看涛叔的博客内容，明白了仓库中 autoim.vim 的代码实现思路，以及为什么不能用<code>caps lock</code>切换。<br>这篇文章主要学到的点有：</li></ol><blockquote><ul><li><a href="https://sspai.com/post/43758#!">AppleScript</a></li><li><a href="https://eastmanreference.com/complete-list-of-applescript-key-codes">键盘编码参考</a></li><li><code>scpt</code>文件打开、编辑方式(Mac 自带的脚本编辑器编辑)</li><li>vim 提供的 InsertEnter 和 InsertLeave 两个事件</li></ul></blockquote><ol start="6"><li>回到仓库以<code>cmd_space.scpt</code>为例，Mac自带脚本编辑器打开后长这个样子：<br><img src="https://tikolu.net/i/feahh" alt=""></li></ol><blockquote><p>接着看<code>ctrl_space.scpt</code>,发现和<code>cmd_space.scpt</code>一样，于是将<code>command</code>修改为<code>control</code>后提交 pull request。</p></blockquote><ol start="7"><li>然后使用我自己 fork 的仓库，在<code>.vimrc</code>中添加配置：<br><img src="https://tikolu.net/i/fskwl" alt=""></li></ol><blockquote><p>插件的状态、安装、更新、删除命令(<code>PlugStatus</code> <code>PlugInstall [name]</code> <code>PlugUpdate [name]</code> <code>PlugClean(.vimrc中去掉插件说明执行)</code>)<br>插件源码路径<code>~/.vim/plugged/autoim.vim</code><br>这么搞了一波后进行测试，发现第一次从 inset 模式切换到 normal 模式有一定概率可以实现输入法切换，但是第二次就开始快速闪烁，切换不过来了。。。<br>接着把代码在本地进行修改只监听进入普通模式，试了一下也是不太可以。</p></blockquote><ol start="8"><li>这条路走不通，回到5，完全以<a href="https://taoshu.in/vim/vim-auto-im.html">涛叔的博客</a> 在本地实现。</li></ol><ul><li>如6中所示，当点击小三角形进行测试的时候，依然出现的是第二次就不可以正常切换了。</li><li>在终端中使用<code>osascript ~/.vim/liugezhou/ctrlspace.scpt</code>测试，依然是第二次不能切换问题，</li><li>目前到这来看，自动切换输入法是失败了。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*74):科技向善</title>
      <link href="/202237-No74/"/>
      <url>/202237-No74/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_01.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="padding: 0 10px; word-spacing: 0px; word-wrap: break-word; text-align: left; line-height: 1.6; letter-spacing: .034em; color: rgb(63, 63, 63); font-size: 16px; word-break: all; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周是2022年的第<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">37周</strong>(09.12-09.18).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a href="https://blog.liugezhou.online" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">我的博客</a><br><span style="display:block;text-align:right;color:blue;">No.*74</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; border-top: 1px solid black; height: 1px; padding: 0; border: none; text-align: center; background-image: linear-gradient(to right,rgba(60,122,198,0),rgba(60,122,198,0.75),rgba(60,122,198,0));"><span id="more"></span><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周主题:科技向善</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">腾讯这个庞然大物的座右铭是：<br>科技向善。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">只是<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">*************************************************************************************************************************</code></p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">却<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">***********************************************************************************************</code></p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">而且<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">***************************************************************************************************************************************************************·</code></p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">因此<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">*********************************************************************</code></p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">关注&amp;工具</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://mp.weixin.qq.com/s/0xW6KqD0Db-wwOOtdCuDyg" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">困在城中村的"中国梵高"</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">大象放映室的一篇公号文章，配有视频。<br>讲述了一个叫做赵小勇的猛士，15岁开始外出打工，后来到深圳画工的集散地——大芬村，为了生计，成为画工，从油画开始学起，直到开来自己的画廊。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">比较震撼的是，从赵小勇的故事看到农民工在绘画这个领域所做的贡献，从不一样的视角看到的更阔的画面。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_02.webp" alt="中国梵高" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;">中国梵高</figcaption></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">羊了个羊</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周的羊了个羊小游戏非常的爆火，开始看到各种介绍噱头，我是以为我不会玩的。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">可奈何玩一把的成本很低，于是不自觉的手残玩了快有十把，玩下去的兴趣着实被浇灭了。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">outlook邮箱</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">最近在整合自己的邮箱，综合评分和真实体验选择了outlook邮箱。<br>App Store 各大主流邮箱客户端评分：</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_03.webp" alt="网易邮箱" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;">网易邮箱</figcaption></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_04.webp" alt="Foxmail" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;">Foxmail</figcaption></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_05.webp" alt="Gmail" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;">Gmail</figcaption></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_06.webp" alt="outlook" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;">outlook</figcaption></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">bitwarden</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">Chrome插件：密码管理工具<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">bitwarden</strong></p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">相比1PassWord的收费版本，bitwarden更为友好、干净。<br>免费版功能足够使用，很棒。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://sspai.com/post/75740" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Adobe 收购 Figma 之后会怎样</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">👆 少数派的一篇博文。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">近日（2022/9/15）设计圈有个大新闻，Adobe 公布了收购 Figma 的消息。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_07.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://amymind.com/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Amyminde</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">在线工具：思维导图和画板，体验很棒。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_08.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://remover.zmo.ai/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">remover</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">使用AI魔法删除任何不想要的内容，免费。水印或缺陷等情况，只需要上传你的照片，鼠标魔法选中就可以自动删除!</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">美女和帅哥的腿被我remove掉后：</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_09.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">一周图片</span><span class="suffix"></span></h1><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_10.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_11.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="202237_12" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_12.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_13.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_14.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_15.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_16.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_17.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_18.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_19.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_20.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="202237_21" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_21.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_22.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_23.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; line-height: 1.75em; font-size: 17px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">文摘</span><span class="suffix"></span></h1><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">世上有一样东西，比任何别的东西都更忠诚于你，那就是你的经历，以及你在经历中的感受，痛悟和思考……</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">如果你对人生感到迷茫、焦虑，不知道该做什么好，那就先从自己身边的小事开始做起。<br>把你马上就可以解决的问题，先解决掉。<br>小事解决得越来越多，你的处境会越来越好，处境也会随之改善。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">这个世界上不存在任何一个人能与你的三观完全相同。<br>甚至你自己在不同时期三观都会有区别。<br>如果你总是因为三观稍微有差异就对别人产生敌意，那么你只能活在自己妄想的世界里</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">“我们苦难的源头是比较。”</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">“人与人之间始终保持着一种无法消弭的距离，承认这种距离，承认自己和对方的形同陌路，才不至于把自己的意见强加到对方身上；<br>承认这种距离，才不会去利用对方或者评价对方，甚至连赞扬也是不被允许的。维持这种关系的纯净，这才是真正的友谊。 ”<br>——莫里斯 . 布朗肖</p></blockquote></blockquote><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">编码相关</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://proxyman.io/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Proxyman</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">抓包工具：Modern. Native. Web Debugging Proxy。<br>有APP和桌面版本。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">vim屏幕滚动</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">上周在学vim的屏幕滚动的时候，有这么四个命令：<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">ctrl + f</code>向下滚动一屏，<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">ctrl + b</code>向上滚动一屏，<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">ctrl + u</code>向上滚动半屏，<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">ctrl + d</code>:向下滚动半屏。<br>实在是不知道对这四个命令如何记忆，开始的时候，我沾沾自喜的这么记：<br><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_code1.webp" alt="202237_code1" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;">关于d和u的记忆，我之前一定是脑子锈了，d找到了divorce这个单词，u直接语义化了。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">直到，本周在经过一大佬的指点，原来f就是front，b为back，u为up，d为down，这么记简直两下就记住了。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://firstpr.me/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">First Pull Request</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一款查询 GitHub 上面的任意开发者的第一个 PR 的在线工具。<br>点击左下角<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">See every pull request</code>还可以查看所有的历史PR提交。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_24.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://xsgames.co/animatiss/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">AnimatiSS</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一款用 CSS 实现的动画样式库，可以在线演示和一键复制,初次加载的有一些缓慢。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202237_25.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周小结</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">最近没有成块的输出，每到总结一周所得的时候，总是两手一摊，叹道又没做什么。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">最近使用滴答清单App(和Chrome插件版)记录自己的Todo List。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">滴答清单有一个养成习惯的功能，我记录了：</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: black; list-style-type: disc;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">开启一天好心情</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">背单词</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">周小结</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">刷题</section></li></ul><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">ToDo就比较碎片化，比如博客评论系统整理、邮箱整理、vim仓库学习第XX章、牛客刷题XXX、正则复习、Webpack复习、React课程学习、TS教程、跑步、写小说、拍XX视频等等，慢慢的很多的计划就被一搁再搁。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">每周一次总结的节奏总是一种特赦：孩子，放下执念，从头再来，你又不是真的那么喜欢。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">🤡</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一篇就学会vim</title>
      <link href="/030-%E4%B8%80%E7%AF%87%E5%B0%B1%E5%AD%A6%E4%BC%9Avim/"/>
      <url>/030-%E4%B8%80%E7%AF%87%E5%B0%B1%E5%AD%A6%E4%BC%9Avim/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/blog-vim.webp" alt="vim"></p><span id="more"></span><p>学会一个软技能，总结一篇文章就够了。<br>剩下要做的就是不停的练习，不停的尝试，本文是在学习<a href="https://github.com/wsdjeg/Learn-Vim_zh_cn">这个仓库</a>之后的极简总结中。<br>主要作为一个备忘录使用。</p><p>长期更新。。。</p><h2 id="一、Vim基础介绍">一、Vim基础介绍</h2><ol><li><code>vim</code>           看到一个介绍页面</li><li><code>i</code>              进入编辑模式</li><li><code>:</code>              光标将移动到屏幕底部，在这里您可以输入命令</li><li><code>Esc</code>            切回普通模式</li><li><code>:quit</code>          退出编辑模式,简写为:q</li><li><code>:write </code>        保存模式，简写为:w</li><li><code>:w f.md</code>        如果是新建的一个没有名字的文件，以f为名字保存文件</li><li><code>:wq</code>            保存退出</li><li><code>:q!</code>           不保存修改而强制退出</li><li><code>:h</code>            在冒号模式下，输入 :h quit 然后按Tab键就会自动打出命令。</li><li><code>:vim f1 f2</code>    通过vim命令在不同的buffers中打开多个文件</li><li><code>vim --version</code>  '+‘表示支持的特性，’-'表示不支持的特性</li><li><code>vim +%s hello/liugezhou/g file </code>  这条命令的意思是 打开file文件将文档中所有的hello改为liugezhou</li><li><code>vim -o2</code>       水平打开n个窗口</li><li><code>vim -O2</code>       垂直打开n个窗口</li><li><code>Ctrl + z(:stop :suspend)</code>      使用vim打开的文件进行挂起 输入fg恢复。</li></ol><h2 id="二、Buffers、Windows、Tabs">二、Buffers、Windows、Tabs</h2><p>创建一个.vimrc,添加配置<code>set hidden</code>（切换buffer且当前buffer没有保存，不会进行提示）</p><h3 id="2-1-buffers">2.1 buffers</h3><ol><li>vim file1.js file2.js,实际创建了两个buffers，执行完该命令后展示的是file1.js的buffers<br>运行:buffers命令可以查看所有的buffers,或者使用 <code>:ls</code> OR <code>:files</code>命令查看。</li><li>切换到下一个buffer <code>:bnext</code> 、<code>:buffer fileName</code>、<code>buffer n</code></li><li>切换到下一个buffer的快捷键:<code>Ctrl + I</code>,切换到原来buffer的快捷键:<code>Ctrl + O</code></li><li>一旦buffer创建成功，即进入了buffers列表，这个时候想在buffers列表中删除某一个buffer，直接<code>:bdelete n</code>即可</li><li>退出vim</li></ol><ul><li>关闭所有buffer <code>:qall</code></li><li>关闭所有buffer但是不保存 <code>qall!</code></li><li>关闭所有buffer且保存 <code>wqall</code></li></ul><h3 id="2-2-Windows">2.2 Windows</h3><ol><li>vim file1.txt打开file1文件，有一个buffer，有一个窗口<br>此时在vim中使用<code>:split file2.txt</code> 会看到此刻有两个窗口，两个buffer，file2.txt的窗口在上<br>如果想垂直打开file2窗口  <code>:vsplit file2.txt</code><br>如果想垂直打开一个新命名文件的窗口  :<code>vsplit filename</code></li><li>如果要在窗口直接导航<br><code>Ctrl+ W  h</code> 左移窗口<br><code>Ctrl+ W  l</code> 右移窗口<br><code>Ctrl+ W  j</code> 下移窗口<br><code>Ctrl+ W  k</code> 上移窗口</li><li>继续输入 <code>:split file3.txt</code>,此时有三个窗口、三个buffer</li><li>如果想在显示file2.txt的窗口中显示file3.txt，只需要在当前buffer为2下输入<code>:buffer file3.txt</code>即可</li><li>要关闭当前窗口  <code>Ctrl+W c</code></li><li>普通模式下关于窗口的命令：<br><code>Ctrl + W c</code> 打开一个垂直分割的窗口<br><code>Ctrl + W s</code> 打开一个水平分割的窗口<br><code>Ctrl + W c</code> 关闭当前所在窗口<br><code>Ctrl + W o</code> 除了当前窗口，关闭其它所有窗口</li></ol><h3 id="2-3-Tabs">2.3 Tabs</h3><ol><li>vim <a href="http://tabs.md">tabs.md</a>  这个时候打开一个新tab，使用命令 <code>:tabnew readme.md</code></li><li>切换下一个tab，使用命令 <code>:tabnext</code></li><li>关闭当前tab，使用命令<code>:tabclose</code></li><li>切换上一个tab，使用命令<code>:tabprevious</code></li><li>切换至最后一个tab，使用命令<code>:tablast</code></li><li>切换至第一个tab，使用命令<code>:tabfirst</code></li><li>如果想让vim启动时就包含多个tabs，可以使用命令 <code>vim -p file1.txt file2.txt</code></li></ol><h2 id="三、打开和搜索文件">三、打开和搜索文件</h2><h3 id="3-1-打开和编辑文件">3.1 打开和编辑文件</h3><ul><li>要在vim中打开一个文件，直接使用命令 <code>:edit newFile</code></li><li>edit接收通配符*，比如使用 <code>:edit *.md</code>然后按tab键，就会依次显示md文件，还可以是<code>*/*.js</code>这种格式</li><li><code>:edit 路径URL</code>也可以直接打开一个文件</li></ul><h3 id="3-2-使用find命令搜索文件">3.2 使用find命令搜索文件</h3><ul><li>比如：我试了一下<code>:find readme.md</code>就直接跳转到那个文件了，但是这里只是找之前buffers中存在的</li><li>通过 find的命令会直接跳转到找到的那个文件，且在当前窗口打开</li></ul><h3 id="3-3-find和Path的区别">3.3 find和Path的区别</h3><ul><li><p><code>:find</code>命令根据path选项配置的路径去找文件</p></li><li><p><code>:edit</code>命令则不会。<br>在我们开始牛逼的使用<code>find</code>命令前，我们需要对<code>path</code>到底是什么进行一个学习</p></li><li><p><code>:set path?</code>这个命令，可以让我们看一下我们的path是什么，在当前这个文件(使用vim写)，输入此命令，显示内容为：<code>path=.,/usr/include,,</code></p></li></ul><h3 id="3-4-使用grep命令在文件中搜索">3.4 使用grep命令在文件中搜索</h3><p><strong>内置grep</strong></p><ul><li>grep是指在文件内容进行内容的查找,  <code>:vim /pattern/ file</code> pattern为正则表达式</li><li>搜索出来后默认显示出第一条匹配内容</li><li>查看所有搜索内容:<code>:copen</code></li><li>关闭窗口:<code>:cclose</code></li><li>跳到下一个列表: <code>cnext</code></li><li>跳到上一个列表： <code>cprevious</code></li></ul><p><strong>外置grep</strong></p><ul><li>在命令行终端搜索</li><li>grep -R “搜索的内容”  fileUrl</li></ul><p><strong>用Netrw浏览文件</strong></p><ul><li>Netrw是vim内置的文件浏览器、查看项目的目录结构时很有用。</li><li>要运行Netrw，需要在<code>.vimrc</code>中配置</li></ul><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> nocp</span><br><span class="line">filetype <span class="keyword">plugin</span> <span class="keyword">on</span></span><br></pre></td></tr></table></figure><ul><li>这个时候 vim直接给一个地址就可以了</li><li>要从内部运行Netrw，则需要给<code>:edit</code>一个目录地址</li></ul><h3 id="3-5-vim中文件内容搜索">3.5 vim中文件内容搜索</h3><ul><li>normal模式(即Esc模式)</li><li>直接输入<code>/</code>或者<code>?</code>，然后输入要搜索的字符进行搜索</li><li>注意区别是:<ul><li><code>/</code>是从光标处向下查找，这个时候输入<code>n</code> 是继续查找下一个，输入<code>N</code>是查找上一个</li><li><code>?</code>是从光标处向上查找,这个时候输入<code>n</code>是继续向上查找，输入<code>N</code>是向下开始查找</li></ul></li></ul><p>彩蛋:item2的光标样式设置为<code>Profiles -&gt; Colors -&gt; Cursor colors -&gt; Cursor</code>进行设置<br>然后在vim搜索中还是不明显，这个时候将<code>Profiles -&gt; Colors -&gt; Cursor colors -&gt;Cursor guide</code>勾选上就好很多了。</p><h2 id="四、Vim语法">四、Vim语法</h2><h3 id="4-1-⭐️-vim语言的语法规则-动词-名词">4.1 ⭐️ vim语言的语法规则  动词 + 名词</h3><p>动词是动作</p><ul><li><code>y</code>  复制</li><li><code>p</code>  粘贴到光标后</li><li><code>P</code>  粘贴到光标前</li><li><code>d</code>  删除文本</li><li><code>D</code>  从光标处，删除改行的末尾</li><li><code>c</code>  删除文本，与d不同的是–将删除的文本保存在寄存器中，从普通模式进入到插入模式</li><li><code>C</code>  直接删除一行，并进入插入模式</li></ul><p>名词是位置</p><ul><li><code>h</code>  左</li><li><code>l</code>  右</li><li><code>j</code>  下</li><li><code>k</code>  上</li><li><code>0</code>  当前行的开始</li><li><code>$</code>  当前行的末尾</li><li><code>w</code>  下一个单词的开头</li><li><code>&#125;</code>  跳转到下一个段落</li></ul><h3 id="4-2-结合">4.2 结合</h3><ul><li>y$:复制当前位置到行尾的所有内容</li><li>dw:删除当前位置到下一个单词开头的内容</li><li>c}:修改当前位置到段落结尾的内容。</li></ul><h3 id="4-3-更多名词">4.3 更多名词</h3><ul><li>如何更快的把括号中内容删除：<code>I want say (hello vim)</code>?</li><li>文本对象：小括号中、中括号、大括号、引号</li><li>文本对象可以被操作符operations使用，两类文本对象分别为：<code>i + object</code>  <code>a + object</code></li><li><code>di(</code> 删除<code>()</code>内的内容</li><li>删除整个被<code>&#123;&#125;</code>包裹的内容：<code>di&#123;</code></li><li>删除<code>hello</code>这个单词：在<code>h</code>这个字母上，使用命令：<code>diw</code></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Header1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Paragraph1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Paragraph2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>若此时光标在Header1上</li><li>删除Header1这个单词：<code>dit</code></li><li>删除<code>&lt;h1&gt;Header1&lt;/h1&gt;</code>:<code>dat</code></li></ol><h3 id="4-4-常用到的文本对象">4.4 常用到的文本对象</h3><ul><li><code>w</code>: 一个单词</li><li><code>p</code>: 一个段落</li><li><code>s</code>: 一个句子</li><li><code>(</code>或者<code>)</code>:指的是<code>()</code></li><li><code>&#123;</code>或者<code>&#125;</code>:指的是<code>&#123;&#125;</code></li><li><code>&lt;</code>或者<code>&gt;</code>:指的是一对<code>&lt;&gt;</code></li><li><code>t</code>: XML标签</li></ul><h3 id="4-5-针对性复习">4.5 针对性复习</h3><ul><li><p><code>w</code> or <code>W</code>: 跳转到下一个单词</p></li><li><p><code>0</code>: 跳转到本行的开始</p></li><li><p><code>$</code>: 跳转到本行的行尾</p></li><li><p><code>&#123;</code>: 跳转到打开文件光标所在位置的段落最开始</p></li><li><p><code>&#125;</code>: 跳转到打开文件光标所在位置的段落最末尾</p></li><li><p><code>gg</code>:跳转到打开文件的第一行文字开始位置</p></li><li><p><code>G</code>: 跳转到打开文件的最后一行的开始位置</p></li><li><p><code>]]</code>:同<code>G</code></p></li><li><p><code>[[</code>:跳转到打开文件的第一行</p></li><li><p><code>nG</code>: 跳转到第n行</p></li><li><p><code>nj</code>: 光标处开始，向下n行</p></li><li><p><code>nk</code>: 光标处开始，向上n行</p></li><li><p><code>d</code>: 删除操作符</p></li><li><p><code>y</code>: 复制操作符</p></li><li><p><code>c</code>: 删除插入操作符</p></li><li><p><code>p</code>: 粘贴到光标后操作符</p></li><li><p><code>gU</code>: 小写变大写操作符</p></li></ul><h2 id="五、在文件中移动">五、在文件中移动</h2><h3 id="5-1-⭐️-字符导航">5.1 ⭐️ 字符导航</h3><p>普通模式下：</p><ul><li><code>hjkl</code>: 字符导航</li><li><code>n + hjkl</code>: 向左下上右移动n个行或者字符</li><li><code>0</code>: 跳转到本行开始</li><li><code>$</code>: 跳转到本行结尾</li><li><code>^</code>: 跳转到本行第一个非空字符 <code>g_</code>跳转到本行最后一个非空字符串(<code>$</code>的使用于<code>g_</code>的区别，还是<code>$</code>在使用中普遍)</li><li><code>n|</code>: 跳转到本行第n列</li><li><code>fs</code>: focusOn string 在本行内光标之后开始搜索，光标停留在字符<code>s</code>上</li><li><code>Fs</code>: focusOn string 在本行内光标之前开始搜索，光标停留在字符<code>s</code>上</li><li><code>ts</code> : focusOn string 在本行内光标之后开始搜索，光标停留在字符<code>s</code>之前</li><li><code>Ts</code> : focusOn string 在本行内光标之前开始搜索，光标停留在字符<code>s</code>之前<ul><li><code>;</code>: 表示继续 在本行向下搜索下一个</li><li><code>,</code>: 表示继续 在本行向上搜索上一个</li></ul></li></ul><h3 id="5-2-句子和段落导航">5.2 句子和段落导航</h3><ul><li><p>句子定义：指以 <code>.?!</code>这三个字符 跟着一个换行符或者空格、tab结尾的，就算一个句子。</p></li><li><p><code>(</code>跳到前一个句子</p></li><li><p><code>)</code>跳到下一个句子</p></li><li><p>段落：可以从一个空行之后开始，也可以从段落选项中<code>字符对</code>所指定的段落宏的每个集合开始。</p></li><li><p><code>&#123;</code>跳到上一个段落</p></li><li><p><code>&#125;</code>跳到下一个段落</p></li></ul><h3 id="5-3-⭐️-行号导航">5.3 ⭐️ 行号导航</h3><ul><li><code>nG</code>:跳转到第n行</li><li><code>gg</code>:跳转到第一行</li><li><code>G</code>:跳转到最后一行</li><li><code>n%</code>:跳转到文件的百分比</li><li><code>ctrl + g</code>:可以看到总行数以及当前所在行数</li></ul><h3 id="5-4-窗格导航">5.4 窗格导航</h3><ul><li><code>H</code>:Head 跳转到屏幕的顶部</li><li><code>M</code>:Middle 跳转到屏幕的中部</li><li><code>L</code>:Line   跳转到屏幕的底部</li><li><code>nH</code>:跳转到距离顶部n行的位置</li><li><code>nL</code>:跳转到距离底部n行的位置</li></ul><h3 id="5-5-⭐️-屏幕滚动">5.5 ⭐️ 屏幕滚动</h3><p>普通模式下：</p><ul><li><p><code>ctrl + e</code>:向下滚动一行-&gt; e,中文一，就是向下一行</p></li><li><p><code>ctrl + y</code>:向上滚动一行-&gt; yu,骑驴的时候让驴听一下，回大喊一声yu，也就是退一步</p></li><li><p><code>ctrl + f</code>:向下滚动一屏-&gt; full screen</p></li><li><p><code>ctrl + b</code>:向上滚动一屏-&gt; back screen</p></li><li><p><code>ctrl + u</code>:向上滚动半屏-&gt;up,up半屏。</p></li><li><p><code>ctrl + d</code>:向下滚动半屏-&gt; down，down半屏</p></li></ul><h3 id="5-6-当前行位置指定">5.6 当前行位置指定</h3><ul><li><code>zt</code>:将当前行 指定到窗格的顶部</li><li><code>zz</code>:将当前行 指定到窗格的中间</li><li><code>zb</code>:将当前行 指定搭配窗格的底部</li></ul><h3 id="5-7-位置标记-暂了解即可">5.7 位置标记(暂了解即可)</h3><ul><li><code>ma</code>:标记当前位置</li><li>``a`:回到标记的位置(行与列)</li><li><code>'a</code>:回到标记的行</li></ul><h3 id="5-8-跳转">5.8 跳转</h3><p>在普通模式下：</p><ul><li><code>nG</code>:跳转到第n行</li><li><code>/</code>:向后搜索跳转</li><li><code>?</code>:向前搜索跳转</li><li><code>n</code> 重复上一次搜索，相同方向</li><li><code>N</code> 重复上一次搜索，相反方向</li><li><code>%</code> 查找匹配</li><li><code>(</code> 跳转上一个句子</li><li><code>)</code> 跳转下一个句子</li><li><code>&#123;</code> 跳转上一个段落</li><li><code>&#125;</code> 跳转下一个段落</li><li><code>L</code> 跳转到当前屏幕的最后一行</li><li><code>M</code> 跳转到当前屏幕的中间</li><li><code>H</code> 跳转到当前屏幕的第一行</li><li><code>[[</code> 跳转到上一个小节</li><li><code>]]</code> 跳转到下一个小节</li><li><code>'a</code>:跳转到标记的行</li><li>``a`:跳转到标记的行和列</li></ul><h2 id="六、输入模式">六、输入模式</h2><p>这一节通过输入模式来提升输入效率。</p><h3 id="6-1-⭐️-进入输入模式的方法">6.1 ⭐️ 进入输入模式的方法</h3><ul><li><code>i</code>:  从光标位置的前面开始输入内容</li><li><code>I</code>:  从光标所在行的第一个非空字符开始输入内容</li><li><code>a</code>:  与i是相对应的，从光标位置的后面开始输入内容</li><li><code>A</code>:  与I是相对应的，从当前行的末尾非空文本后追加文本</li><li><code>o</code>:  这个小o是非常的有用，在当前光标位置的下方自己给新起一行开始输入文本</li><li><code>O</code>:  这个是与小o对应，在当前行的上一行开始新加一行并开始输入文本</li><li><code>s</code>:  删除当前光标处字符，并开始输入内容</li><li><code>S</code>:  删除光标所在当前行内容，并开始输入内容</li></ul><h3 id="6-2-退出输入模式的方法">6.2 退出输入模式的方法</h3><p>除了Esc外，还可以直接使用<code>Ctrl + c</code>的方式退出输入模式</p><h3 id="6-3-删除模式">6.3 删除模式</h3><p>输入过程出现错误的合理做法是切换到普通模式，使用d来删除错误</p><p>在输入模式中也是可以删除的:</p><ul><li><code>Ctrl + h</code>是删除一个字符</li><li><code>ctrl + w</code>是删除一个单词</li><li><code>ctrl + u</code>是删除一行</li></ul><h3 id="6-4-寄存器输入">6.4 寄存器输入</h3><p>寄存器是说在a-z这个标识直接对一个单词在普通模式下进行保存操作<code>&quot;ayiw</code>，然后在输入模式中使用<code>ctrl + r a</code>的方式进行保存<br>这里在使用寄存器输入之前先用好<code>y$</code> <code>yw</code>，结合p、P，再考虑使用寄存器。</p><h3 id="6-5-输入模式下的翻页">6.5 输入模式下的翻页</h3><p>输入模式下也是可以翻页的</p><ul><li><code>ctrl + x  ctrl + y</code>: 向上滚动页面</li><li><code>ctrl + x  ctrl + e</code>: 向下滚动页面</li></ul><h3 id="6-6-⭐️-执行普通模式下的命令">6.6 ⭐️ 执行普通模式下的命令</h3><p>在输入模式下，可以使用普通模式下的命令。</p><ul><li>输入模式下，键入<code>ctrl + o</code>就进入了普通模式（左下角的模拟指示器显示 --insert–),这个时候就可以使用普通模式下的命令</li><li><code>ctrl + o zz</code> 剧中窗口显示光标所在位置</li><li><code>ctrl + o H/M/L</code>  光标跳转到窗口的顶部、中部、底部</li><li><code>ctrl +o D</code> 从光标处删除到行尾</li></ul><h2 id="七、点命令">七、点命令</h2><p>使用点命令来重放上一个修改动作，点命令是最简单的命令，也是减少重复操作最有用的命令。</p><h3 id="7-1-用法">7.1 用法</h3><p>想把下面的代码中<code>let</code>替换成<code>const</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> one = <span class="string">&#x27;1&#x27;</span></span><br><span class="line"><span class="built_in">let</span> two = <span class="string">&#x27;2&#x27;</span></span><br><span class="line"><span class="built_in">let</span> three =<span class="string">&#x27;3&#x27;</span></span><br></pre></td></tr></table></figure><ol><li>使用<code>/let</code>进行匹配</li><li>使用<code>cwconst&lt;esc&gt;</code> 将匹配到的第一个替换成了 <code>const</code></li><li>使用<code>n</code>找到下一个匹配的位置</li><li>使用<code>.</code>命令，重复之前的匹配的操作</li><li>持续 <code>n.n.</code>将每一个词进行替换</li></ol><h3 id="7-2-怎么算是修改操作">7.2 怎么算是修改操作</h3><p>使用普通模式下的命令来更新(添加、修改、删除)当前缓冲区内容时，就是执行一个修改操作。</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">first</span>, <span class="keyword">second</span>, <span class="keyword">third</span>,</span><br></pre></td></tr></table></figure><p>删除从开始到第一个逗号出现的位置：<code>df,</code>使用<code>.</code>重复两次直到整个句子删除。</p><p>将下面中的逗号删除，不删除文本</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">liugezhou,<span class="keyword">is</span>,a,Cool,boy</span><br></pre></td></tr></table></figure><p>根据<code>5.1</code>我们知道<code>fs</code>命令是搜索到字符<code>s</code>所在的位置，因此这里只删除<code>,</code>的操作，我们使用：<code>f,x;.;.</code>的方式<br>之所以加<code>;</code>是因为在vim中，操作是不包括移动的，这里是使用<code>;</code>移动到下一个目标点，执行删除操作。</p><p>再看一个例子</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">my</span> </span><br><span class="line"><span class="built_in">name</span></span><br><span class="line"><span class="keyword">is</span> </span><br><span class="line">liugezhou</span><br></pre></td></tr></table></figure><p>目的是要在每一行结尾加上逗号：</p><ul><li>首先根据<code>6.1</code>我们知道<code>A</code>是在当前行结尾追加内容</li><li>然后根据vim中的点操作不包括移动，我们这样：</li><li><code>A, &lt;ESC&gt; j .&lt;ESC&gt; j .&lt;ESC&gt; j .</code><br>从按下命令A开始，到退出模式之间的所有输入都算是一整个修改操作。</li></ul><h3 id="7-3-重复多行修改操作">7.3 重复多行修改操作</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span> Hello World!</span><br><span class="line"><span class="symbol">2 </span>Hello World!</span><br><span class="line"><span class="symbol">3 </span>Hello World!</span><br><span class="line"><span class="symbol">4 </span>Hello World!</span><br><span class="line"><span class="symbol">5 </span>Hello World!</span><br><span class="line"><span class="symbol">6 </span>Hello World!</span><br><span class="line"><span class="symbol">7 </span>Hello World!</span><br></pre></td></tr></table></figure><p>有7行数据，要删除的是除了第5行。我们这里使用简单的删除方法：先删除前四行，再删除第6、7行。<br>命令位：<code>d4jjd2j</code><br>解析：其中<code>d</code>为操作删除，<code>4j</code>类比于<code>5.3节</code>的<code>nG</code>,即要删除的范围为：当前光标处下移动4行。<code>j</code>表示下。</p><p>点命令非常简单且功能强大，这里先记录这三个。</p><h2 id="八、寄存器">八、寄存器</h2><h3 id="8-1-10种寄存器类型">8.1 10种寄存器类型</h3><ol><li>匿名寄存器(<code>&quot;&quot;</code>)</li><li>编号寄存器(<code>&quot;0-9</code>)</li><li>小删除寄存器(<code>&quot;-</code>)</li><li>命名寄存器(<code>&quot;a-z</code>)</li><li>只读寄存器(<code>:</code>,<code>:.</code>,<code>&quot;%</code>)</li><li>Buffer交替文件寄存器(<code>&quot;#</code>)</li><li>表达式寄存器(<code>&quot;=</code>)</li><li>选取和拖放寄存器(<code>&quot;*</code>,<code>&quot;+</code>)</li><li>黑洞寄存器(<code>&quot;_</code>)</li><li>探索模式寄存器(<code>&quot;/</code>)</li></ol><h3 id="8-2-寄存器命令">8.2 寄存器命令</h3><p>从存值和取值两个方面了解哪些命令与寄存器有关。</p><p>存值到寄存器中的操作：</p><ul><li><code>y</code>: 复制</li><li><code>c</code>: 删除并进入插入模式 [需要跟名词]</li><li><code>d</code>: 删除 [需要跟名词]</li><li><code>s</code>: 直接删除光标处字符并进入插入模式</li><li><code>S</code>: 直接删除光标所在行内容并进入插入模式</li><li><code>x</code>: 直接删除处于光标处字符，与<code>s</code>不同为仍然处于普通模式</li><li><code>x</code>: 直接删除处于光标处上一个字符，且仍然处于普通模式</li></ul><p>从寄存器中取出文本操作</p><ul><li><p><code>p</code>:在光标位置之后粘贴文本</p></li><li><p><code>P</code>:在光标位置之前粘贴文本</p></li><li><p><code>p</code>和<code>P</code>都可以接受计数和一个寄存器标志作为参数。</p></li><li><p><code>10p</code>表示：当前光标之后，将上一次存值到寄存器中的内容，复制100遍。</p></li><li><p><code>10&quot;ap</code>表示：将寄存器<code>a</code>中的文本粘贴10次。(关于寄存器<code>a</code>是寄存标志，8.4内容介绍)</p></li></ul><h3 id="8-3-在输入模式中使用寄存器">8.3 在输入模式中使用寄存器</h3><p>输入模式下使用寄存器的命令为：<br><code>ctrl + r a</code><br>这里的<code>a</code>是指寄存器的标志(关于标签a如何添加，下面内容介绍)。</p><h3 id="8-4-⭐️-不同类型寄存器标志说明">8.4 ⭐️ 不同类型寄存器标志说明</h3><p><strong>1.匿名寄存器&quot;&quot;</strong><br>说明：匿名寄存器存储的是最近的一次复制、修改或者删除的文本，和电脑上的粘贴功能一个意思。<br>语法：<code>p</code> || <code>P</code></p><p><strong>2.编号寄存器(&quot;0-9)</strong><br>说明：编号寄存器自动以升序进行填充，按0-9分为复制寄存器(0)和其他编号寄存器(1-9)</p><p>复制寄存器(0):是指若是复制操作(<code>yy</code>复制一行)，Vim会将文本存放在两个寄存器中-&gt;匿名寄存器<code>p</code>和复制寄存器<code>0</code>中去，这里的操作只能是复制，删除不管用，好处是最新复制的内容一直会在复制寄存器中。<br>语法：普通模式下-&gt;<code>&quot;0p</code>,插入模式下-&gt;<code>ctrl + r 0</code></p><p>编号寄存器(1-9):当修改或者删除至少一整行的文本时，这部分文本会按时间顺序被存储在1-9号编号寄存器中(编号越小，距离时间越近)。<br>语法：普通模式下-&gt;<code>&quot;np</code>,插入模式下-&gt;<code>ctrl + r n</code><br>注意：小型的单词删除(<code>dw</code>OR<code>vw</code>)不会被储存在编号寄存器中，会被储存在小删除寄存器中<code>&quot;-</code>。</p><p><strong>3.小删除寄存器(&quot;-)</strong><br>说明：不足一行的修改或者删除都不会被存储到0-9的编号寄存器中去，而是会被存储在小删除寄存器(<code>&quot;-</code>)中去。<br>语法：普通模式下-&gt;<code>&quot;-p</code>,插入模式下-&gt;<code>ctrl + r -</code></p><p><strong>4.命名寄存器(&quot;a-z)</strong><br>说明：命名寄存器是Vim中用法最丰富的寄存器。a-z命名寄存器可以存储复制、修改和删除的文本。<br>语法:<code>&quot;ayiw</code> 表示复制一个单词，且存储在寄存器中以<code>a</code>命名。</p><p><strong>5.只读寄存器(<code>&quot;:</code>,<code>&quot;.</code>,<code>&quot;%</code>)</strong><br>说明：vim只要三个只读寄存器，<code>.</code>存储上一个输入的文本，<code>:</code>存储上一次执行的命令，<code>%</code>存储当前文件的文件名<br>举例：在vim中处于插入模式下，想看本文件目录：<code>ctrl + r %</code>，直接打出文件名字。</p><p><strong>6.buffer交替文件寄存器(<code>&quot;#</code>)</strong><br>说明：vim中，<code>#</code>通常代表交替文件，交替文件是上一个打开的文件，使用命令<code>&quot;#p</code>,  只是打印出文件名，貌似没有什么大用。</p><p><strong>7.表达寄存器(<code>&quot;=</code>)</strong><br>说明：Vim有一个表达式寄存器，<code>&quot;=</code>用于计算表达式的结果。<br>语法：普通模式下-&gt; <code>&quot;=100+100 Enter p</code>,插入模式下-&gt;<code>ctrl + r =100+100 enter</code></p><p>扩展：可以使用表达寄存器方法结合<code>@</code>符号从其他寄存器中直接拿出值-&gt;<code>ctrl + r =@a</code> OR <code>ctrl + r =@1</code></p><p><strong>8.选取和拖放寄存器(<code>&quot;*,&quot;+</code>)</strong><br>可以用<code>&quot;*</code>和<code>&quot;+</code>来访问从外部程序中复制的文本。<br>语法：当在外部复制了一段文本后,要在vim中复制文本，普通模式下-&gt;<code>&quot;*p</code> | <code>&quot;+p</code>,在插入模式下-&gt; <code>ctrl + r *</code> | <code>ctrl + r *</code><br>反向:在vim文件内，普通模式下复制一行代码-&gt;<code>&quot;*yy</code>,这个时候在外部直接粘贴即可。</p><p>扩展:为了vim仅使用<code>p</code>就能从外部粘贴文本，可以在<code>vimrc</code>配置文件中-&gt;<code>set clipboard=unnamed</code></p><p><strong>9.黑洞寄存器(<code>&quot;_</code>)</strong><br>说明:每次修改或者删除文本时，默认会存入到寄存器中，如果不想存，就可以使用黑洞寄存器。<br>语法: <code>&quot;_dd</code> 删除一行且不放入到寄存器中去。</p><p><strong>10.探索模式寄存器(<code>&quot;/</code>)</strong><br>说明: 之前使用了<code>?</code>或者<code>/</code>进行了搜索，这个搜索文本可以通过 <code>&quot;/p</code>的方式快速打印。</p><p><strong>查看所有的寄存器</strong><br>语法：使用<code>:register</code>的方式查看所有寄存器,可跟参数，比如<code>:register a 1 -</code><br>扩展：使用寄存器插件<code>vim-peekaboo</code>可查看所有寄存器内容(且分类的)，普通模式下直接输入<code>&quot;</code>或者<code>@</code>即可，插入模式下<code>ctrl + r</code>即可。</p><p>tips:到这里的时候，根据这篇文章先去安装了vim的包管理器<a href="https://www.cnblogs.com/zhaodehua/articles/15108744.html">Vim-plug</a><br>并安装了插件<code>preservim/NERDTree</code>(图形界面),以及<code>junegunn/vim-peekaboo</code>插件。</p><p><strong>清除寄存器</strong><br>从技术上来说没必要清理寄存器，但是通过<code>:register</code>或者插件看到的寄存器可能就是不得劲。<br>这里记录一个清除寄存器的命令:<code>:let @1 =''</code>-&gt;将编号寄存器0清除。</p><p><strong>获取寄存器中的内容</strong><br>语法：使用<code>:put a</code>打印出寄存器<code>a</code>的内容。<br><code>:put</code>与<code>ap</code>的区别在于，前者是新起一行插入寄存器内容，后者在光标位置之后插入。</p><h2 id="九、宏命令">九、宏命令</h2><p>背景：编辑文件的时候，有时候我们会反复的做一些相同动作，通过vim的宏命令，可以将一些动作记录到Vim寄存器。</p><h3 id="9-1-基本宏命令">9.1 基本宏命令</h3><ul><li>基本语法:<code>qa</code>:开始记录动作到寄存器a， <code>q</code>: 停止记录</li><li>注意：使用小写字母a-z去存储宏命令，通过<code>@a</code>命令去调用。</li></ul><p>Practice：有以下文本，需要将每一行的字母变成大写</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">my</span> </span><br><span class="line"><span class="built_in">name</span></span><br><span class="line"><span class="keyword">is</span></span><br><span class="line">liugezhou</span><br></pre></td></tr></table></figure><p>普通模式下:<code>qa0gU$jq</code><br>命令分解：</p><ul><li><code>qa</code>: 开始记录一个宏定义并存储在a寄存器中</li><li><code>0</code>: 移动到改首</li><li><code>gU$</code>:从光标处到行尾字母变成大写</li><li><code>j</code>:向下移动一行</li><li><code>q</code>: 停止记录</li><li>最后通过<code>@a</code>去执行改宏命令，<code>3@a</code>会执行三次宏命令。</li></ul><h3 id="9-2-增添、修改、拷贝宏">9.2 增添、修改、拷贝宏</h3><p>在普通模式下：</p><ul><li>增添一个宏：<code>: let @a ='something'</code>。</li><li>修改一个宏：<code>: let @a ='输入新的'</code> 即可。</li><li>拷贝一个宏：<code>: let @z = @a</code></li></ul><h2 id="十、撤销">十、撤销</h2><p>撤销是一个基本功能，本节记录撤销、取消撤销、浏览撤销分支、反复撤销、浏览改动时间线。</p><h3 id="10-1-撤销-undo-重做和行撤销-UNDO">10.1 撤销(undo),重做和行撤销(UNDO)</h3><p>在每次进入插入模式和退出模式之间的任何修改都被定义为一次修改。</p><ul><li>基本撤销:<code>u</code> (undo),可以连续执行。</li><li>撤销基本撤销: <code>ctrl + r</code>，可以连续执行。</li><li>跳过中间修改:<code>U</code>(使用较少)</li></ul><p>tips:在.vimrc中设置 <code>set undolevels =500 </code>可以执行500次的undo操作</p><h3 id="10-2-断点插入操作">10.2 断点插入操作</h3><p>上面的撤销是从插入模式到退出模式作为一次修改，而我们在输入模式中，由于输入大量文本，也有撤销的要求，也就是在输入模式下记录一下撤销点。<br>插入模式下，当执行完一个操作后，键入<code>ctrl + g u</code>，这个时候就记录了一个断点。</p><h3 id="10-3-撤销树">10.3 撤销树</h3><p>语法:<code>g+</code> <code>g-</code></p><h3 id="10-4-保存撤销记录">10.4 保存撤销记录</h3><p>操作步骤</p><ul><li>新建一个空的test.md文件</li><li><code>i</code> 输入&quot;one&quot;</li><li><code>ctrl + g u</code></li><li>回车，继续输入&quot;two&quot;</li><li><code>ctrl + g u</code></li><li>回车，继续输入&quot;three&quot;</li><li><code>esc</code></li><li><code>: wundo test.undo</code></li><li>退出vim</li></ul><p>再次打开test.md的时候，我们执行<code>u</code>命令发现，下方提示：<code>Already at oldest change</code>,即不能撤销。<br>这个时候执行<code>:rundo test.undo</code>,在执行<code>u</code>命令就可以撤销了。</p><p>语法：<code>:wundo file.undo</code> 、<code>:rundo file.undo</code></p><p>tips:真正开发的时候，应该没人去自己创建一个undo的文件，我们为了默认每次进入文件后都是可以执行<code>u</code>的，可以在<code>~/.vim</code>目录下新建一个默认目录<code>undo_dir</code>，然后在<code>.vimrc</code>文件中设置</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> <span class="attribute">undodir</span>=~/.vim/undo_dir</span><br><span class="line"><span class="built_in">set</span> undofile</span><br></pre></td></tr></table></figure><p>这个时候，无论何时保存，Vim都会自动创建和保存撤销的历史记录。</p><h3 id="10-5-时间旅行">10.5 时间旅行</h3><p>时间旅行真的是太Cool了。<br>打开一个文件，如果你想看之前某个时刻的显示：</p><ul><li><code>:earlier 10s</code> 恢复到10秒之前的状态</li><li><code>:earlier 10m</code> 恢复到10分钟之前的状态</li><li><code>:earlier 10h</code> 恢复到10小时之前的状态</li><li><code>:earlier 10d</code> 恢复到10天前的状态</li><li><code>:earlier 2</code> 恢复到2次修改前的状态</li><li><code>:earlier 2f</code> 恢复到2次保存前的状态</li></ul><p><code>:earlier</code>对应的版本<code>:later</code>,语法同上。</p><h2 id="十一、可视化模式">十一、可视化模式</h2><h3 id="11-1-三种可视化模式">11.1 三种可视化模式</h3><ul><li><code>v</code>: 逐字可视化模式</li><li><code>V</code>: 逐行可视化模式</li><li><code>ctrl + v</code>:逐块可视化模式</li></ul><p>可在三种模式下切换，切合<code>hjkl</code>体验效果。</p><h3 id="11-2-可视模式导航">11.2 可视模式导航</h3><p>可视化导航指的是，在向某一个方向进行可视化的时候，这个时候有向相反方向进行可视化的需求，这个时候使用<code>o</code>来切换光标位置。</p><h3 id="11-3-可视模式语法">11.3 可视模式语法</h3><p>使用三种模式的一种，将某一段文本、代码为可视化后，按<code>d</code>直接将其删除。<br>与普通模式语法规则不同的是，(动词 + 名词)的不适用于可视模式，可适模式下没有名词。</p><h2 id="十二、搜索和替换">十二、搜索和替换</h2><ol><li>智能区分大小写</li></ol><ul><li>设置搜索不区分大小写-&gt;.vimrc-&gt;set ignorecase</li><li>设置全小写不区分大小写，有一个大写字母就区分-&gt;.vimrc-&gt; set ignorecase smartcase</li></ul><ol start="2"><li>一行中的第一个字符和最后一个字符</li></ol><ul><li>使用<code>^</code>匹配行中的第一个字符，<code>$</code>匹配最后一个字符</li></ul><ol start="3"><li>重复搜索｜候选词搜索</li></ol><ul><li><code>//</code>重复上一个搜索/</li><li><code>/up|down</code>:遍历搜索历史</li><li><code>:history /</code>:查看所有历史记录</li><li><code>/s1\|s2</code>:同时搜索字符s1和s2，重点是转义符</li><li><code>\vs1|s2</code>: 同上使用<code>\v</code></li></ul><ol start="4"><li><p>搜索字符组<br>与正则表达式相通：\v[^0-9a-zA-Z]{m,n}</p></li><li><p>基本替换:<br>将good单词替换为awesome：<code>:s/good/awesome</code><br>全局将good单词替换为awesome：<code>:s/good/awesome/g</code></p></li></ol><h2 id="十三、全局命令">十三、全局命令</h2><h3 id="13-1-全局命令概述">13.1 全局命令概述</h3><ul><li><code>:h ex-cmd-index</code>查看完整列表</li><li>全局命令语法:<code>:g/pattern/command</code></li></ul><p>举例：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">one</span> = 1;</span><br><span class="line">console.<span class="built_in">log</span>(<span class="string">&quot;one: &quot;</span>, <span class="keyword">one</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">two</span> = 2;</span><br><span class="line">console.<span class="built_in">log</span>(<span class="string">&quot;two: &quot;</span>, <span class="keyword">two</span>);</span><br></pre></td></tr></table></figure><p>要删除所有包含<code>console</code>的行，可以运行 <code>:g/console/d</code></p><h3 id="13-2-逆向匹配">13.2 逆向匹配</h3><p><code>:v/console/d</code>:它将删除所有不包含<code>console</code>的行。</p><h2 id="十四、外部命令">十四、外部命令</h2><h3 id="14-1-读取外部文件">14.1 读取外部文件</h3><ul><li><code>:r</code>是Vim的读命令，如果不带<code>!</code>使用它，则可以使用它来获取文件内容，若当前目录有文件 <code>test.md</code> , 运行 <code>:r test.md</code>. Vim就会将test.md的内容放入到当前缓冲区。</li><li><code>:r !ls</code>,语法结构为 <code>:r</code> + <code>!</code> + <code>外部命令</code>，该命令的输出将插入到当前缓冲区。eg <code>:r !ls</code> ,这个命令会将当前目录下执行ls列出的文件列表，插入到当前编辑的文件中。</li><li><code>:r !ctrl -s 'url'</code>:这个命令会将接口url返回的内容插入到当前编辑的文件中。</li></ul><h3 id="14-2-将缓冲区内容写入外部命令">14.2 将缓冲区内容写入外部命令</h3><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;liugezhou&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;vim&#x27;</span>)</span><br></pre></td></tr></table></figure><p>当上面内容在缓冲区内时，在普通模式下，执行<code>:w !node</code>，Vim将使用node执行JavaScript表达式来打印出<code>liugezhou</code>和<code>vim</code></p><h3 id="14-3-执行外部命令">14.3 执行外部命令</h3><p>可以在不离开Vim的情况下运行任何外部命令。</p><ul><li>语法：<code>:!cmd</code></li><li><code>:!ls -ls</code></li><li><code>:kill -9 3466</code></li></ul><h2 id="十五、命令行模式">十五、命令行模式</h2><p>切记本章内容是在命令行模式下。</p><h3 id="15-1-进入和退出命令行模式">15.1 进入和退出命令行模式</h3><p>进入命令行模式：<code>/</code>、<code>?</code>、<code>:</code>、<code>!</code><br>离开命令行模式:<code>ESC</code>、<code>ctrl + c</code>、 <code>ctrl + [</code></p><h3 id="15-2-命令行模式快捷键">15.2 命令行模式快捷键</h3><ul><li>如果要移动一个单词：<code>shift + left</code>、<code>shift + right</code></li><li>如果要移动到该行开始:<code>ctrl + b</code>,移动到该行结尾:<code>ctrl + e</code></li><li>删除字符:<code>ctrl + h</code>(删除一个字符),<code>ctrl + w</code> 删除一个单词, <code>ctrl + u</code>删除一行  、</li><li>编辑文件一样编辑命令 <code>ctrl + f</code>,比如使用<code>/</code>或者<code>?</code>进入命令行模式后，键入<code>ctrl + f</code> 可以查看历史记录以及编辑新的内容，<code>:</code>和<code>!</code>同理,按下<code>enter</code>执行。</li></ul><h3 id="15-3-寄存器和自动补全">15.3 寄存器和自动补全</h3><ul><li>在命令行模式下，可以像插入模式那样使用 <code>ctrl + r</code>从Vim寄存器中插入文本。</li><li>命令行模式下，<code>ctrl + r ctrl + w</code> 获取当前光标下的字母</li><li>命令行模式下，<code>ctrl + r ctrl + A</code> 获取当前光标下的词组</li><li>命令行模式下，<code>ctrl + r ctrl + l</code> 获取当前光标所在行内容</li></ul><h2 id="十六、标签">十六、标签</h2><p>暂时略过</p><h2 id="十七、折叠">十七、折叠</h2><h3 id="17-1-手动折叠">17.1 手动折叠</h3><ul><li>折叠操作符是<code>z</code></li><li><code>zfj</code>: 从光标所在行到下一行内容折叠</li><li><code>zo</code>: 在光标处、打开已折叠文本</li><li><code>zc</code>: 关闭/收缩文本</li><li>折叠操作符，符合语法规则(动词 + 名词)</li><li><code>zR</code>:展开所有折叠</li><li><code>zM</code>:收缩所有折叠</li><li><code>za</code>: 切换折叠状态</li></ul><p>命令行模式下，使用<code>:fold</code>命令执行一次折叠</p><ul><li><code>,+1fold</code> 折叠当前行及紧随其后的第二行</li><li><code>16,20fold</code> kjj第16到20行</li></ul><h3 id="17-2-不同的折叠方法">17.2 不同的折叠方法</h3><ul><li><p>通过<code>:set foldmethod</code>查看折叠方式，默认是手动折叠<code>manual</code></p></li><li><p>手动折叠</p></li><li><p>缩进折叠</p></li><li><p>表达式折叠</p></li><li><p>语法折叠</p></li><li><p>差异折叠</p></li><li><p>标志折叠</p></li></ul><h2 id="十八、Git">十八、Git</h2><h3 id="18-1-差异比较">18.1 差异比较</h3><ul><li>查看两个文件的差异： <code>vimdiff f1.md f2.md</code> OR <code>vim -d f1.md f2.md</code></li><li>使用<code>]c</code>跳转到下一处差异,<code>[c</code>跳转到上一处差异</li><li><code>:diffput</code> 将左侧内容同步到右侧</li><li><code>:diffget</code>  将右侧内容同步到左侧</li></ul><h3 id="18-2-使用Vim作为合并工具">18.2 使用Vim作为合并工具</h3><ol><li>首先运行以下命令来将默认合并工具更改为 <code>vimdiff</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config merge.tool vimdiff </span><br><span class="line">git config merge.conflictstyle diff3</span><br><span class="line">git config mergetool.prompt <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>或者通过修改<code>~/.gitconfig</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[core]</span><br><span class="line">  editor = vim </span><br><span class="line">[merge]</span><br><span class="line">  tool = vimdiff </span><br><span class="line">  conflictstyle = diff3 </span><br><span class="line">[difftool]</span><br><span class="line">  prompt = <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="18-2-在Vim中使用Git">18.2 在Vim中使用Git</h3><p>使用<code>!</code>可以运行任何Git命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">:!git status</span><br><span class="line">:!git commit <span class="string">&#x27;add something&#x27;</span></span><br><span class="line">:!git diff</span><br><span class="line">:!git push origin master</span><br><span class="line">:!git add `%` (%-当前缓冲区) </span><br><span class="line">:!git checkout `<span class="comment">#` (`#`其他缓冲区)</span></span><br></pre></td></tr></table></figure><h2 id="十九、编译">十九、编译</h2><p>Vim有运行makefile的<code>:make</code>命令，当运行它时，Vim会在当前目录寻找makefile并执行它。</p><h3 id="19-1-Make命令">19.1 Make命令</h3><p>新建一个makefile文件，内容保存如下：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">all</span>:</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Hello all&quot;</span></span><br><span class="line">foo:</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Hello foo&quot;</span></span><br><span class="line">list_pls:</span><br><span class="line"><span class="keyword">ls</span></span><br></pre></td></tr></table></figure><p>vim命令后模式运行:<code>:make</code>  <code>:make all</code> <code>:make foo</code> <code>:make list_pls</code> 查看打印内容</p><h3 id="19-2-使用Make编译">19.2 使用Make编译</h3><ul><li>创建一个make.js文件</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function <span class="built_in">make</span>()&#123;</span><br><span class="line">  console<span class="selector-class">.log</span>(<span class="string">&#x27;使用makefile中的node命令进行编译&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">make</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><ul><li>在该目录下创建一个makefile文件，内容如下</li></ul><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">node</span><span class="title">:</span></span><br><span class="line"><span class="title">    node</span> ./make.js</span><br></pre></td></tr></table></figure><ul><li>运行 <code>:make node</code> 即可查看结果。</li></ul><h3 id="19-3-不同的make程序">19.3 不同的make程序</h3><ul><li>当运行<code>:make</code>的时候，实际上会执行makeprg选项设置的命令</li><li>通过运行 <code>:set makeprg?</code>来查看，默认的设置为:<code>makeprg=make</code></li><li>修改命令为:<code>:set makeprg=node\ %</code>,<code>\ </code>为对空格的转义,<code>%</code>符号表示当前文件。</li></ul><h3 id="二十、视图、会话和Viminfo">二十、视图、会话和Viminfo</h3><p>当项目的一些设置、布局、缓冲区在开始设置后，关闭Vim再次进入后原先设置会丢失，这节来学习如何使用视图、会话和 Viminfo 来保存项目’快照’</p><p>本节内容暂时跳过</p><h2 id="二十一、多文件操作">二十一、多文件操作</h2><h3 id="21-1-多文件中执行命令的方法">21.1 多文件中执行命令的方法</h3><ul><li>参数列表(argdo)</li><li>缓冲区列表(bufdo)</li><li>窗口列表（windo）</li><li>tab列表(tabdo)</li><li>快速修复列表(cdo)</li><li>文件方式的快速修复列表(cfdo)</li><li>位置列表(ldo)</li><li>文件方式的位置列表(lfdo)</li></ul><h3 id="21-2-参数列表">21.2 参数列表</h3><p>通过参数将一些文件创建一个列表：</p><ul><li><code>:args file1 file2 file3</code></li><li><code>:args *.js</code></li><li><code>:args a*.js</code></li><li><code>:args **/*.js</code></li></ul><p>运行以上命令后，当前buffer会切换到列表中的第一个文件，运行<code>:args</code>可以查看当前创建的文件列表。</p><ul><li><code>:first</code>:跳转至列表中的第一个文件</li><li><code>:last</code>:跳转到最后一个文件</li><li><code>:next</code>:跳转到下一个文件</li><li><code>:prev</code>:跳转到上一个文件</li><li><code>:wnext</code>:保存当前文件跳转到下一个文件</li><li><code>:wprev</code>:保存当前文件跳转到上一个文件</li></ul><h2 id="二十二、Vimrc">二十二、Vimrc</h2><h3 id="22-1-Vim如何找到Vimrc">22.1 Vim如何找到Vimrc</h3><p>根据操作系统，文件路径名可能不同，一般的使用路径是 ~/.vimrc</p><h3 id="22-2-Vimrc基础内容">22.2 Vimrc基础内容</h3><p>绝大部分的使用场景包含一下五个内容集合：</p><ul><li>插件</li><li>设置</li><li>自定义函数</li><li>自定义命令</li><li>键盘映射</li></ul><p><strong>插件</strong></p><p>我的插件管理器使用的是<code>vim-plug</code></p><ol><li>添加插件方法,在<code>.vimrc</code>中：</li></ol><figure class="highlight leaf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">call plug<span class="punctuation">#</span><span class="keyword">begin</span></span><br><span class="line">  Plug &#x27;mattn/emmet-vim&#x27;</span><br><span class="line">  Plug &#x27;preservim/nerdtree&#x27;</span><br><span class="line">call plug<span class="punctuation">#</span><span class="keyword">end</span><span class="params">()</span></span><br></pre></td></tr></table></figure><ol start="2"><li>保存退出</li><li>在vim命令后模式中运行<code>:PlugInstall</code></li><li>如果想删除不使用的插件，只要将插件名从call代码块之前删除，保存后执行<code>:PlugClean</code>即可。</li></ol><p><strong>设置</strong><br>在任意一个vimrc文件中会发现有大量的set设置。<br>而在命令行模式下执行set命令，只是暂时的,关闭vim后设置就会丢失。</p><ul><li><code>set number</code>:显示行号</li><li><code>set hidden</code>:允许在有未保存的修改时切换缓冲区，此时的修改由 vim 负责保存</li><li><code>set hlsearch</code>: 搜索时高亮显示被找到的文本</li><li><code>set clipboard=unnamed</code>:仅使用<code>p</code>就能从外部粘贴文本</li><li><code>set undolevels =500 </code>可以执行500次的undo操作</li><li><code>set undodir=~/.vim/undo_dir</code>、<code>set undofile</code>:为了默认每次进入文件后都是可以执行<code>u</code>的，在<code>~/.vim</code>目录下新建一个默认目录<code>undo_dir</code></li><li><code>set ignorecase smartcase</code>:设置全小写不区分大小写，有一个大写字母就区分-&gt;.vimrc-&gt; set ignorecase smartcase<br>…… <a href="https://www.cnblogs.com/gaoguofeng/p/5799604.html">更多设置参考</a></li></ul><p><strong>自定义函数</strong><br>vimrc是一个很好的用来放置自定义函数的地方，后面的章节继续学习写vimscript函数</p><p><strong>自定义命令</strong><br>可以使用<code>command</code>创建一个自定义命令<br>eg:创建一个显示今天日期的基本命令 Today(首字母大写)<br><code>:command! Today echo call(&quot;strftime&quot;,[&quot;%F&quot;])</code></p><p><strong>键盘映射</strong><br>略过</p><h3 id="22-3-组织管理Vimrc">22.3 组织管理Vimrc</h3><p>当<code>.vimrc</code>文件变得大且复杂时，有两种方法可以使文件保持整洁：</p><ol><li>将vimrc文件划分为几个文件</li></ol><ul><li>在<code>~/.vim</code>下创建一个子文件<code>settings</code></li><li>在该子文件下创建多个文件(<code>plugins.vim</code>、<code>configs.vim</code>、<code>functions.vim</code>、<code>mappings.vim</code>)</li><li>在<code>.vimrc</code>中添加 <code>source $HOME/.vim/settings/.....</code></li><li>然后分别在四个文件中设置<code>set</code>、<code>call plug</code>等等，即可</li></ul><ol start="2"><li>折叠vimrc文件<br>在<code>.vimrc</code>文件顶部添加如下内容</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot; setup folds &#123;&#123;&#123;</span></span><br><span class="line"><span class="string">augroup filetype_vim</span></span><br><span class="line"><span class="string">  autocmd!</span></span><br><span class="line"><span class="string">  autocmd FileType vim setlocal foldmethod=marker</span></span><br><span class="line"><span class="string">augroup END</span></span><br><span class="line"><span class="string">&quot;</span> &#125;&#125;&#125;</span><br><span class="line"><span class="string">&quot; plugins &#123;&#123;&#123;</span></span><br><span class="line"><span class="string">call plug#begin(&#x27;~/.vim/plugged&#x27;)</span></span><br><span class="line"><span class="string">  Plug &#x27;mattn/emmet-vim&#x27;</span></span><br><span class="line"><span class="string">  Plug &#x27;preservim/nerdtree&#x27;</span></span><br><span class="line"><span class="string">call plug#end()</span></span><br><span class="line"><span class="string">&quot;</span> &#125;&#125;&#125;</span><br><span class="line"><span class="string">&quot; configs &#123;&#123;&#123;</span></span><br><span class="line"><span class="string">set nocompatible</span></span><br><span class="line"><span class="string">set relativenumber</span></span><br><span class="line"><span class="string">set number</span></span><br><span class="line"><span class="string">&quot;</span> &#125;&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="22-4-启动Vim时加载-不加载vimrc和插件">22.4 启动Vim时加载/不加载vimrc和插件</h3><ul><li>启动Vim时，既不加载vimrc，也不加载插件：<code>vim -u NONE</code></li><li>启动Vim时，不加载vimrc，但加载插件:<code>vim -u NORC</code></li><li>启动Vim时，加载vimrc，但不加载插件:<code>vim --noplugin</code></li><li>启动Vim时加载其他的vimrc配置文件:<code>vim -u ~/.vimrc-backup</code></li></ul><h2 id="二十三-Vim软件包">二十三 Vim软件包</h2><p>软件包用来安装插件，从Vim8开始支持</p><h3 id="23-1-查看是否支持软件包">23.1 查看是否支持软件包</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">vim</span></span><br><span class="line">:<span class="keyword">version</span> [查看是否有packages]</span><br></pre></td></tr></table></figure><h3 id="23-2-包目录">23.2 包目录</h3><p>确保根目录 <code>~/.vim</code>下有pack这个文件夹，如果没有就创建，Vim会自动在这个子文件夹内搜索插件</p><h3 id="23-3-两种加载方式">23.3 两种加载方式</h3><p><strong>自动加载</strong><br>需要放在start/子目录中，看起来像这样<code>~/.vim/pack/*/start/</code>,其中星号表示是任意名字且不可忽略。<br>在<code>~/.vim/pack/*/start/</code>目录中，想克隆多少插件就克隆多少插件，Vim会自动加载每一个插件，如果删除了仓库，那么插件就失效了。</p><p><strong>手动加载</strong></p><ul><li>需要放在opt/子目录中，路径看起来像这样<code>~/.vim/pack/*/opt/</code>,</li><li>进入到这个目录后，克隆一个仓库：<code>git clone https://github.com/vim/killersheep.git</code></li><li>启动Vim，执行命令 <code>KillKillKill</code></li><li>Vim会提示不是一个有效命令</li><li>运行：<code>packadd killersheep</code></li><li>继续执行命令 <code>KillKillKill</code>,命令可使用</li></ul><h2 id="二十四-Vim-RunTime">二十四 Vim RunTime</h2><h3 id="24-1-Plugin脚本">24.1  Plugin脚本</h3><ul><li>Vim 中有一个 runtime 路径 plugin ，每次启动时都会执行这个路径中的脚本。</li><li>路径是 <code>~/.vim/plugin/donut.vim</code> 和 <code>~/.vim/plugin/chocolate.vim</code></li><li>此plugin runtime路径可以用来执行一些初始化的脚本</li></ul><h3 id="24-2-文件类型监测">24.2 文件类型监测</h3><p>使用vim打开文件后，想知道打开文件的类型<code>:set filetype?</code></p><h3 id="24-3-文件类型插件">24.3 文件类型插件</h3><p>当我们在打开一个文件时，比如是js文件，我们就执行一个脚本，如果是vue文件，我们就不执行脚本，那么这么做：</p><ul><li>使用文件类型插件<code>~/.vim/ftplugin</code> 完成这个功能。</li><li>该目录下创建一个文件<code>javascript.vim</code></li><li>内容为:<code>echo &quot;I am JS runtime &quot;</code></li><li>此时使用打开后缀为<code>js</code>的文件会输出内容。</li></ul><h3 id="24-4-颜色">24.4 颜色</h3><p>Vim有一个颜色 runtime 路径，用来存储颜色主题: <code>~/.vim/colors/</code></p><h3 id="24-5-语法高亮">24.5 语法高亮</h3><p>Vim有一个语法高亮 runtime 路径，用来定义语法高亮: <code>~/.vim/syntax</code></p>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*73):临终遗憾</title>
      <link href="/202236-No73/"/>
      <url>/202236-No73/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202236.webp" alt="" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;">Star</figcaption></figure><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="padding: 0 10px; word-spacing: 0px; word-wrap: break-word; text-align: left; line-height: 1.6; letter-spacing: .034em; color: rgb(63, 63, 63); font-size: 16px; word-break: all; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周是2022年的第<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">36周</strong>(09.05-09.11).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a href="https://blog.liugezhou.online" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">我的博客</a><br><span style="display:block;text-align:right;color:blue;">No.*73</span></p><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">中秋已过，9月13日来补个。</p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; border-top: 1px solid black; height: 1px; padding: 0; border: none; text-align: center; background-image: linear-gradient(to right,rgba(60,122,198,0),rgba(60,122,198,0.75),rgba(60,122,198,0));"><span id="more"></span><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周主题:临终遗憾</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一位护士问临终的病人，他们有什么遗憾。她后来总结出了5个最常见的回答。</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: black; list-style-type: disc;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">不要忽视梦想。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">不要工作过久。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">说出想法。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">交朋友。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">要开心。</section></li></ul><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">对于当下的自身来说，<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">说出想法</code>这条让我觉得比较迫切又难得。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">初中到高中,再到大学阶段，通过QQ空间说说、BBS论坛等，说出想法算是80 90后的主流表现。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">彼时我内心关注点在：由于不懂事，对于一些产生的想法或看法，由于年龄造成的经历匮乏，时常觉得想法和表达出来，由于不成熟会遭以后的自己耻笑。于是，鲜有真实的自我想法表达。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">时光滴答的转，这个小想法并没有被完全转走。<br>不想说出想法、或者不想分享生活的原因实在是好多，<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">没必要</code>、<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">没空说</code>、<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">不想说</code>、<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">会丢人</code>、<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">会成为别人饭后吐槽的槽点</code>、<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">不值得</code>、<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">没人关心</code>、<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">保护隐私</code>、<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">不精彩</code>、<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">没感受</code>、<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">没想法</code> 等等吧，要用一个词总结种种的感受，我认为是<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">恐惧</code>，恐惧到没有想法。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"><code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">说出想法</code>好比<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">记录美好生活，留下美好回忆</code>，一个正常的成年人，能说出想法是多么的高贵的品质啊。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">我深入的以自我为例，在思考为什么人要表达想法上，思考了一下：<br><code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">凡事由浅入深，表达想法和观点(无论情绪是喜怒哀乐)，想到达到的最浅层次需求是为得到别人的认同，最根本的需求是说出想法以验证自己选择的正确性，而最终得到自己内心的愉悦和平和</code></p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">很难跳过的一个点是，我们的内心还不足以强大到可以不需要别人的认同，跳跃这个状态直接面对自己的内心。<br>哪里有人，哪里有观点和想法，哪里就是江湖，哪里就是人情世故体验的辩论。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">这个体验过程，最主要的是想法的产生。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">对于已经到了各自为战的成年人阶段的人来说，由于圈子不同，对于一天能释放出来五万个想法、对社交有强烈需求的的现代人类来说，想自在的表达想法，到底该怎么办？</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">广交朋友广交流，老朋友们多回首。<br>多作文又多记录，找到圈子互相踩。<br>锻炼内心不要脸，想法观点真实践。<br>保持对已绝真实，发掘自身强和弱。<br>强，保持就有希望。<br>弱，边界就可以摸索。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">关注&amp;工具</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://rectangles.app" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">今天过了多少格</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">这个网页上，一个方块代表10分钟，一天24小时就是144个方块。可以一眼看到，当天还有多少个方块空着。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202236_1.webp" alt="" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;"></figcaption></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">dime</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一个完全免费的记账应用。<br>记账应用各有千秋，这款记账应用简洁好用，其中budget的可视化图表很是舒适。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202236_02.webp" alt="" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;"></figcaption></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://mp.weixin.qq.com/s/izyluX0H3UMM5ARLKXVC2w" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">青岛救护车事故,正在把寒气传递给每一位热心市民</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">👆 公众号的一篇文章，由于救护车出事故，热心市民上前抢救，均遭到隔离的故事。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://mp.weixin.qq.com/s/EykLVZA6MQ3kgKvZFKfR9g" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">知乎水印事件</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">知乎暗藏水印功能，用来记录是谁进行截图。<br>即当我们在知乎页面进行截图的时候，肉眼看到的是一张截图的图片，当这个截图进行一些流转、传播之后，不管流转了多少手信息，这个截图的源图可使用盲水印解析，由此追溯到截图者的信息。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202236_03.webp" alt="" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;"></figcaption></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://nesbox.xianqiao.wang/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">NESBox</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">NESBox,俗称红白机，这个网站有一千多款在线游戏，支持桌面端和网站在线。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202236_04.webp" alt="" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;"></figcaption></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202236_05.webp" alt="" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;"></figcaption></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202236_06.webp" alt="" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;"></figcaption></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">AI生成图片</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">这个网站<a href="https://openart.ai/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">openart.ai</a>收集了非常多从 DALL·E 2 生成的艺术图片。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202236_07.webp" alt="" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;"></figcaption></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">和DALL·E一样功能，但是可以直接通过描述，在线生成图片的免费网站：<a href="https://www.photoroom.com/backgrounds/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">photoroom.com</a>  更为友好。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202236_08.webp" alt="" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;"></figcaption></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">可以通过查看openart.ai网站中的描述，尝试在photoroom中进行生成。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://github.com/TransparentLC/WechatMomentScreenshot" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">WechatMomentScreenshot</a></span><span class="suffix" style="display: none;"></span></h3><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202236_09.webp" alt="" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;"></figcaption></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202236_10.webp" alt="" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;"></figcaption></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">朋友圈转发截图生成工具，生成了上面两个截图，可以以假乱真了。<br>截图在线生成地址：<a href="https://akarin.dev/WechatMomentScreenshot/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">https://akarin.dev/WechatMomentScreenshot/</a></p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">一周图片</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">因为是补上周的，图片的整理靴微麻烦一点，略过。。。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">文摘</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://mp.weixin.qq.com/s/FPTlJzhgKlAXM-HnfHAnnw" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">入行四十年，15条程序员经验宝典</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">公众号‘CSDN程序人生’，翻译的一篇程序员的分享分享：从事编程四十年的一个叫做'Noah Gibbs'的一些工作、生活经验。</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: black; list-style-type: disc;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">软件开发这个领域还很年轻</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">年龄不是问题，你并不需要追求No1</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">顺序不是决定性的，尝试不同的东西是关键</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">现在觉得自己学的东西没有还为时过早，你看不到未来会发生什么</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">确保工作是好的，如果不是，那就改变工作</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">别把计划看的太重,生活中不能只有工作，即使有一份好工作，情感上的僵化和压抑也不会让你走的太远</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">不要混淆工作和职业</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">如果你坚持足够长的时间，你可以专注于一件事、十件事、甚至一百件事</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">你变得越好，你就越与众不同</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">通过基础工作来学习深层原理</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">了解相关技术很重要，你需要扎实的基础技能</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">关注其他领域，向其他领域学习</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">如果你不在乎周围人的想法，你会变得更好，你不必告诉别人自己是怎么做到的</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">大多数时候，练习并不会让你变得更好。每隔一段时间，它就会使你的成绩有一个巨大的飞跃</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">坚持才是最重要的</section></li></ul><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">不确定性才是利润的来源<br>确定性带来的是薪酬</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一个人要是能有一些沉浸其中的爱好，就不会把精力都放在为世界操心上面，也没有时间与人缠斗，还能在困顿的时代自得其乐，免于走向精神崩溃。<br>培养一些个人爱好吧，除了快乐以外，这也能让人变得更纯粹，更能应对外部的风云，也许还能救人一命。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">你爱他吗？<br>爱他，就跟他端盆热脚水。</p></blockquote></blockquote><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">编码相关</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">Vue的内置组件</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">keep-alive会缓存子组件，被包裹的子组件会多出两个生命周期函数：<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">activated</code>和<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">deactivated</code>。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://playcode.io/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">playcode.io</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一般情况下写JS测试demo代码的时候，都在Chrome控制台写，但是换行、格式等非常的不舒适，如此我还专门建了一个code-demo的仓库，就是为了在写测试代码的时候，也可以有种很严谨、很正式的感觉。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">然后遇到这个playcode的代码在线编辑网站，示例代码的执行是真快，只是初次加载速度有点过于慢了。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周小结</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周是爱的包围。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">That's All.<br>See You This Sunday Night.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*72):没有主题</title>
      <link href="/202235-No72/"/>
      <url>/202235-No72/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202235.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="padding: 0 10px; word-spacing: 0px; word-wrap: break-word; text-align: left; line-height: 1.6; letter-spacing: .034em; color: rgb(63, 63, 63); font-size: 16px; word-break: all; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周是2022年的第<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">35周</strong>(08.29-09.04).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a href="https://blog.liugezhou.online" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">我的博客</a><br><span style="display:block;text-align:right;color:blue;">No.*72</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; border-top: 1px solid black; height: 1px; padding: 0; border: none; text-align: center; background-image: linear-gradient(to right,rgba(60,122,198,0),rgba(60,122,198,0.75),rgba(60,122,198,0));"><span id="more"></span><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周主题:没有主题</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">每到周末的时候，开始补课。各种博客文章、笔记软件使用心得、图片处理相关、记账工具、网站分享、笔记备忘录、markdow相关、各种工具、Github仓库推荐、文件传输、书单推荐。这种同属于一个应用的不同版本，浏览的多了，突然就产生了厌恶。马上想到我每周也在干这件事，消极情绪蔓延开来。其实是因为先产生消极情绪，然后对看到的文章千篇一律，产生审美疲劳，没有探索欲、对现有内容抄的自觉没有新意，在情绪低落这个节点产生的不能与互联网情绪产生共振，又在逼着自己去想点什么。多数的时候，想想这个、想想那个是对人生意义的探索，不合适的时机再去硬思维开放，就是一种折磨了。不折磨了，下周又是一个新的开始。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">关注&amp;工具</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://ikea-lp.netlify.app/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">宜家特价榜</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一个宜家低价清单展示项目，数据每周自动同步.</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202235_01.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="http://banan.huiben.61read.com/Home/HuibenVideo" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">中少绘本</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">中国少年儿童新闻出版总社免费开放的少儿绘本网站。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202235_02.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://myfirstnft.info/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">我的第一个NFT</a></span><span class="suffix" style="display: none;"></span></h3><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202235_03.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://www.yangzhiping.com/psy/openmindcanon.html" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">开智正典：科学洗脑百本经典导读</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">作者感悟：</p><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">「开智正典」是一个读完后，令人脑洞大开，三观尽改的书单。由我精选智者108本神作，代表21世纪人类智慧巅峰与知识源头, 囊括了「网络科学，认知&amp;神经&amp;心理科学，编程，数学，诗歌」五大类21世纪的元学科</p></blockquote></blockquote><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">一周图片</span><span class="suffix"></span></h1><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202235_04.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202235_05.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202235_06.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202235_07.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202235_08.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202235_09.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202235_10.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202235_12.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; line-height: 1.75em; font-size: 17px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">文摘</span><span class="suffix"></span></h1><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一段旅程就是一段人生。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">大家都说好，不一定好；你觉得好，才是真的好。<br>人这辈子，搞清楚自己真正想要的是什么。不然你苦苦追求到最后，发现你努力追求的东西，其实根本就不是最想要的，甚至你牺牲了最重要的东西，去换取你误认为自己渴望的东西，这种感觉会非常糟糕。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">大部分人，从年轻到年长，心肠变得越来越硬。<br>只是因为遇到了太多不可理喻的人和事，遇到太多艰难困苦与不公，却没有任何人能理解、帮助。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">当你老了，回顾一生，就会发觉：什么时候出国读书、什么时候决定做第一份职业、何时选定了对象而恋爱、什么时候结婚，其实都是命运的巨变。只是当时站在三岔路口，眼见风云千樯，你作出抉择的那一日，在日记上，相当沉闷和平凡，当时还以为是生命中普通的一天。</p></blockquote></blockquote><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">编码相关</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://favicon.io/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">favicon.io</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">免费的favicon生成工具，可以把 PNG、文字、emoji 转成 favicon：</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://files.mdnice.com/user/32716/99360a34-e5e3-4dbc-ac06-0ac059143462.png" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://blog.liugezhou.online/030-%E4%B8%80%E6%96%87%E5%AD%A6%E4%BC%9Avim/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">一文学习会vim</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周学习vim，跟着Githun仓库上的教程内容对其核心命令进行了一个总结，目前看到了第三章。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周小结</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周对vim的使用技巧进行了一个简单的学习。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*71):青春未凉离了伤</title>
      <link href="/202234-No71/"/>
      <url>/202234-No71/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234.webp" alt="飞盘比赛" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;">飞盘比赛</figcaption></figure><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="padding: 0 10px; word-spacing: 0px; word-wrap: break-word; text-align: left; line-height: 1.6; letter-spacing: .034em; color: rgb(63, 63, 63); font-size: 16px; word-break: all; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周是2022年的第<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">34周</strong>(08.22-08.28).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a href="https://blog.liugezhou.online" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">我的博客</a><br><span style="display:block;text-align:right;color:blue;">No.*71</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; border-top: 1px solid black; height: 1px; padding: 0; border: none; text-align: center; background-image: linear-gradient(to right,rgba(60,122,198,0),rgba(60,122,198,0.75),rgba(60,122,198,0));"><span id="more"></span><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周主题:青春未凉离了伤</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周突然翻到了，十年前那会写过的几篇QQ日志。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">从2011年的11月到2012年12月，一年时间，QQ空间七篇日志。<br>简单读了一遍，发现那时的想法，虽表达微伤，处处呻吟，可想法也算是青春昂扬、并没有凉。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">十年时间已过，就像现在并没有觉得自己该有成年人的样子一样，也没有觉得那时多么青涩。<br>而愈发的感受是越来越倾向量子力学里的终极决定论：</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"><strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">你是一个什么样的人，终将是一个什么样的人，我们做的每一步都早就确定好了，甚至人的意识也不是自主的，都是确定的，不会被改变。</strong></p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">于是乎，,猝不及防的转折一下，贴一下十年前的《只是想想》，还挺漂亮。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_01.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">以及一篇深深受伤的《夜不能寐》：</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_02.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">关注&amp;工具</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpgg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">摩尔定律</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">摩尔定律内容为：集成电路上可容纳的晶体管数据，约每隔两年便会增加一倍，被经常应用的是"18个月"。<br>半导体行业大致按照摩尔定律发展了半个多世纪，对二十世纪后半叶的世界经济增长做出了贡献，手机、因特网等技术的改革和创新都离不开摩尔定律的延续。<br>摩尔定律被视为对现象的观测和未来的推测，则不是一个物理定律或自然界规律。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">摩尔定律的定义归纳起来，主要有以下三种版本：</p><ol data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: black; list-style-type: decimal;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">集成电路上可容纳的晶体管数目，约每隔18个月便增加一倍。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">微处理器的性能每隔18个月提高一倍，或价格下降一半。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">相同价格所买的电脑，性能每隔18个月增加一倍。以上几种说法中，以第一种说法最为普遍。</section></li></ol><p align="right" data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"> - Wikipedia</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpgg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="http://www.12348.gov.cn/#/homepage" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">中国法律服务网</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">中国法律服务网：根据问卷提示填写相关信息，在线为您免费出具 法律意见书，供您参考。<img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_03.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpgg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://openai.com/dall-e-2/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">DALL·E2</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">在“科技爱好者周刊(第220期中)”主话题中，简单介绍了OpenAI 公司的人工智能模型 人工智能模型<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">DALL·E2</strong>，可以根据描述生成图片。<br>比如描述内容和生成的图片:</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"><strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">一只蓝鲸背上有成堆的集装箱</strong>：</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_04.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"><strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">一个毛绒绒的蓝色地鼠，在多个显示器上编程：</strong></p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_05.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">宇航员在月球骑马：</strong></p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_06.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">有点想体验了一下，但是：</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_07.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpgg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">[fluent-reader]</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一款拥有现代化界面的RSS阅读器，订阅我的博客后，界面显示：</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_08.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpgg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://chrome.google.com/webstore/detail/temp-mail-disposable-temp/inojafojbhdpnehkhhfjalgjjobnhomj/related" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Temp Mail</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">谷歌插件，可以获取匿名邮箱,一些需要邮箱登录才可以体验的应用可以使用这个插件。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_09.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpgg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://www.redhat.com/en/command-line-heroes" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">代码英雄</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">红帽公司精心制作的一个音频播客：代码英雄。<br>Linux中国得到授权进行的中文翻译：<a href="https://linux.cn/talk/clh/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">https://linux.cn/talk/clh/</a></p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_10.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpgg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://itnext.cn/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Metavverse</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一个介绍元宇宙产业动态、投融资、酷产品的网站。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_11.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">一周图片</span><span class="suffix"></span></h1><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_12.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_13.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_14.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_15.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_16.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_17.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_18.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_19.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_20.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_21.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_22.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_23.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; line-height: 1.75em; font-size: 17px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">文摘</span><span class="suffix"></span></h1><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">我辈既如此学，便须努力向前，完养精神，将一切闲思维、闲应酬、闲言语扫除净尽，专心一意，钻进里面，安神立命，务要另换一个人出来，方是功夫进步，愿共勉之！</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">我一无所有，除了微笑，无论何时何地遇到何事，微笑都可以令我感觉到我的生活比以往更加美好。</p></blockquote></blockquote><blockquote class="multiquote-3" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px; text-align: center;">love the life you live<br>live the life you love</p></blockquote></blockquote></blockquote><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">编码相关</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpgg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://www.cnblogs.com/nayu/p/6896469.html" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">如何关闭浏览器的HSTS功能</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">在安装配置 SSL 证书时，可以使用一种能使数据传输更加安全的Web安全协议，即在服务器端上开启 HSTS (HTTP Strict Transport Security)。它告诉浏览器只能通过HTTPS访问，而绝对禁止HTTP方式。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">但在日常开发中，我们需要手动去关闭，Chrome浏览器关闭方式</p><ol data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: black; list-style-type: decimal;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">地址栏中输入 chrome://net-internals/#hsts</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">在 Delete domain 中输入项目的域名，并 Delete 删除</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">可以在 Query domain 测试是否删除成功</section></li></ol><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_24.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpgg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://github.com/itcharge/LeetCode-Py" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">LeetCode-Py</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">⛽️「算法通关手册」，超详细的「算法与数据结构」基础讲解教程，「LeetCode」700+ 道题目的详细解析。通过「算法理论学习」和「编程实战练习」相结合的方式，从零基础到彻底掌握算法知识。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_25.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpgg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://github.com/wsdjeg/Learn-Vim_zh_cn" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Learn-Vim_zh_cn</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">Vim初高级学习文档。<br>学习 Vim（智能方式）, 就去学一本Vim中优秀部分知识的书。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_26.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpgg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="http://wejectchan.gitee.io/git-emoji-user-guide/#/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Git提交使用指南</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">Git代码提交时用到的一些表情符号，可以直接在本网站进行复制。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202234_27.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpgg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://learngitbranching.js.org/?locale=zh_CN" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">learngitbranching</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">初学者在线学习git命令的网站。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周小结</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">生活上：去洗了个牙、公园拍了几张照。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">娱乐上：玩了一天多的游戏-人中之龙。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">工作上：以不满的情绪、热忱的写着程序。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">学习上：再看JS基础。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*70):职场PUA</title>
      <link href="/202233-No70/"/>
      <url>/202233-No70/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202233.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure> <section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="padding: 0 10px; word-spacing: 0px; word-wrap: break-word; text-align: left; line-height: 1.6; letter-spacing: .034em; color: rgb(63, 63, 63); font-size: 16px; word-break: all; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周是2022年的第<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">33周</strong>(08.15-08.21).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a href="https://blog.liugezhou.online" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">我的博客</a><br><span style="display:block;text-align:right;color:blue;">No.*70</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; border-top: 1px solid black; height: 1px; padding: 0; border: none; text-align: center; background-image: linear-gradient(to right,rgba(60,122,198,0),rgba(60,122,198,0.75),rgba(60,122,198,0));"><span id="more"></span><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周主题:职场PUA</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">身在职场，我们多少都会经历过一点职场PUA。<br>所谓职场PUA指的是被孤立、被故意针对，被恶语相向、画大饼、威胁呵斥等。<br>职场PUA是常态，甚至可以说没有被职场PUA的职业生涯是不完整的。<br>而对于多数的打工仔来说，工作占据了生活的大部分时间，如果感觉陷入职场PUA的牢笼，对情绪消耗实为受伤，我们可以从以下几个方面进行分析：</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">1.洞察对方真实意图<br>2.不再尝试解决它、不去理会<br>3.认清自己的价值<br>4.降维打击</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">用批判性思维，考虑这些事件，简单来说充当裁判角色，跳出来看事，而目的不是为了判刑，是要有目的的提高自己。<br>然后又引出一个职场官场潜规则：能力的高低不重要，职级的高低才是职场生存法门。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">关注&amp;工具</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">免职和撤职的区别</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">8月16日，搜一搜中看到一个热搜：<a href="https://mp.weixin.qq.com/s/cP7UehvZWjp5TVzKAuzSwQ" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">三亚市吉阳区委书记被免职！</a></p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">然后，免职和撤职的区别是：<br>免职，是属于干部任用的一种组织措施，不是处分。<br>撤职，就是撤销职务，是对违犯公务员法的公务员的一种处分。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://new.qq.com/rain/a/20220712A0467900" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">iOS16 beta版本</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">iOS16公测版本介绍，以及beta版本下载。<br>正式版预计9月之后，主要的更新是屏幕壁纸、专注模式、图片、WiFi密码可查看、禁止粘贴内容等。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://mp.weixin.qq.com/s/bQYAK8LAyxOUE7hNdhW1bw" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">中国开发者调查报告发布</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">CSDN公众号发布的一篇文章：《月薪集中在8k-17k、厌倦大小周、近三成的人没有跳槽过，中国开发者调查报告发布》<br>文章的链接中包含《调查报告》的数据来源--跳转小程序可查看。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://lab.magiconch.com/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">神奇海螺试验场</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">这个网站做了一些有趣的小工具，比如拼字字母缩写解释工具(yyds/nbnhhsh)、申论生成器、生成梗图。切九图等等。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://github.com/alaskasquirrel/Email-newsletter-RSS" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Email-newsletter-RSS</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">搜录中文newsletter。<br>仓库地址：https://github.com/alaskasquirrel/Email-newsletter-RSS。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">该仓库中收录了许多中文博客、weekly、海外、军事、太空等内容。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">一周图片</span><span class="suffix"></span></h1><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202233_01.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202233_02.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202233_03.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202233_04.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; line-height: 1.75em; font-size: 17px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">文摘</span><span class="suffix"></span></h1><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">随着年龄的增长，普通人学习能力会退化。<br>当人超过一定岁数时他们开始意识到，自己接收信息的能力不如往昔。他们会对自己不熟悉的观点警惕，也不容易为此而去改变，且常常为之寻找理由。<br>大多数人到了这种阶段，会试图逃避这一现实，甚至妄想改变别人的观点来肯定自己的观点。<br>尽量不要成为他们。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">人是一件未完成的作品。<br>你怎么看待别人，怎么对待别人，其实也是在用你的态度在改变别人，把别人往你所认定的那个方向推。在这个过程中，你也是在塑造你与别人的关系，最终也是在塑造自己。<br>尽量多一些温和，多一些善意，多一些冷静吧。<br>如果做不到这些，就是保持沉默，各走各路，也比相互伤害为好。</p></blockquote></blockquote><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">编码相关</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">一行CSS代码实现暗黑模式</span><span class="suffix" style="display: none;"></span></h3><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_code.jpg ); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">html&#123;<br>&nbsp;&nbsp;filter:&nbsp;invert(1)&nbsp;hue-rotate(180deg)<br>&#125;<br></code></pre><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">git中远程仓库删除某分支，本地不更新</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">远程分支删除后，本地 git pull一下 然后git branch -a 还是能看到远程分支。<br>这个时候，我们只需要执行 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">git remote prune origin </code><br>然后 git branch -a 就看到删除的远程分支在本地看不到了</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://www.bilibili.com/video/BV1ig411k7pf?vd_source=a3f9b7b9a17d4e2ff6b5b273f2926f4c" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">TypeScript全面解析</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">B站上的一个讲解ts的课程,码住。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周小结</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周在牛客网刷了一些js题目，感觉比力扣上的要更为友好一些。<br>刷题真的是很有必要啊，对基础知识的查漏补缺非常的有疗效。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*69)：我的前半生</title>
      <link href="/202232-No69/"/>
      <url>/202232-No69/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202232.5o2iiczkpfo0.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="padding: 0 10px; word-spacing: 0px; word-wrap: break-word; text-align: left; line-height: 1.6; letter-spacing: .034em; color: rgb(63, 63, 63); font-size: 16px; word-break: all; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周是2022年的第<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">32周</strong>(08.08-08.14).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<span class="footnote-word" style="font-weight: bold; color: rgb(60, 112, 198);">我的博客</span><sup class="footnote-ref" style="line-height: 0; font-weight: bold; color: rgb(60, 112, 198);">[1]</sup><br><span style="display:block;text-align:right;color:blue;">No.*69</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; border-top: 1px solid black; height: 1px; padding: 0; border: none; text-align: center; background-image: linear-gradient(to right,rgba(60,122,198,0),rgba(60,122,198,0.75),rgba(60,122,198,0));"><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周主题:我的前半生</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">标题起的有点大，算是一个回忆贴，贴一下即将步入三十岁的老男人，之前体验过的一些兼职，是对过去一个个短暂体验后的微记录。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">不去回忆真是不记得干过什么。<br>整体上来说，体验过销售、电工、快递员、作家、运营、保险、自媒体、个体户、保险、文艺 等。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">时间紧迫，下面回忆在一气呵成后，未进行二次编辑。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">电工</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">当电工的经历是在大学暑假，某一铁矿下井。<br>主要从事水泵员和电工两个专业。<br>主要工作内容就是看水坝、换灯泡。<br>上十二休息二十四，戴安全帽、穿靴子、厚厚的工作服，乘坐矿罐下井大概几百米不记得了，矿下无论春夏秋冬都非常凉爽。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">矿下经历的记忆点就是：看水库水满后要及时放水、各个黑不隆咚的地方需要接线换灯泡、印象最深的莫过于矿井下放炮钻眼：霹雳吧啦--雷声根本啥也不算。<br>一天收入90，干了一个月，收获2700.</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">快递员</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">大学那会，闲的没事，去圆通快递送了一个月的快递。<br>跟着一退伍的年轻师傅送快递、寄快递。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">每天的工作内容就是，早晨起来分片区分件、一件一件快递在地上扔来摔去，热火朝天。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">快件分好后，骑上三轮车，顺着一条街开始挨家挨户上门送货、打电话、敲门、送件。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">到中午的时候吃完饭，接着回圆通点再等一波货车、再次取件。<br>下午的量没那么多，四点左右送完，然后去一些淘宝等需要发货的商家家里(居民楼)，上门取件，印象深刻的就是：快递件在仓库横飞、快递费由快递员说了算、淘宝商家很多都是自家包装。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">入职的时候心理预期是干一个月，但面试的时候说是我要长期从事这个行业。<br>干完一个月的时候，提出离职，由于很儿戏，老板扣了一些钱，貌似给发了一千一左右吧。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">保险</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">体验过保险，是仅仅限于培训这个经历。<br>彼时还在写代码，大学一哥们从事保险工作，为了完业绩，介绍我去酒店听讲座。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">在一顿花言巧语下，在免交钱的情况下，酒店进行了两夜三天的保险讲座。<br>具体讲了什么内容不记得了，只是印象有些蛊惑，每天穿着小西服、唱着美丽的赞歌、恨不能马上从事这个职业。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">三天后新鲜劲一过，对各种保险的工作内容做了个了解，然后就没然后了。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">销售</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">大学的时候，卖健力宝。<br>在石家庄宫家庄一块的小吃一条街，貌似去了两周、一天四十左右？记不太清了。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">个体户</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">也是大学的时候，在石家庄老车站旁边，进了一批钱包，大概进了差不多200的货？</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">进货价从8块到13块不等，卖20-30。<br>在夜市、校门口摆过地摊，再加上朋友支持，估摸着卖了一半。<br>总体没亏，留下的一半好似都送人了。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">印象还是觉得脸皮太薄。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">文艺工作-Dancer</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">也是大学的时候，痴迷跳舞。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">后来认识一哥们，是正定某街舞培训的老师。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">大学没事总是逃课出去玩、演出、比赛。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">记忆深刻的是接过婚礼邀请表演，费用多少不记得了。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">后来因为一次正定金河舞蹈大赛，摔了膝盖，这门热爱的运动就此夭折。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">现在想起那会傻乎劲，如若没有伤膝，搞不好现在是一名街舞老师。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">天意不可违啊。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">文艺工作-出版</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">也算出版行业吧，Wakaka。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">也是大学期间的某个暑假，来北京找朋友玩。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">在马驹桥一带找了个兼职，找到一个压身份证、进工厂、捆书的兼职。<br>妥妥的出版行业，捆的书貌似是教科书。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">收入100左右。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">文艺工作-作家</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">大概2021年，起点发表了一个小说，总计四章不足一万字。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">字字瞎J扯，感觉还不错，但没坚持下去。<br>看到起点个人主页的作家称号、让人感觉甚是🐮🍺轰轰。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">收入为0，感受是缺乏天马行空的想象。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">炒股</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">大概2020年那会，蒙眼入场，佛系炒股。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">年底的时候赚了两万多。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">遂觉股神下场，21年亏了不到两万，深埋至此，扒不出来，软件卸载、眼不见、心不烦。<br>就在刚刚，眼睛一瞥，三分之一买入价已跌去，惨不忍睹，等待回光返照。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">运营</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">运营是在做程序员后端开发过程中的，其中工作的一部分。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">当时进公司是是面试开发的，然后总是问关于对销售的想法，以及今后出国去新加坡卖软件的看法。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">没得选，面试的时候，点头哈腰、说啥都行，只求给份工作。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">于是，为了把我往销售方向上带， 紧张的996的开发同时，给了一些运营号(QQ、Wechat、脸书)，每天的工作内容就是加好友。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">头像清一色美坯，性别一律为女，QQ当时加了多少人不记得了，Wechat加了差不多不到两千人。 脸书也因为某些原因给🈲️掉了。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">自媒体</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">严格上肯定不算自媒体，就是在各个平台、发过文章、视频等，赚钱是万万不能够的。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">印象中有过收入的是两个平台</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"><code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">面包多-为创作者创收</code>，发过一篇文章，收获十几RMB。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"><code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">公众号</code>:最开始申请的一个，写些杂七杂八的水文、技术文、想法，积累了一百多关注，后被封号，印象深刻的是一名来自纽约的华人小姐姐，打赏了16RMB。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">然后就是一些小小记录</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"><code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">知乎</code>因吐槽无良公司一个帖子，收获关注217。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"><code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">B站</code>之前尝试，录制了三四个视频，粉丝数51，获赞64，总播放量3500 +。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"><code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">简书</code>写过一段时间，粉丝240+，收获1200+ 赞。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"><code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">掘金</code>写过一点时间，文章被点赞151次，被阅读35404，收获关注46。</p><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">总结</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">这大概就是我想到的一些吧。<br>最大的体会：几乎没有什么能够坚持下来的。<br>倒也没什么，唯有喜爱、兴趣、利润激励有效统一。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">或许也是这一次次的经历，现在还在坚持写周小结的原因吧。<br>冥冥中，自安排。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">关注&amp;工具</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><span class="footnote-word" style="font-weight: bold; color: rgb(60, 112, 198);">五十岁咸鱼翻身转码上岸</span><sup class="footnote-ref" style="line-height: 0; font-weight: bold; color: rgb(60, 112, 198);">[2]</sup></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">👆 这篇文章是某论坛上一大哥的自述<br>"xx岁，转码还来得及吗？"<br>在一工作岗位呆了20年，年薪80K加元(1CAD=5.28CNY)，因为工作假期多福利好无压力无裁员风险，只因觉工资低，于是产生跳槽想法。从最简单的只会SQL查询，通过半年准备，从数据结构算法与Python开始学起、刷了300多道leetcode题、海投至少500公司，经过半年努力小厂上岸。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202232_01.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><span class="footnote-word" style="font-weight: bold; color: rgb(60, 112, 198);">祝你好运，里奥^格兰德</span><sup class="footnote-ref" style="line-height: 0; font-weight: bold; color: rgb(60, 112, 198);">[3]</sup></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">英国与2022年1月21日上映的一部剧情电影。<br>电影讲述了一个55岁的寡妇，雇佣20岁的鸭的故事，内容丰富充盈。电影是要探讨love、desire、sex的喜剧片<br>境界不够，没有看的很明白。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202232_02.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><span class="footnote-word" style="font-weight: bold; color: rgb(60, 112, 198);">Line Graph Maker</span><sup class="footnote-ref" style="line-height: 0; font-weight: bold; color: rgb(60, 112, 198);">[4]</sup></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一款在线图表制作工具，支持折线图、柱形图、饼图、雷达图等多种类型。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://files.mdnice.com/user/32716/cfe15a4f-7df1-4863-8968-6feb852bc428.png" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><span class="footnote-word" style="font-weight: bold; color: rgb(60, 112, 198);">yep</span><sup class="footnote-ref" style="line-height: 0; font-weight: bold; color: rgb(60, 112, 198);">[5]</sup></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">搜索引擎。<br>这个搜索引擎的特点是，保证广告收入的90%会返回给内容的创作者。它的英文搜索质量还可以，中文不行。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202232_03.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><span class="footnote-word" style="font-weight: bold; color: rgb(60, 112, 198);">Neeva</span><sup class="footnote-ref" style="line-height: 0; font-weight: bold; color: rgb(60, 112, 198);">[6]</sup></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">也是一款搜索引擎，搜索质量相当好。<br>没有广告，承诺不保存用户信息，由前谷歌工程师创建，</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202232_04.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202232_05.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">一周图片</span><span class="suffix"></span></h1><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202232_06.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202232_07.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202232_08.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202232_09.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202232_10.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202232_11.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202232_12.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202232_13.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; line-height: 1.75em; font-size: 17px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">文摘</span><span class="suffix"></span></h1><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">以前听前辈说，中年人的社交圈子小的可怜。我还不太理解。一个人活得越久认识的人应该越多啊。现在年纪到了，果然如此。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">有时候，我坐在电脑前，想写一些东西。面对着空白的文本编辑器，坐了一个小时，什么也写不出来，非常有挫折感。后来，我想通了，提醒自己写不出来没关系，这是为好作品的发生创造时间和空间。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">突然一个感悟，如果你有普通的性格，简单的快乐，稳定的情绪，一般的工作，平平淡淡的生活，不攀比的心境，从从容容，那么你真是个很优秀的人。</p></blockquote></blockquote><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">编码相关</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">npm ls</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">接手一个前端项目，在使用node安装依赖的时候，由于package.json中包的<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">^</code>与<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">~</code>的存在，安装完依赖后的版本，并不知道具体版本号，比如：<br><code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">"element-ui": "^2.9.1"</code><br>这个时候，我们需要知道，本地到底安装的是哪个版本，可以直接用<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">npm ls element-ui version</code>查看。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">一个数的n次方</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">js中的星星写法，求一个数的多次方：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_code.jpg ); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;"><span class="hljs-built_in" style="color: #e6c07b; line-height: 26px;">let</span>&nbsp;b&nbsp;=3<br><span class="hljs-built_in" style="color: #e6c07b; line-height: 26px;">let</span>&nbsp;res&nbsp;=&nbsp;b**=n&nbsp;（即为b的n次方）<br>console.log(res)<br></code></pre><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://blog.devgenius.io/a-few-must-learn-javascript-hacks-50c84dfb5010" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">A few must-learn JavaScript hacks</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一些必须学习的 JavaScript 技巧</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周小结</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周没有什么产出，Wakaka。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">That's All.<br>See You Next Week.</p><h3 class="footnotes-sep" data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="line-height: 15px; margin-bottom: -1px; background-image: none; background-size: none; display: block; width: auto; height: auto;">参考资料</span></h3><section class="footnotes" data-tool="mdnice编辑器" style="padding-top: 8px;"><span id="fn1" class="footnote-item" style="display: flex;"><span class="footnote-num" style="display: inline; width: 10%; background: none; font-size: 80%; opacity: 0.6; line-height: 26px; font-family: ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif; color: rgb(60, 112, 198);">[1] </span><p style="padding-bottom: 8px; padding-top: 23px; display: inline; font-size: 14px; width: 90%; padding: 0px; margin: 0; line-height: 26px; word-break: break-all; width: calc(100%-50); color: rgb(60, 112, 198); font-weight: bold;">liugezhou: <em style="color: rgb(60, 112, 198); font-style: normal; border-bottom-color: 1px dashed rgb(60, 112, 198); font-size: 14px; font-weight: normal; border-bottom: 1px dashed rgb(60, 112, 198);">https://blog.liugezhou.online</em></p></span><span id="fn2" class="footnote-item" style="display: flex;"><span class="footnote-num" style="display: inline; width: 10%; background: none; font-size: 80%; opacity: 0.6; line-height: 26px; font-family: ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif; color: rgb(60, 112, 198);">[2] </span><p style="padding-bottom: 8px; padding-top: 23px; display: inline; font-size: 14px; width: 90%; padding: 0px; margin: 0; line-height: 26px; word-break: break-all; width: calc(100%-50); color: rgb(60, 112, 198); font-weight: bold;">五十岁咸鱼翻身转码上岸: <em style="color: rgb(60, 112, 198); font-style: normal; border-bottom-color: 1px dashed rgb(60, 112, 198); font-size: 14px; font-weight: normal; border-bottom: 1px dashed rgb(60, 112, 198);">https://www.1point3acres.com/bbs/thread-918311-1-1.html</em></p></span><span id="fn3" class="footnote-item" style="display: flex;"><span class="footnote-num" style="display: inline; width: 10%; background: none; font-size: 80%; opacity: 0.6; line-height: 26px; font-family: ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif; color: rgb(60, 112, 198);">[3] </span><p style="padding-bottom: 8px; padding-top: 23px; display: inline; font-size: 14px; width: 90%; padding: 0px; margin: 0; line-height: 26px; word-break: break-all; width: calc(100%-50); color: rgb(60, 112, 198); font-weight: bold;">祝你好运，里奥^格兰德: <em style="color: rgb(60, 112, 198); font-style: normal; border-bottom-color: 1px dashed rgb(60, 112, 198); font-size: 14px; font-weight: normal; border-bottom: 1px dashed rgb(60, 112, 198);">https://movie.douban.com/subject/35235813/</em></p></span><span id="fn4" class="footnote-item" style="display: flex;"><span class="footnote-num" style="display: inline; width: 10%; background: none; font-size: 80%; opacity: 0.6; line-height: 26px; font-family: ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif; color: rgb(60, 112, 198);">[4] </span><p style="padding-bottom: 8px; padding-top: 23px; display: inline; font-size: 14px; width: 90%; padding: 0px; margin: 0; line-height: 26px; word-break: break-all; width: calc(100%-50); color: rgb(60, 112, 198); font-weight: bold;">Line Graph Maker: <em style="color: rgb(60, 112, 198); font-style: normal; border-bottom-color: 1px dashed rgb(60, 112, 198); font-size: 14px; font-weight: normal; border-bottom: 1px dashed rgb(60, 112, 198);">https://linegraphmaker.co/</em></p></span><span id="fn5" class="footnote-item" style="display: flex;"><span class="footnote-num" style="display: inline; width: 10%; background: none; font-size: 80%; opacity: 0.6; line-height: 26px; font-family: ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif; color: rgb(60, 112, 198);">[5] </span><p style="padding-bottom: 8px; padding-top: 23px; display: inline; font-size: 14px; width: 90%; padding: 0px; margin: 0; line-height: 26px; word-break: break-all; width: calc(100%-50); color: rgb(60, 112, 198); font-weight: bold;">yep: <em style="color: rgb(60, 112, 198); font-style: normal; border-bottom-color: 1px dashed rgb(60, 112, 198); font-size: 14px; font-weight: normal; border-bottom: 1px dashed rgb(60, 112, 198);">https://yep.com/</em></p></span><span id="fn6" class="footnote-item" style="display: flex;"><span class="footnote-num" style="display: inline; width: 10%; background: none; font-size: 80%; opacity: 0.6; line-height: 26px; font-family: ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif; color: rgb(60, 112, 198);">[6] </span><p style="padding-bottom: 8px; padding-top: 23px; display: inline; font-size: 14px; width: 90%; padding: 0px; margin: 0; line-height: 26px; word-break: break-all; width: calc(100%-50); color: rgb(60, 112, 198); font-weight: bold;">Neeva: <em style="color: rgb(60, 112, 198); font-style: normal; border-bottom-color: 1px dashed rgb(60, 112, 198); font-size: 14px; font-weight: normal; border-bottom: 1px dashed rgb(60, 112, 198);">https://neeva.com/</em></p></span></section></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*68)：为什么要打架</title>
      <link href="/202231-No68/"/>
      <url>/202231-No68/</url>
      
        <content type="html"><![CDATA[</section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; border-top: 1px solid black; height: 1px; padding: 0; border: none; text-align: center; background-image: linear-gradient(to right,rgba(60,122,198,0),rgba(60,122,198,0.75),rgba(60,122,198,0));"><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202231.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="padding: 0 10px; word-spacing: 0px; word-wrap: break-word; text-align: left; line-height: 1.6; letter-spacing: .034em; color: rgb(63, 63, 63); font-size: 16px; word-break: all; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周是2022年的第<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">31周</strong>(08.01-08.07).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a class="footnote-word" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);" href="https://blog.liugezhou.online/">我的博客</a><br><span style="display:block;text-align:right;color:blue;">No.*68</span></p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周主题:为什么要打架</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">鉴于最近气氛烘托的比较热火，我就杜撰了一个故事，也算是记录本周大事记吧。<br>这个故事最开始的时候，我是用来解释为什么这个<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">架</code>要打，然后到后来又引发了一些联想。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">我是男主角中仔，我的妻子是湾妮，我们是一家人，然后由于一些history的原因我们吵架，还动过手，因此不是很和睦，还在互相闹脾气，但毕竟还是睡在一个屋子里的合法夫妻。<br>可突然一个美男子的健身摇滚歌手，竟就趁虚而入，我的妻子<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">或许是为了气我</code>、或是一些<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">我可能知道的原因</code>，对美男子也是暗送秋波。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">我虽然很愤怒，但为了自身发展，我也在努力的学习美男子的健身技巧、学唱歌，并且跟美男子还有一些生意上的往来，也就一直隐忍，对此事闷在心里。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">可突然有一天，美男子和妻子竟当众约好来我家的阳台品酒，我自然是极力阻止的，这是我家，我也是个男人，我还能不知道你们男人的花花肠吗？你说你们背后搞小动作也就算了，还竟敢约在我的家里阳台上，我能忍的了？</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">那我肯定得有一番准备，敢进家我就得揍你吧，这是赤裸裸的挑衅啊。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">就基于这个想法，我觉得怎么也得打一顿啊。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">做了这么多心理建设，我还发了好几个微博，没想到最后美男子还是恬不知耻的还是进家来了。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">大家也知道了，我目前的做法是在家里打开了电视机，按上了麦克风，放大了声音来表达我的抗议。<br>当然这是由我内心最理智的声音决定的，毕竟打架的危害很是不可估量的，百害无一利。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">声音响着，我的脑子也在转着，是什么导致今天这步田地，一定是多方面的，我也为此，从某一个方面自省了一下：</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">我自身是一个权威极重，一意孤行、不愿听任自己的细胞抗议等反对声音的（是有那么一点老顽固的意思）。但我还是觉得我一切是为了大业，只能对自己的细胞采取无视态度(指不定哪个细胞犯上作乱呢)。<br>我一心发展为往前冲只为健身，不说其它技艺，起码得赶紧追上美男子矫健的肌肉啊，所以一定的牺牲是必要的。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">然后一些<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">感性</code>的细胞告诉我：</p><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="border: none; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; background: rgba(0, 0, 0, 0.05); color: #6a737d; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; padding: 15px 20px; line-height: 27px; background-color: rgb(239, 239, 239); border-left: none; display: block;"><p style="padding-bottom: 8px; padding-top: 23px; margin: 0px; line-height: 26px; padding: 0px; font-size: 15px; color: rgb(89,89,89);">你知道你不是非常的爱惜自己细胞吗？有时候脾气还很臭、特有的专横也算是出了名的，我们知道你也想改，但是你就是我，颜色不一样的烟火，即使如此，我们也还是爱你的啊。</p></blockquote><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">我的湾妮呢，她温柔、独立，并且平时非常注重饮食、相对我来说，她对自己的细胞要友好那么一点（具体这一点是多少，我也不清楚），她如今的抉择，一方面确实是由于她不顾道德法则只为自己欢乐，另一方面可能也是她的细胞在作祟吧。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">没有条理的碎碎念了一阵后，我我我到底该怎么办呢？</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">我想我能做的也就是，在努力健身、拥有矫健肌肉的同时，我也应该在饮食方面上有一点注意，对自己的细胞多一些关怀，也培养一下摇滚的兴趣，不能总是那么严肃，嗯，对，不能那么严苛，对自己细胞的管治是好的，但不能一刀切，这个趋势越来越明显，这样不好。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">我还是得增加一些幽默细胞，并且我也要多多培养自己的爱好，美男子的那些有的我都要有，毕竟好的东西是令人向往的，是积极的，那些不好的东西，他<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">抽烟喝酒</code>我就不要了，并且我还有一些他没有的，等着他也来向我学习、向我看齐的时候，想必湾妮肯定会回心转意吧。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">不管怎么样，总结就是：家不能散，我能做的就是继续健身、更重要的是关注一些我细胞的感受、多一些幽默、多一些创意、摇滚的、民族的、说唱的、流行的该适度放开了让他们自由发展，我还得学学画画，还得弹弹钢琴，我那么多亿的细胞，我得发挥主观能动性，我不能对他们如此的限制了，我知道我还有诸多的不足，但是只要我不那么专横，听取更多细胞的声音，我想我肯定会越来越好的。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">毕竟当初我去健身的时候，也是很多人反对的，可现在不是越来越好吗。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">嗯，这么想想是挺好的。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">关注&amp;工具</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">flomo</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">之前体验很多的笔记软件：小熊笔记、notion、flowus、备忘录、语雀、flomo等。。。<br>由于每个笔记软件的使用场景、触达率、分类、功能等各不相同，因此各有千秋。<br>本周再次体验flomo的时候，感觉其简洁程度度、使得记录非常方便。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">官方demo介绍：<br><strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">记录下来的想法更有价值，记录是为了更好的思考</strong></p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">手机号银行卡绑定查询</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">云闪付App主页上线一个Beta功能：<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">一键查卡</code>，输入手机号后，在三五分钟后，就可以显示手机号绑定了多少张银行卡。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202231_01.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://barryfralick.com/life-changing-ideas" class="footnote-word" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">50 LIFE-CHANGING IDEAS</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">极简主义风格实践者的一篇博文：生活的50个小建议。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">作者是个极简主义者(minimalist)，该作者的自我介绍：</p><section class="block-3" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-3-inner"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"><strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">122 Words About Me</strong></p><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">I’m an entrepreneur, writer, generalist, and digital explorer.</p><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">I started a small non-sexy business at age 17 and quickly became a workaholic. Looking back, I sacrificed almost every aspect of my life for success.</p><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">During that time, I developed a varied skill set including website design, social media content creation, marketing, and pretending to be deeply interested in small talk while thinking about my next piece of writing.</p><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">These days I am more intentional. I prefer a streamlined life filled with simple pleasures, interesting projects, exploration, and leisure.</p><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">I’m also intentional in how I consume. I’m careful about how I use my resources [time, money, and energy] and, I don’t own many things.</p><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">I am a 40-something introvert, minimalist, and internet regular.</p></section></section><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">FireShot</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">Chrome浏览器插件，捕捉网页截图, 支持捕捉整个页面、可见部分、选定区域。<br>操作丝滑，甚是方便。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202231_02.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://stooge.me/" class="footnote-word" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">stooge</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">不会画画也能轻松制作漫画的在线工具，只要有一个好的故事就行了。<br>(from @bestxtools.com)</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202231_03.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://pfpmaker.com/" class="footnote-word" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Profile pic Maker</a><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">生成不同风格的头像在线工具。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202231_04.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">一周图片</span><span class="suffix"></span></h1><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202231_a1.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202231_a2.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202231_a3.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202231_a4.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/20231_a5.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202231_a6.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; line-height: 1.75em; font-size: 17px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">文摘</span><span class="suffix"></span></h1><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">人们拥有一种神奇的能力，就是使事情发生。但是大多数人从来不敢尝试这种能力，只是默默接受世界本来的样子。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">我们这个时代，不需要偶像，但是需要榜样。<br>中文偶像的“偶”本身在提醒我们，它是愚蠢的一种体现。因为愚蠢的“愚”上面是一个“禺”，这个“禺”在古语的解读里就是偶像的“偶”，这其实就是在提醒我们，凡是把自己作为他人的偶像，或者在心中把别人作为自己的偶像，可能都是愚蠢的一种体现。  (-罗翔)</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">苏格拉底说，人心中的欲念是一个筛子，筛子装不满水，无论多少东西都填满不了人心。<br>所以人的欲望一定要限定在一个具体的事情上，这样你才会有真实的满足感，否则你不可能有满足感。<br>人不需要偶像，人需要榜样。因为“榜”、“样”都是“木”字旁，木头是容易腐朽的，这说明所有的榜样都是有缺陷的。而且榜样既然是“木”字旁，他们是可以复制的。  (-罗翔)</p></blockquote></blockquote><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">编码相关</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://arctype.com/" class="footnote-word" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">arctype</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一个桌面的数据库查询工具，可以连接各种数据库，在其中执行 SQL 语句，以可视化形式展示数据。<br>(from @ruanyifeng.com)</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/image.5suwm0y6n68.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://ossinsight.io/" class="footnote-word" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">OSS Insight</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一款强大的 GitHub repo 分析工具.<br>(from @bestxtools.com)</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/image.7lacc5ql2i80.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://crontab.guru/" class="footnote-word" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">crontab guru</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">crontab 快速参考工具。<br>(from @bestxtools.com)</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/image.1k0d1ftp9ork.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://www.toptal.com/developers/gitignore" class="footnote-word" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">.gitignore</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">为你的项目创建 ignore文件</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/image.6rkmo6qeruk0.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://atroposjs.com/" class="footnote-word" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Atropos</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">Atropos – 是一个轻量级、免费和开源的 JavaScript 库，可以用来制作 3D 视差悬停效果。适用于JavaScript、React、Vue.js 和 Svelte。(@decohack.com)</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/image.44suo88jpcg0.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周干了啥</span><span class="suffix"></span></h1><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: black; list-style-type: disc;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">在玩游戏 ：<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">人中之龙7</code></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">饭后电影：《大碗》</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">机器式百词斩打卡</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">正则表达式游玩</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;"><a href="https://day.liugezhou.online" class="footnote-word" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">VuePressDemo</a> : 文档体验（脚手架相关）</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;"><a href="https://github.com/liugezhou/webpack-demo" class="footnote-word" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Webpack-demo</a>仓库完善</section></li></ul><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">下周干点啥</span><span class="suffix"></span></h1><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: black; list-style-type: disc;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;"><a href="https://github.com/liugezhou/webpack-demo" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Webpack-demo</a>仓库完善</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">百词斩打卡</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">VuePress完善</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">人中之龙7 游玩</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">ES6标准温习</section></li></ul><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">That's All.<br>See You Next Week.</p></section></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*67)：为什么不敢发表观点</title>
      <link href="/202230-No67/"/>
      <url>/202230-No67/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202230.webp" alt="" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;">Three-dimensional picture</figcaption></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="padding: 0 10px; word-spacing: 0px; word-wrap: break-word; text-align: left; line-height: 1.6; letter-spacing: .034em; color: rgb(63, 63, 63); font-size: 16px; word-break: all; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周是2022年的第<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">30周</strong>(07.25-7.31).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a href="https://blog.liugezhou.online" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">我的博客</a><br><span style="display:block;text-align:right;color:blue;">No.*67</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; border-top: 1px solid black; height: 1px; padding: 0; border: none; text-align: center; background-image: linear-gradient(to right,rgba(60,122,198,0),rgba(60,122,198,0.75),rgba(60,122,198,0));"><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周主题:为什么不敢发表观点</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">本周六回了趟家乡，晚上劳累的躺在故土的床上，刷着微博。<br>看到胡锡进发的关于佩什么的推文被删。<br>然后对此我很惊奇。<br>针对被删这个事，用很富有理智的、有逻辑的、正常的思维、稍稍质疑了一下。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">然后我越想越觉得有些后怕，万一因为我这小小的很富有理智的、有逻辑的、非常正常的思维被大数据的眼给盯上，给我赋个码，回不到京去兢兢业业的上班，那得多得不偿失啊。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">于是，一阵小恐惧袭来，回到被淹没的评论中，找到刚刚还鲜活的、富有理智的、有逻辑的、正常的观点，速速删掉了评论。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">事很小，或许显得很矫情，但是这貌似就是我(可能也是好多人)在社交网络上的一个常态。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">再然后，家里的电视播放着百花奖的评选，看着在夹缝中求生存的大众明星们的状态，自然就以非常主观、唯心的、观众的姿态去感受：害，这一点都不酷，没点娱乐明星该有的样子。</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">这个事情再想一想，有点类比本周看到的一句话段子：<br><strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">为了全球降温，我每天都开18度的空调</strong></p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">关注&amp;工具</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">阿辛正传</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">印度电影。<br>翻拍自《阿甘正传》的《阿辛正传》将在印度8月11日上映。<br>主演是印度国宝级演员阿米尔汗。<br>演员值得期待，翻拍勇气可嘉，不知会不会翻车。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202230_01.webp" alt width="70%" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://neal.fun/absurd-trolley-problems/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">荒谬的电车问题</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"><strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">电车难题：</strong> 五个无辜的人被绑在了电车轨道上，这时一辆失控的电车正朝他们行驶过来，你有机会拉动控制杆使电车驶入岔道从而保住这五个人的性命，但不巧的是，那个岔道上也绑了一个人，你会选择“舍一救五”还是“舍五救一”？</p><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">作者做的一个小网站，就是一系列的电车问题，很有趣，把玩了一下，题目答完，我Kill掉了77人。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202230_02.webp" alt="absurd-trolley-problems/" width="90%" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;">absurd-trolley-problems/</figcaption></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://twdown.net/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Tweet视频下载</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">推上看到的一些有趣的视频，可通过该网站输入链接直接下载，比如下面这个介绍作者制作的一张艺术图的视频(使用endless paper做的，本想体验一番，然后AppStore售价68，有点贵哦)<a href="https://twitter.com/Vaskange/status/1551885655877246977" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">ArtWork</a></p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://zhuanlan.zhihu.com/p/64356746" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Figma</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;"><strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">深入了解 Figma —— 下一代设计神器</strong></p><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="border: none; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; background: rgba(0, 0, 0, 0.05); color: #6a737d; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; padding: 15px 20px; line-height: 27px; background-color: rgb(239, 239, 239); border-left: none; display: block;"><p style="padding-bottom: 8px; padding-top: 23px; margin: 0px; line-height: 26px; padding: 0px; font-size: 15px; color: rgb(89,89,89);">Figma 是一个 基于浏览器 的协作式 UI 设计工具，从推出至今越来越受到 UI 设计师的青睐，也有很多的设计团队投入了Figma 的怀抱</p></blockquote><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">知乎上的一篇带大家深入了解 Figma，以及为什么要使用 Figma的文章。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202230_03.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://goodpalette.io/18ed98-210dd9-a7b5af" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">goodpalette</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">一个配色工具，很直观的预览样式非常方便，这个网站是可以配一些对比色，并不止是同色系的配色工具。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202230_04.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">一周图片</span><span class="suffix"></span></h1><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202230_05.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202230_06.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202230_07.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202230_08.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202230_09.webp" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; line-height: 1.75em; font-size: 17px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">文摘</span><span class="suffix"></span></h1><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">所有值得做的事情，做得一团糟也值得做，因为做得糟总比不做好。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">我仰慕的大多数程序员都有一个很少被谈论的特质：无所畏惧。<br>他们无所畏惧地面对未知的代码库和未知的任务，尽管不知道如何完成，毅然开始着手做某事。<br>让自己变得无所畏惧，是我发现的最好的学习加速器之一。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">你以为这个世界是有规则的，其实它没有。没有规则，只有规律，混沌是常态。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">生命在于折腾。做成一件事情时，不要特别放大自己；事情没做好，也不用气馁。一定要相信我是牛逼的，这件事情不行没有关系，我接着做下一个，我死之前一直干，早晚能成。</p></blockquote></blockquote><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">编码相关</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">VuePress</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">VuePress 由两部分组成：第一部分是一个极简静态网站生成器 (opens new window)，它包含由 Vue 驱动的主题系统和插件 API，另一个部分是为书写技术文档而优化的默认主题，它的诞生初衷是为了支持 Vue 及其子项目的文档需求。<br>上周看了一个关于HowToStartOpenSource的技术文档，本来以为是关于Github网站使用的方方面面，然后只是写了其中一部分，于是我有一种也写一个开源项目的激动心情，想把Github相关使用的内容也做一个总结。<br>开始看到快速生成网站的是docsify这个库，进一步才了解到了VuePress。</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202230_10.webp" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://code.fun/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">code Fun</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">sketch插件，可以生成前端H5、小程序等相关的HTML、CSS代码。<br>官方介绍：</p><blockquote class="multiquote-1" data-tool="mdnice编辑器" style="border: none; font-size: 0.9em; overflow: auto; overflow-scrolling: touch; background: rgba(0, 0, 0, 0.05); color: #6a737d; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; margin-bottom: 20px; margin-top: 20px; padding: 15px 20px; line-height: 27px; background-color: rgb(239, 239, 239); border-left: none; display: block;"><p style="padding-bottom: 8px; padding-top: 23px; margin: 0px; line-height: 26px; padding: 0px; font-size: 15px; color: rgb(89,89,89);">做前端，不搬砖。UI设计稿智能生成前端代码，8小时工作量，10分钟完成。</p></blockquote><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">前端低代码越来越趋于成熟化、体系化，机器取代，似乎指日可待。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">globalThis</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">由于在Node/Web Worker/BOM中，他们的顶层对象分别是global/self/window。<br>为了同一段代码可以在各种环境下，取到顶层对象，ES2020引入了 globalThis这个变量</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://www.jsont.run/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">JSON在线转换</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">在线的 JSON 格式化工具，方便展示、查看、编辑 JSON 数据。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://h.daily-dev-tips.com/javascript-object-destructuring-tips" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">JavaScript object destructuring tips</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">这是一篇通读易懂的讲解JavaScript结构赋值的博文。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://github.com/dailydotdev/daily" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">daily.dev</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">Chrome浏览器插件<br>daily.dev is where developers grow together 👩🏽‍💻 👨‍💻</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://api.daily.dev/devcards/22ca909199f14c888b8734c9947e5a9b.png?r=gxi" alt width="68%" style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周小结</span><span class="suffix"></span></h1><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: black; list-style-type: disc;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">webpack视频没有看</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">更新了一篇之前写的babel的博文</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">对VuePress简单配置做了个了解</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">读毕《麦肯锡方法》，没有收获</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">AppClass网站Python免费部分试听，没有收获</section></li></ul><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">下周计划</span><span class="suffix"></span></h1><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: black; list-style-type: disc;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">上线一个VuePress Demo项目</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">ES6基本语法复习巩固</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">正则表达式学习</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">Webpack视频仓库完善</section></li></ul> <p data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em; font-size: 17px;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*66)：下一个五年</title>
      <link href="/202229-No66/"/>
      <url>/202229-No66/</url>
      
        <content type="html"><![CDATA[<figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202229.2n0cz4yhb860.jpg" alt="trianglify.io三角形图案工具生成" style="display: block; margin: 0 auto; max-width: 100%;height:300px; border-radius: 4px; margin-bottom: 25px;"><figcaption style="margin-top: 5px; text-align: center; color: #888; display: block; font-size: 12px; font-family: PingFangSC-Light;">trianglify.io三角形图案工具生成</figcaption></figure><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="padding: 0 10px; word-spacing: 0px; word-wrap: break-word; text-align: left; line-height: 1.6; letter-spacing: .034em; color: rgb(63, 63, 63); font-size: 16px; word-break: all; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">本周是2022年的第<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">29周</strong>(07.18-7.24).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a href="https://blog.liugezhou.online" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">我的博客</a><br><span style="display:block;text-align:right;color:blue;">No.*66</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; border-top: 1px solid black; height: 1px; padding: 0; border: none; text-align: center; background-image: linear-gradient(to right,rgba(60,122,198,0),rgba(60,122,198,0.75),rgba(60,122,198,0));"><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周主题:下一个五年</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">推上看到一句话：</p><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;"><strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">最近开始刻意练习的一个思维方法：每天不断自问「今天做这件事，对一年后的自己（和家庭），五年后的自己（和家庭），有多大帮助？」，然后就坦然多了。</strong></p></blockquote></blockquote><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">或许从来都是,与个人而言，从没有想过以后。<br>我比较信奉的人生指引是活在当下，对于即使是第二天的事，一直抱着的态度也是到了那个时候再说那个时候的事。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">于是当这种思维方法映入眼帘的时候，我就稍稍的去想了一想。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">脑子蹦出来的第一个念头是英语。<br>对于想法、读书、游戏、电影、科技、交流等这个工具很具普适性。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">虽然到目前来看也没觉得有什么明显的进步，但较欣慰的一点是现在看英文博文的时候，没有那么的排斥了。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">接着去想第二个念头，开始摇摆不定了。<br>注意点开始不自主的更多聚焦在当下要干点什么，一切围绕的中心又是以赚钱为靶中心了。<br>一些需要冒险精神、只为图一乐的有趣事情不是不想做，是连想都想不到，看到也视而不见了。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">不论做什么事情，要么由社会赋予，要么由个人编纂，个人与社会整体创造出来的一个普适、美好的幻境，供我们去选择追寻。<br>不论是孩童时期，还是成人时期，人理性情况下天生对两件事抱有执念，一件是“自由”，一件是“正确”。<br>而我们一次次的幻境显现，都因此驱动。</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: black; list-style-type: disc;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">初中以前，获得好的分数、期盼假日来临是一种幻境</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">高中时刻，看到喜欢的姑娘、考上一个好的大学是一种幻境</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">大学时光，谈个朋友、各种吃喝玩乐、找个"好"工作是一种幻境</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">大学毕业，考研、考编、工作、有吃有住有事干是一种幻境</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">毕业后，努力赚钱，结婚生娃、买车买房是一种幻境</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">工作后，升职加薪、周游列国是一种幻境<br>......</section></li></ul><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">然后五年后的幻境，也就是处于工作后的这个阶段，那么似乎是：<br>在北京有个窝？对工作爱不释手？寻找事业的心坚定不移？固定的健身作息？吸收书中的营养成分遍布至细胞？行万里路？玩过很多酷游戏？看过许多棒电影？学会很多新技能？在一个领域成为大V？</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">不论哪一个做成，都很很棒，似乎都很<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">无趣</code>，似乎都很<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">成功</code>。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">关注&amp;工具</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://mp.weixin.qq.com/s/R3kOOl4tC9Cm1SobGzV2Zg" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">发生了这么多事，如何对未来有信心</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">由于今年SH防疫乱想、唐山烧烤事件、村镇银行暴雷、烂尾楼、明星考辨等各种事情，微信公号「九边」写的一些自己的见解。<br>读过之后会给人相对会冷静的情绪。对于不是当事人的多数人来说，文章具有一定的情绪疗效。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">写点啥</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">一款最近上线的应用程序：《写点啥》<br>用户数据保存在本地或者iCloud中，目前只支持iOS客户端。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">与其他写作类App不同的是，一般的写作类App是给一张白纸直接开始写，这款应用程序为引导创作，在点击编辑的时候，给出一个应用场景引导写作。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://zh.b-ok.cc/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">zlibrary</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">全球最大的数字图书馆，可以免费下载电子书籍,一些在微信读书上找不到的数据，可以在这里试试。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">亲测下载《麦肯锡方法》这本书，直接导出epub格式，手机电脑阅读体验很棒。<br>镜像站备份：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_code.jpg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">https://booksc.unblockit.ist/<br>https://www.bookzz.ren/<br>https://zh.1lib.ch/<br>https://zh.book4you.org/<br>https://zh.b-ok.cc/<br></code></pre><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">IINA播放器</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">一款开源的macOS播放器，<a href="https://github.com/iina/iina" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Github地址</a></p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://anonfiles.com/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">anonymous file upload</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">匿名文件上传，不用注册，单个文件大小有20GB的限制，上传后直接获得下载地址。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://mrjooz.github.io/password-generator/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">密码生成工具</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">密码计算全部在本地进行,通过记忆密码加区分代码加设置密码长度，生成密码。<br><a href="https://github.com/mrjooz/password-generator" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">代码开源：</a><br>fork此代码后,项目部署到了这里：<br><a href="https://blog.liugezhou.online/password-generator/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">https://blog.liugezhou.online/password-generator/</a></p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">一周图片</span><span class="suffix"></span></h1><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/20222901.34db7ofimj40.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/20222902.5l6c7n8vbh80.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/20222903.35jqzb3ht540.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.statically.io/gh/liugezhou/image@master/blog/20222904.12cz2aihi6hs.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; line-height: 1.75em; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">文摘</span><span class="suffix"></span></h1><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">我们曾如此渴望命运的波澜，到最后才发现：人生最曼妙的风景，竟是内心的淡定与从容。  ——杨绛</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">人的错觉：我必须先搞清楚这件事怎么做，才能去做，不然我不知道该怎么做。<br>实际上：你必须先着手去做，才能在执行的过程中逐渐搞清楚怎么做，不做就永远不知道该怎么做。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">原谅自己，我不是那么厉害的人做不到就做不到，没啥大不了的。</p></blockquote></blockquote><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">编码相关</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://www.apeclass.com/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">ApeClass</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">阮一峰周报推荐的一个平价IT学习平台，提供完整的课程，从前端、Python到JAVA、云计算等<br>每门课程由短视频组成，一门课程包含几百个视频。<br>有一些免费章节，如果继续看下去会员永久价是300。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">mddir</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">直接生成项目目录结构的第三方包工具，生成预览的.md文件<br>全局安装 npm i mddir -g,然后在要生成的目录下，直接执行 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">mddir . </code>即可。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">webpack-demo</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">本周在备份手机图片至硬盘的时候，无意发现两年前保存的webpack的一个视频课程，结合之前写的一些视频笔记，仍旧很有学习价值。本周再次回顾，并更新优化了本项目的仓库代码和说明文档。<br><a href="https://github.com/liugezhou/webpack-demo" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Github地址~webpack-demo</a></p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://justinyan.me/post/5046" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">我的网页加载速度优化</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">一篇总结自己的网站加载速度优化实践的博客记录<br>主要内容就是：静态资源搬到CDN、使用lighthouse找出优化点、CDN和Nginx开启Gzip压缩和HTTP/2、图片资源进行处理、使用WebP格式图片。其中提到的一些网站：<br><a href="https://http2.akamai.com/demo" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">HTTP/2的直观效果</a><br><a href="https://caniuse.com/?search=http2" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">浏览器特性支持,比如HTTP/2</a><br><a href="https://help.aliyun.com/document_detail/65103.html" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">阿里云配置HTTP/2</a><br><a href="https://www.tencentcloud.com/zh/document/product/228/35215" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">腾讯云配置HTTP/2</a><br><a href="https://tinypng.com/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">图片压缩，使用开放API-tinypng</a></p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">快速查找一个数组中的最大值</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">Math.max.call(null,array)</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://eryajf.github.io/HowToStartOpenSource/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">GitHub开源项目维护协作指南</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">一份作者自己整理的 GitHub 中文使用指南，初学者可以用来学习怎么使用 GitHub。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周小结</span><span class="suffix"></span></h1><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: black; list-style-type: disc;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">百词斩打卡</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">webpack学习回顾</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">自动生成密码项目fork、学习、部署</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">ES5中BOM相关回顾</section></li></ul><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">下周TODO</span><span class="suffix"></span></h1><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: black; list-style-type: disc;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">webpack视频完结-博文一篇</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">GitHub开源项目维护协作指南 文档学习</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">AppClass~Python教程体验</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;">读书《麦肯锡方法》</section></li></ul><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*65)：有计划的输出</title>
      <link href="/202228-No65/"/>
      <url>/202228-No65/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202228.21z9qub3bolc.jpg" alt="韦伯望远镜首批照片"></p><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="padding: 0 10px; word-spacing: 0px; word-wrap: break-word; text-align: left; line-height: 1.6; letter-spacing: .034em; color: rgb(63, 63, 63); font-size: 16px; word-break: all; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">本周是2022年的第<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">28周</strong>(07.11-7.17).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a href="https://blog.liugezhou.online" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">我的博客</a><br><span style="display:block;text-align:right;color:blue;">No.*65</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; border-top: 1px solid black; height: 1px; padding: 0; border: none; text-align: center; background-image: linear-gradient(to right,rgba(60,122,198,0),rgba(60,122,198,0.75),rgba(60,122,198,0));"><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周主题:有计划的输出</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">加入本周主题这个模块，本意是除了工作、学习、记录外，也练习一下对自己感受的表达。<br>和写程序一样，感受的表达也需要有逻辑的自洽。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">然现在的状态是：每周到了想点写什么主题的时候，就开始主观的去找一些事，并不知所云的去强行感觉，毫无中心逻辑。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">每周的工具、关注、图片、文摘、编码等素材内容的总结，其实只有在真正回忆过程--写下来之后的瞬间，才会对其内容有一个文字输出的感受，而在素材收集之前，更多的只是把他们当作一个收藏陈在列表。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">下周开始尝试，将一些自己的记录有序的进行一个实践,有计划的进行一个输出。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">要么就体验后总结，要么要总结后体验，如果对一些事物的认识和记录只是停留在表面，就好比<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">只是蹭蹭不进去</strong>，那属实是一种不真诚。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">关注&amp;工具</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://mp.weixin.qq.com/s/qT5DTJWScFVt3MVRQXTJvA" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">深化户籍制度改革</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">公众号「国家发展改革委」本周二(7月12日) ，发表了一篇文章《国家发展改革委关于印发“十四五”新型城镇化实施方案的通知》。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">核心内容看到的是：第三类的(六)小类,<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">深化户籍制度改革</strong>，大约意思是300万以下城市全面取消常住人口城市落户限制，全面放宽常住人口在300万至500万区间的I型大城市落户条件。完善常住人口500万以上超大城市落户积分政策。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">手机调成黑白色</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">怎样戒掉短视频？<br>可以试试，把手机屏幕的颜色调成反转色或者黑白，这样你很难长时间看手机。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">iOS系统设置一：<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">打开设置--&gt;辅助功能--&gt;显示调与文字大小-&gt;智能反转(or 经典反转)。</strong></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">iOS系统设置二：<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">打开设置--&gt;辅助功能--&gt;显示调与文字大小-&gt;色彩滤镜开启。</strong></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">智能反转的效果，在看朋友圈人像效果，那叫一个别有风味。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">油价一直在涨？</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">来自知乎的一篇<a href="https://www.zhihu.com/question/281939853/answer/2509895305" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">为何国际油价比十年前降了一半，中国油价却一直在涨？</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">其中一篇回答简单意思是说：油价是税收的表现形式，包含48.5%的税。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://www.typelit.io/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">TypeLit.io</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">一个一边阅读一边练习打字英文名著的实用工具。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://send.internxt.com/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">在线加密文件传输</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">免费的在线加密传输文件、分享文件的工具，文件最大支持 5GB。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">一周图片</span><span class="suffix"></span></h1><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="202228_photo05" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202228_photo05.um807rpmo4g.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="202228_photo04" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202228_photo04.3uvtkpcnmg80.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="202228_photo03" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202228_photo03.40aad63hpme0.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="202228_photo02" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202228_photo02.59cs012d6480.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="什么是幸福" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202228_photo01.dzral8nng5c.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; line-height: 1.75em; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">文摘</span><span class="suffix"></span></h1><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">很多时候，人的勇敢来自于没有选择。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">假如你想知道是谁控制了你，那就看看谁是你不能批评的人。<br>——伏尔泰</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">因为朋友的离世，我回忆了我短暂的半生，没有后悔，没有遗憾。每件事都尽力做了，每个人都用心爱过，对没有结果的不会耿耿于怀，对没得到的不再执着追求。像那个老师说的，总有一天你遇到的人和事，会让你觉得高考时候错的那道题刚刚好。<br>人生辽阔，往事一笑而过。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">这个星球有将近80亿人，可能有一万人与你非常相似、心灵相通。互联网是你找到他们、并发生联系的最可能方式。</p></blockquote></blockquote><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">编码相关</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://blog.liugezhou.online/029-%E5%B0%8F%E7%A8%8B%E5%BA%8Frequest%E5%B0%81%E8%A3%85token/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">小程序request封装</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">小程序中关于登录流程有这样一个问题：一般的小程序开发都是在app.js的onLaunch中，通过wx.login调用一次后端接口，拿到token、用户信息等数据后，才可以访问其他接口。而在进入的首页中，以pages/index/index页面为例。一般情况下，在进入一个页面也需要调用接口获取页面数据，由于这个页面的数据需要由wx.login调用接口返回的token值，而这个时候，app.js中的接口因为异步还未返回，所以会出现当前页面调用接口不成功的问题。于是，针对这个问题，将登陆接口封装在了API请求的request方法中，做个代码记录，<a href="https://blog.liugezhou.online/029-%E5%B0%8F%E7%A8%8B%E5%BA%8Frequest%E5%B0%81%E8%A3%85token/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">见这里</a>。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://nginxconfig.io/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Nginx 可视化神器</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">一款可以一键生成 Nginx 配置的神器，相当给力。先来看看它都支持什么功能的配置：反向代理、HTTPS、HTTP/2、IPv6, 缓存、WordPress、CDN、Node.js 支持、 Python (Django) 服务器等等。<br>如果你想在线进行配置，只需要打开网站：https://nginxconfig.io/，按照自己的需求进行操作就行了。选择你的场景，填写好参数，系统就会自动生成配置文件。开源地址：https://github.com/digitalocean/nginxconfig.io</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">js数组清空</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">将一个js数组清空的简单方法是将其length设置为0.</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">js数组与对象</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">一个不用查看文档，也能让你选择适合的 JavaScript Array 或 Object 方法的工具<br><a href="https://arrayexplorer.netlify.app" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">JavaScript Array</a><br><a href="https://objectexplorer.netlify.app" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">JavaScript Object</a></p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://regexlearn.com/zh-cn" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">轻松学习正则表达式</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">一个轻松学习、练习、测试正则表达式的工具。希望大家都能熟练使用正则表达式，正则表达式其实没有那么难。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg ); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://www.vexipui.com/zh-CN" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Vexip UI</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">个人打造的 Vue 组件库，没有大厂背景，目前有70多个组件。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周小结</span><span class="suffix"></span></h1><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: black; list-style-type: disc;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;"><p style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">重温了下Github Gist的使用场景</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;"><p style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">对前端性能优化相关内容温习了掘金小册的内容，并简短总结了一篇<a href="https://blog.liugezhou.online/028-%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%B0%8F%E7%BB%93/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">《前端性能优化》</a>的文章。</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;"><p style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">还对数据算法的一些常用排序做了了解，算法是真难，就像这句话说的：“<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">你学不会的东西，老天爷会让你一遍一遍经历，直到他改正这个缺点为止</strong>”，如果开发上想要有所发展，是不在数据结构与算法是迈不过去的坎呢？</p></section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500;"><p style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">天气燥热，刚掀起来的跑步热情也戛然而止了，英语单词也冷落了她。</p></section></li></ul><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">最近几周似有一种无形的力压着周围的场，没有太多新鲜的事物可供消遣，猛然有股三十岁就gen了的惊醒。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序登录token问题==封装在request请求中</title>
      <link href="/029-%E5%B0%8F%E7%A8%8B%E5%BA%8Frequest%E5%B0%81%E8%A3%85token/"/>
      <url>/029-%E5%B0%8F%E7%A8%8B%E5%BA%8Frequest%E5%B0%81%E8%A3%85token/</url>
      
        <content type="html"><![CDATA[<p>小程序中关于登录流程有这样一个问题：<br>一般的小程序开发都是在app.js的onLaunch中，通过wx.login调用一次后端接口，拿到token、用户信息等数据。<br>而在进入的首页中，以pages/index/index页面为例。<br>一般情况下，在进入一个页面也需要调用接口获取页面数据，但这个页面的数据需要由wx.login调用接口返回的token，这个时候，由于app.js中的接口还未返回，所以会出现当前页面调用接口不成功的问题。<br>于是，针对这个问题，经过小一番代码测试，将登陆接口封装在了API请求的request方法中，做个代码记录。</p><span id="more"></span><p>代码示例如下：</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="function"><span class="title">App</span>(&#123;</span></span><br><span class="line"><span class="function">  <span class="title">onLaunch</span>() &#123;</span></span><br><span class="line"><span class="function">  &#125;</span></span><br><span class="line"><span class="function">&#125;)</span></span><br></pre></td></tr></table></figure><p>app.js中不做任何操作</p><p>重点在于request的封装,request中唯一的依赖为一个常量配置文件,配置文件为环境的BaseApi和配置白名单(不需要token的接口)</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// config.js</span></span><br><span class="line"><span class="keyword">const</span> envVersion = __wxConfig.envVersion</span><br><span class="line"><span class="keyword">let</span> <span class="variable">Base_URL</span>;</span><br><span class="line"><span class="keyword">if</span> (envVersion === <span class="symbol">&#x27;develop</span>&#x27;) &#123; <span class="comment">//开发版</span></span><br><span class="line">  Base_URL = <span class="symbol">&#x27;https</span>:<span class="comment">//blog.liugezhou.online&#x27;</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (envVersion === <span class="symbol">&#x27;trial</span>&#x27;) &#123; <span class="comment">//体验版</span></span><br><span class="line">  Base_URL = <span class="symbol">&#x27;https</span>:<span class="comment">//blog.liugezhou.online&#x27;</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (envVersion === <span class="symbol">&#x27;release</span>&#x27;) &#123; <span class="comment">//生产版</span></span><br><span class="line">  Base_URL = <span class="symbol">&#x27;https</span>:<span class="comment">//blog.liugezhou.online&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">whiteApi</span> = [&#x27;/loginApi] <span class="comment">//不需要token的白名单-**loginApi为登陆接口**</span></span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">  Base_URL,</span><br><span class="line">  whiteApi</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在以上简单工作做好以后，直接将最后的request封装：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// request.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">Base</span>_URL, whiteApi &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./config&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getUserInfo</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">    wx.<span class="title function_">login</span>(&#123;</span><br><span class="line">      <span class="attr">success</span>: <span class="keyword">async</span> res =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> useInfo = <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolveUser</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="title function_">resolveUser</span>(<span class="title function_">request</span>(<span class="string">&#x27;/loginApi&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>, &#123;</span><br><span class="line">            <span class="attr">code</span>: res.<span class="property">code</span></span><br><span class="line">          &#125;, <span class="literal">true</span>))</span><br><span class="line">        &#125;);</span><br><span class="line">        wx.<span class="title function_">setStorageSync</span>(<span class="string">&#x27;token&#x27;</span>, useInfo.<span class="property">data</span>.<span class="property">token</span>)</span><br><span class="line">        <span class="title function_">resolve</span>(useInfo.<span class="property">data</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 参数依次代表 api/请求方法/接口数据/contentType类型</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">request</span> = <span class="keyword">async</span> (<span class="params">api, method, data, <span class="keyword">type</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> token = wx.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;token&#x27;</span>) || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">if</span> (!token &amp;&amp; !whiteApi.<span class="title function_">includes</span>(api)) &#123;</span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">resolve</span>(<span class="title function_">getUserInfo</span>())</span><br><span class="line">    &#125;)</span><br><span class="line">    token = result.<span class="property">token</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> <span class="title class_">ContentType</span> = <span class="keyword">type</span> ? <span class="string">&#x27;application/json&#x27;</span> : <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span></span><br><span class="line">  <span class="keyword">let</span> url = <span class="title class_">Base</span>_URL + api</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">      url,</span><br><span class="line">      method,</span><br><span class="line">      data,</span><br><span class="line">      <span class="attr">header</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="title class_">ContentType</span>,</span><br><span class="line">        <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">&#x27;Bearer &#x27;</span> + token</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">        <span class="title function_">resolve</span>(res.<span class="property">data</span>)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="title function_">fail</span>(<span class="params">error</span>) &#123;</span><br><span class="line">        <span class="title function_">reject</span>(error)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// 创建用户身份 </span></span><br><span class="line">  <span class="attr">apiDemo</span>: <span class="function">(<span class="params">data</span>) =&gt;</span> &#123; </span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(<span class="string">`/apiDemo`</span>, <span class="string">&#x27;POST&#x27;</span>, data)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后模拟下业务，apiDemo这个接口是需要有token才能访问的：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pages/index/index</span></span><br><span class="line">import &#123; apiDemo &#125; from <span class="string">&#x27;../../utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">api</span><span class="params">()</span></span><span class="selector-class">.then</span>(res=&gt;&#123;&#125;)</span><br></pre></td></tr></table></figure><p>这样讲获取token才能访问接口的异步等待问题就可以得到良好的解决，主要的问题是在request请求中同步获取结果这里。</p>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端性能优化小结</title>
      <link href="/028-%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%B0%8F%E7%BB%93/"/>
      <url>/028-%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>从输入URL到页面加载完成，发生了什么，要进行肌肉记忆。</p><p><a href="https://www.yuque.com/liugezhou/drrg7f/gav2aq">https://www.yuque.com/liugezhou/drrg7f/gav2aq</a></p><ul><li><p>前端性能优化主要是从<strong>网络层面</strong>和<strong>渲染层面</strong>两个大的维度来分析</p></li><li><p>涉及到网络的：<strong>DNS解析</strong>、<strong>TCP链接</strong>、<strong>HTTP请求/响应</strong>其中DNS解析和TCP链接我们可以优化的地方很有限。</p></li></ul><h1>网络层面</h1><h2 id="1-HTTP请求-相应的链接">1. HTTP请求/相应的链接</h2><ol><li><p>减少请求次数</p></li><li><p>减少单次请求所花费的时间</p></li></ol><p>这两个请求的优化点我们从 <strong>资源的压缩和合并入手</strong> 以及打包构建工具的作用解决浏览器频发请求文件问题.</p><h2 id="2-webpack的性能瓶颈">2. webpack的性能瓶颈</h2><p>首先对webpack的基础有个了解：</p><p><a href="https://blog.liugezhou.online/013-webpack/">https://blog.liugezhou.online/013-webpack/</a></p><ol><li><p>webpack的构建过程太花时间</p></li><li><p>webpack打包的结果体积太大</p></li></ol><p><strong>构建过程提速：(主要是针对CI/CD流程吧，手动打包不太在意构建过程速度)</strong></p><ul><li><p>不要让loader做太多事情：- modules.rules中的exclude使用–排除更多无关代码</p></li><li><p>开启缓存转译：loader: ‘babel-loader?cacheDirectory=true’</p></li><li><p>第三方库- DIIPlugin:把第三方库单独打包到一个文件</p></li><li><p>将loader由单线程转为多线程- 使用happypack这个库，使得webpack单独处理任务改为把任务分解成多个子任务并发执行。</p></li><li><p>构建结果体积压缩- webpack-bundle-analyzer:通过这个库可以查看构建打包后的体积，有针对性优化。</p></li><li><p>按需加载。</p></li><li><p>删除冗余代码：Tree-shaking，webpack4自带了，包括UglifyJsPlugin中compress的设置去除日志打印、注释等等。</p></li><li><p>开启gzip- 需要开启gzip，在request-headers中设置accept-encoding:gzip,Deflate</p></li></ul><p><strong>babel优化</strong><br>为了应对低版本的ES6转ES5的js语言特性，使用了babel-polyfill后，打包体积会很大，这个时候可以根据业务代码，在loader的的options配置中加入useBuiltIns为usage。</p><h2 id="3-图片优化">3 图片优化</h2><ul><li><p>应用广泛的Web图片格式有：JPEG/JPG、PNG、WebP、Base64、SVG- JPEG/JPG：有损压缩、体积小、加载快、不支持透明==》背景图、banner图适用</p></li><li><p>PNG：无损压缩、质量高、体积大、支持透明 ==》Logo等小图片</p></li><li><p>WebP：唯一的缺点是兼容性不太好，可以通过判断是否支持该格式，切换后缀。</p></li><li><p>SVG：体积更小、压缩性更强、图片放大不失真，但渲染成本较高。</p></li><li><p>Base64:小图标解决方案，Webpack的url-loader对此做了优化。</p></li></ul><h2 id="4-缓存应用">4. 缓存应用</h2><blockquote><p>缓存</p></blockquote><blockquote><p>本地存储</p></blockquote><ul><li><p>Local Storage ：持久化存储永不过期。5-10M数据，可以对图片、不经常更新的css、js静态存储。</p></li><li><p>Session Storage：会话存储</p></li><li><p>IndexedDB：运行在浏览器上的非关系型数据库，&gt;250M.</p></li></ul><h2 id="5-CDN缓存">5. CDN缓存</h2><ul><li><p>CDN的核心点分为缓存和回源</p></li><li><p>CDN往往被用来存放静态资源</p></li><li><p>静态资源走CDN不应该是一个选择，而是一个规定</p></li><li><p>业务服务器与静态资源CDN服务器的区分，对性能提高帮助很大(不用携带无用信息)</p></li></ul><h2 id="6-使用HTTP2">6.使用HTTP2</h2><ul><li>多路复用、首部压缩</li></ul><hr><h1>渲染层面</h1><h2 id="1-CSS样式表规则的优化">1. CSS样式表规则的优化</h2><p><strong>CSS选择符是从右到左进行匹配的。</strong></p><ul><li><p>避免使用通配符，只对需要用到的元素进行选择</p></li><li><p>少用标签选择器，多用类选择器。</p></li><li><p>CSS是阻塞渲染的资源，应尽快下载到客户端</p></li><li><p>尽早==》header</p></li><li><p>尽快==》CDN</p></li></ul><h2 id="2-JS的加载方式">2. JS的加载方式</h2><ul><li><p>正常模式： <script src="index.js"></script>   阻塞浏览器</p></li><li><p>async模式：<script async  src="index.js"></script>  不会阻塞，加载是异步的</p></li><li><p>defer模式:  <script defer  src="index.js"></script>  加载异步，推迟执行，在文档解析完成、DOMContentLoaded事件被触发时才开始依次执行。</p></li></ul><h2 id="3-避免或减少回流操作">3. 避免或减少回流操作</h2><h2 id="4-图片懒加载">4. 图片懒加载</h2><ul><li><p>关键一:当前可视区域的高度:<br>window.innerHeight|| document.documentElement.clientHeight</p></li><li><p>关键二:元素距离可视区域顶部的高度:<br>getBoundingClientRect()</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Lazy-load<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.img</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: gray;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.pic</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 10个div --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;img&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;pic&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;加载中&quot;</span> <span class="attr">data-src</span>=<span class="string">&quot;./images/9.png&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> imgs = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;img&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> viewHeight =</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">window</span>.<span class="property">innerHeight</span> || <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(viewHeight)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> num = <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">lazyLoad</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; imgs.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> distance = viewHeight - imgs[i].<span class="title function_">getBoundingClientRect</span>().<span class="property">top</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (distance &gt;= <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          imgs[i].<span class="property">src</span> = imgs[i].<span class="title function_">getAttribute</span>(<span class="string">&#x27;data-src&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">          num = i + <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, lazyLoad, <span class="literal">true</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-防抖和节流">5.防抖和节流</h2><p>以 4 中的监听scroll为例。</p><ul><li><p>throttle(事件节流)和debounce(事件防抖)</p></li><li><p>这两个东西都以闭包的形式存在</p></li></ul><p><strong>事件节流-throttle、第一个说了算</strong></p><p>在一段时间内无视后来产生的回调请求。</p><p><strong>事件防抖-debounce、最后一个说了算</strong></p><p>某段事件内，不管你触发了多少次回调，都只认最后一次。</p><h2 id="6-性能检测">6.性能检测</h2><p><strong>可视化工具Performance工具</strong></p><ul><li><p>使用Perfomance工具最好在无痕模式下打开</p></li><li><p>主要由概述面板、详情面板、Summary三部分构成</p></li><li><p>概述面板：FPS、CPU(与Summary结合来看)、NET</p></li></ul><p><strong>Lighthouse–页面性能报告</strong></p><ul><li><p>Performance</p></li><li><p>Accessibility</p></li><li><p>Best Practices</p></li><li><p>SEO</p></li></ul><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i -g lighthouse</span><br><span class="line">lighthouse https://blog.liugezhou.online</span><br></pre></td></tr></table></figure><blockquote><p>我在使用此页面性能报告中，明显发现的性能指标有：图片推荐使用WebP、OSS资源推荐HTTP2、图片改为懒加载。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*64):周总结陷入疲劳</title>
      <link href="/202227-No64/"/>
      <url>/202227-No64/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202227.jpg" alt="Be Happy"></p><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="padding: 0 10px; word-spacing: 0px; word-wrap: break-word; text-align: left; line-height: 1.6; letter-spacing: .034em; color: rgb(63, 63, 63); font-size: 16px; word-break: all; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="display: block; background: rgb(250,250,250); padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px;"><section class="block-2-inner"><p style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">本周是2022年的第<strong style="font-weight: bold; line-height: 1.75em; color: rgb(74,74,74);">27周</strong>(07.04-7.10).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<a href="https://blog.liugezhou.online" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">我的博客</a><br><span style="display:block;text-align:right;color:blue;">No.*64</span></p></section></section><hr data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; border-top: 1px solid black; height: 1px; padding: 0; border: none; text-align: center; background-image: linear-gradient(to right,rgba(60,122,198,0),rgba(60,122,198,0.75),rgba(60,122,198,0));"><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周主题:周总结陷入疲劳</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">我们现在每天都在无时无刻的接收着各种信息数据，这种信息数据灌注我们身心，缓慢影响我们思绪，潜移默化的改变我们的选择。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">人的一天要做多少个选择呢？<br>传说是三万五千个。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">人一天要接收多少数据呢？2009年一篇来自新华网的文章说：</p><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">美国一项最新研究显示，一名美国人平均每天要接收约34G信息，其中信息量相当于约10.05万个英文单词的信息量，34G的容量则相当于有些笔记本电脑硬盘存储量的五分之一。<a href="https://www.chinanews.com.cn/it/it-itxw/news/2009/12-15/2019016.shtml" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">来源</a></p></blockquote></blockquote><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">显而易见的是，海量的消息大多数是无效的。<br>我们三观的养成、对事物的看法、对这个世界的认知都来源自有效信息(对个人发展有用的信息)，而有效信息的积累是痛苦且违反人性的，但又是最重要的。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">基于这样的潜意识想法，为了应对无效信息，我卸载了很多App，使用邮箱的方式订阅了各种newsletter,去尝试变被动为主动的方式获取信息。<br>然后时间一长，这种方式的弊端似乎更加深了大脑对数据处理的压力。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">看到好多有趣的事、有趣的观点、涨见识的经历、涨知识的文章，往往是还没有细细品味或未开始去实践学习，就又碰上了新的数据。这和看短视频原理一样的刺激。<br>但比之更糟的一点是，因为主动的获取、收藏的快感，会因为觉得没有细嚼慢咽到胃里，产生更多的卡在某处下不去的不顺畅。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">然后，找到的一个减少焦虑的方式就是写周报，一方面是对生活的点滴记录，一方面是聚焦当下看哪些数据是在当下真正关注过的。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">然后在这个过程中，本意是加强自己的专注力，但慢慢的会为了去写总结，寻找素材，阅读更多，又开始陷入筛查有效信息积累的痛苦。。。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">这大概就是本周最不顺畅的感觉，最后给自己找些鼓励：<br>那么多有趣的经历、有知识的步骤、炫酷的才艺，为什么非要个个去感受的那么深？又何必钻在巷子里把自己困进去？<br>每周的放空时间，想到什么写些什么，这件事情本身应该一个很放松的事情，产生一定的总结疲劳是一件多么再正常不过的事情，享受这个过程就挺好。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">新的一周，自然要继续新的探索。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">关注</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">本周头条被安倍、河南维权、核酸、英国首相、周杰伦新歌等霸占。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">LaMDA</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">Google AI机器人LaMDA。<br>谷歌的软件工程师Blake Lemoine 在与聊天机器人LaMDA对话的过程中，被LaMDA的聪颖和深刻所吸引。他逐渐相信LaMDA拥有八岁孩童的智力，甚至拥有独立的灵魂。<br><a href="https://www.esmchina.com/marketnews/39469.html" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">未来黑科技畅想：AI意识觉醒</a></p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://www.insta360.com/cn/product/insta360-oners/1inch-360" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Insta360</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">Insta360影石One RS，一款全景运动相机，看到拍摄的一系列视频很Cool。<br>就是有点小贵，5000多RMB。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://www.kylc.com/" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">各国移民数据</a></span><span class="suffix" style="display: none;"></span></h3><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="新加坡" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202227_01.2btg1nx5sajo.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="美国" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202227_02.46630vexmbc0.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="加拿大" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202227_03.2u148bluz300.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="日本" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202227_04.30eu0xnc8hw0.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="中国" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202227_05.1utl960h3o3k.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="印度" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202227_06.6w3zc2enus40.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; line-height: 1.75em; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">「净移民是该时期内的净移民总数，即移居到国外的移民总数减去每年移居到国内的移民数量，其中既包括常住居民也包括非常住居民。数据是五年的估计值。在估算净移民数量时，联合国人口司考虑到了一个国家或地区的以往移民历史、一个国家的移民政策，以及近期内大量涌入的难民。用于计算这些官方估计值的数据有多种来源，包括边境统计资料、管理记录、调查以及人口普查。在由于缺乏足够数据而无法作出官方估计值的情况下，净移民是通过平衡方程得出的。」</p></blockquote></blockquote><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">这个网站还有一些其他参考数据</p><figure data-tool="mdnice编辑器" style="margin: 0; margin-top: 10px; margin-bottom: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center;"><img src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202227_07.3zkakakoau20.jpg" alt style="display: block; margin: 0 auto; max-width: 100%; border-radius: 4px; margin-bottom: 25px;"></figure><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">一周图片</span><span class="suffix"></span></h1><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="最后的守护者" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/image.68fvgr8siv80.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="DeskTop" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202227_DeskTop.4j34ntvrccy0.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="3D地毯" src="https://cdn.statically.io/gh/liugezhou/image@master/blog/202227_3d.2qwh385r7cs0.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; border-radius: 4px; display: inline-block; width: 100%; margin-bottom: 0;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; line-height: 1.75em; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">文摘</span><span class="suffix"></span></h1><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">通过娱乐的方式去逃避焦虑只会让人更加焦虑。与其被焦虑折磨的痛不欲生，不如认认真真的学点东西，看到自己一点点地进步，心里踏实了，就不会那么焦虑了</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">愤世嫉俗者看起来很聪明，但乐观主义者创造了未来。</p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">每个人都是父母的基因混合在一起产生的，这样会制造基因突变，其中有利的突变最终会形成生存优势。<br>同理，作为程序员，也应该多尝试新事物和新技能，与旧知识和旧技能进行混合，这样才能获得生存优势。</p></blockquote></blockquote><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">编码相关</span><span class="suffix"></span></h1><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">域名修改</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">本周把老博客直接下线，将新博客域名迁了回去。老博客在Github上以liugezhou.github.io命令，新建博客是以项目blog命名。<br>于是迁移的步骤就是：更换两处项目名，blog中以<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">/blog</code>为路径的均改为<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">/</code>,而老项目由于源文件缺失，就直接下线了。<br>在本次服务的域名迁移过程后，一个小感受是：<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(60, 112, 198);">做事情最初的时候，快速迭代是应该的，但明显的需要优化项，一定有意识的尽早一步到位</code>。</p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">JS字符串</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">关于js字符串的相关方法，总结了<a href="https://flowus.cn/liugezhou/18d591bb-8564-46ba-aea3-f45cb49433fc" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">短文一篇</a></p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);">前端性能优化</span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">关于前端性能优化的系统性实践，是前端老生常谈，或者面试必问。于是很有必要进行一个系统的总结。<a href="https://flowus.cn/liugezhou/share/6d3ada46-7665-4e63-9742-708968f3e03b" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">博文总结中</a></p><h3 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title1.jpg); background-size: 15px 15px; display: inline-block; width: 15px; height: 15px; line-height: 15px; margin-bottom: -1px;"></span><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 16px; font-weight: bold; display: inline-block; margin-left: 8px; color: rgb(60,112,198);"><a href="https://github.com/githubocto/repo-visualizer" style="word-wrap: break-word; font-weight: bold; color: rgb(60, 112, 198); text-decoration: none; border-bottom: 1px solid rgb(60, 112, 198);">Repo Visualizer</a></span><span class="suffix" style="display: none;"></span></h3><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">GitHub 官方推出的一个代码库可视化工具，通过 GitHub Actions 生成 SVG 文件，代表整个代码库，空心圆表示目录，实心圆表示文件，圆的大小代表了文件的大小，还能根据提交历史，生成动态变化图。</p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">在我的running_page项目的.github/workflow下新建diagram.yml，代码内容为：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">name:&nbsp;Create&nbsp;diagram<br>on:<br>&nbsp;&nbsp;workflow_dispatch:&nbsp;&#123;&#125;<br>&nbsp;&nbsp;push:<br>&nbsp;&nbsp;&nbsp;&nbsp;branches:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;master<br><span class="hljs-built_in" style="color: #e6c07b; line-height: 26px;">jobs</span>:<br>&nbsp;&nbsp;get_data:<br>&nbsp;&nbsp;&nbsp;&nbsp;runs-on:&nbsp;ubuntu-latest<br>&nbsp;&nbsp;&nbsp;&nbsp;steps:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;name:&nbsp;Checkout&nbsp;code<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uses:&nbsp;actions/checkout@master<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;name:&nbsp;Update&nbsp;diagram<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uses:&nbsp;githubocto/repo-visualizer@main<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;with:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;excluded_paths:&nbsp;<span class="hljs-string" style="color: #98c379; line-height: 26px;">"ignore,.github"</span><br><br></code></pre><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">最后看到生成的svg，貌似没什么用。</p><h1 data-tool="mdnice编辑器" style="padding: 0px; font-weight: bold; color: black; font-size: 24px; text-align: center; background-image: url(https://cdn.statically.io/gh/liugezhou/image@master/blog/blog_title2.jpg); background-position: center top; background-repeat: no-repeat; background-size: 95px; line-height: 95px; margin-top: 38px; margin-bottom: 10px;"><span class="prefix" style="display: none;"></span><span class="content" style="font-size: 20px; color: rgb(60, 112, 198); border-bottom: 2px solid #3C7076;">本周小结</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="font-size: 16px; padding-bottom: 8px; margin: 0; padding-top: 23px; color: rgb(74,74,74); line-height: 1.75em;">That's All.<br>See You Next Week.</p></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*63):关于正能量</title>
      <link href="/202226-No63/"/>
      <url>/202226-No63/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/blog/20222601.jpg" alt="我做到了"></p><span id="more"></span><section id="nice" data-tool="mdnice编辑器" data-website="https://www.mdnice.com" style="font-size: 16px; color: black; padding: 0 10px; line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; word-break: break-word; word-wrap: break-word; text-align: left; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;"><section class="block-2" data-tool="mdnice编辑器" style="padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px; display: flex; justify-content: center; background: none; padding: 0;"><section class="block-2-inner" style="display: flex; flex-direction: column; align-items: center; background: rgb(223, 241, 238); width: 90%; border-radius: 5px; border-width: 1px; border-style: dashed; border-color: rgb(74, 179, 172); padding: 20px;"><p style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgb(7, 107, 115); font-weight: bold; padding: 0; font-size: 15px;">本周是2022年的第<strong style="font-weight: bold; color: rgb(255, 79, 121);">26周</strong>(6.27-7.03).这里记录过去一周，我的一些记录。<br>每周日晚发布，文章首更自<span class="footnote-word" style="color: #1e6bb8; font-weight: bold;">我的博客</span><sup class="footnote-ref" style="line-height: 0; color: #1e6bb8; font-weight: bold;">[1]</sup><br><span style="display:block;text-align:right;color:blue;">No.*63</span></p></section></section><hr data-tool="mdnice编辑器" style="height: 1px; margin: 0; margin-top: 10px; margin-bottom: 10px; border: none; border-top: 1px solid black;"><h1 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 24px;"><span class="prefix" style="display: none;"></span><span class="content">本周主题：关于正能量</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">每当看一些社会负面新闻的时候，文字、图片、视频等数据会在我们脑子里经过加工，之后各种情绪会伴随而来，久而久之  这个时候再看到一些很正能量的东西就会很反感。<br>同理 接触了很多的正能量，看到负面新闻大脑会经过一些过滤，或者为负面新闻进行一些有选择筛查。<br>总体而言，我会浅薄的认为：负面新闻一定程度会让社会更透明、更公平，但无端指责更频繁，正面新闻一定程度会让人心更安定、更一致、但不可控的更虚无。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">很早以前早晨醒来的第一件事是看看《人民日报》，一看到正能量的很正派的事物，由于负面新闻的延展，就会觉得这种假惺惺的东西很作秀，一些鸡毛蒜皮的小事都值得大书特书吗？这些很正常的社会共识，值得拿出来宣扬吗？直到最近一次地铁上班的一件小事，感觉外内宣的存在  某个方面积极意义也是有的</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">事情是这样的：</p><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">我的通勤时长100分钟  坐地铁加步行<br>一天早晨无座  地铁停靠后  人员窜入 我旁边站着个姑娘<br>突然冒出来的一个想法是  我想待会有座位了 我应该让给姑娘去坐  发挥一下绅士精神  进而发表些感想  呼吁中国男人或者身边的朋友  都要'切身'关怀女人、老人、儿童然后 几站后  我面前的人下车了<br>瞬时 我就坐了下去 且回想刚刚的思行不一致行为为 脑里给出的解释是  “害 可真累 我这通勤时间太长 赶紧坐会吧  万一跟我抢座位  显得我不绅士了…………”</p></blockquote></blockquote><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">见义勇为、发挥一些美好的品质，说来容易，“知行合一”不容易，整个社会的统一共识也是很难把握。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">网络的发展，让世界各个角落正在上演的事情目之可及，文字带给人的力量甚大。即使你不上网，即使你不认字，即使你不读书，大的正能量弘扬都会直接间接的影响，这些东西对文明社会的建设大有裨益，但对各种洗地以及真相背后的一地鸡毛，丧失公信。 由于立场不同，于是便不能直接对其进行简单比较。<br>像《小王子》说的：** 一个人只有用心去看 才能看到真实 事情的真相只用眼睛是看不见的。**</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">最后，得出的结论是 社会的正能量事件给予敬佩  而真正的正能量要自己去寻找<br>此正能量非彼正能量  就好比真正的我们所认为的某个人的三观正，或者说找伴侣的人会说希望对方三观正  这里的三观指的单纯只是 这个人的三观符合自己对待事情的态度<br>真正的正能量应该是为我们个体带来更好的社会化选择  更好的内心充盈  更棒的精神体验。</p><h1 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 24px;"><span class="prefix" style="display: none;"></span><span class="content">文字摘录</span><span class="suffix"></span></h1><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">理性人或许颜值普通，或许没有炫酷的才艺，或许从不是众人的焦点，但他们能洞察社会运行的基本规律，能运用知识与智慧实现自己的目的。 稳定持续地获取财富，便是对这些追求理性、坚持独立思考之人的馈赠，也是必然会实现的结果。<span style="display:block;text-align:right;color:blue;">-章工</span></p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">你学不会的东西，老天爷会让你一遍一遍经历。如果一个人有明显的缺点，比如不细心、马虎，Ta会在未来的人生经历中一次次犯错，一次次体会因为马虎带来的失败，直到他改正这个缺点为止。再比如，一个缺爱的人处理不好亲密关系，会一次次体会心碎的感觉。<span style="display:block;text-align:right;color:blue;">-章工</span></p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">任何一个你不喜欢又离不开的地方，任何一种你不喜欢又摆脱不了的生活，就是监狱。如果你感到痛苦和不自由，希望你心里永远有一团不会熄灭的火焰，不要麻木，不要被同化。<span style="display:block;text-align:right;color:blue;">-《肖申克的救赎》</span></p></blockquote></blockquote><blockquote class="multiquote-2" data-tool="mdnice编辑器" style="border: none; box-shadow: 1px 1px 10px rgba(0,0,0,0.2); padding: 20px; margin-bottom: 20px; margin-top: 20px;"><blockquote style="border: none;"><p style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">如今，创业浪潮已过，泡沫退去，一地狼藉。而最终留下来的创业公司，都应该思考自己的企业文化和管理模式，所谓的强势管理驱动，已经不适合这一代年轻人，更不适合创意型企业。用喜欢驱动，才是可持续的生产力。<span style="display:block;text-align:right;color:blue;">- <span class="footnote-word" style="color: #1e6bb8; font-weight: bold;">少数派～老麦</span><sup class="footnote-ref" style="line-height: 0; color: #1e6bb8; font-weight: bold;">[2]</sup></span></p></blockquote></blockquote><h1 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 24px;"><span class="prefix" style="display: none;"></span><span class="content">一周图片</span><span class="suffix"></span></h1><section class="imageflow-layer1" data-tool="mdnice编辑器" style="margin-top: 1em; margin-bottom: 0.5em; white-space: normal; border: 0px none; padding: 0px; overflow: hidden;"><section class="imageflow-layer2" style="white-space: nowrap; width: 100%; overflow-x: scroll;"><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/blog/20222601.7kovla69kfc0.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; display: inline-block;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/blog/20220602.37ss9s2n4ns0.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; display: inline-block;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/blog/20222603.1ep8rnj7dkkg.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; display: inline-block;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/blog/20222604.2k08w1riiyc0.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; display: inline-block;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/blog/20222606.lhjs6x7uqfk.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; display: inline-block;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/blog/20222605.2z8762ty3t40.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; display: inline-block;"></section><section class="imageflow-layer3" style="display: inline-block; word-wrap: break-word; white-space: normal; vertical-align: middle; width: 100%;"><img alt="距离产生美女" src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/blog/20222607.mbvjve0lyzk.jpg" class="imageflow-img" style="margin: 0 auto; max-width: 100%; display: inline-block;"></section></section></section><p class="imageflow-caption" data-tool="mdnice编辑器" style="padding-bottom: 8px; margin: 0; line-height: 26px; font-size: 15px; text-align: center; margin-top: 0px; padding-top: 0px; color: #888;">&lt;&lt;&lt; 左右滑动见更多 &gt;&gt;&gt;</p><h1 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 24px;"><span class="prefix" style="display: none;"></span><span class="content">工具：墨滴</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">本周发现了一个宝藏markdown写作其它格式转换在线网站，<span class="footnote-word" style="color: #1e6bb8; font-weight: bold;">墨滴</span><sup class="footnote-ref" style="line-height: 0; color: #1e6bb8; font-weight: bold;">[3]</sup>：让排版变Nice。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">微信官方的编辑器十分的不友好，之前尝试过<span class="footnote-word" style="color: #1e6bb8; font-weight: bold;">Md2All</span><sup class="footnote-ref" style="line-height: 0; color: #1e6bb8; font-weight: bold;">[4]</sup>这个在线网站，将markdown一键转换主题格式，但转成的格式不能友好的在微信公众号编辑器进行显示，并且主题单一。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">而墨滴这个插件工具，主要优点有：很友好的支持markdown的各种格式，可定制各种主题，样式不丢失，可一键发布多个平台。在markdown语法外，加入了一些新的炫酷语法，比如<strong style="font-weight: bold; color: rgb(130, 127, 196);">脚注</strong>、<strong style="font-weight: bold; color: rgb(130, 127, 196);">图片滑动</strong>、<strong style="font-weight: bold; color: rgb(130, 127, 196);">二级引用</strong>、<strong style="font-weight: bold; color: rgb(130, 127, 196);">图片控制大小</strong>、<strong style="font-weight: bold; color: rgb(130, 127, 196);">卡片跳转</strong>、<strong style="font-weight: bold; color: rgb(130, 127, 196);">容器块</strong>、<strong style="font-weight: bold; color: rgb(130, 127, 196);">主题切换</strong>、 <strong style="font-weight: bold; color: rgb(130, 127, 196);">TOC</strong> 、<strong style="font-weight: bold; color: rgb(130, 127, 196);">分列</strong>等功能。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">主要语法总结为：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #fafafa; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #383a42; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #fafafa; border-radius: 5px;"><span class="hljs-addition" style="color: #50a14f; line-height: 26px;">+&nbsp;脚注语法：&nbsp;[文字](链接&nbsp;"说明文字")</span><br><span class="hljs-addition" style="color: #50a14f; line-height: 26px;">+&nbsp;脚注解释语法：[文字](脚注解释&nbsp;"脚注说明")</span><br><span class="hljs-addition" style="color: #50a14f; line-height: 26px;">+&nbsp;图片滑动：&nbsp;&lt;![](url,![](url))&gt;</span><br><span class="hljs-addition" style="color: #50a14f; line-height: 26px;">+&nbsp;二级引用：&nbsp;&nbsp;&gt;&gt;&nbsp;（主要是样式的显示）</span><br><span class="hljs-addition" style="color: #50a14f; line-height: 26px;">+&nbsp;图片控制大小：&nbsp;![](url&nbsp;=100X100)</span><br><span class="hljs-addition" style="color: #50a14f; line-height: 26px;">+&nbsp;卡片跳转：&nbsp;&nbsp;[![文字介绍](图片url)](文章url)</span><br><span class="hljs-addition" style="color: #50a14f; line-height: 26px;">+&nbsp;容器块：&nbsp;:::&nbsp;block-1&nbsp;block-2&nbsp;block-3&nbsp;:::&nbsp;</span><br></code></pre><h1 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 24px;"><span class="prefix" style="display: none;"></span><span class="content">编码相关</span><span class="suffix"></span></h1><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; font-size: 22px; display: flex; justify-content: center; border: none; color: rgb(130, 127, 196); padding: 0;"><span class="prefix" style="display: block; width: 35px; height: 35px; background-size: 100% 100%; background-repeat: no-repeat; background-image: url(https://files.mdnice.com/pic/c6dd0d41-e95d-4d0d-a202-afa9ca0731af.png); margin-right: -20px;"></span><span class="content" style="display: flex; align-items: center; font-size: 18px;"><span class="footnote-word" style="color: #1e6bb8; font-weight: bold;">Vue 2.7 "Naruto" Released</span><sup class="footnote-ref" style="line-height: 0; color: #1e6bb8; font-weight: bold;">[5]</sup></span><span class="suffix" style="display: block; width: 15px; height: 15px; background-size: 100% 100%; background-repeat: no-repeat; background-image: url(https://files.mdnice.com/pic/4e116911-86c9-40c7-80ec-bd05e65efa5b.png);"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">7月1日，Vue 正式发布了 2.7 版本， 版本名称为 Naruto，即火影忍者。Vue 2.7 是 Vue 2.x 的最终次要版本。 在这个版本之后，Vue 2 进入了 LTS（长期支持），从现在开始持续 18 个月，并且将不再接收新功能。这意味着 Vue 2 将在 2023 年底结束其生命周期。这应该为大多数生态系统迁移到 Vue 3 提供充足的时间。<br>这里是<span class="footnote-word" style="color: #1e6bb8; font-weight: bold;">更新说明翻译版本</span><sup class="footnote-ref" style="line-height: 0; color: #1e6bb8; font-weight: bold;">[6]</sup></p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; font-size: 22px; display: flex; justify-content: center; border: none; color: rgb(130, 127, 196); padding: 0;"><span class="prefix" style="display: block; width: 35px; height: 35px; background-size: 100% 100%; background-repeat: no-repeat; background-image: url(https://files.mdnice.com/pic/c6dd0d41-e95d-4d0d-a202-afa9ca0731af.png); margin-right: -20px;"></span><span class="content" style="display: flex; align-items: center; font-size: 18px;">JavaScript装饰器</span><span class="suffix" style="display: block; width: 15px; height: 15px; background-size: 100% 100%; background-repeat: no-repeat; background-image: url(https://files.mdnice.com/pic/4e116911-86c9-40c7-80ec-bd05e65efa5b.png);"></span></h2><section class="block-2" data-tool="mdnice编辑器" style="padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 20px; margin-bottom: 20px; margin-top: 20px; display: flex; justify-content: center; background: none; padding: 0;"><section class="block-2-inner" style="display: flex; flex-direction: column; align-items: center; background: rgb(223, 241, 238); width: 90%; border-radius: 5px; border-width: 1px; border-style: dashed; border-color: rgb(74, 179, 172); padding: 20px;"><p style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgb(7, 107, 115); font-weight: bold; padding: 0; font-size: 15px;">JavaScript 的装饰器（decorator）已经是第三阶段提案了，语法完全变了。github.com/tc39/proposal-decorators但是，TypeScript 的装饰器还是早期语法，后面不知道怎么处理，看上去跟标准不兼容。目前比较稳妥的做法是，不要在项目中使用装饰器。<span style="display:block;text-align:right;color:blue;">-阮一峰</span></p></section></section><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; font-size: 22px; display: flex; justify-content: center; border: none; color: rgb(130, 127, 196); padding: 0;"><span class="prefix" style="display: block; width: 35px; height: 35px; background-size: 100% 100%; background-repeat: no-repeat; background-image: url(https://files.mdnice.com/pic/c6dd0d41-e95d-4d0d-a202-afa9ca0731af.png); margin-right: -20px;"></span><span class="content" style="display: flex; align-items: center; font-size: 18px;"><span class="footnote-word" style="color: #1e6bb8; font-weight: bold;">ES2022Features</span><sup class="footnote-ref" style="line-height: 0; color: #1e6bb8; font-weight: bold;">[7]</sup></span><span class="suffix" style="display: block; width: 15px; height: 15px; background-size: 100% 100%; background-repeat: no-repeat; background-image: url(https://files.mdnice.com/pic/4e116911-86c9-40c7-80ec-bd05e65efa5b.png);"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">ES2022新特性</p><ul data-tool="mdnice编辑器" style="margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: black; list-style-type: disc;"><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500; font-size: 15px;">.at方法，统一数组和文字取值。</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500; font-size: 15px;">Object.hasOwn()</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500; font-size: 15px;">cause</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500; font-size: 15px;">Top-Level await:await Promise.resolve('something')</section></li><li><section style="margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgb(1,1,1); font-weight: 500; font-size: 15px;">Class filed declarations:<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; color: #1e6bb8; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all;">#</code></section></li></ul><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; font-size: 22px; display: flex; justify-content: center; border: none; color: rgb(130, 127, 196); padding: 0;"><span class="prefix" style="display: block; width: 35px; height: 35px; background-size: 100% 100%; background-repeat: no-repeat; background-image: url(https://files.mdnice.com/pic/c6dd0d41-e95d-4d0d-a202-afa9ca0731af.png); margin-right: -20px;"></span><span class="content" style="display: flex; align-items: center; font-size: 18px;">博客加入豆瓣读书、电影、游戏</span><span class="suffix" style="display: block; width: 15px; height: 15px; background-size: 100% 100%; background-repeat: no-repeat; background-image: url(https://files.mdnice.com/pic/4e116911-86c9-40c7-80ec-bd05e65efa5b.png);"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">根据<span class="footnote-word" style="color: #1e6bb8; font-weight: bold;">Hexo 博客加入豆瓣读书界面（综合教程）</span><sup class="footnote-ref" style="line-height: 0; color: #1e6bb8; font-weight: bold;">[8]</sup>的第二种方法。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">添加依赖为：<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; color: #1e6bb8; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all;">hexo-douban</code>分别配置根目录与主题目录_conifg.yml文件。</p><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">本地启动：<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; color: #1e6bb8; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all;">hexo clean &amp;&amp; hexo douban -bgm &amp;&amp; hexo g &amp;&amp; hexo s</code></p><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; font-size: 22px; display: flex; justify-content: center; border: none; color: rgb(130, 127, 196); padding: 0;"><span class="prefix" style="display: block; width: 35px; height: 35px; background-size: 100% 100%; background-repeat: no-repeat; background-image: url(https://files.mdnice.com/pic/c6dd0d41-e95d-4d0d-a202-afa9ca0731af.png); margin-right: -20px;"></span><span class="content" style="display: flex; align-items: center; font-size: 18px;">润社区</span><span class="suffix" style="display: block; width: 15px; height: 15px; background-size: 100% 100%; background-repeat: no-repeat; background-image: url(https://files.mdnice.com/pic/4e116911-86c9-40c7-80ec-bd05e65efa5b.png);"></span></h2><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;"><span class="footnote-word" style="color: #1e6bb8; font-weight: bold;">北美前端面试攻略</span><sup class="footnote-ref" style="line-height: 0; color: #1e6bb8; font-weight: bold;">[9]</sup>，<code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; color: #1e6bb8; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all;">前端小鱼二</code>搭建的一套北美面试题库</p><h1 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 24px;"><span class="prefix" style="display: none;"></span><span class="content">本周小结</span><span class="suffix"></span></h1><p data-tool="mdnice编辑器" style="padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black; font-size: 15px;">周五回了趟家，周六就赶回来了，有点小疲。<br>That's All.<br>See You Neek Week.</p><h3 class="footnotes-sep" data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 20px;"><span style="display: block;">参考资料</span></h3><section class="footnotes" data-tool="mdnice编辑器"><span id="fn1" class="footnote-item" style="display: flex;"><span class="footnote-num" style="display: inline; width: 10%; background: none; font-size: 80%; opacity: 0.6; line-height: 26px; font-family: ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;">[1] </span><p style="padding-top: 8px; padding-bottom: 8px; display: inline; font-size: 14px; width: 90%; padding: 0px; margin: 0; line-height: 26px; color: black; word-break: break-all; width: calc(100%-50);">liugezhou: <em style="font-style: italic; color: black;">https://blog.liugezhou.online/</em></p></span><span id="fn2" class="footnote-item" style="display: flex;"><span class="footnote-num" style="display: inline; width: 10%; background: none; font-size: 80%; opacity: 0.6; line-height: 26px; font-family: ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;">[2] </span><p style="padding-top: 8px; padding-bottom: 8px; display: inline; font-size: 14px; width: 90%; padding: 0px; margin: 0; line-height: 26px; color: black; word-break: break-all; width: calc(100%-50);">喜欢就是生产力: <em style="font-style: italic; color: black;">https://sspai.com/post/74064</em></p></span><span id="fn3" class="footnote-item" style="display: flex;"><span class="footnote-num" style="display: inline; width: 10%; background: none; font-size: 80%; opacity: 0.6; line-height: 26px; font-family: ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;">[3] </span><p style="padding-top: 8px; padding-bottom: 8px; display: inline; font-size: 14px; width: 90%; padding: 0px; margin: 0; line-height: 26px; color: black; word-break: break-all; width: calc(100%-50);">墨滴官方: <em style="font-style: italic; color: black;">https://www.mdnice.com/</em></p></span><span id="fn4" class="footnote-item" style="display: flex;"><span class="footnote-num" style="display: inline; width: 10%; background: none; font-size: 80%; opacity: 0.6; line-height: 26px; font-family: ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;">[4] </span><p style="padding-top: 8px; padding-bottom: 8px; display: inline; font-size: 14px; width: 90%; padding: 0px; margin: 0; line-height: 26px; color: black; word-break: break-all; width: calc(100%-50);">Md2All: <em style="font-style: italic; color: black;">http://md.aclickall.com/</em></p></span><span id="fn5" class="footnote-item" style="display: flex;"><span class="footnote-num" style="display: inline; width: 10%; background: none; font-size: 80%; opacity: 0.6; line-height: 26px; font-family: ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;">[5] </span><p style="padding-top: 8px; padding-bottom: 8px; display: inline; font-size: 14px; width: 90%; padding: 0px; margin: 0; line-height: 26px; color: black; word-break: break-all; width: calc(100%-50);">Vue2.7: <em style="font-style: italic; color: black;">https://blog.vuejs.org/posts/vue-2-7-naruto.html</em></p></span><span id="fn6" class="footnote-item" style="display: flex;"><span class="footnote-num" style="display: inline; width: 10%; background: none; font-size: 80%; opacity: 0.6; line-height: 26px; font-family: ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;">[6] </span><p style="padding-top: 8px; padding-bottom: 8px; display: inline; font-size: 14px; width: 90%; padding: 0px; margin: 0; line-height: 26px; color: black; word-break: break-all; width: calc(100%-50);">Vue2.7翻译: <em style="font-style: italic; color: black;">https://zhuanlan.zhihu.com/p/536477463</em></p></span><span id="fn7" class="footnote-item" style="display: flex;"><span class="footnote-num" style="display: inline; width: 10%; background: none; font-size: 80%; opacity: 0.6; line-height: 26px; font-family: ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;">[7] </span><p style="padding-top: 8px; padding-bottom: 8px; display: inline; font-size: 14px; width: 90%; padding: 0px; margin: 0; line-height: 26px; color: black; word-break: break-all; width: calc(100%-50);">ES2022: <em style="font-style: italic; color: black;">https://h3manth.com/ES2022/</em></p></span><span id="fn8" class="footnote-item" style="display: flex;"><span class="footnote-num" style="display: inline; width: 10%; background: none; font-size: 80%; opacity: 0.6; line-height: 26px; font-family: ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;">[8] </span><p style="padding-top: 8px; padding-bottom: 8px; display: inline; font-size: 14px; width: 90%; padding: 0px; margin: 0; line-height: 26px; color: black; word-break: break-all; width: calc(100%-50);">Hexo加入豆瓣: <em style="font-style: italic; color: black;">https://blog.csdn.net/m0_55001211/article/details/121628395</em></p></span><span id="fn9" class="footnote-item" style="display: flex;"><span class="footnote-num" style="display: inline; width: 10%; background: none; font-size: 80%; opacity: 0.6; line-height: 26px; font-family: ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;">[9] </span><p style="padding-top: 8px; padding-bottom: 8px; display: inline; font-size: 14px; width: 90%; padding: 0px; margin: 0; line-height: 26px; color: black; word-break: break-all; width: calc(100%-50);">北美前端面试攻略: <em style="font-style: italic; color: black;">https://us-fe.github.io/</em></p></span></section></section>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*62):底特律-化身为人</title>
      <link href="/202225(6.20-6.26)/"/>
      <url>/202225(6.20-6.26)/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本周是2022年的第二十五周(6.20-6.26)–每周小结的第62期，这里记录过去一周，我的一些小总结。<br>文章首更自：<a href="https://blog.liugezhou.online/">https://blog.liugezhou.online/</a></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/202225_Detroit-Become_Human.5hx9k3jn29c0.webp" alt="Detroit-Become_Human"></p><span id="more"></span><h3 id="回忆玩过的游戏和感受">回忆玩过的游戏和感受</h3><blockquote><p>小学的时候玩冒险岛、影子传说、超级玛丽、魂斗罗、 双截龙、马戏团、忍者神龟、坦克大战、雪人兄弟等等等等，依稀记得等待下局轮到自己玩的期待，也记得自己一个人玩的时候会盎然无趣。</p></blockquote><blockquote><p>到了初中开始接触QQ、CS、QQ炫舞、跑跑卡丁车、流星蝴蝶剑等。每个周末都几乎不回家，和小伙伴上网通宵，但重心却不是玩游戏。<br>每次会在游戏’糊弄’过几把后，由于提不起兴趣或是太菜，对游戏带来的反馈没有特别的感受，往往是打几把后，就点开电影网站，看一晚电影。</p></blockquote><blockquote><p>高中的时候玩什么游戏是想不起来了。</p></blockquote><blockquote><p>大学开始那会DOTA和英雄联盟火爆，开始是不能理解一个地图可以不厌其烦一直玩的。<br>出于好奇，一次国庆假期，通了个宵后就入「英雄联盟」的坑了。<br>虽然大学期间玩的相对没有那么入迷，且至今对其英雄名称、slogan、装备等未曾了然于心，但并不影响体验感。<br>仅凭着一腔感觉，并肩作战，互相吐槽、赞美、讨论骚操作----通宵达旦成了单纯的游戏时光。</p></blockquote><blockquote><p>这是多少人的青春啊。</p></blockquote><blockquote><p>毕业后几年，玩过几次手游吃鸡、王者荣耀、手游英雄联盟。这时的体验感除了耗费一些无所事事的时光，似乎没有很欢乐的感觉。</p></blockquote><blockquote><p>最后到现在，保持着还在消遣的娱乐就是象棋的揭棋模式了。</p></blockquote><h3 id="PS5">PS5</h3><blockquote><p>无论对PS5游戏的感受是自其上市之起就埋藏心底，还是觉得为抱着增加体验感的目的，也或者是广告的精准打击，最终这个周五的晚上，心心念的游戏机是容易进家了。<br>账号注册、服务备份、开通会员、添加账户、游戏体验，最后沉迷在了《底特律*化身为人》。</p></blockquote><h3 id="游戏背景">游戏背景</h3><blockquote><p>《底特律：化身为人》是一款由法国的一家电子游戏开发商Quantic Dream SA开发的游戏。2018年5月发售。</p></blockquote><blockquote><p>故事围绕着3个仿生机器人，分别是为了探寻自己新产生的人工意识而逃离雇主的卡拉（Kara），追捕像卡拉那样的异常仿生人的康纳（Connor）和致力解救被奴役的仿生人马库斯（Markus）。玩家所做的决择会决定3位角色的生死存亡。<br>剧本两年时间写完,一年半的拍摄和制作动画,游戏的设定、视觉效果、配音极佳。</p></blockquote><blockquote><p>这是一款游戏，可吸引我的点在于他更是一部电影。</p></blockquote><h3 id="游戏玩法">游戏玩法</h3><blockquote><p>是可固定或控制观点的第三人称动作冒险游 。游戏在三个可玩的角色间穿插，且他们的死并不影响故事的发展，因此角色死后并不会有“游戏结束”的消息 。<br>他的故事会根据玩家的选择进行分支 ，而玩家觉得他某些决择点作出的决定不好的时候，他可以回溯到该点重塑其选择 。有时候，当在规定时间内收集的情报越多时，让故事向好的方向发展的成功几率便越大 。获取线索可重现已发生的事或设定侦察的路线，而这可通过用扩增视野分析周遭环境的方式做到。</p></blockquote><h3 id="游戏角色">游戏角色</h3><blockquote><p>卡拉（Kara，瓦莱瑞·卡瑞饰）AX400型机器人，一位新创造的具有拥有人工意识的仿生机器人，她渴望了解如何在人性和斗争之中生活，并希望知悉自己在机器人仍然没有意识自己被用作仆人的世界中的地位。<br>康纳（Connor，布莱恩·德查特饰）RK800型机器人 ，一位机器人警察，专门追捕偏离编程行为的机器人。<br>马库斯（Markus，杰斯·威廉斯饰）RK200型机器人，耶利哥首领，致力解放机器人奴隶的机器人叛逃者。</p></blockquote><h3 id="剧情概要">剧情概要</h3><blockquote><p>护理仿生人马库斯与主人归家后怀疑有盗贼闯入而报案，在与犯人纠缠中马库斯突破了程序限制而变成完全自主的异常仿生人，导致警方到达现场后把他击毁报废。马库斯其后在垃圾场重新启动，逃走后前往其他异常仿生人用作躲避人类的废弃货船耶利哥（Jericho），继而召集大家为自由和权利而战。在进行多项抗命运动后，众人的行动得到媒体的注意，也驱使更多仿生人加入其行列，却导致联邦调查局视他们为威胁而向耶利哥发动突袭。视乎玩家决择，马库斯可逃过追杀，并与所有存活的同伴发起最后一场抗争，其取态可使所有异常仿生人被杀或获得舆论支持而促使总统展开和平会谈。</p></blockquote><blockquote><p>刑警仿生人康纳被制作商模控生命公司（CyberLife）派遣协助底特律警局的副队长汉克·安德森，调查仿生人出现异常的原因并在事态恶化前加以控制，视乎玩家决择，两人会在过程中成为拍挡或决裂。康纳在奉命追捕马库斯的行动中一度对自己的指令产生疑问，视乎玩家决择可选择贯彻执行原有指令或反抗指令成为异常仿生人。康纳如选择前者将会在马库斯带领同伴进行抗争时执行狙击任务，并与特警组或汉克进行最后的战斗，假如马库斯抗争成功，康纳可选择是否在马库斯致辞时把他射杀；如选择后者，康纳将潜入模控生命公司，与另一个敌对的康纳进行最后的战斗，并使所有仿生人全部异常以壮大马库斯势力。</p></blockquote><blockquote><p>家务仿生人卡拉在维修完毕后被主人陶德接送回家，当晚为保护陶德女儿爱丽丝免受虐待而成为异常仿生人，与爱丽丝一同逃走并希望前往没有法例规管仿生人的加拿大，二人在旅途上结识了仿生人卢瑟和得到一位同情仿生人的人类的协助，前往耶利哥以取得护照离境。卡拉至此发现爱丽丝同是仿生人，用以填补陶德妻女离去后的心灵空虚。不久联邦调查局向耶利哥发动突袭，玩家的决择将决定卡拉等人能否成功逃出，以及能否抵达加拿大或逃离仿生人废弃回收集中营。</p></blockquote><h3 id="游戏感受">游戏感受</h3><blockquote><p>之前在看电影、电视的时候，总会各种评价吐槽剧情的不合理或是对于大场面、戏剧冲突的赞许。<br>而这款游戏就是在观看电影的时候，根据剧情推进，不断的深处三个角色之下展开的一系列选择、台本，说什么话，做什么动作、下一步的计划等等都，每一个决定都会产生相应的后果。<br>游戏玩到后来，由于密集的操作，时间的累积，脑子爆炸，在人类和仿生人之间的立场，摇摆不定，紧张的节奏来不及思考就要做出决定。<br>要么在康纳角色下杀死马库斯，要么在马库斯角色下杀死康纳。<br>会因为操纵马库斯杀死平民而后悔，又会因为没选择让康纳杀死仿生人而推倒重来。<br>后来干脆摆烂，一些纯粹恶搞的操作，跳过许多章节，故事到到最后结束，只是解锁了三分之一剧情。</p></blockquote><blockquote><p>游戏带给我的冲击和感受是前所未有的，或许是到了一定年龄，鲜有新鲜的事让人兴奋、或许是工作的日常束缚少了一些自由时间。<br>一时沉迷一时爽，可一直沉迷会让人慌。</p></blockquote><p>That’s all.<br>See you next week.</p>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*61):互联网跟帖评论服务管理规定</title>
      <link href="/202224(6.13-6.19)/"/>
      <url>/202224(6.13-6.19)/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本周是2022年的第二十四周(6.13-6.19)–每周小结的第61期，这里记录过去一周，我的一些小总结。<br>文章首更自：<a href="https://blog.liugezhou.online/">https://blog.liugezhou.online/</a></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/blog/202224.442d59ci0xq0.webp" alt="排队核酸"></p><span id="more"></span><h3 id="《互联网跟帖评论服务管理规定（修订草案征求意见稿）》">《互联网跟帖评论服务管理规定（修订草案征求意见稿）》</h3><blockquote><p><font color="#4E89FF">国家互联网信息办公室在2022年6月17日(本周五)公布了《互联网跟帖评论服务管理规定（修订草案征求意见稿）》，向社会公开征求意见。征求意见稿规定，跟帖评论服务提供者应当严格落实跟帖评论服务管理主体责任，依法履行对注册用户进行真实身份信息认证、建立健全用户个人信息保护制度、建立健全信息安全管理制度等义务。 </font></p><p>河南赋码事件发酵在前，跟帖评论实施马上在后，互联网越来越wyzq。<br>上网这件事之前称为<code>网上冲浪</code>，冲浪的人，原来都穿着比基尼、风格各异的冲浪服。<br>这条意见稿，给人的感觉就好像是：穿的太华丽招展没有错，可是你趁人意随地小便就不对了，于是为了治理这个随地小便的问题，在这片海域冲浪的人都不许着衣了，并且征求大家的意见，然后说大家没意见。<br>或许是有好有坏，但有些不美观。</p></blockquote><h3 id="沧浪之水">沧浪之水</h3><blockquote><p>本周把《沧浪之海》这部小说看完。<br>初看有种些天机泄漏的感觉，现在回头再总结下读后感的话，想不到什么。<br>只有肤浅、苍白的感觉：这本书为什么没有被封呢？这种抹黑领导的书怎么可以把天机泄漏出来?怎么可以赤裸裸的把现实描绘？为什么没有被封呢？Wakaka，也就这么点小格局了。。。<br>然后，也就不想再去废脑细胞，去憋出来了一点什么感受了。只是被同化的没有异见，还是挺危险的。</p></blockquote><h3 id="中国执行信息公开网"><a href="http://zxgk.court.gov.cn/">中国执行信息公开网</a></h3><blockquote><p>👆 这是中国执行信息公开网在线网站，截止到2022年6月18日，失信惩戒人数为7453202个。<br>百度百科统计截止2015年年底，纳入失信被执行人黑名单约为308万人。</p></blockquote><h3 id="The-Most-Popular-Websites-Since-1993"><a href="https://twitter.com/MattNavarra/status/1536708471411855362">The Most Popular Websites Since 1993</a></h3><blockquote><p>👆通过视频的方式展示了从1993年开始最受欢迎的网站排行。<br>其中No1网站，时间线霸占排名为：</p><ul><li>Aol(1993.1 ~ 2000.5)</li><li>Yahoo(2000.6 ~ 2006.5)</li><li>Google(2006.6 ~ 2008.9)</li><li>Yahoo(2008.9 ~ 2010.7)</li><li>Google(2010.8 ~ Just Now)</li></ul></blockquote><h3 id="文摘">文摘</h3><ul><li>In fact,data can only become knowledge when it’s experienced.   -TED</li></ul><h3 id="Grid练习"><a href="https://cssgridgarden.com/#zh-cn">Grid练习</a></h3><blockquote><p>👆 Grid Garden - A game for learning CSS grid layout 。这个小游戏可以帮助你学习/练习 grid 语法。<br>另外还有 flexbox 版小游戏：Flexbox Froggy - A game for learning CSS flexbox</p></blockquote><h3 id="npx">npx</h3><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/blog/2022224_npx.17hzk7q4xni8.webp" alt="2022224_npx"></p><h3 id="Github-action相关">Github action相关</h3><ol><li>Github Actions 是Github的持续集成服务，于2018年10月推出，2019年约11月放开。</li><li>每个action就是一个独立脚本，可以做成代码仓库。actions/setup-node就是github.com/actions/setup-node这个仓库</li><li>主要概念：workflow\job\step\action</li><li>配置文件存放在目录 .github/workflows目录下，后缀名统一为yml。</li><li>配置字段</li></ol><ul><li>name: workflow的名称</li><li>on: 指定触发workflow的条件，通常是push事件   on:push  or  on:[push,pull_request]</li><li>jobs: 表示要执行的一项或多项任务，needs表示依赖关系,runs_on指定运行所需要的虚拟机环境，它是必填字段,steps指定每个job的运行步骤</li><li>workflow_dispatch:允许从actions选项卡手动运行此工作流</li><li>schedule:cron:项目自动化执行的时机，第一个表示分钟，第二个表示小时，第三个表示日：第四个表示月，第五个表示星期，需要注意的一点是时区问题，Github默认为UTC标准时间，*表示所有值。</li></ul><blockquote><p>在GitHub、测试cron设置为 '0 0 * * *'时，执行时间是北京时间大约九点到九点十分左右.<br>仓库主页的每日自动更新时间设置为了：cron: ‘0 13 * * *’</p></blockquote><p>下面是一个test.yml</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">name</span><span class="punctuation">:</span> <span class="string">Liugezhou Page Demo</span></span><br><span class="line"><span class="attribute">on</span><span class="punctuation">:</span></span><br><span class="line">  <span class="attribute">schedule</span><span class="punctuation">:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">cron: &#x27;0 0 0 0 0&#x27;</span></span><br><span class="line">  <span class="attribute">push</span><span class="punctuation">:</span></span><br><span class="line">    <span class="attribute">branches</span><span class="punctuation">:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">dev</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">workflow_dispatch      </span></span><br><span class="line"><span class="attribute">jobs</span><span class="punctuation">:</span></span><br><span class="line">  step_1</span><br><span class="line">    name:&#x27;第一次执行的内容&#x27;</span><br><span class="line">    <span class="attribute">runs_on</span><span class="punctuation">:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attribute">steps</span><span class="punctuation">:</span></span><br><span class="line">      name:&#x27;安装node&#x27;</span><br><span class="line">      <span class="attribute">run</span><span class="punctuation">:</span> <span class="string">|</span></span><br><span class="line">         echo &#x27;I am first blood!&#x27;</span><br><span class="line">  step_2</span><br><span class="line">    name:&#x27;第二次执行的内容&#x27;</span><br><span class="line">    needs:step_1</span><br></pre></td></tr></table></figure><h3 id="本周小结">本周小结</h3><blockquote><ul><li>百词斩打卡| 丹尼英语听力</li><li>Running 9KM</li><li>Github Action相关测试</li><li>Grid小游戏</li><li>小说《沧浪之水》</li><li>电影《秋天的童话》《小王子》</li></ul></blockquote><p>That’s All.<br>See you next week.</p>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*60):Running Page</title>
      <link href="/202223(6.6-6.12)/"/>
      <url>/202223(6.6-6.12)/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本周是2022年的第二十三周(6.6-6.12)–每周小结的第60期，这里记录过去一周，我的一些小总结。<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/blog/202223_index.2bnmwojrjvi8.webp" alt="六个周在跑步"></p></blockquote><span id="more"></span><h3 id="Running-Page"><a href="https://github.com/yihong0618/running_page">Running Page</a></h3><blockquote><p>生成一个个人跑步的Github仓库。<br>Fork此仓库后，生成了我的跑步数据，通过表格一看，数据少的可怜：<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/blog/202223_01.4p2rk9vkde60.webp" alt="202223_01"></p><p>Fork此仓库后，配置了JoyRun(悦跑圈)、Keep和strava的数据。<br>其中joyRun的跑步数据不能自动化、Keep的数据没有心率和线路图，然后早晨为了测试strava的数据，紧急跑了个5公里。<br>之后，项目部署到了<a href="https://liugezhou.github.io/running_page%E5%9F%9F%E5%90%8D%E4%B8%8B%E3%80%82">https://liugezhou.github.io/running_page域名下。</a></p><p>域名过长，于是使用了自定义域名：<br>先去阿里云下申请了免费ssl证书(可以免费申请20个单域名证书)<br>然后，最终部署到了 <a href="https://run.liugezhou.online">https://run.liugezhou.online</a><br>最后，提交了仓库PR，更新readme。</p><p>在Fork代码仓库后，跟着readme步骤生成数据的过程，遇到了诸多问题，但回头一看，仓库的readme步骤其实已经写的很详细了，只是在跟着步骤生成数据的过程略显急躁—慢即是快，以后在学习别人的仓库、使用工具的时候，认真阅读readme是王道。</p></blockquote><h3 id="沧海之水">沧海之水</h3><blockquote><p>《沧浪之水》是2003年人民文学出版社出版的小说，作者是阎真。书中主要讲述了作为知识分子的池大为曾经拥有崇高的理想，但在现实官场生活中被一次又一次挫败品格与信念，最终不得不迎合现实选择利益的故事。豆瓣热门官场小说No.1。<br>这本小说目前看了三分之一，到目前为止主人公还未跨域过骄傲的自尊心。<br>书中讲的内容乍一看上去好像我们都懂，但实际上我们确也不懂，特别是对于一些从事技术领域的人来说，由于对人际交往这方面生活实践小，多养成藐视权威，讨厌随波逐流的主观心态。<br>而这本小说用对话的方式,深刻的教育、展示了我们基于现有大背景环境下，该如何更好的生存。</p></blockquote><h3 id="Run-Project"><a href="https://github.com/The-Run-Philosophy-Organization/run">Run Project</a></h3><blockquote><p>此润非彼run。<br>Run学全球官方指定GITHUB，整理Run学宗旨、纲领、理论和各类Run之实例.👆为链接。</p></blockquote><h3 id="一号通查公众号">一号通查公众号</h3><blockquote><p>工信部推出了 “一键解绑” 手机号绑定的互联网账号，通过「一号通查」公众号，可以进行解绑。<br>目前覆盖的互联网应用较少，只有微博、淘宝、、美团、大众点评、抖音、今日头条和小米。<br>愿以后的项目需要绑定手机号码登录的都对接到工信部上来吧。<br>体验了一下，目前个人感觉不是很好，希望工信部这个项目能越来越好。</p></blockquote><h3 id="USB-Type-C规格">USB Type-C规格</h3><blockquote><p>为增加产品的可持续性，欧盟初步同意，所有便携式电子产品的充电介面必须在2024年第三季末前统一使用USB Type-C规格。<br>iPhone、iPad等苹果产品也将遵从新规。现有的设备将会除外。<br>这项决议需经欧洲议会及欧盟部长理事会正式批准后作为规定发布。</p><p align="right">BBC News 中文</p></blockquote><h3 id="章工">章工</h3><blockquote><p>最近在推上Follow了一个账号：章工，每天大量的正负能量交错，总给人一种醍醐灌顶的感觉，摘抄几句如下：</p><ul><li>我活了三十年才明白一个道理：弱小的人要想快速成长，必须得学会借力，“自力更生”是很难跨越式发展的。</li><li>一个人知道自己为什么而活，就可以忍受任何一种生活。天纵英才，晨勃不再。</li><li>人们是永远不可能坦白一切的。甚至往昔那些看上去似乎彻底坦白出来的事，后来也显示出还有根子留在内心深处。 —— 卡夫卡</li><li>你所遇到的人生困境，在你出生之前就已经有无数的人遇到并为此给出了各种各样的解决方案。你的迷茫与痛苦，多半源于无知</li><li>这个时代已经完全不存在因高考和学历就能改变命运彻底飞黄腾达从此以后躺赢的人。但因为高考和学历彻底输掉人生、从此一蹶不振loser到死的人比比皆是，占据了人群的主要部分。高考结束后，彻底消除曾经的教育对自己思想的毒害、消除高考对你未来的负面影响，是对普通考生最重要的一件事。</li><li>用代码量来考核程序员，相当于用药方来评价医生，用药多的医生，就是好医生。</li><li>普通人不要追求当一个老好人，要去追求当一个强人。你没有那么强的能量，你去当好人，你不仅不会有好报，你还会死的很快。好人不会有好报，但是强人会有好报</li></ul></blockquote><h3 id="吴晓波">吴晓波</h3><blockquote><p>知名财经媒体吴晓波本周在公众号、新浪、头条号等被禁言。</p></blockquote><h3 id="李佳琦">李佳琦</h3><blockquote><p>因为众所周知的43方原因，天纵英才，直播不再。<br>网友总结的Wall内平台生存法则：首先你得对zz议题和zz事件毫无兴趣，然后你得对zz议题和zz事件如数家珍。</p></blockquote><h3 id="孤勇者">孤勇者</h3><blockquote><p>陈奕迅的《孤勇者》在小学生圈里广泛流传。这是为什么呢？</p></blockquote><h3 id="Start-history"><a href="https://star-history.com/">Start-history</a></h3><blockquote><p>可以直接生成Github仓库star历史的在线网站。</p></blockquote><h3 id="本周小结">本周小结</h3><blockquote><p>百词斩打卡<br>丹尼英语每日听力<br>Running 15km<br>Running_page网站上线<br>小说《沧浪之水》<br>重温《阿郎的故事》</p></blockquote><p>That’s all<br>See you next week.</p>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*59):人生第二次</title>
      <link href="/202222(5.30-6.5)/"/>
      <url>/202222(5.30-6.5)/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本周是2022年的第二十二周(5.30-6.5)–每周小结的第59期，这里记录过去一周，我的一些小总结。<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/blog/202222_01.kvaog578bdc.webp" alt="台湖公园"></p></blockquote><span id="more"></span><h3 id="假期结束">假期结束</h3><blockquote><p>假期的最后一天，下午和几个小伙伴一起去台湖公园野了个营，烧了个烤，荡了回秋千。到家都近十点了。<br>加上本周也没有什么收获。一时又不知总结个什么。</p><p>在秋千上荡啊荡的时候，突然有种亲近大自然的感觉，虽然披着文明的嫁衣，但骨子里仍旧流淌着远古人类的遗传基因。<br>不是觉得现在的生活不好，只是觉得缺少点什么。<br>最近睡醒的时候，脑子总是叨叨叨，嘴里嘟囔着什么，重复了几句，醒来还是忘却了。<br>终其一生，不过是在寻找意义是什么，每当想到这个话题的时候，浮现的一句话就是：<br>‘我们在这个世界上辛苦劳作，来回奔波是为了什么？所有这些贪婪和欲望，所有这些对财富、权利和名声的追求，其目的到底何在呢？归根结底，是为了得到他人的爱和认同。’</p></blockquote><h3 id="人生第二次">人生第二次</h3><blockquote><p>央视网出的一个记录片，“从人生第二次看见人情冷暖、成长蜕变、执着释怀，展现中国人面对困境的勇气和坚韧”。<br>这个介绍虽然很央视，但纪录片是针不错。</p></blockquote><blockquote><p>这个纪录片的第二季第二集，结尾处小男孩的话不知道是自己悟的好，还是老师教的好，很有意思：<br>「我是黑煤炭，你是白巧克力，我在地底下安全地生活着，你在上边被别人吃了，然后就变成了一坨屎，你说谁好。」</p><p>以及结尾处的片尾曲《推开世界的门》,配乐很棒。</p></blockquote><h3 id="小姐">小姐</h3><blockquote><p>一部大尺度韩国电影，讲述百合的故事,很有尺度很有趣。</p></blockquote><h3 id="花束版的恋爱">花束版的恋爱</h3><blockquote><p>日本的电影看的挺少的，本周在豆瓣上刷到一部温情的爱情小电影，推荐。</p></blockquote><h3 id="巴别英语-英语听力口语在线学习"><a href="https://www.babelabc.com/">巴别英语 - 英语听力口语在线学习</a></h3><blockquote><p>每日十分钟，轻松练英语听力。<br>内容主要是TED演讲，主要功能有单句循环播放、慢速播放、隐藏中英文字幕等。</p></blockquote><h3 id="文件移动">文件移动</h3><blockquote><p>之前Mac间文件移动的时候，总是开两个窗口进行拖动，快捷命令是Command + C,Command + option + V</p></blockquote><h3 id="React学习">React学习</h3><blockquote><p>之前看了B站一遍的尚硅谷的React教程，本周重温视频的一半，学习起来着实觉得没有Vue的设计好。<br>但都2022了，React开发还是不了解，说不过去，本月的目标是对React周边、基础、全家桶进行一个系统的学习。</p></blockquote><h3 id="本周小结">本周小结</h3><blockquote><ul><li>百词斩打卡</li><li>跑步0km</li><li>React视频学习</li><li>追剧《欢迎光临》</li><li>看电影</li></ul></blockquote><blockquote><p>That’s All<br>See you next!</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*58):欢迎光临</title>
      <link href="/202221(5.23-5.29)/"/>
      <url>/202221(5.23-5.29)/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本周是2022年的第二十一周(5.23-5.29)–每周小结的第58期，这里记录过去一周，我的一些小总结。<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/blog/202221_01.5tylstbkvf40.webp" alt="Moon"></p></blockquote><span id="more"></span><h3 id="居家办公">居家办公</h3><blockquote><p>本周是居家办公的一周，上班的体验感，确实不如在公司。<br>好的一方面是，可以多睡一会，一天少了三个小时的通勤时间，晚上有时间自己去跑跑步。</p><p>看了个连载中的剧《欢迎光临》，一边看一边骂，一边骂又一边看，一边看一边骂。<br>这部雕丝逆袭的剧，我是万万不会想到有什么可写的，然后正如“你写的文章至少一半的方法是在你写的时候想到的”，下面对《欢迎光临》这部剧的感受，就是在想本周做了什么的时候，一发不可收拾的强行感受。</p></blockquote><h3 id="欢迎光临">欢迎光临</h3><blockquote><p>目前，更新到19集，主要讲的是：<br>三个雕丝，职业是五星级酒店的门童，主角阿黄在一次偶然间看到美女百合后欲罢不能。<br>生活的希望由于百合二次出现，荷尔蒙爆棚，勇敢的懒蛤蟆势想吃到天鹅肉。通过曲线接触丈夫娘，每天和阿姨们跳广场舞，然后和百合有了接触机会，发生的一系列怪异、超出常规的惊悚故事。。。。</p><p>观看剧中，吐槽过的点非常的多，比如剧情太多太多的不合理、不符合常规人设、男主太沙雕、想到美女就燃起了生的希望、欲罢不能，上夜班困到被广场舞吵得睡不着，然后去租船睡觉、打不过广场阿姨就加入他们、陪着阿姨天天跳广场舞，被百合在商场里扒光依旧舔到飞起、三个男人的友情犹如闺蜜间滑滑的基情、客人给小费被亲了一口小费也不要了，东北口音明着黑、女主这么嘴贱、朋友还一大堆、如此优秀到没被社会教育。<br>整体上：男性要么有钱出轨、要么考研失败丧失斗志变得口吐悲观、要么贷款毁家人、要么有钱没素质，要么有钱包二奶、要么二逼死缠烂打，除了王牛郎没一个正常人.<br>女性同胞很犀利，或是温柔为家人、或是懂得做人的道理、或是果断毒舌不墨迹、或是事业很丰收、都很牛批，但只有烧烤妹一个欢乐妹、幸福人.<br>祝王牛郎和烧烤妹永结同心。<br>沙雕剧中的沙雕人，剧情将如何推进？，王牛郎和沙雕妹什么时候拨云见日？沙雕男碰上犀利女，犀利女如何爱上沙雕男，常规雕丝是要逆袭？还是反向成功倒插门？亦或者双方错过？多少年后，男主飞黄腾达，两人飞机上相遇，相视一笑，开始了美好的生活？</p><p>还有一些联想到的点：<br>比如地下室，想起曾和羊同学在双井地铁站的真正地下室：夜晚跳骚的亲肤，网吧游戏，漏天小推车的麻辣烫，哈啤酒、霸王餐、口角之诡辩、无忧无虑、不知工作何物，不想未来何方，无知无畏、天之烂漫。<br>比如酒瓶喝出烟头：不光自己喝过好几次，友人也被无意坑过好多回。<br>比如之前工作连续四十多天的夜班经历。<br>然后绞尽脑汁也想不出什么了。</p><p>看剧的一些猜想：<br>开始看到这浓浓的细腻基情，我万分笃定这一定是一个女导演或者女编剧，直到我去豆瓣刷吐槽：<br>看到了导演照片(男)和代表作：琅琊榜、我是鱼欢水、伪装者。<br>出品方还是大名鼎鼎的正午阳光。</p><p>对于我们这些在社会上已经开始唯工作马首是瞻，算不上有什么太大人生阅历的人说，对这部剧的谩骂是来自自己生活的真实感受，还是来自男女婚恋观的社会共识？沙雕剧一时激起了我的追剧热情。</p><p>只针对剧，深情感受和想哪写哪：<br>男二王牛郎剧中正常人。<br>男三考研，作为唯一的三雕学历最高(三本)，因放弃考研变得些许事故，在借机渲染现在的高学历分子，越来越浮躁。<br>男人没一个好东西。<br>女人终得不到自己的幸福。<br>百合在剧中人物设计犹如百合。<br>百合在剧中换一个女神演更舒眼。<br>我们都在努力活成剧中的孙经理。<br>这个剧为什么叫《欢迎光临》？</p></blockquote><h3 id="《约翰-克利斯朵夫》">《约翰*克利斯朵夫》</h3><blockquote><p>世界上只有一种英雄主义，那就是认清生活的真相之后，依然热爱生活。</p><p align=right>罗曼*罗兰</p><p>上周通勤路上,在微信读书上看了一周的《约翰*克里斯朵夫》.<br>赶了半分之八的进度，属实感觉看不进去了。</p></blockquote><blockquote><p>但是这部「人生必看」系列，怎么能不沾沾气呢。<br>这部豆瓣评分高达9.6，且获得诺贝尔文学奖的,出自罗曼罗兰的长篇巨著，一系列的头衔带给我的阅读动力，超越了单纯看书的闲情雅致。<br>于是，本周下单了纸质版书籍。<br>空闲的时候，培养下情操。</p></blockquote><h3 id="《这书能让你戒烟》">《这书能让你戒烟》</h3><blockquote><p>一本来自英国的叫做亚伦·卡尔的哥们，写的一部戒烟的鸡汤书。<br>从头至尾的看了遍，文章写的虽然很水,但起了点作用。</p><p>自熄灭最后一支烟之后，到现在,已经感受了三十个小时的无烟环境。<br>不知道哪来的自信，我非常的确定，此后不会再抽一颗烟了。</p></blockquote><h3 id="用费曼技巧学习费曼技巧"><a href="https://sspai.com/post/73353">用费曼技巧学习费曼技巧</a></h3><blockquote><p>来自少数派的一篇博文总结 👆<br>费曼技巧的四个步骤：</p><ol><li>确定要学习的研究目标开始学习。</li><li>教别人：即向别人复述这个概念。</li><li>纠错学习：遇到问题或者是解释不清楚，再返回去基础拆解学习，再次1-2-3步骤形成闭环。</li><li>不断简化：最后回顾所学，用最通俗的概念简化、解释。</li></ol></blockquote><h3 id="FlowUS"><a href="https://flowus.cn/">FlowUS</a></h3><blockquote><p>上上周觉得Notion应该是最好的笔记软件，无奈不太符合中文版用户。<br>上周卸载Notion，又觉得Bear这个软件小巧耐用，无奈移动端版本的同步需要付费。<br>这周又从阮一峰网络日志看到了新推荐的笔记软件：FlowUS,国外版的Notion，服务器在国内，移动端免费且同步速度很快。<br>至此，以后笔记记录围绕在自带备忘录、Github、FlowUS三个利器周围，笔记软件的使用体验，但愿可以到此结束了。</p></blockquote><h3 id="Focus-on-YourSelf">Focus on YourSelf</h3><blockquote><p>If you think too much about what they think, You’ll lose what you think.</p></blockquote><h3 id="本周小结">本周小结</h3><blockquote><ul><li>百词斩打卡</li><li>Running 23公里</li><li>看剧《欢迎光临》</li><li>《这书能让你戒烟》</li></ul></blockquote><p>That’s all.<br>See you next week.</p>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*57):关于炒薄</title>
      <link href="/202220(5.16-5.22)/"/>
      <url>/202220(5.16-5.22)/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本周是2022年的第二十周(5.16-5.22)–每周小结的第57期，这里记录过去一周，我的一些小总结。<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/blog/202220_02.4u89s9kbwi60.webp" alt="炒薄"></p></blockquote><span id="more"></span><h2 id="关于炒薄">关于炒薄</h2><blockquote><p>其实，朋友圈中关于超炒薄(题图)带来的反响，比较意外又惊喜，评论给我的感受在当天是很多的。<br>然后，没有进行及时的点归纳，那些瞬时的想法就随风飘远了。<br>从观点到认知、到社交、到道德、到思想、到心理、再到历史，面是挺多的，无奈驾驭不起来。</p></blockquote><h2 id="汤">汤</h2><blockquote><p>我是悲观主义者。别人为胜利而战，我不是。我总是战斗，偶尔会赢。</p><p align="right">自由软件之父 * 理查德·斯托曼</p></blockquote><h2 id="伏尼契手稿">伏尼契手稿</h2><blockquote><p>伏尼契手稿是一本内容不明的神秘书籍,书名的由来是因为1912年一个叫伏尼契的人买下了这本书，故为此名。<br>这本书总共240页，这本书的插画以及文字看上去很优美，其中图片包括植物、天体和美女。<br>统计学发现，文稿符合<b>齐夫定律</b>。<br>这本书至今仍未破解且存在一些争议。</p></blockquote><h2 id="读书">读书</h2><blockquote><p>《商君书》，是由商鞅(公元前390～公元前338年)和其它法家遗嘱的合编。<br>核心思想是驭民五术：愚民、弱民、疲民、辱民、贫民。<br>着重论述商鞅一派在当时秦国施行的变法理论和具体措施。<br>彼时彼刻，有点正如此时此刻。</p></blockquote><h2 id="王阳明的心学精髓"><a href="https://www.zhihu.com/question/28052564/answer/411181640?utm_medium=social&amp;utm_oi=29504504332288&amp;utm_source=wechat_session&amp;s_r=0">王阳明的心学精髓</a></h2><blockquote><p>知乎上的一篇回答。<br>「这里的知并不是对某种知识的认知，更不是所谓的用来指导人生的道理，而是行为本身」<br>「你不能改变自己的知，怎么改变自己的知，只能通过行」<br>「对大脑编程的秘诀，是通过行动改变思想，你想要变成什么人去行动就好了，不要相信脑子里的碎碎念，吃饭的时候想着吃饭，睡觉的时候想着睡觉，精一于事情本身。」</p></blockquote><h2 id="真的有外星人吗？有没有人遇到过什么灵异事件"><a href="https://www.v2ex.com/member/liugezhou">真的有外星人吗？有没有人遇到过什么灵异事件</a></h2><blockquote><p>最近的下饭视频几乎都是在看《老高与小沫》关于宇宙、物理、轮回、濒死体验、量子力学等未解之谜的真实事件。<br>于是，在V2EX上发了一个帖子，标题如上，内容如下。</p><p>「最近有看不明飞行物(UFO)相关的公开听证会吗？<br>大家有没有遇到过什么匪夷所思的灵异事件，小马扎已备好，故事快来到！」</p><p>有近四千五的点击，87个高质量评论,20个收藏。<br>是我为数不多的在网络上询问一个问题，引来五花八门的回答，这种互联网的交流方式，给我的感觉甚好。</p><p>然后就有了一个浅薄的感受，科学的上网能激发人的表达欲、分享欲、求知欲。<br>终有一个圈子，大家聚在一起。<br>看到了那道光，走向了那道光，感受光的温暖。</p></blockquote><h2 id="黑客说"><a href="https://hackertalk.net/">黑客说</a></h2><blockquote><p>新上线的一个技术交流社区，大道至简的设计风格，类比推特，好评。</p></blockquote><h2 id="Gitee">Gitee</h2><blockquote><p>5月18日，国内云端软件开发协作平台 Gitee 官方回应称，“Gitee 即日起执行开源仓库审核后上线的措施，所有新上线的开源仓库需要进行人工审核后可正式公开。“</p></blockquote><h2 id="Bear">Bear</h2><blockquote><p>上周研究了一番Notion笔记软件，功能是真强大，但是显得略微有点重，加上只是个人使用，突然就觉得不友好。<br>然后又意外发现Bear笔记软件，很是小巧轻便，只是iCloud同步需要付费，其它尚好。</p></blockquote><h2 id="Md2All"><a href="http://md.aclickall.com/">Md2All</a></h2><blockquote><p>Markdown一键排版富文本在线工具</p></blockquote><h2 id="flowcv"><a href="https://app.flowcv.io/">flowcv</a></h2><blockquote><p>Showcase your skills and talents,Make a great first impression.</p></blockquote><h2 id="package-json中的-和">package.json中的~和^</h2><blockquote><p>依赖包的版本号多用~和^.<br>以cors-js为例。<br>如果&quot;core-js&quot;:“~3.6.5&quot;则表示:npm install的时候，安装的版本在[3.5.6 - 3.7.0)之间找最新的版本，前包后不包。<br>如果&quot;core-js”:&quot;^3.6.5&quot;则表示：npm install的时候，版本在[3.6.5 - 4.0.0)之间找最新的版本。</p><p>还可以直接@安装版本，避免出现fakerjs删库问题。</p></blockquote><h2 id="unpkg">unpkg</h2><blockquote><ol><li>介绍：unpkg是前端常用的公共CDN，通过URL语法完成别的Web界面才能达到的效果。</li><li>查看：输入<code>unpkg.com/pkgName/</code>: 可以看到这个包的所有版本文件列表(注意后杠)</li><li>发布：仅需要npm包中包含UMD构建即可。</li></ol></blockquote><h2 id="jsDelivr">jsDelivr</h2><blockquote><p>和unpkg有相当影响力的jsDelivr，本周出现了一些原因，访问被强。<br>本周的项目开发中，由于Vant的样式显示使用的jsDelivr，导致页面加载速度很慢，且博客中图片使用的Github图床，使用的CDN加速也是jsDelivr，所以影响还是很大的。<br>bestxtools的作者，做了个修复，<a href="https://github.com/PipecraftNet/jsdelivr-auto-fallback">在这里</a></p></blockquote><h2 id="itdog"><a href="https://www.itdog.cn/">itdog</a></h2><blockquote><p>在线工具：网站测速、网站速度诊断、HTTP速度测试、WEB速度测试、CDN测速、API测速。<br>本周开始jsDelivr不能访问,测试如下：<br><img src="https://raw.githubusercontent.com/liugezhou/image/master/blog/202220_01.3uiby5tgj2g0.webp" alt="202220_01"></p></blockquote><h2 id="npm和yarn和pnpm">npm和yarn和pnpm</h2><blockquote><p>依赖安装：<code>npm install</code> 依赖项依次安装，<code>yarn</code> 并行安装包<br>安装一个包：<code>npm install package</code> and <code>yarn add package</code><br>安装一个开发依赖包： <code>npm install --save-dev pkgName</code> and <code>yarn add --dev pkgName</code><br>共同点,版本锁：<code>package-lock.json</code>和<code>yarn.lock</code><br>版本管理：<code>nvm</code>和<code>yarn set version latest</code></p><p>论坛中发布了个帖子，发现使用yarn和pnpm的也挺多，前端Vue使用npm居多，React标准使用yarn，至于pnpm还不是很了解。</p></blockquote><h2 id="本周小结">本周小结</h2><blockquote><ul><li>百词斩打卡 7 Day</li><li>跑步 12 公里</li><li>商君书</li><li>逛论坛</li><li>修身养性</li></ul></blockquote><p>That’s all.<br>See you next week.</p>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*56):每周小结的思考</title>
      <link href="/202219(5.9-5.15)/"/>
      <url>/202219(5.9-5.15)/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本周是2022年的第十九周(5.9-5.15)–每周小结的第56期，这里记录过去一周，我的一些小总结。<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/20221901.1484jshfsups.webp" alt="核酸美景"></p></blockquote><span id="more"></span><h2 id="每周小结的思考">每周小结的思考</h2><blockquote><p>想要坚持长期写博客，那么博客方面的计划、过程、流程、实施、内容、思考等整个闭环，就很有必要思路清晰。<br>目前的流程是内容发布到Git同步到个人网站、然后改波改波，copy到语雀平台和公众号。</p></blockquote><blockquote><p>之前也想过同步一些第三方平台，诸如掘金、CSDN、思否、简书等等可供选择。<br>可一闪而过的模糊念头是：如果每一篇博文写完之后，再去每个平台再发一遍，总是觉得不得劲。</p></blockquote><blockquote><p>然后到底怎么不对劲，是需要将一些优缺点总结一下：</p></blockquote><p>认为不好的：</p><blockquote><ul><li>每一篇博文都需要登陆每个平台进行copy paste</li><li>平台的选择恐惧症</li><li>会导致分心(需要同时跟进几个平台的修改、反馈、互动等)、</li><li>专注(同分心一样，是否在各个平台发作后，因尴尬或者不自信而导致不能更专注于写作本身)</li><li>内容：内容方面就是因为随性而记录，一些没有价值的消息肯定会引起熵变。</li><li>个人会不会赤裸裸的暴露在网络下？</li></ul></blockquote><p>想想好的：</p><blockquote><ul><li>博客的曝光率会高一些，这期间可能会认识一些有趣的人</li><li>一篇成型文章多平台的发布倒逼收到更多的反馈</li><li>考虑会更趋向多面等而更加注重对写作本身的敬畏</li><li>鉴于技术面涉及更多一些，会相对严谨对待自己的文字表述</li></ul></blockquote><p>最终得出结论</p><blockquote><ul><li>本身写作是基于markdown，各个平台都支持，整理起来很简单。</li><li>平台选择：Github、个人博客、公众号、语雀、掘金、CSDN、简书、知乎、B站</li><li>分心与专注的问题恰如好的方面，相辅相成</li><li>内容方面，随着一些写作和学习积累，一定会慢慢变好。</li><li>关于隐私问题，实属自恋和多虑</li></ul></blockquote><p>实施流程</p><blockquote><p>首先，在私密仓库中进行一篇文章的的草稿版本，这样做的好处是在写文的时候，会提供一个封闭的自我写作环境，不用考虑哪些话能说哪些话不能说，再后续的copy中进行选择剔除。<br>其次：个人博客。这一版就显得很是重要，将草稿版本复制过去，对一些措辞、段落顺序、敏感内容、个人遐想等做一个过滤，并且考虑到准备发布在多个平台，那首或尾需要统一格式。<br>最后，即第三方平台的内容同步。然后根据新兴平台的崛起，保持关注，顺势而为。<br>经上这么一总结，突然感觉似乎个大工程了：对文字的斟酌、文章的质量，篇幅的格式、最终的引流到博客本身，然后因此收获了一大堆的关注于批评，然后继续自我成长，从此走向人生巅峰。</p></blockquote><h2 id="相声界老罗">相声界老罗</h2><blockquote><p>罗永浩在江湖上的传说之前没有接触过。在之前，只知道是个英语老师、做手机的，后破产还债、做过脱口秀，搞抖音直播。</p></blockquote><blockquote><p>这次的全面了解，是在周六中午吃饭的时候，看到的一个视频：《互联网史上的第一约架：罗永浩对话王自如完整版》、再看到《我的奋斗非公益演讲》、然后又通读了一遍老罗的《我的奋斗》、再到讲述和方舟子的恩怨、与方舟当面对峙、再到《青铜时代^罗永浩》、《2010全国巡讲-海淀剧院》。<br>至此才了解到，为什么说老罗是相声界人才、脱口秀的鼻祖、一个有情怀的理想主义者。<br>一次意外的邂逅，整个周末俨然就成了相声专场。</p><p>演讲的搞笑、幽默能收获一些粉丝，但还并不具备个人魅力，再加上幽默的同时还带着道理、那种小愤青的流氓劲，个人魅力果然就出现了。<br>老罗的演讲通篇流畅，在我看的几个视频里，我很俗的看到了有两个点支撑：一是谈男女之间的比喻-sex等、二是会夹杂一些糙话，而谈sex的比喻对一些人来说恰到好处、说糙话的句点又很接地气。加上个人有思想、读书有沉淀、学习能力好(英语、设计、跨界)，几场演讲听完貌似听了一场相声，又莫名感觉收获 了点东西。</p></blockquote><h2 id="macOS-Monterey-12-3的Universal-Control">macOS Monterey 12.3的Universal Control</h2><blockquote><p>体验了一番Mac新出的Universal Control功能，甚是流畅。<br>这个功能是说：在两个Mac设备，或者iPad和Mac之间，可以共用一个鼠标、键盘，无缝对接。<br>首先 MacOS系统需要升级到12.3,如和iPadOS接力，那iPad需要升级到15.4；<br>接着，相邻的设备需要登陆同一个iCloud；<br>最后分别在设置-显示器-通用控制打开即可(如是iPadOS需要「添加显示器」)。</p></blockquote><h2 id="notion">notion</h2><blockquote><p>notion这个软件，是在少数派网站上看到的一名博主的使用心得。<br>这是一款集笔记、任务管理、Wiki、数据管理为一体的产品。<br>下载浅体验了一番后，其功能十分强大，很多的效率软件都可以看到它的影子。<br>还需要研究一番。</p></blockquote><h2 id="Github网站使用中几个小点">Github网站使用中几个小点</h2><blockquote><p>在打开Github网站后：</p><ul><li>快捷键[Command + k] :可以直接在页面进行项目、仓库、设置等所有的个人信息页跳转</li><li>快捷键[s]: Github任何页面直接输入S，快捷定位到搜索框中</li><li>gh-pages分支:如果一个public项目有此分支且项目setting-pages设置，则可以直接访问(hexo等博客部署)</li><li>Setting =》 Developer Settings =》Personal access token的设置在Google（101.0.4951.54）版本中，应该显示一次的token没有显示，换safari浏览器就可以了（还没搞清楚什么原因)</li><li>生成静态徽章网站：<a href="https://shields.io/">Shileds.io</a>,许多网站wiki介绍中，会有一些关于项目的介绍，例如Vue下的一些徽章即通过该网站生成。</li></ul></blockquote><h2 id="valine评论邮件推送">valine评论邮件推送</h2><blockquote><p>在搭建个人博客后，valine的评论邮件推送，因官方版本下线，在开始的几次跟着官方推荐的Github项目，都没有成功。<br>接着去试了试gitalk、友言、畅言，转了一大个圈又回到valine。<br>原来在leanCloud中有直接的git仓库发布项目，之前愣是没找到。<br>于是将这个弱智的经历，也放进了<a href="https://liugezhou.github.io/blog/027-%E7%BD%91%E7%AB%99%E5%8D%87%E7%BA%A7%E6%94%B9%E9%80%A0/">博客网站升级改造</a>中去了。</p></blockquote><h2 id="Geeker-Admin"><a href="https://github.com/HalseySpicy/Geeker-Admin">Geeker-Admin</a></h2><blockquote><p>Vue 3.2 + TypeScript + Pinia + Vite2 + Element-Plus 管理系统.<br>码住，学习。</p></blockquote><h2 id="BetterXTools"><a href="https://discuss-cn.bestxtools.com/">BetterXTools</a></h2><blockquote><p>好工具周刊，每周推荐一些免费在线工具、无需注册。</p></blockquote><h2 id="读书">读书</h2><blockquote><p>除了花了几个小时看完《我的奋斗-像坏人一样勤奋》这本书外，还看了一点点的《杀死一只知更鸟》，目前来看的感觉就跟初中看《教父》当时的感受是一样的，提不起一口看完的兴趣，因此还未体会到这本推荐高达90.6%的书的爆点在哪里。</p></blockquote><h2 id="本周小结">本周小结</h2><blockquote><ul><li>百词斩打卡</li><li>《我的奋斗》</li><li>罗永浩相声集</li><li>valine评论集成邮件通知</li><li>jest代码入门</li><li>Mac间键鼠使用</li></ul></blockquote><p>That’s all,<br>See you next Week!</p>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
            <tag> 电影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*55):博客定位</title>
      <link href="/202218(5.1-5.8)/"/>
      <url>/202218(5.1-5.8)/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本周是2022年的第十八周(5.1-5.8)–每周小结的第55期，这里记录过去一周，我的一些小总结。<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/20221802.5x3qnxm51gg0.webp" alt="bookmark"></p></blockquote><span id="more"></span><h2 id="博客定位">博客定位</h2><blockquote><p>五一假期最后一天把博客搞完的时候，充满了兴奋，且开启了自嗨模式。<br>进行了一些冒烟测试，对一些小bug进行了各种拳打脚踢的修复。<br>高潮过后，就是低潮。</p></blockquote><blockquote><p>整这么一个博客，定位是做什么呢？<br>如果是技术分享，那么显然掘金、CSDN、公众号等等第三种平台是最合适的。</p></blockquote><blockquote><p>如果只是为了自我感受一把，草草了事，好像是不值。</p></blockquote><blockquote><p>如果是记录个人成长，那么显然开放就意味着丝丝克制。</p></blockquote><blockquote><p>刷到一个开源项目：开往，搞个人博客的群体真是浩浩荡荡，群马奔腾，然后也加入了。</p></blockquote><blockquote><p>以个人浏览各种博客的经历和角度来说：除了几个头部大佬、或者开源达人的博客受到广泛的关注，大多数人的博客，其实是自己的一个小窝窝，非常的类似于我们之前玩的QQ空间，或者就是个人搭建的QQ空间。<br>这个空间记录我们的喜怒哀乐，记录我们的思考，在有关法部门上门之前，不用担心平台的封杀，不用在乎言语的克制，只要不是出头鸟，相对下就可以随便造。<br>那就造吧，在这里，blog这个朋友只要你不离、他自而不弃。</p></blockquote><h2 id="缓刑">缓刑</h2><blockquote><p>「缓刑（英语：Suspended sentence）是刑法上的一种刑罚制度。法院在刑事审判中，根据被判处刑罚的罪犯的犯罪情节和认罪表现，规定一定的考验期，暂缓刑罚的执行。如在考验期内，满足一定的条件，原判刑罚将不再执行的一种制度。因此，简言之，缓刑是有条件地不执行所判决的刑罚。<br>例子：如罪犯被判刑“判囚21日，缓刑2年”，代表该罪犯只要在2 年内没有再次犯罪便可免去入狱的刑责，否则即时判囚21日。」</p><p align="right">维基百科</p></blockquote><h2 id="教父1">教父1</h2><blockquote><p>知道缓刑这个概念，是从上映自1972年的一部电影《教父1》中了解到的。<br>遥想十几年前，打开这部电影好多次，就是看不下去。</p></blockquote><blockquote><p>这次吃着火锅，哈着啤酒，剧荒下，又刷到了。<br>电影的情节，尝试了一番实是不好总结。<br>看完之后，略读了下小说版。<br>小说版中有这么几句划线语：</p></blockquote><blockquote><ul><li>你活的像白痴，自然有白痴一样的下场</li><li>男人要是不愿意好好当父亲就不是真正的男人</li><li>友谊就是一切，比天赋重要，比政府重要，和家人差不多的重要</li><li>懂道理的人之间没有什么生意纠纷是无法解决的</li><li>他是个生意人，我会给他一个无法拒绝的条件</li><li>我没有这种力量，要是有，我肯定比上帝更加仁慈</li><li>律师拎着公文包，偷的钱比一百个人带着抢还要多</li><li>永远不要动怒，绝不要威胁，要讲道理</li><li>意大利有个玩笑话，说世界太残酷，所以一个人非得有两个父亲照着他，这就是教父的由来</li><li>朋友之间交互影响力罢了</li><li>一个人只有一种命运</li><li>我会和他讲道理</li><li>他意识到自由竞争浪费资源，而垄断最有效率</li><li>威胁是最愚蠢的自我暴露，不假思索就释放怒火是最危险的任性表现</li><li>除了让朋友低估你的优点，世上最天然的优势就是让敌人高估你的缺陷</li><li>他最终的目标是带着一定的权势进入这个社会，因为这个社会并不保护不具备权势的个体</li><li>复仇这盘菜，凉了才好吃</li><li>很多年轻人在拥抱真正的命运之前都走错过路，时间和运气会改正错误</li><li>他们的关系里有着动物般的单纯，彼此都很高兴<br>………………</li></ul></blockquote><h2 id="孟照国事件">孟照国事件</h2><blockquote><p>孟照国事件，又称凤凰山UFO事件，了解这个事件的始末：是在看一名Youtuber-&lt;老高與小茉&gt;的视频介绍当中。<br>回头还查了一下，没想到这个事如此诡异、影响还挺大，疑似与外星人发生的第七类接触事件。<br>第七类接触事件指的是人类与外星人交配，甚至有混血种族诞生，而最有名第七类接触事件就是孟照国事件。</p><p>这个事情发生在1994年6月期间。</p></blockquote><h2 id="我们这是怎么了">我们这是怎么了</h2><blockquote><p>捕捉到的一篇删文<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/20221801.5gm76rwsfho0.webp" alt="20221801"></p></blockquote><h2 id="小众音乐">小众音乐</h2><blockquote><p>上班途中网易云听到的一首：来自何教授的《江湖风云之民谣》<br>手贱去看了看评论，看到了视频的<a href="https://fn.music.163.com/g/mlog/mlog-mobile/landing/mlog?id=a13RpeJ6Ntjr2pY&amp;type=2&amp;userid=311680547&amp;songId=1857892629&amp;startTime=0">现场原唱版</a>，歌词换了那么几句，顿时沧桑、搞笑、辱骂的力量感就来了。<br>音乐可真是情绪渲染的最好方式，要什么体面：歌还可以这么唱。</p><p>后来发现之前觉得很好听的《这是谁的故事》也是这哥们唱的。</p></blockquote><h2 id="两个小工具">两个小工具</h2><blockquote><ul><li><a href="https://www.bookmark.style/">bookmark</a>:本文的正文图片通过这个网站生成的</li><li><a href="https://picx.xpoet.cn">图床神器</a>:新建一个Github项目，使用PAT登录，就有了自己的图床网站，cdn加速，体验效果不错。</li></ul></blockquote><h2 id="本周小结">本周小结</h2><blockquote><ul><li>本周三个工作日</li><li>做了四次核酸</li><li>分配了更多的时间完善博客</li><li>工作上主要在搞jest测试，目前还是一知半解</li><li>教父1小说</li><li>日常单词打卡七天</li></ul></blockquote><p>That’s all,<br>See you next Week!</p>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
            <tag> 电影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客网站升级改造</title>
      <link href="/027-%E7%BD%91%E7%AB%99%E5%8D%87%E7%BA%A7%E6%94%B9%E9%80%A0/"/>
      <url>/027-%E7%BD%91%E7%AB%99%E5%8D%87%E7%BA%A7%E6%94%B9%E9%80%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="背景">背景</h2><blockquote><p>之前搭建的个人博客网站于 2020 年 8 月停更，不觉间，时间已过去了两年时间。</p></blockquote><blockquote><p>这个五一，想着将之前在语雀的一些文章输出誊到博客。<br>于是跟着之前懵懂产出的三篇博客搭建记录为引，万万没想到，写的真是有点糙，之前的项目不能友好的启动了。</p></blockquote><blockquote><p>在经过一番错误查找后，由于clone的主题以及修改的主题文件代码未成功提交，项目再次启动缺失主题文件，不能复原。</p></blockquote><blockquote><p>然后就想着，索性重新建一下吧，为以后能记录生活、做个笔记提供一个温暖的床。<br>这篇博客用来记录重新搭建博客的每一个步骤，每一个旅程，每一个错误，走一步写一步，不让悲剧重现。</p></blockquote><h2 id="初次预览">初次预览</h2><blockquote><p>依然使用 HEXO 搭建。本次搭建是在重新阅读了一遍 HEXO 官方文档开始的。<br>本地需要 Node 环境以及 Git 环境即可。<br>然后，本地全局安装 hexo-cli,我的本地版本为：4.3.0<br>找到某一目录，依次执行以下操作，初次搭建成功。</p></blockquote><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mkdir</span> blog</span><br><span class="line"><span class="keyword">cd</span> blog</span><br><span class="line">npm install -<span class="keyword">g</span> hexo-<span class="keyword">cli</span></span><br><span class="line">hexo init liugezhou <span class="comment">// 目录介绍略</span></span><br><span class="line"><span class="keyword">cd</span> liugezhou</span><br><span class="line">npm install</span><br><span class="line">hexo new <span class="string">&quot;just test it &quot;</span> <span class="comment">//source下新建一个博文</span></span><br><span class="line">hexo new page -p <span class="keyword">about</span>/index <span class="string">&quot;About me&quot;</span> <span class="comment">//source下新建about目录,index.md文件，博文名称为 About me</span></span><br><span class="line">hexo <span class="keyword">g</span>   <span class="comment">// 生成静态文件</span></span><br><span class="line">hexo s   <span class="comment">// 本地启动，预览内容</span></span><br><span class="line">hexo <span class="keyword">d</span>   <span class="comment">// 网站部署，暂时掠过</span></span><br><span class="line">hexo clean  <span class="comment">//清除缓存文件db.json和public</span></span><br></pre></td></tr></table></figure><h2 id="自定义配置文件路径">自定义配置文件路径</h2><blockquote><p>目录中，最重要的一个配置文件是<code>_config.yml</code>,官方提供一个命令，可以不使用默认的文件配置<br>hexo server --config custom.yml<br>hexo generate --config custom.yml,custom2.yml<br>后期直接修改themes配置即可。</p></blockquote><h2 id="新建文章注意点">新建文章注意点</h2><blockquote><p>hexo new 的时候，默认使用的是 post 布局，这是在<code>_config.yml </code>中配置的，我们可以修改 <code>scaffolds</code> 下的 <code>post</code> 布局，也可以新建一个布局(<a href="http://blog.md">blog.md</a>,使用 hexo new blog “my custom blog”)，想要默认使用新布局的话，直接修改<code>_config.yml</code>中的<code>default_layout</code>设置 即可。<br>post 为新文章<br>page 为新的页面<br>draft 为草稿文件。可通过 hexo publish <code>&lt;fileName&gt;</code>命令移动到_post 文件下</p></blockquote><h2 id="站点部署-这里记录了在部署过程中的两个问题以及解决流程">站点部署(这里记录了在部署过程中的两个问题以及解决流程)</h2><blockquote><p>部署此站点，<a href="http://xn--github-vp7iqqn3ge8jn8c381c7b7dea433cjm2g.io">不占用之前已被使用的github.io</a>，在 Github 上新建一个项目名称为 blog,然后根据github中提示在我们刚刚新建的项目下依次执行：</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git <span class="built_in">add</span> .</span><br><span class="line">git commit -m <span class="string">&#x27;first commit&#x27;</span></span><br><span class="line">git branch -M main</span><br><span class="line">git remote <span class="built_in">add</span> origin <span class="string">&#x27;Your repository&#x27;</span></span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><blockquote><p>然后进入到<a href="https://github.com/marketplace/travis-ci">Travis CI</a>,为自己新建的项目 blog 添加配置，过程略,<a href="https://hexo.io/zh-cn/docs/github-pages">参考</a>。<br>(配置过程中遇到信用卡的问题，鼓捣了半天)<br>注册新建成功后：<br>回到 我们本地的blog 项目，根目录下新建 .travis.yml</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sudo:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">node_js</span></span><br><span class="line"><span class="attr">node_js:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">12</span> <span class="comment"># use nodejs v10 LTS</span></span><br><span class="line"><span class="attr">cache:</span> <span class="string">npm</span></span><br><span class="line"><span class="attr">branches:</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master</span> <span class="comment"># build master branch only</span></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo</span> <span class="string">generate</span> <span class="comment"># generate static files</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">provider:</span> <span class="string">pages</span></span><br><span class="line">  <span class="attr">skip-cleanup:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">github-token:</span> <span class="string">$GH_TOKEN</span></span><br><span class="line">  <span class="attr">keep-history:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">on:</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">local-dir:</span> <span class="string">public</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>在代码推送后，travis 控制台报错：The engine “node” is incompatible with this module. Expected version “&gt;=12.13.0”. Got “10.24.1”，由于使用最新的hexo版本，node版本要求为12以上，于是修改 上述文件的node_js 版本为 12</li></ul></blockquote><blockquote><p>然后，再次提交代码，并没有触发 travis 的 job，于是继续提交代码，travis 的任务还是没有变动。</p></blockquote><blockquote><p>接着，继续在 travis 里面点击同步账号，等待一段时间之后，依然不行。找了半天没有头绪。</p></blockquote><blockquote><p>再接着，终于在 travis 的 request 中看到了错误提示：提交的代码记录为 Branch “main” not included per configuration,于是猜想可能是上述 travis.yml 文件中填写的分支为默认的 master，而我新建的默认分支是 main，于是修改.travis.yml 中的 master 为 main，push 代码，</p></blockquote><blockquote><ul><li>此刻：可喜可贺，发生了改变，且换成了新的错误：<br>gh-token is invalid.</li></ul></blockquote><blockquote><p>于是，回到 Github-&gt;Setting-&gt;Developer settings-&gt;Personal access tokens，重新生成了一下 access tokens,notes 为 blog,并在 Travis 中重新配置 GH_TOKEN，只是将 GH_TOKEN 的值写成 blog 写了进去。</p></blockquote><blockquote><p>依然不行，猜想是由于在生成 Personal access token 的时候，并没有直接显示密码，所以导致在 travis 中的密码配置不正确。<br>于是，现在要解决的问题就是这个 Personal access token 没有显示的问题。</p></blockquote><blockquote><p>然后找了几个小时，文档也看了个遍，还在被窝里躺了二十分钟看官方说明，最终就是因为在生成 token 的时候，就是不显示那个生成的仅仅出现一次的 token，无奈采取另一种办法，下载一个客户端，看是否可以生成 token。</p></blockquote><blockquote><p>然后 Github 客户端下载，挂了梯子也很缓慢，经过一番时间下载之后，里面没有生成 PAT 的选项，于是卸载 Github 客户端。</p></blockquote><blockquote><p>于是又想到，是不是因为浏览器的插件原因，Github 在生成 token 的时候出于安全考虑，所以不显示这个 token？<br>然后，我就将浏览器的全部插件关闭，再次生成 token，依然不起作用。。。。。。<br>再然后，又重新注册了一个 github 账号，依照之前方式生成 token，依然不行。</p><p>最后的最后，他奶奶的，整到晚上一点半，换了个浏览器，再次登录、执行此流程。。。。。。可以了！！！！！！</p><p>接着回到 travis 中，重新配置 GH_TOKEN 的密码，点击 Restart build，然后在 <a href="https://liugezhou.github.io/blog%EF%BC%8C%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%E4%BA%86">https://liugezhou.github.io/blog，可以访问了</a>.<br>此刻项目还是乱码状态，但是 travis 的自动化配置总算是好了。</p><p>此时，来到 Github 下 blog 项目中，看到 Setting 设置中的 Pages 中 Source 已经自动切换成了分支 gh-pages<br>然后关于部署到页面上的乱码问题，看 HEXO 文档，是由于_config.yml 文件中，url 与 root 的编写不对。<br>之前配置为：</p></blockquote><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">url:</span> https:<span class="comment">//liugezhou.github.io/liugezhou</span></span><br><span class="line"><span class="symbol">root:</span> <span class="keyword">/liugezhou/</span></span><br></pre></td></tr></table></figure><blockquote><p>而由于我新建的项目是在Github上一个名为blog的项目，于是修改_config.yml</p></blockquote><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">url:</span> https:<span class="comment">//liugezhou.github.io/blog</span></span><br><span class="line"><span class="symbol">root:</span> <span class="keyword">/blog/</span></span><br></pre></td></tr></table></figure><blockquote><p>再次push代码，travis自动部署，等待几分钟后，访问<a href="https://liugezhou.github.io/blog%EF%BC%8C%E6%AD%A4%E5%88%BB%E7%9A%84%E7%BA%BF%E4%B8%8A%E6%B5%8B%E8%AF%95%E5%8D%9A%E5%AE%A2%E5%86%85%E5%AE%B9%E6%98%BE%E7%A4%BA%E4%B8%8E%E6%9C%AC%E5%9C%B0%E7%9B%B8%E5%90%8C%E3%80%82">https://liugezhou.github.io/blog，此刻的线上测试博客内容显示与本地相同。</a></p></blockquote><h2 id="其它部署-了解">其它部署(了解)</h2><blockquote><p>除了travis一键部署外，还有直接使用hexo deploy的方式，之前的博客使用的就是此方法，这里只对此方式的部署，再次做个记录。<br>首先，执行hexo deploy之前，再现有代码上需要做几个准备</p><ul><li>_config.yml 中需要配置deploy\type\repo\branch等参数</li><li>需要安装： npm i hexo-deploy-git --save</li></ul></blockquote><blockquote><p>当执行 hexo deploy的时候，过程就是将public下的目录推送至_config.yml下设置的远程仓库的branch分支，并覆盖其内容。<br>然后，一般远程仓库分为分支一和分支二，比如刚才我们建设的代码处于分之一，那么需要将_config.yml下的branch设置为分支二，然后推送分之一代码，会自动将生成的public文件推送到分支二中，且需要查看仓库Pages中设置Source的分支确保为分支二，这样分支一为hexo开发代码，分支二为生产的站点文件。<br>简单说就是通过hexo generate生成的public下的站点文件代码，可以复制到任何你想复制的地方，此为生成的静态站点。</p><p>对于我上文已经提到的Travis流程，不需要自己设置仓库的第二分支，Travis CI流程已经全部搞定，且默认生成的public下的文件推送至gh-pages分支了，并且项目设置的Pages中Source也自动切换至gh-pages</p><p>bingo，接下来一步就是更换主题、文章内容的迁移、博客填充了。但是在此之前，对HEXO文档做进一步的学习、整理。</p></blockquote><h2 id="模板">模板</h2><blockquote><p>在进行我们博客搭建前，我们再对HEXO文档的目标内容做一个记录<br>各页面对应的模板名称为：</p><ul><li>index     首页</li><li>post      文章内容</li><li>page      分页</li><li>archive   归档</li><li>category  分类归档</li><li>tags      标签归档</li></ul></blockquote><h2 id="主题">主题</h2><blockquote><p>只需要在theme下新建一个任意名称的文件夹，然后修改_config下的them设置为此定义的任意文件夹名称，那么主题就切换了。<br>主题可能含有的结构有：_config.yml、languages、layout、scripts、source<br>_config.yml :与HEXO配置文件不同，且修改时会自动更新，不需要重启hexo s<br>layout :  模版文件决定网站内容的呈现方式，可食用ejs渲染。<br>自己的主题内容，发布流程见网站。<br>撸到这里的时候，想着得自己开发个主题吧，但是审美、UI以及主题开发的流程还不是很熟悉，遥想之前的主题，是在clone其它主题之后的再修改，这样代码coding要少的多了，所以此次主题切换，还是根据在别人的主题基础下，添加自己想要的一些功能。</p></blockquote><h2 id="查找主题">查找主题</h2><blockquote><p>之前博客内容，之前clone的主题是：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Haojen/hexo-theme-Anisina.git themes/lmz</span><br></pre></td></tr></table></figure><blockquote><p>我很喜欢这个主题集成的一些第三方服务，比如搜索、统计、七牛云集成、评论等等，于是基于这个主题再来体验一番。<br>由于本地配置了ssh，于是本次采用ssh的克隆方式</p></blockquote><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> themes</span><br><span class="line">git clone git@github.com<span class="function">:Haojen</span>/hexo-theme-Anisina.git</span><br><span class="line"><span class="string">//</span> 修改themes下hexo-theme-Anisina为liugezhou</span><br><span class="line"><span class="string">//</span> 修改根_config下为liugezhou</span><br><span class="line"><span class="keyword">cd</span> <span class="string">..</span></span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><blockquote><p>此时，本地预览，成功。</p><p>删除主题内容：</p><ul><li>.github文件，</li><li>.git文件  (为了提交代码的时候，主题也提交上去✨✨✨✨✨)</li><li>删除Screenshots文件夹<br>修改_config.yml文件,内容略<a href="https://haojen.github.io/2017/05/09/Anisina-%E4%B8%AD%E6%96%87%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/">可参考</a></li></ul></blockquote><h2 id="改造">改造</h2><blockquote><p>就在开始着手准备此主题的改造，发现作者一个新的主题,且更新年份为两年内，于是删除刚刚clone的主题。</p></blockquote><blockquote><p>回到之前的查找主题步骤，重新执行之前流程：只是仓库改为：git@github.com:Haojen/hexo-theme-Claudia.git<br>按照<a href="https://github.com/Haojen/hexo-theme-Claudia/blob/master/README-CN.md">这里</a>进行一个简单的配置后，代码提交发布成功。</p></blockquote><blockquote><ul><li>每一篇博文中，加入<code>&lt;!--more --&gt;</code>可隐藏后面内容。</li></ul></blockquote><h2 id="评论系统：Valine">评论系统：Valine</h2><blockquote><p>接着是引入评论系统：</p><ul><li>首先登录：<a href="https://console.leancloud.cn">https://console.leancloud.cn</a></li><li>创建应用</li><li>进入应用后，在设置-》应用凭证，可查看到AppID和AppKey，然后将其值在六个周主题中找到comment_valine，enable设置为true且填入appId和appKey，此时重启应用便可以看到评论系统。</li><li>经测试，评论的内容可在数据存储-&gt;结构化数据-&gt;Comment中查看到。</li></ul><p>而此时由于项目会把主题文件上传到Github，造成key值泄漏，于是我们需要采取一个方法，使得项目为Public，但key值是公开的。<br>于是查找资料，在设置-安全中心中有一个Web安全域名，将我们的博客域名添加进去，这个时候即使别人拿到key值也是不可以使用的了.<br>也因此找到之前博客评论、文章统计缺失的原因：之前博客域名为<a href="https://liugezhou.online">https://liugezhou.online</a>,而由于博客不再使用此域名维护后，改为了liugezhou.github.io的域名，安全设置导致统计消失。</p></blockquote><h2 id="百度统计">百度统计</h2><blockquote><p>对百度统计进行一个小的配置：</p><ul><li>进入百度统计官网</li><li>管理-&gt; 新建站点-&gt;获取代码，代码中值抽出hm.src中问好后的值，配置在主题下_config.yml的ba_track_id即可。</li></ul></blockquote><h2 id="更换主题">更换主题</h2><blockquote><p>在体验了一天，上文主题后，想看一下自己文章的目录，还是不可以，于是找到了一个新的主题，非常的简洁且舒适。<br>之前的一系列配置，主要是在主题下的_config.yml中的valine评论、百度统计。<br>于是，更改主题就显得非常的简单，操作如下：</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> themes</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</span>  </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-renderer-pug --save  (已安装)</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-renderer-sass --save (已安装)</span></span><br></pre></td></tr></table></figure><blockquote><p>将hexo目录下_config.yml改为maupassant,删除maupassant下的.git，方便主题修改后的提交。<br>然后接下里就是主题下_config.yml以及代码修改，过程总体略(<a href="https://www.haomwei.com/technology/maupassant-hexo.html">参考这里</a>)<br>这个主题很cool，一些配置还要文档说明很全面。</p></blockquote><h2 id="博文内容迁移和改造过程">博文内容迁移和改造过程</h2><blockquote><p>主要是将语雀内容和之前博客内容迁移过来(语雀有导出Markdown的功能以及一些博客有存档)。<br>基于对过去博文的一个尊重，每篇文章再次改造，对于一些技术类文章加入了description摘要和toc的显示目录功能，使用PicX图床神器，舍弃七牛云，尝试以后博客加入图片。<br>对早期的一些文章抄袭严重，或许有些过时的文章删去,一些质量不好的文章若全部出于原创就暂时保留。</p></blockquote><h2 id="图床">图床</h2><blockquote><p>博客里的图片使用<a href="https://picx.xpoet.cn/">PicX图床神器</a>,配合Github新建项目使用。</p></blockquote><h2 id="总结">总结</h2><p><font color=blue>更新说明：博客搭建完毕的总结与TODOLIST。</font><br><font color=blue> 更新时间：2022-05-05</font></p><blockquote><p>博客搭建完毕了，根据主题配置，主要集成的功能有：</p><ul><li>菜单栏</li><li>关于-单页面</li><li>标签页</li><li>历史页</li><li>百度PV浏览量统计</li><li>valine评论系统 SDK出错，这里更换了源码的SDK。</li><li>图床功能</li><li>文章字数统计、阅读时间</li><li>文章目录</li><li>文末文章声明</li><li>本地搜索</li><li>一键切换皮肤等</li><li>文章阅读量统计</li></ul></blockquote><h2 id="邮件推送">邮件推送</h2><blockquote><p>虽然其实，根据产品小儿美的设计哲学，不应该让网站变得臃肿不堪，但是邮件的推送还是忍不住要加。下面是在集成邮件推送功能中做的一些过程记录：</p></blockquote><p>(2022-05-15)</p><blockquote><p>说来惭愧，这个valine评论系统由于自带的邮件通知取消了，需要集成第三方的邮件通知，而第三方的邮件通知说明文档写的倒是很详细，但是第三方插件依托的是leanCloud，而leanCloud的git代码直接部署的功能又下线了(后来知道并没有)，需要与lean-cli进行一个简单的学习，到这我感觉效率有点慢下来的。于是想着还是换个评论系统把。</p></blockquote><blockquote><p>然后瞄准了gitalk，而gitalk是在Github的Settings/Developer Setting/OAuth Apps中配置的，于是新建了一个gitalk应用，其中依然出现Client secrets生成不显示的问题(然后再次基于safari浏览器生成查看)。<br>接着配置Homepage URL和Authorization callback URL，由于是新建的项目blog，<a href="http://xn--XXX-628d3wh8ni6lit2ahz4a3vd.github.io">不是出于基础的XXX.github.io</a>,所以这里都填写的是<a href="https://liugezhou.github.io/blog">https://liugezhou.github.io/blog</a><br>gitalk项目的repo值的配置，在该项目下issues进行查看，最终知道这个repo值指的是仓库名称，实例gitalk的时候id改为md5格式(theme已经做了处理)，且主题自带的admin只需要输入一个值就可以(gitalk实例化的时候是需要传入数组的，而theme已经集成了)<br>然后配置也能成功，但是不知道是否是因为OAuth Apps的配置错误，修改了一些参数依旧还是出现Github-api接口返回的No properties–未找到相关的issues进行评论。</p></blockquote><blockquote><p>于是，我应该去继续深入一下OAuth Apps的相关内容。但是这个期间，墙太高，梯子断，网络一直圈圈叉叉，所以暂停一下<br>接着就想去看看友言评论系统吧，网速还是转圈圈。<br>接着看下畅言评论系统吧，网速终于不转圈了，然后配置后很快显示，但游客需要登录，且第三方评论为微博、qq、手机号，并且相关数据存储在畅言服务器，于是pass<br>于是这么转了一圈之后，还是使用valine最方便，虽然没有评论的邮件通知。</p><p>又过了两天之后，决心使用lean cloud去部署，然后意外发现，之前有个点理解错了，即并不需要进行lean-cli部署项目的学习，在一个没有发现的Git 部署按钮那里，跟着Valine-admin项目说明配置即可。<br>接着又添加了定时任务(测试了一下邮件的回复，通知还挺快，但是不清楚定时任务到底是否正确，按下不表)</p></blockquote><blockquote><p>接着由于我的网站域名是 <a href="https://liugezhou.github.io/blog">https://liugezhou.github.io/blog</a>, 这个/blog需要在clone下来的<strong>Valine-admin</strong>项目进行局部更改，在leancloud中的云引擎-设置添加新的变量：SITE_URL_REALLY,然后push代码，leanCloud重新部署。<br>然后分别测试:匿名、不匿名不带邮件、带邮件、第三方对第三方回复邮件通知。<br>接着将valine的配置 avatar改成了monsterid<br>再然后，看到了valine的配置有notify自带通知～～～～，由于整了半天，于是这个notify值就暂时不测试了，这里做个记录，如果leanCloud出现故障，或者有时间再来测试theme主题自带的。</p></blockquote><h2 id="deploy">deploy</h2><blockquote><p>2022年6月12日更新<br>由于Travis网站缓慢，再加上生成的token过期，于是直接使用hexo自带的deploy部署，需要的依赖为：hexo-deployer-git。<br>在Hexo的config.yml下配置deploy即可(type\repo\branches\message)</p></blockquote><h2 id="加入豆瓣读书、电影、游戏">加入豆瓣读书、电影、游戏</h2><blockquote><p>2022年6月27日更新，加入豆瓣读书。根据<a href="https://blog.csdn.net/m0_55001211/article/details/121628395">这篇文章</a>的第二种方法。<br>添加依赖为：<code>hexo-douban</code><br>分别配置根目录与主题目录_conifg.yml文件。<br>本地启动：<code>hexo clean &amp;&amp; hexo douban -bgm &amp;&amp; hexo g &amp;&amp; hexo s</code></p></blockquote><h2 id="域名更换">域名更换</h2><p>2022年7月8日更新。<br>在每次写文章的时候，贴的地址都是 <a href="https://blog.liugezhou.online/blog">https://blog.liugezhou.online/blog</a><br>这个后缀总是很难看，于是这次更新将老版本的域名改为带/blog的，新的不带/blog的后缀的。<br>操作步骤为：</p><ol><li>Github仓库/liugezhou.github.io 暂时更改为_blog</li><li>Github仓库/blog 更改名称为：<a href="http://liugezhou.github.io">liugezhou.github.io</a></li><li>重新拉取：<a href="http://liugezhou.github.io">liugezhou.github.io</a></li><li><a href="http://liugezhou.github.io">liugezhou.github.io</a> 仓库main分之下，将deploy配置等项目中带/blog的路径去除</li></ol><h2 id="修改">修改</h2><p>2023年1月10日，去掉了网站中的豆瓣相关、历史、标签五个页面。</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*54):个人博客升级</title>
      <link href="/202217(4.25-5.1)/"/>
      <url>/202217(4.25-5.1)/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本周是2022年的第十七周(4.25-5.1)–每周小结的第54期，这里记录过去一周，我的一些小总结。<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/202217.5olpq2kc0ts0.webp" alt="HEXO"></p></blockquote><span id="more"></span><h2 id="个人博客">个人博客</h2><blockquote><p>之前用hexo搭建了一个个人网站：<a href="https://liugezhou.github.io">https://liugezhou.github.io</a>. 文字输出13万+，累计94篇日志，网站集归档、分类、标签，还有舒适的全文搜索功能，网站至今累计运行近三年半。<br>之前弄此博客还加入了七牛云图片、Valine评论功能、文章阅读次数、评论个数、单篇文章字数统计、发表更新日期、liugezhou.online域名等等加入其中。可谓是煞费苦心。<br>而博客的输出最终停留在2020年8月9日。</p></blockquote><!--more --><blockquote><p>最近看了好多的个人博客，对他们养成这种习惯且十几年如一日的文字输出，叹之赞之，于是就想着重新捣鼓下自己的博客。<br>节后第一天clone下之前的代码后，数次启动，由于没有写说明文档以及之前提代码的不完全性，以及众多的第三方引用，最终自己写的项目，在自己的操作下还是没有成功运行。<br>为此堵了一天心情。<br>想想还是要趁这个假期重新捣鼓起来。<br>博客的记录承载着个人的生活与成长，不受平台规则的束缚，相对的个人自由意志的实现，想想之前一路懵懂，即使是为了写博客而写博客，收获也是颇多，如此优良的习惯岂可如此决断？<br>接下来的计划是：博客重新搭建，搭建的步骤说明、之前留存以及新写博客的加入、每一个第三方引用的详细存档、字数统计、图床使用、评论功能、全文搜索、分类标签等等再说整他个一遍。</p></blockquote><h2 id="极客时间">极客时间</h2><blockquote><p>最近极客时间搞了一个超级会员活动。<br>第一次可领取会员五天，然后每邀请一个人，并且邀请的人有过学习时长，那么会再次赠送五天会员时长。<br>成为会员后，大多数的一百两百的原价专栏都可以免费阅读，本来计划着五一假期，薅薅羊毛，抄几个专栏来学学。<br>看来还是抓紧把博客再重新搭建一番了，此事不解决，万事没心情啊。</p></blockquote><h2 id="爱德华-蒙克-Edvard-Munch">爱德华*蒙克(Edvard Munch)</h2><blockquote><p>挪威画家，最为著名的画作是《呐喊》，被认为是表现主义人类苦闷的代表性作品。<br>《呐喊》是鲁迅的一部短篇小说结集，作品真实地描绘了从辛亥革命到五四时期的社会生活，揭示了种种深层次的社会矛盾，对中国旧有制度及陈腐的传统观念进行了深刻的剖析和比较彻底的否定.<br>鲁迅认为“救国救民需先救思想”，于是弃医从文，希望用文学改造中国人的“国民劣根性”。</p></blockquote><h2 id="event">$event</h2><blockquote><p>Vue中有时会需要在内联处理器中访问原始DOM的事件，可以使用特殊变量$event把它传入到方法中去。</p></blockquote><h2 id="relingo">relingo</h2><blockquote><p>Google浏览器插件，类似沙拉查词，可对页面单词进行分级管理，所标单词存入所有生词。</p></blockquote><h2 id="apifox">apifox</h2><blockquote><p>官方介绍集文档、调试、Mock、测试一体化的接口协作文档。<br>Apifox = Postman + Swagger + Mock + JMeter。</p></blockquote><h2 id="camelCase-PascalCase-kebab-case">camelCase PascalCase kebab-case</h2><blockquote><p>本周又在看Vue基础文档的时候，对自定义事件命名要求使用kebab-case方式，产生了这么一个疑惑：<br>官方文档表达的意思是v-on监听器在DOM模版的时候会全自动转为小写，也就是说@myEvent会变成@myevent,<br>然后根据文中意思：我理解就是在子组件this.$emit(‘myEvent’)的时候会监听不到，而我们实际项目中几乎都使用的是camelCase监听事件的写法，且可以自由监听。<br>最后郁闷了两天，找到原因是官方文档所说的camelCase写法变成全小写是基于<strong>DOM模版</strong>中，而在实际开发中，.vue文件其实已经不算是DOM模版，而是<strong>字符串模版</strong>，字符串模版不会在页面初始化参与页面渲染，会被vue进行解析编译之后再被渲染，不受camelCase的影响。</p></blockquote><h2 id="jsconfig-json">jsconfig.json</h2><blockquote><p>之前项目中未使用过jsconfig.json,做个粗浅的总结：<br>jsconfig.json来源于tsconfig.json,相当于tsconfig.json的allowJS配置成了true。<br>它主要作用就是解决文件跳转的。<br>在vscode中打开一些Vue项目时，由于@符号的文件引入，导致无法跳转，为此上周我还专门安装了一个插件<code>pathAlias</code>, 与jsconfig.json官方支持相比后，我将此<code>pathAlias</code>插件卸载了，毕竟写在项目中的jsconfig.json运行在别人的电脑上凸出一种服务精神，而且·pathAlias·插件还很占内存。<br>直接进行项目的快速跳转操作，配置如下：</p></blockquote><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;compilerOptions&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;experimentalDecorators&quot;</span>: true, </span><br><span class="line">    <span class="string">&quot;baseUrl&quot;</span>: <span class="string">&quot;./&quot;</span>,</span><br><span class="line">    <span class="string">&quot;paths&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;@/*&quot;</span>: [<span class="string">&quot;src/*&quot;</span>],</span><br><span class="line">      <span class="string">&quot;components/*&quot;</span>: [<span class="string">&quot;src/components/*&quot;</span>],</span><br><span class="line">      <span class="string">&quot;assets/*&quot;</span>: [<span class="string">&quot;src/assets/*&quot;</span>],</span><br><span class="line">      <span class="string">&quot;views/*&quot;</span>: [<span class="string">&quot;src/views/*&quot;</span>],</span><br><span class="line">      <span class="string">&quot;common/*&quot;</span>: [<span class="string">&quot;src/common/*&quot;</span>],</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;exclude&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;node_modules&quot;</span>,</span><br><span class="line">    <span class="string">&quot;**/node_modules/*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;dist&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li><code>@</code>首先需要在webpack配置或者vue.config.json中配置别名，例如**@**</li><li>项目中引入文件的时候路径含有别名的配置，例如**@**</li><li>此时带**@**的js文件是可以跳转的，如果跳转vue文件的话需要带后缀.vue。</li></ul><p>然后就引出了下一个问题，书写引入文件的时候要不要写上带.vue的后缀<br>首先这个.vue后缀可以不写是因为在webpack的resolve中，通过extensions配置了。<br>由此可见，为了jsconfig配置可跳转，在写代码的时候，把后缀写上或者不省略路径对文件跳转来说是友好的。</p></blockquote><h2 id="小结">小结</h2><blockquote><p>诚然如上，总结如下：</p><ul><li>Seven Days 百词斩</li><li>《全球通史》书籍阅读十五章</li><li>《VSCode开发秘籍》博文一篇</li><li>本周小结一篇</li></ul></blockquote><blockquote><p>That’s all, See you next week!</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*53):横道世之介</title>
      <link href="/202216(4.18-4.24)/"/>
      <url>/202216(4.18-4.24)/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本周是2022年的第十六周(4.18-4.24)–每周小结的第53期，这里记录过去一周，我的一些小总结。<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/202216.14m0cp3orfuk.webp" alt="瞬息全宇宙"></p></blockquote><span id="more"></span><h2 id="横道世之介">横道世之介</h2><blockquote><p>是在看完大象放映室的解说后去看的原片，然后原片看了一点点就眯着了。<br>大象放映室的解说是真的好，就像电影解说的标题起的一样：【碾压90%的青春片，这样的电影，光是看见就赚到了《横道世之介》】。这样的解说看到，也就是赚到了。<br>解说真好啊，那些配乐、那些温暖人心的台词，以及解说下面的暖心评论。<br>在这个四月的歌声中，给了人点欢乐。</p></blockquote><h2 id="let-it-be">let it be</h2><blockquote><p>印象当中阮一峰老师属于那种客观、不评论、不发表自己见解的开源达人。<br>在他最新一期的周刊当中，关于如何度过疫情、裁员、还有战争当中。发表了一些自己的感悟。他说：<br>「 我认为，对待这些事情的正确态度，就是三个字：随它去，英语叫做 let it be。不要为这些事情费神上心，理由很简单，它们完全超出了你的能力，你根本影响不了，无论事情发展到哪一步，你只能接受。就算你感到痛苦和烦恼，难道会改变局面吗？」<br>「疫情何时结束，小区何时解封，这是你无能为力的。与其烦恼这种事情，不如不去管它。人生难得有这样一段突然停下来的时间，别浪费了，多读一点书，多学一点技术，比什么都有用，等到生活恢复正常，它们能帮到你。」<br>然后，每个人的想法都是发散的，评论里也有很多人因为最近的烂事表达了自己的反对意见，翻着评论的观点，去看了下阮一峰2010年1月14日的网络日志：【壮士断腕，义无再辱】<br><a href="http://www.ruanyifeng.com/blog/2010/01/google_to_quit_china.html">http://www.ruanyifeng.com/blog/2010/01/google_to_quit_china.html</a><br>「这个国家已经变成了现在的样子，个人前途已经谈不上了，**<em><strong><strong><strong><strong><strong><strong><strong>，</strong></strong></strong></strong></strong></strong></strong></em>，*******************」<br>let it be.</p></blockquote><h2 id="我的祖国">我的祖国</h2><blockquote><p>在微信搜一搜中搜四月赞歌的时候，搜到第一份工作的老上司在2013年的朋友圈，转载的韩寒文章【我的祖国】，文字抒发比【壮士断腕，义无再辱】更是深刻。<br>想必韩总也深谙 let it be之道.</p><p>事情并不是在现在才变成了这个样子，而是尚来如此，只是情绪共振到来。</p></blockquote><h2 id="rest-Client">rest Client</h2><blockquote><p>Vscode调试接口插件<br>安装成功之后，新建一个以http或者rest结尾的文件。<br>文件内容为：</p></blockquote><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 测试<span class="built_in">GET</span></span><br><span class="line"><span class="built_in">GET</span> https:<span class="comment">//www.google.com.hk</span></span><br></pre></td></tr></table></figure><p>OR</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 测试<span class="keyword">POST</span></span><br><span class="line"><span class="keyword">POST</span> https:<span class="comment">//xxxxxx HTTP/2</span></span><br><span class="line">content-<span class="keyword">type</span>: application/json</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;TomLiu&quot;</span>,</span><br><span class="line"><span class="string">&quot;password&quot;</span>:<span class="string">&quot;Wakaka&quot;</span>&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这个时候在GET或者POST上方会看到一个Send Request的提示，点击按钮，就会发送请求，返回报文。<br>使用技巧：</p><ul><li>写下GET或者POST后，使用TAB键快速生成格式</li><li>使用 ### 隔开多个请求</li><li>POST请求参数要隔一行，且必须带：<code>content-type: application/json</code></li><li>选中请求，option + command + c,快速选择语言，生成请求代码。</li></ul></blockquote><h2 id="pathAlias">pathAlias</h2><blockquote><p>开发Vue的时候，由于别名设置，总会有@符号，导致路径问题点不进去。<br>可以安装pathAlias插件，在setting.json中进行配置，文件可直接跳转。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;pathAlias.aliasMap&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;@&quot;</span>: <span class="string">&quot;<span class="variable">$&#123;cwd&#125;</span>/src&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="inputmode-“decimal”">inputmode=“decimal”</h2><blockquote><p>H5开发过程中，iOS端input框如果是要输入金额(数字加.的)，那么可以使用input的属性 inpudemode=“decimal”，直接调出本地数字带点键盘。</p></blockquote><h2 id="特殊符号">特殊符号</h2><blockquote><p>开发过程或者写文章过程中，总有一些特殊文字，需要打出来，比如⌘这个符号，这个时候使用快捷键 ctrl + command + 空格，调出特殊符号。</p></blockquote><blockquote><p>这几天的心情，不是很高涨啊.<br>真想看看看《瞬息全宇宙》，[Everything everywhere at once]换换心情,找了半天资源还没找到。</p></blockquote><blockquote><p>That’s all ,see you next week.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
            <tag> 电影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阶段七：浏览器安全</title>
      <link href="/A7%E9%98%B6%E6%AE%B5%E4%B8%83%EF%BC%9A%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%89%E5%85%A8/"/>
      <url>/A7%E9%98%B6%E6%AE%B5%E4%B8%83%EF%BC%9A%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%89%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="32-｜-同源策略：为什么XMLHttpRequest不能跨域请求资源–Web页面安全">32 ｜ 同源策略：为什么XMLHttpRequest不能跨域请求资源–Web页面安全</h2><blockquote><p>浏览器安全分为三大块：Web页面安全、浏览器网络安全、浏览器系统安全。</p></blockquote><h3 id="同源策略">同源策略</h3><blockquote><p>页面中最基础、最核心的安全策略：同源策略(same-origin policy)<br><strong>如果两个URL协议相同、域名相同、端口相同，就称为这两个URL同源</strong><br>同源策略就是说：相同源之间可以操作DOM、读取互相之间的Cookie、indexDB、locationStorage等页面数据以及网络层面共享。<br>也就解释了为什么同源策略限制了XMLHttpRequest讲站点数据发送给不同源站点。</p></blockquote><h3 id="安全和便利性权衡">安全和便利性权衡</h3><blockquote><p>安全性和便利性是互斥的，比如上面的同源策略限制了一个页面中资源都需要来自一个源，也就是该页面的所有HTML文件、CSS文件和JS文件等资源需要部署在一台服务器，但是如果资源过多，或者说我们基于业务会将不同资源部署在不同服务器上，因此为了解决同源策略导致的页面资源必须来自同一个源这个限制：<br>浏览器引入了CSP内容安全策略(Content Security policy),核心思想是让服务器决定浏览器能够加载哪些资源，让服务器决定浏览器是否能执行内敛JavaScrip代码，通过CSP可以大大减少XSS攻击。</p></blockquote><blockquote><p>同源策略还带来的一个问题是，如果我们用XMLHttpRequest去访问另一个源，会收到限制，这个时候又引入了<strong>CORS(跨域资源共享)策略。</strong><br>使用该机制可以进行跨域访问控制，从而使得数据传输得以安全进行。</p></blockquote><blockquote><p>同源策略还有一个问题是不能互相操作DOM，同样也提供了安全的方法解决：使用<strong>跨文档消息机制：window.postMessage</strong>的JS接口来和不同源DOM进行通信。</p></blockquote><h2 id="33-跨站脚本攻击（XSS）：为什么Cookie中有HttpOnly属性？–Web页面安全">33 | 跨站脚本攻击（XSS）：为什么Cookie中有HttpOnly属性？–Web页面安全</h2><blockquote><p>在同源策略的<strong>严格</strong>限制下，如果不能引入第三方资源，显然是不方便的，为此在安全和自由之间找的平衡，允许引入第三方资源，而随之而来的就是带来的页面安全问题，这些问题产生的过程，并进一步加深说明引入CSP机制的必要性。</p></blockquote><h3 id="XSS攻击">XSS攻击</h3><blockquote><p>XSS全称为：Cross Site Scripting.为了与CSS区分开，所以叫CSS。<br>XSS攻击指的是劫持者往HTML文件或者DOM中注入恶意脚本，而使得用户在浏览页面时利用恶意脚本实施攻击的一种手段。<br>当然注入JavaScript恶意脚本时，由于允许引入了第三方资源，所以浏览器无法区分这些脚本是恶意引入还是正常页面内容，注入的恶意脚本拥有所有脚本的权限，于是可能产生：窃听用户Cookie、通过addEventListener监听用户行为、修改DOM、在页面生成浮窗广告等。</p></blockquote><h3 id="恶意脚本注入方式">恶意脚本注入方式</h3><blockquote><p>那么这些恶意脚本是如何注入的呢？<br>通常情况下，恶意注入脚本的方式有三种：存储型XSS攻击、反射性XSS攻击和基于DOM的XSS攻击。</p></blockquote><h4 id="存储型XSS攻击">存储型XSS攻击</h4><blockquote><p>这个指的是劫持者正常访问网站，然后利用网站的漏洞将一段恶意代码提交到网站数据库中，然后别人访问这个上传恶意脚本的页面的时候，一些信息被上传到恶意代码上传的服务器中。</p></blockquote><h4 id="反射型XSS攻击">反射型XSS攻击</h4><blockquote><p>反射型XSS攻击值得是用户将一段含有恶意代码的请求提交给Web服务器，Web服务器接收到请求再次返回给浏览器端。<br>常见的比如通过QQ群或者邮件渠道引导用户点击恶意链接。<br>需要与存储型XSS攻击区别的是：反射型XSS攻击中，Web服务器并不会存储攻击的请求内容。</p></blockquote><h4 id="基于DOM的XSS攻击">基于DOM的XSS攻击</h4><blockquote><p>这个攻击比较有技术含量，需要劫持页面，将劫持的页面中修改HTML页面内容等。<br>这种劫持类型包括WIFI路由器劫持、本地恶意软件劫持等。共同点就是Web资源传输过程中或用户使用页面过程中劫持数据内容加以修改。</p></blockquote><h3 id="如何防止XSS攻击">如何防止XSS攻击</h3><blockquote><p>存储型和反射型XSS攻击是服务端的安全漏洞，而基于DOM的XSS攻击是在浏览器端完成从，属于前端漏洞。</p><ul><li>服务器要对输入脚本进行过滤和转码</li><li>充分利用CSP：限制加载其它源文件、禁止向第三方域提交数据、进行执行内敛脚本和未授权脚本等</li><li>使用HttpOnly属性：使用这个属性主要是为保护Cookie安全，通过服务器的HTTP响应头设置，设置之后无法通过JS来读取这段Cookie。</li></ul></blockquote><h2 id="34-CSRF攻击：陌生链接不要随便点">34 | CSRF攻击：陌生链接不要随便点</h2><blockquote><p>CSRF:Cross-site request forgery,跨站请求伪造。主要指侵入者引诱用户打开侵入者网站，利用用户的登录态来发起跨站请求。<br>简单来说就是，侵入者利用用户登录态通过第三方网站做一些坏事。</p></blockquote><h3 id="发起跨站请求伪造的方式有以下三种">发起跨站请求伪造的方式有以下三种</h3><h4 id="自动发起get请求">自动发起get请求</h4><blockquote><p>在第三方网站利用用户登录态调用原网址请求转账等接口来模拟原网站请求。<br>当用户点击链接时，自动发起get请求。</p></blockquote><h4 id="自动发起POST请求">自动发起POST请求</h4><blockquote><p>同Get请求一样，侵入者在自己的网站使用hidden的form，自动发起POST请求。</p></blockquote><h4 id="引诱用户点击链接">引诱用户点击链接</h4><blockquote><p>点击链接后，自动请求转账接口。</p></blockquote><h3 id="如何防止CSRF攻击">如何防止CSRF攻击</h3><blockquote><p>CSRF攻击首先服务器有漏洞、用户登录过已有站点、且在第三方站点发起请求。</p></blockquote><h4 id="充分利用好Cookie的SameSite属性">充分利用好Cookie的SameSite属性</h4><blockquote><p>Cookie是浏览器和服务器直接维护登录状态的一个关键数据。<br>因此我们可以从第三方站点发送请求时禁止Cookie的发送，而Cookie中的SameSite属性就是解决这个问题的，使用SameSite可以有效减低CSRF的攻击。<br>使用方式是：在响应头上，通过set-cookie字段设置Cookie，带上SameSite选项。<br>通常有三个值：Strict、Lax和None。</p><ul><li>Strict最为严格，严格禁止第三方网站发起请求的时候携带Cookie。</li><li>Lax:宽松一些，体现在Get请求会携带Cookie，POST和img、iframe等标签加载的URL，不会携带Cookie。</li><li>None:任何情况都会携带Cookie。</li></ul></blockquote><h4 id="验证请求的来源站点">验证请求的来源站点</h4><blockquote><p>那么，如何来验证其ing求是来自第三方站点呢？<br>需要使用到HTTP请求头中的Referer和Origin属性。</p><ul><li>Referer记录HTTP请求的来源地址。</li><li>在服务器验证Referer并不是很可靠，于是加入了Origin属性。Origin属性只包含了域名信息。<br>服务器端会验证Origin，如果不包含Origin，再根据实际情况判断是否使用Referer。</li></ul></blockquote><h4 id="CSRF-Token">CSRF Token</h4><blockquote><p>类似于JWT的token。</p></blockquote><h2 id="35-｜-安全沙箱：页面和系统之家的隔离墙">35 ｜ 安全沙箱：页面和系统之家的隔离墙</h2><blockquote><p>浏览器架构是如何影响操作系统安全的。</p></blockquote><h3 id="安全视角下的多进程架构">安全视角下的多进程架构</h3><blockquote><p>浏览器被划分为浏览器内核和渲染内核两个模块。<br>浏览器打开一个页面，先通过浏览器内核的网络进程下载资源，然后通过IPC将资源交给渲染进程，渲染进程进行一系列操作，最后生成图片之后，再将生成的图片返回给浏览器内核去展示这张图片。流程搞得如此复杂就是为了安全。</p></blockquote><h3 id="安全沙箱">安全沙箱</h3><blockquote><p>主要是为了避免在渲染进程中被劫持着搞破坏，而在渲染进程和操作系统之家构建了一道墙，这样劫持者就获取不到渲染进程之外的权限了，我们把这个将渲染进程和操作系统隔离的强称为安全沙箱。<br>然后这个安全沙箱的作用啰嗦一点就是，你渲染进程有需要使用系统权限的，通过IPC给浏览器内核发布需求，然后相应的浏览器内核将操作结果返回给渲染进程使用，这样不管如何操作系统的权限就保护住了。</p></blockquote><h3 id="安全沙箱如何影响各个模块">安全沙箱如何影响各个模块</h3><blockquote><p>首先，安全沙箱的最新保护单位是进程，也就是说如果安全沙箱应用在某个进程上，那么这个进程是没有系统权限的，比如读写本地文件、发起网络请求、调用GPU接口等，因此就可以分析渲染进程和浏览器内核的各自职责，不完全统计为：</p><ul><li>渲染进程：HTML解析、CSS解析、JS执行、图片解码、布局、绘制、XML解析等</li><li>浏览器内核：Cookie存储、Cache存储、网络请求、文件读取、下载管理、SSl/TSL、浏览器窗口管理、GPU调用接口等。</li></ul></blockquote><blockquote><p>回到小标题，影响各个模块主要是通过以下几个方面：</p><ol><li>持久存储：以Cookie举例，渲染进程通过JS读取Cooki其实说，渲染进程先通过IPC机制向浏览器内核发送请求，然后浏览器内核处理完Cooki后再返回给渲染进程，网络文件缓存的读取也是这样操作。</li><li>网络访问：网络访问是，渲染进程通过IPC向浏览器内核发送请求，浏览器内核看到这是一个网络请求，就会先检查是否有权限请求该URL符合要求(是否跨域等、是否在HTTS中保护了HTTP请求)</li><li>用户交互：安全沙箱影响了非常重要的用户交互，一句话总结就是用户的鼠标和键盘操作时间都是通过浏览器内核实现的，同样大约是之前的流程。</li></ol></blockquote><h3 id="站点隔离">站点隔离</h3><blockquote><p>简单说就是，之前的浏览器多进程架构的渲染进行是根据标签页划分的，这样存在的问题是如果一个页面通过iframe包含另一个页面，那么就会存在于一个渲染进程中，这样的漏洞会给劫持者有机可乘，于是乎，Chrome将标签级的渲染进程重构为了iframe级的渲染进程。这就是站点隔离。</p></blockquote><h2 id="36-HTTPS：让数据传输更安全">36 | HTTPS：让数据传输更安全</h2><blockquote><p>HTTP保持着明文规定传输数据的特征，这个环节会存在传送的数据被窃取或者篡改。</p></blockquote><h3 id="HTTP协议栈中引入安全层">HTTP协议栈中引入安全层</h3><blockquote><p>从HTTP协议来看，可以在HTTP与TCP层之间加入一个安全层，所有经过安全层的数据都会被加密或解密。<br>因此说HTTPS并非一个新的协议，只是加入了一个安全层，安全层的主要职责：对发起HTTP请求的数据进行加密操作和对接收到的HTTP内容进行解密操作。<br>接着，我们从这个安全层开始，一步一步实现由简单到复杂的HTTPS协议。</p></blockquote><h4 id="1-使用对称加密">1. 使用对称加密</h4><blockquote><p>对称加密：加密和解密都使用的是相同的密钥.<br>存在的问题，加密套件是明文的(因为需要在传输的时候携带)，所以这种方式也是可以被拿到的。</p></blockquote><h4 id="2-使用非对称加密">2. 使用非对称加密</h4><blockquote><p>和对称加密只有一个密钥不同，非对称加密算法有 A、B 两把密钥，如果你用 A 密钥来加密，那么只能使用 B 密钥来解密；反过来，如果你要 B 密钥来加密，那么只能用 A 密钥来解密。<br>公开的为公钥，不公开自己用的叫私钥。<br>同样存在的问题是：非对称加密效率低且无法保证服务器发送给浏览器的数据是安全的。</p></blockquote><h4 id="3-对称加密和非对称加密混合使用">3. 对称加密和非对称加密混合使用</h4><blockquote><p>在传输数据阶段依然使用对称加密，但是对称加密的密钥我们采用非对称加密来传输.<br>这样存在的一个问题是黑哥如果通过DNS劫持，将官网IP地址替换成黑哥网址，那就存在很大的风险了。<br>于是需要向浏览器证明&quot;我就是我&quot;，这个就是CA机构颁发的数字证书。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 浏览器工作原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浏览器工作原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阶段六：浏览器中的网络</title>
      <link href="/A6%E9%98%B6%E6%AE%B5%E5%85%AD%EF%BC%9A%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%9A%84%E7%BD%91%E7%BB%9C/"/>
      <url>/A6%E9%98%B6%E6%AE%B5%E5%85%AD%EF%BC%9A%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%9A%84%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="29-HTTP-1：HTTP-性能优化">29 | HTTP/1：HTTP 性能优化</h2><h3 id="超文本传输协议-HTTP-0-9">超文本传输协议 HTTP/0.9</h3><blockquote><p>HTTP/0.9 是在 1991 年提出。<br>主要用于学术交流-在网络之间传递 HTML 超文本内容，所以被称为<strong>超文本传输协议(HyperText Transfer Protocol)</strong>。<br>过程是：客户端根据 IP 地址、端口号和服务器建立 TCP 连接，建立连接后，发送一个 GET 请求行消息来获取 html，服务器接收到这个 Get 请求，将数据以 <strong>ASCII 字符流</strong>返回给客户端，html 传输完成，断开连接。<br>特点是：只有一个请求行，没有 HTTP 请求头和请求体；服务器也没有返回头信息，只有返回的数据；返回的文件内容是以 ASCII 字符流来传输的。</p><p>关键词：1991 年、学术交流、Get、超文本内容、ASCII</p></blockquote><h3 id="被浏览器推动的-HTTP-1-0">被浏览器推动的 HTTP/1.0</h3><blockquote><p>新兴网络的发展，浏览器需要展示的内容不单单是 HTML 文件，还有 JS、CSS、图片、音频、视频等不同类型的文件，也就是说 HTTP1.0 的核心诉求就是要<strong>支持多种类型的文件下载</strong>，且文件格式不再局限于 ASCII 编码了。<br>为了满足多种类型文件的传输，HTTP/1.0 引入了<strong>请求头和响应头</strong>。<br>请求头的内容有：服务器返回的文件类型、文件压缩方式、提供什么语言文件、文件的具体编码：</p></blockquote><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">accept</span>: text/html</span><br><span class="line"><span class="keyword">accept</span>-encoding: gzip, deflate, br</span><br><span class="line"><span class="keyword">accept</span>-Charset: ISO-<span class="number">8859</span>-<span class="number">1</span>,utf-<span class="number">8</span></span><br><span class="line"><span class="keyword">accept</span>-language: zh-CN,zh</span><br></pre></td></tr></table></figure><blockquote><p>除了对多文件的增强外，还根据实际需求引入了几个新增的典型特性：</p><ul><li>引入了**状态码 **</li><li>为了减轻服务器压力，HTTP/1.0 提供了 Cache 机制，用来缓存下载过的数据</li><li>在请求头中加入了<strong>用户代理</strong>的字段(为了统计客户端的信息–比如 Windows 和 MacOS 用户数量为多少)</li></ul><p>HTTP/1.0 关键词:多种类型文件、请求头和响应头、状态码、Cache 机制、用户代理</p></blockquote><h3 id="缝缝补补的-HTTP-1-1">缝缝补补的 HTTP/1.1</h3><h4 id="改进持久性连接">改进持久性连接</h4><blockquote><p>随着发展，一个页面可能包含几百个外部资源文件，为了解决每次下载都需要建立 TCP 连接，HTTP/1.1 中增加了持久性连接的方法，特点是可以<strong>在一个 TCP 连接上传输多个 HTTP 请求</strong>，只要浏览器或者服务器没有明确断开连接，那么持久性连接就会使得该 TCP 连接一直保持。<br>然后，这么做就减少了服务器的负担，提升了 HTTP 的请求时长，他的持久性连接是默认开启的，如果想关闭通过 Connection:close。<br>目前，浏览器对于同一个域名，默认允许建立 6 个 TCP 持久连接。<br>如果想增加 TCP 的连接，可以使用一种叫做<strong>域名分片</strong>的技术：把该站点下面的资源放在多个域名下。</p></blockquote><h4 id="不成熟的-HTTP-管线化">不成熟的 HTTP 管线化</h4><blockquote><p>如果 TCP 通道中的某个请求因为某些原因没有及时返回，那就会阻塞后面的所有请求，这就是著名的<strong>队头阻塞</strong>问题。<br>HTTP/1.1 使用了管线化技术，但是不成熟。<br>HTTP/1.1 的管线化技术是将多个 HTTP 请求整批发送给服务器的技术。虽然整批发送了请求，但是服务器依然需要根据请求顺序来回复浏览器的请求。</p></blockquote><h4 id="提供虚拟主机的支持">提供虚拟主机的支持</h4><blockquote><p>随着虚拟主机发展，一台主机可以绑定多个虚拟主机，每个虚拟主机都可以有自己的单独域名。<br>于是，HTTP/1.1 的请求头中添加了 Host 字段，用来表示当前的域名地址。</p></blockquote><h4 id="对动态生成的内容提供了完美支持">对动态生成的内容提供了完美支持</h4><blockquote><p>在 HTTP/1.0 那会，浏览器根据响应头中设置的服务器告诉的数据大小来进行数据的接收，但随着服务器端发展，服务器返回的内容为动态生成，也就在传输数据的时候不知道最终的数据大小是多少，这个时候浏览器也就不知道到底接收多少数据。<br>于是，HTTP/1.1 引入了<strong>Chunk transfer</strong>机制，服务器将数据分割成任意大小的数据块，每个数据块发送时会附上上个数据的长度，最后一个使用零长度来作为发送数据完成的标志，于是也就提供了对动态内容的支持。</p></blockquote><h4 id="客户端-Cookire、安全机制">客户端 Cookire、安全机制</h4><blockquote><p>添加 Cookie。</p></blockquote><blockquote><p>HTTP/1.1 关键词：<strong>改进持久性连接</strong>、添加了 Host 字段、Chunk transfer 机制、Cookie、解决队头阻塞问题使用用不成熟的管线化技术。</p></blockquote><h2 id="30-｜-HTTP-2：如何提升网络速度？">30 ｜ HTTP/2：如何提升网络速度？</h2><h3 id="HTTP-1-1-的主要问题">HTTP/1.1 的主要问题</h3><blockquote><p>HTTP/1.1 的核心问题是：<strong>对宽带的利用率不理想</strong>。<br>宽带是指每秒最大能发送或者接收的字节数，我们把每秒能发送的最大字节数称为<strong>上行宽带</strong>，每秒能接受的最大字节数称为<strong>下行宽带</strong>。出现宽带利用率的问题，主要有三个原因导致：</p></blockquote><blockquote><ul><li>TCP 的慢启动：慢启动是 指刚开始的时候 TCP 协议它会采用一种非常慢的速度去发送数据，然后慢慢加快发生数据的速度，这是 TCP 这个协议为减少网络阻塞的一种策略，我们无法改变。</li><li>开启了多条 TCP 连接，那么这些连接会竞争固定的宽带,会影响关键资源的下载速度。</li><li>HTTP/1.1 的队头阻塞问题:持久化连接可以共用一个通道，且同一时刻只能处理一个请求，请求没结束前，其它请求只能处于阻塞状态。</li></ul></blockquote><h3 id="HTTP-2-的多路复用">HTTP/2 的多路复用</h3><blockquote><p>针对 HTTP/1.1 的问题，队头阻塞是由于 TCP 本身机制导致的，所以 HTTP/2.0 就针对了如何规避 TCP 的慢启动和 TCP 连接之间的宽带竞争下手。<br>HTTP/2 的解决思路是一个域名只使用一个<strong>TCP 长连接</strong>来传输数据，这样整个页面的资源下载只需要一次慢启动，且避免了多个 TCP 连接竞争宽带的问题。<br>当然如果一个域名使用一个TCP长连接，那么针对队头阻塞问题，请求完一个请求再去发送另一个请求无疑是非常慢的，所以 HTTP/2 需要实现<strong>资源的并行请求</strong>：也就是任何时候都可以将请求发送给服务器。</p><p>一句话总结 HTTP/2 为：一个域名只使用一个 TCP 长连接和解决队头阻塞问题。 也就是最具颠覆性的<strong>多路复用机制</strong>。<br>多路复用机制的过程：是说每一个请求都一有一个对应的ID，服务端拿到这些请求的ID和内容后，自行决定哪些是关键资源，然后立即将关键资源返回。好处就是优先处理关键资源请求。</p></blockquote><h4 id="多路复用的实现">多路复用的实现</h4><blockquote><p>HTTP/2添加了一个二进制分帧层。<br>然后客户端发送过来的请求，经过这个层，进行处理给他们编号(帧)，然后发送给服务器。<br>服务器接收到请求，将相同编号的进行合并成一条完整信息进行一次处理，然后再返回给这个二进制分帧层。<br>二进制分帧层再将响应数据拆开，然后返回给客户端。</p></blockquote><h4 id="HTTP-2其他特性-基于二进制分帧层">HTTP/2其他特性-基于二进制分帧层</h4><blockquote><ul><li>可以设置请求的优先级</li><li>服务器推送：HTTP2可以直接将数据提前推送至客户端</li><li>头部压缩：对请求头和响应头做了压缩。</li></ul></blockquote><h4 id="其它">其它</h4><blockquote><p>HTTP/2没必要使用雪碧图了。</p></blockquote><h2 id="31｜HTTP-3：甩掉TCP、TLS-的包袱，构建高效网络">31｜HTTP/3：甩掉TCP、TLS 的包袱，构建高效网络</h2><blockquote><p>本文的学习目录为：先分析HTTP2的主要缺陷三条，然后解决方法一条的展开：</p></blockquote><h3 id="TCP的队头阻塞">TCP的队头阻塞</h3><blockquote><p>TCP的队头阻塞是由于TCP是为了单连接而设计的，这样的设计导致的是：在传输数据过程中如果发生丢包，那么TCP连接就会处于暂停状态，等待重新传过来的包。<br>在TCP的传输过程中，由于单个数据包的丢失而造成的阻塞称为TCP上的队头阻塞。<br>相对于HTTP/1.1发生丢包还比较看的过去，因为HTTP/1.1为每个域名开启了6个TCP连接，其中一个发生丢包不会影响其它五个，而对HTTP2来说，由于只有一个TCP连接通道，若任何一次请求发生丢包，则会阻塞TCP连接中的所有请求。<br>然后通过HTTP2与HTTP1.1比较，当这个丢包率超过了2%的时候，HTTP1.1的传输效率反而比HTTP2要好。</p></blockquote><h3 id="TCP建立连接的延时">TCP建立连接的延时</h3><blockquote><p>除了TCP队头阻塞，TCP握手也是影响传输效率的一个重要因素。<br>网络延迟又称为RTT(Round Trip Time),指的是浏览器发起一个数据包到服务器，服务器再返回数据包到浏览器的整个往返时间。<br>建立TCP连接的时候，三次握手使得需要消耗完1.5个RTT才能进行数据传输，如果有TLS连接，还需要1～2个RTT。也就是说，传输数据之前就需要花掉3～4个RTT，而一个RTT的时间可能是10毫秒以内，也就是总共需要消耗30～40毫秒，如果与服务器相隔较远，那么可能需要300-400毫秒，这个时候看到页面的效率就变慢了。</p></blockquote><h3 id="TCP协议僵化">TCP协议僵化</h3><blockquote><p>目前掌握来看，HTTP2 的主要问题有TCP的队头阻塞和建立连接延迟的缺点，然后想要改进TCP协议才进行升级，比较困难，原因主要是因为<strong>中间设备的僵化</strong>。<br>为了保障互联网的正常工作，我们需要在各处搭建各种设备，这个设备就是指中间设备，包括路由器、防火墙、交互机等，这些中间设计使用了大量TCP的特性且更新较少，因此如果客户端升级TCP协议，这些中间设备由于升级的困难，因此行不通。<br>除了中间设备外，操作系统也是TCP协议僵化的一个主要原因。因为TCP协议都是通过操作系统内核实现的，应用程序只能使用而不能修改。</p></blockquote><h3 id="QUIC协议">QUIC协议</h3><blockquote><p>解决思路是绕过TCP协议，发明一个TCP和UDP之外的新的传输协议，HTTP/3就选择了一个折衷的方法–基于UDP协议实现类似于TCP的<strong>多路数据流、传输可靠性</strong>等功能，这套功能就称为QUIC协议。<br>QUIC协议集合了以下几个功能点：</p><ul><li>实现了类似TCP的流量控制、传输可靠性的功能。</li><li>集成TLS加密功能：最重要的是减少了握手花费的RTT个数。</li><li>实现了HTTP/2的多路复用功能。</li><li>实现了快速握手功能。</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 浏览器工作原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浏览器工作原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*52):有话好好说</title>
      <link href="/202215(4.11-4.17)/"/>
      <url>/202215(4.11-4.17)/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本周是2022年的第十五周(4.11-4.17)–每周小结的第52期，这里记录过去一周，我的一些小总结。<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/202215.3eeo9wgo4w20.webp" alt="有话好好说"></p></blockquote><span id="more"></span><h2 id="有话好好说">有话好好说</h2><blockquote><p>周末在家看了个电影《有话好好说》，电影上映于1997，艺谋导演、姜文、李保田主演。<br>电影的故事情节是：青年赵小帅追寻心爱的女孩安红，后被正与安红谈恋爱的大老板德龙揍了一顿，被揍过程中小帅随手抡起过路的文化人李宝田手中的电脑，摔在了电线杆上个稀巴烂。<br>然后，小帅怎么也气不过，一心要要报仇。<br>宝田一心为了求赔偿，逻辑游说赵小帅与德龙和解。<br>德龙戏份较少，为了求个安慰，同意和解。<br>随后，明事理的宝田约二人在饭馆见面，最后小帅没有动起手，把宝田气的那是一个演技爆发。<br>电影表达很多，我单看到的一点总结为：不是当事人，不解当时事，电影中情绪的反转很是幽默。<br>不赖，推荐。</p></blockquote><!--more --><h2 id="RSS和邮箱订阅">RSS和邮箱订阅</h2><blockquote><p>本周花费时间比较长的是获取信息方面的：RSS和邮箱订阅。<br>在读到一篇博主的信息获取方式后，RSS订阅与邮箱订阅方式深深吸引了我，相比现在各种平台的算法推荐，使用RSS和邮箱订阅是一个很好的主动获取信息的方式。<br>接触的内容主要的参阅文章是：<a href="https://wiki.geekplux.com/#/page/newsletters">https://wiki.geekplux.com/#/page/newsletters</a><br>在这里面读到了许许多多的newsletter写作者。瞬时产生了一种信息焦虑感，赶紧缓解缓解。</p></blockquote><h2 id="如何把产品做简单">如何把产品做简单</h2><blockquote><p>张小龙演讲全文。<br>文章比较长，里面讲到了摇一摇、漂流瓶以及人性、苹果、推te等等的干货。<br>对于不做做产品的人来说，也很是有收获。<br>文章链接：<a href="https://s5s5.me/3919">https://s5s5.me/3919</a></p></blockquote><h2 id="摘抄">摘抄</h2><blockquote><ul><li>你写来的第一个词往往是错的，你必须一遍又一遍地修改，才能纠正它们。接着你的想法不仅不精确，而且不完整，你写的文章里将有一半的想法是你在写的时候想到的。</li><li>知识疆域的大小只是副产品，真正重要的是追随好奇心的过程</li><li>要是你做不好一件事情，要么是你不知道方法，要么是你练习得还不够。</li><li>要是我还担心自己读书不够快，我就和自己说：有一个能保证我读书读得比世界上任何人都快的方法，就是读我自己写的书。</li></ul></blockquote><h2 id="Command">Command + .</h2><blockquote><p>vscode中有个插件–Code Spell Checker<br>作用是在写代码的时候，如果英文单词拼写有误，会有轻下划线提示。<br>刚知道的一个快捷键是：可通过**Command + .**的形式快速列出备选单词。</p></blockquote><h2 id="Vscode调试">Vscode调试</h2><blockquote><p>本周在开发过程中，看到前人的代码中充斥着大量大量大量的console.log,控制台一堆的无用输出，有重度代码洁癖的我，不忍直视，直接修改了几十个文件将其去除，然想到其实我在开发过程中，调试代码也是通过cosnole这种方式，只是之后会将其去除，于是vscode中不使用console直接debug， 非常的有必要。<br>下周要将对VsCode的使用、调试等进行一个系统的总结。</p></blockquote><h2 id="本周小结">本周小结</h2><blockquote><ul><li>浏览器中的网络三讲–博文一篇</li><li>Mike Teacher Chapter 6-30 basic  sentences --博文一篇</li><li>整理电脑文件</li><li>订阅RSS</li><li>邮件订阅</li></ul></blockquote><p>See you next week!</p>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
            <tag> 电影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*51):论中国</title>
      <link href="/202214(4.6-4.10)/"/>
      <url>/202214(4.6-4.10)/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本周是2022年的第十四周(4.6-4.10)–每周小结的第51期，这里记录过去一周，我的一些小总结。<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/202214.3p9dnst8q240.webp" alt="我的爱"></p></blockquote><span id="more"></span><h3 id="论中国">论中国</h3><blockquote><p>本周通读了一遍由美国前国务卿亨利~基辛格的一部关于我国的著作。<br>书中很对对我国近代历史的解读以及我国外交政策的描述，其内容的涵盖、问题的分析很是广播，真是提升了我的意识形态。也让我对国家的政策、政府的领导有了一个不一样的积极认识。<br>只是之后的上海事件，这点建立起来的好感瞬间没了。</p></blockquote><h3 id="丰富市场的悖论">丰富市场的悖论</h3><blockquote><p>互联网时代的信息质量，呈现两极化。信息的平均质量变得越来越差，但是你能从网上找到的最有用信息，质量正越来越好。<br>这就好比一个商品极大丰富的市场，对普通消费者是不利的，因为他不知道怎么选择琳琅满目的商品；但对高水平消费者非常有利，因为他能找到最满足自己需要的商品。</p></blockquote><h3 id="关于学习">关于学习</h3><blockquote><p><em>费曼说：“如果没有对旧事物进行大量练习，你不太可能发现新事物。”</em><br><em>新的科学发现都建立在前人研究的基础上，你越熟悉以前的研究，就越可能做出新的发现。</em><br><em>要想多学，就必须能在学习中得到快乐。做到这一点的唯一方法，就是努力学习你最感兴趣的东西。</em></p></blockquote><h3 id="王勇">王勇</h3><blockquote><p>一个资深码农，小伙子很是牛撒 ，这是他的博客：<a href="https://manateelazycat.github.io/index.html">https://manateelazycat.github.io/index.html</a><br>博客质量内容很高，码下后看。<br>在其博客列表：读了人家一篇2016年3月关于人生经历的第一篇博文：《我人生的前28年》：<br>最近十分喜欢鸡汤，内容很长，摘录两三句：</p><p><em>人年轻最重要的是要有面对人生的勇气， 能力和经验都是通过后天培养的， 唯独勇气不抓住就稍纵即逝。</em><br><br /><br><em>编程的能力成长有时候就和人的成长一样： 有欲望-&gt;浮躁的什么都学-&gt;坚持养成习惯-&gt;知道自己要的是什么-&gt;选择性学习-&gt;心平静下来， 一旦一个人达到“心如止水”的状态， 他离技术融会贯通的境界就越接近。</em><br><br /><br><em>虽然经历了人生难的的一段低谷时光， 赚了花不完的钱， 但是真的不知道以后的人生路怎么走？ 有太多人和我想的一样， 先赚钱再成立自己的公司， 做自己想做的事情， 可是真实的现实是， 当你赚了很多钱的时候， 你丢失了你最宝贵的东西 – 时间， 你不再有时间做你自己喜欢的事情， 甚至连花钱的时间都没有， 最后自己除了变成一个赚钱机器外， 你离自己真正想做的渐行渐远… (所以真的想告诫各位， 钱这东西够花就行了， 千万不要为了这个虚伪的东西付出太多， 钱越多牺牲的越多， 不要最后连人性都输没了）。</em><br>当然，还是要好好搬砖的。</p></blockquote><h3 id="study-is-wonderful">study-is-wonderful</h3><blockquote><p>Github上一个仓库，收录了一些质量非常高的课程资源，其中多数在B站都有视频。<br>看了一下列表，几乎与计算机相关、数学相关、金融相关、物理相关、心理学相关、还有一些博弈论、创业等等的。<br>项目链接：<a href="https://github.com/xioacd99/study-is-wonderful">https://github.com/xioacd99/study-is-wonderful</a></p></blockquote><h3 id="伪类和伪元素">伪类和伪元素</h3><blockquote><p>伪类和伪元素的内容十分的简单，但是之前没有系统总结过。<br>像伪元素也就: before、after、first-letter、first-line、selection、placeholer这6个。然后了解下每个的小用法、以及before中有关content的用法注意点，也就掌握了伪元素的用法。<br>伪类的话相对多一些属性，但是常用的也就那几个。<br>博文总结：<br><a href="https://www.yuque.com/liugezhou/front-end/llmg3z">https://www.yuque.com/liugezhou/front-end/llmg3z</a></p></blockquote><h3 id="aspect-radio">aspect-radio</h3><blockquote><p>CSS的一个属性，定制宽高比。简单说就是：<br>比如：定义parent是个宽高为500px的元素，其子元素child，如果要使得它的宽度为400px的话，传统用法是:width:100%;padding-top:75%;height:0;<br />而使用了aspect-radio属性，只需要with:100%;aspect-radio:5/4就可以了。</p></blockquote><h3 id="本周小结">本周小结</h3><blockquote><ul><li>百词斩七天单词打卡。</li><li>读书《论中国》。</li><li>跑步两公里 🤣。</li><li>Mike Teacher关于Have Has Had学习、博文一篇。</li><li>浏览器工作原理：阶段五关于浏览器中页面相关学习、博文一篇。</li><li>CSS中伪类和伪元素回顾以及aspect-radio属性了解、博文一篇。</li><li>CSS中常用的一些函数总结、博文一篇。</li><li>本周小结一篇</li></ul></blockquote><blockquote><p>That’all, See you next week。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阶段五：浏览器中的页面</title>
      <link href="/A5%E9%98%B6%E6%AE%B5%E4%BA%94%EF%BC%9A%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%9A%84%E9%A1%B5%E9%9D%A2/"/>
      <url>/A5%E9%98%B6%E6%AE%B5%E4%BA%94%EF%BC%9A%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%9A%84%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="21-Chrome开发者工具：利用网络面板做性能分析">21 | Chrome开发者工具：利用网络面板做性能分析</h2><blockquote><p>页面是浏览器的核心，浏览器中的所有功能都是服务于页面的，Chrome开发者工具又是调试页面的核心工具。</p></blockquote><h3 id="网络面板">网络面板</h3><blockquote><ol><li>控制器</li></ol><ul><li>开始或停止抓包</li><li>全局搜索</li><li>禁止从cache中加载资源</li><li>模拟网络</li></ul><ol start="2"><li>过滤器</li><li>抓图信息：Capture screenshots</li><li>详细列表：重点内容</li><li>下载信息概要</li></ol><ul><li>DOMContentLoaded:页面已经构建好DOM，所需要的HTML、CSS和JS文件都已经下载完成</li><li>Load:浏览器已经加载了所有的资源(图片、样式表等)</li></ul></blockquote><blockquote><p>详细信息中的Timing</p><ul><li>Queued:排队–资源优先级、6个TCP链接。</li><li>Stalled:其它一些可能导致连接过程被推迟的原因。</li><li>Proxy Negotiation:代理协商阶段</li><li>Initial connection/SSL:与服务器建立连接的阶段</li><li>Request sent:网络进程准备请求数据，发送给网络，时间通常不到1ms。</li><li>Waiting(TTFB):第一字节时间，反映服务端相应速度的重要指标。</li><li>Connect Download:从第一字节时间到接收到全部响应数据所用的时间。</li></ul></blockquote><h3 id="优化Timing">优化Timing</h3><h4 id="1-Queuing时间太久">1. Queuing时间太久</h4><blockquote><p>大概率因为每个域名同时维护6个TCP连接，基于这个原因可以使用域名分片技术，即把该站点下面的资源放在多个域名下。另外可以将站点升级至HTTP2，因为HTTP2下面已经没有每个域名同时维护6个TCP连接的限制了(可通过curl -I 域名方式查看HTTP协议版本)。</p></blockquote><h4 id="2-第一字节时间过久-TTFB">2. 第一字节时间过久(TTFB)</h4><blockquote><ul><li>服务器生成页面数据时间过久</li><li>网络原因</li><li>发送请求头带上了多余的用户信息：比如不必要的Cookie信息</li></ul></blockquote><h4 id="3-ContentLoad时间过久">3.ContentLoad时间过久</h4><blockquote><p>可能是字节数太多的原因导致的。这时候你就需要减少文件大小，比如压缩、去掉源码中不必要的注释等方法。</p></blockquote><h2 id="22-DOM树：JavaScript是如何影响DOM树构建的">22 | DOM树：JavaScript是如何影响DOM树构建的</h2><h3 id="什么是DOM">什么是DOM</h3><blockquote><p><strong>网络</strong>传递给<strong>渲染引擎</strong>的HTML文件字节流渲染引擎是无法理解，需要将其转换为其能够理解的内部结构，这个内部结构就是DOM，DOM提供了对HTML文档结构化的表述，主要作用有三种：</p><ul><li>DOM是生成页面的基础数据结构</li><li>DOM提供给JS脚本操作DOM的接口</li><li>DOM是一道安全防线，不安全内容在DOM解析阶段会被拒之门外。</li></ul></blockquote><h3 id="DOM树如何生成">DOM树如何生成</h3><blockquote><p>简言之：通过HTML解析器，将HTML字节流转换为DOM结构。</p><ul><li>阶段一：通过分词器将字节流转换为Token。</li><li>阶段二、阶段三同步进行，将Token解析为DOM节点，并将DOM节点添加到DOM树中。</li></ul></blockquote><h3 id="JavaScript是如何影响DOM生成的">JavaScript是如何影响DOM生成的</h3><blockquote><ul><li>一段HTML文件，如果加入了script标签(内有脚本内容)，在解析到此script标签时，此时的HTML解析器会暂停DOM的解析，因为接下来JavaScript可能要修改当前生成的DOM结构。</li><li>如果HTML文件中通过script引入了js文件，那解析到script时，需要先下载这段JS代码，而下载过程会阻塞DOM接续，因此一方面浏览器做了预解析的操作优化，而另一方面对我们来说，如果该scipt标签内没有操作DOM的相关代码，可以将该脚本设置为异步加载(async或defer)。<br>async与defer的区别是：async方法在脚本文件下载完毕后立即执行。而defer是在DOMContentLoaded事件之前执行。</li><li>JS引擎在解析JS之前，并不知道其中是否会有操纵CSSOM行为的代码，所以在解析JS前，不管是否操纵了CSSOM，都会先去下载CSS文件并解析成CSSOM后，才会再来执行JS脚本。<br>最后，得出结论，JavaScript会阻塞DOM的生成，而CSSOM又会阻塞JavaScript的执行，因此DOM的生成受到JS和CSS的影响。</li></ul></blockquote><h2 id="23-｜-渲染流水线：CSS如何影响首次加载时的白屏时间？">23 ｜ 渲染流水线：CSS如何影响首次加载时的白屏时间？</h2><blockquote><p>首先在上一节基础上进行一个小扩展，Chrome浏览器的<strong>预解析线程</strong>会先对文件中扫描到的js或者css文件进行一个提前下载数据的阶段，然后这个阶段就可能会因为下载文件而造成阻塞。<br>然后，渲染流水线需要CSSOM是因为浏览器一样无法直接理解CSS，需要转换成CSSOM，然后进行样式计算、计算布局等阶段。<br>最后，渲染流水线的流程再简单梳理一遍就是：HTML解析器再接收到数据后，预解析器识别出了有CSS和JavaScript文件，会预先对这些资源进行同步下载，然后生成DOM之前，由于DOM受JS影响，而JS又受CSSOM影响，所以，首先保证的是CSS的下载完成、CSSOM的结构生成。<br>针对这个渲染流程的阶段分析，其白屏瓶颈为：下载CSS和JavaScipt以及执行JavaScript的时间，因此缩短白屏时长的策略有：</p><ol><li>通过内敛CSS和JS文件，减少这两种文件的下载时间</li><li>减少文件大小，通过Webpack等工具移除不必要的注释、压缩JS文件等方式。</li><li>不需要在HTML阶段使用的JS标记async和defer。</li><li>CSS文件过大，可通过媒体查询属性，标记为多个不同用途CSS文件，只在特定环境下加载特点CSS文件。</li></ol></blockquote><h2 id="24-｜-分层和合成机制：为什么CSS动画比JavaScript高效">24 ｜ 分层和合成机制：为什么CSS动画比JavaScript高效</h2><h3 id="显示器是怎么显示图像的">显示器是怎么显示图像的</h3><blockquote><p>每个显示器都有固定的<strong>刷新频率</strong>，通常是60HZ，也就是每秒更新60张图片，更新的图片都来自<strong>显卡</strong>中一个叫做<strong>前缓冲区</strong>的地方，显示器的工作就是每秒固定读取60张从前缓冲区中的图像，显示在<strong>显示器</strong>上。<br>这个显卡的作用就是合成新的图片，将生成的图片保存在后缓冲区，然后与前缓冲区进行交换，其刷新频率和显示器一致。</p></blockquote><h3 id="帧和帧率">帧和帧率</h3><blockquote><p>我们在滑动页面或者手势缩放页面的过程中，屏幕产生了相应的效果，这是因为滚动或者缩放的这个操作，渲染引擎迅速捕捉到这个动作并将60张图片更新到显卡的后缓冲区，然后显卡的后缓冲区与前缓冲区进行交换，显示器从显卡前缓冲区读取这个图像，显示在显示器上。<br>将渲染流水线生成的每一张图片称为<strong>一帧</strong>，每秒更新了多少帧称为<strong>帧率</strong>。<br>于是，要解决一帧生产时间过久的问题，Chrome对浏览器渲染方式做了大量工作，其中最卓有成效的就是引入了<strong>分层</strong>和<strong>合成机制</strong>。</p></blockquote><h3 id="生成一帧图像的方式">生成一帧图像的方式</h3><blockquote><p>生产一帧的生成方式有<strong>重绘</strong>、<strong>重排</strong>、<strong>合成</strong>三种方式。</p><ul><li>重排会重新根据CSSOM和DOM来计算布局树，生成一张图片会将整个渲染流水线都执行一遍。</li><li>重绘在生成一张图片的过程中，少了重新布局的阶段，但依然会进重新计算绘制消息，会比重排效率高。</li><li>合成不会触发布局和绘制过程，因此合成效率更高。</li><li>重排和重绘操作都是在渲染进程的主线程上执行的，比较耗时；而合成操作是在渲染进程的合成线程上执行的，执行速度快，且不占用主线程。</li></ul></blockquote><h3 id="分层和合成">分层和合成</h3><blockquote><p>分层是将多个素材分解成多个图层处理，将这些图层合并在一起就叫做合成。<br>然后根据阶段一的内容，我们知道在(<strong>构建DOM树、样式计算、布局阶段</strong>) 后，就是<strong>分层</strong>的过程，之所以需要分层，是后续的流程需要根据这个层来干事情，比如再之后的<strong>绘制</strong>会对每一个层生成一个个绘制指令，然后<strong>光栅化阶段</strong>根据一个个指令生成图片，一个图层就是一张图片，最后合成线程就将一张张图片进行合成一张图片，将最终生成的图片发送至显卡的后缓冲区。<br>这就是分层和合成的流程。<br>需要特别注意的是：<strong>合成的这个操作是在合成线程中完成的，不会影响主线程执行</strong>。</p></blockquote><h3 id="分块">分块</h3><blockquote><p>通常页面内容比显示器内容要大很多，若等待所有图片都生成完毕再通过和合成生成一张图片的话，开销会很大，因此合成线程会优先绘制靠近视口的图块，且在首次合成图块的时候使用了一个低分辨率的图片。等正常比例的网页内容绘制好之后，再替换掉当前显示的低分辨率内容。</p></blockquote><h3 id="利用分层技术优化代码">利用分层技术优化代码</h3><blockquote><p>当对一些元素进行几何形状变换、透明度变换、缩放等操作时，使用JS操作会牵扯到整个渲染流水线，而使用CSS则只会经过合成线程的合成阶段，效率要大很多。<br>也就解释了为什么CSS动画要比JavaScript动画效率高。</p></blockquote><h2 id="25-页面性能：如何系统地优化页面">25 | 页面性能：如何系统地优化页面</h2><blockquote><p>这里讨论的优化页面是指：如何更快的让页面显示和响应。<br>而页面的周期分为加载阶段、交互阶段和关闭阶段，前两个阶段是用户体验的主要阶段。</p></blockquote><h3 id="加载阶段">加载阶段</h3><blockquote><p>加载阶段也就是资源下载整合的阶段，这些资源包括图片、音频、视频等不会影响阻塞页面首次加载的资源，以及JS、CSS、HTML等阻塞首次渲染的资源。<br>阻塞首次渲染的资源称为关键资源，优化点有：</p><ol><li>尽量减少关键资源个数</li><li>关键资源内容尽量小</li><li>降低关键资源的RTT次数。</li></ol></blockquote><h3 id="交互阶段">交互阶段</h3><blockquote><ol><li>减少JavaScript脚本执行时间</li><li>避免强制同步布局。</li><li>避免布局抖动</li><li>合理利用CSS合成动画</li><li>避免频繁的垃圾回收</li></ol></blockquote><h2 id="26-｜-虚拟DOM和实际DOM有何不同">26 ｜ 虚拟DOM和实际DOM有何不同</h2><h3 id="DOM缺陷">DOM缺陷</h3><blockquote><p>DOM缺陷就是往往一个小的DOM操作，渲染引擎需要进行重排、重绘、合成等操作，这些操作非常频繁且耗时，会带来性能问题。<br>然后需要一种方式来减少JS对DOM的操作，于是虚拟DOM就来了。</p></blockquote><h3 id="什么是虚拟DOM">什么是虚拟DOM</h3><blockquote><p>虚拟DOM的作用是：</p><ol><li>将页面改变的内容应用到虚拟DOM上，不是直接应用到DOM上。</li><li>变换应用到虚拟DOM上时，不会着急去渲染页面，而仅是调整虚拟DOM的内部状态，这样操作虚拟DOM效率高且畅快。</li><li>虚拟DOM收集到足够的改变，将这些变化一次性应用到真实DOM上，这样就能较少一些不必要的更新，同时保证DOM稳定输出。</li></ol></blockquote><h2 id="27-｜-渐进式网页应用-PWA-它究竟解决了Web应用的哪些问题？">27 ｜ 渐进式网页应用(PWA):它究竟解决了Web应用的哪些问题？</h2><blockquote><p>PWA:Progressive Web App 渐进式网页应用。</p><ul><li>PWA提供了一个<strong>渐进式的过渡方案</strong>，让Web应用逐步具有本地应用的能力，且根据技术的演进，采用渐进式的方式逐步支持各项新技术，不断实现本地应用特性，是一个非常缓和的渐进式策略，而不是一步到位。</li><li>PWA是一种理念，渐进式增强Web的优势，通过技术手段渐进式缩短和本地应用或者小程序的距离，基于这套理念之下的技术都可以归类为PWA。</li></ul></blockquote><h3 id="Web应用-VS-本地应用">Web应用 VS 本地应用</h3><blockquote><p>相对于本地应用，Web应用缺少的是：</p><ul><li>缺少离线使用能力。</li><li>缺少消息推送能力。</li><li>缺少一级入口。<br>当然，基于上面的这几种缺陷吧，PWA提供了两种解决防范：引入了Service Worker来尝试解决离线存储和消息推送的问题。<br>引入了manifest.json来解决一级入口的问题,可以让开发者定义桌面图标、显示名称、启动信息、页面主题颜色等。</li></ul></blockquote><h3 id="Service-Worker">Service Worker</h3><blockquote><p>主要思想是：在页面和网络直接增加一个<strong>拦截器</strong>，用来缓存和拦截请求。<br>这个拦截器是干嘛的呢：没有安装 Service Worker 之前，WebApp 都是直接通过网络模块来请求资源的。安装了 Service Worker 模块之后，WebApp 请求资源时，会<strong>先通过 Service Worker</strong>，让它判断是返回 Service Worker 缓存的资源还是重新去网络请求资源。一切的控制权都交由 Service Worker 来处理。</p></blockquote><h4 id="Web-Worker">Web Worker</h4><blockquote><p>Web Worker是为了避免一个JS脚本执行占用主线程时间过长这个问题而出现的。<br>Web Worker是运行在页面主线程之外的，但Web Worker当中没有当前页面的DOM环境，因此只能执行和DOM无关的脚步，并通过postMessage方法将执行结果返回给主线程，也就是说，Web Worker是在渲染进程中开启的一个新线程。<br>然后Service Worker借鉴了Web Worker的核心思想:‘让其运行在主线程之外’，而由于Web Worker是临时的，执行结果保存不下来，因此Service Worker增加了储存功能。<br>安全设计上，Service Worker采用HTTPS协议。</p></blockquote><h2 id="28-｜-WebComponent：像搭积木一样构建Web应用">28 ｜ WebComponent：像搭积木一样构建Web应用</h2><blockquote><p>怎么理解组件化呢：<strong>对内高内聚、对外低耦合</strong>。</p></blockquote><h3 id="阻碍前端组件化的因素">阻碍前端组件化的因素</h3><blockquote><ul><li>CSS全局样式阻碍组件化—scoped</li><li>DOM阻碍组件化，页面中只有一个DOM，任何地方都可以直接读取和修改DOM。<br>因此使用JS实现组件化没有问题，但是遇上CSS和DOm，就不好弄了。</li></ul></blockquote><h3 id="WebComponent组件化">WebComponent组件化</h3><blockquote><p>WebComponent给出的解决思路就是提供局部视图封装能力，让CSS和HTML和JS运行在局部环境，已使得不会影响全局。<br>他的实现简单概括为： 使用template属性来创建模板，使用<strong>影子DOM</strong>提供局部作用域，将template中DOM和CSS与全局进行隔离。</p></blockquote><h3 id="影子DOM">影子DOM</h3><blockquote><p>影子DOM的作用主要有两类：</p><ul><li>影子DOM的元素对于整个网页是不可见的。</li><li>影子DOM的CSS不会影响到整个网页的CSSOM，影子内部的CSS只对内部元素起作用。</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 浏览器工作原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浏览器工作原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*50):恐惧、不安与惊慌</title>
      <link href="/202213(3.28-4.5)/"/>
      <url>/202213(3.28-4.5)/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本周是2022年的第十三周(3.28-4.5)–每周小结的第50期，这里记录过去一周，我的一些小总结。<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/202213.7d03fc25tew0.webp" alt="process"></p></blockquote><span id="more"></span><blockquote><p>本周清明放假，拖到了第十四周的周二–放假的最后一天。</p></blockquote><h2 id="恐惧、不安与惊慌">恐惧、不安与惊慌</h2><blockquote><p>在学英语的过程中，有个建议说是<br>** if necessary,use a mirror or even record your voice with you phone.**<br>然后我就去实践了。</p><p>实践之前，不自觉就翻到了我之前的一些面试录音。<br>其中一个录音听了个整，站在旁听者的角度，猛然发现面试过程存在一个大问题就是不够自信，然后包裹自己之前各种牛逼哄哄的伪装，陡然间脱落。<br>随之而来的，就是随之而产生杂念后的内心悲凉。</p><p>我并没有自己想象的懂得很多道理，也没有为之实践到自认为有着很酷的表现。<br>同时展示的是在很多事情中表现的恐惧、不安和惊慌的不自知。</p><p>由于熟练掌握阿Q的精神疗法，很大程度上虽规避了情绪上的失落，但一同规避的还有直面恐惧的反思和处理能力。<br>我们确实没有自己想象的那么差，但同时也是没有自己想象的那么好。<br>正确的认识自我突然就这么变得模糊起来。</p><p>我应该保持知足的心态，我更应该发掘自己的欲望。<br>用保持知足的心态去实现自己的欲望。</p></blockquote><h2 id="Promise一次爽个够"><a href="https://www.yuque.com/liugezhou/front-end/fiut0q">Promise一次爽个够</a></h2><blockquote><p>本周项目中因为批量添加和编辑手机号而用到的Promise.all方法，因为一个回调拿不到参数的问题，激起了对Promise的进阶渴望，然后在掘金上找了一篇Promise的45面试题，除了最后几个开放大题，前面的基础与进阶进行了两波学习。<br>产出笔记链接：<a href="https://www.yuque.com/liugezhou/front-end/fiut0q">https://www.yuque.com/liugezhou/front-end/fiut0q</a></p></blockquote><h2 id="Word-World"><a href="https://www.bilibili.com/video/BV1864y1r7AS?p=1">Word World</a></h2><blockquote><p>标题为B站链接，或者搜索‘自然拼读动画’。<br>《单词世界 Word World》 词汇活起来啦！“ABC好好玩”，是美国PBS Kids播出的自然拼读题材动画片。<br>终于有个不用看字幕也能看得懂的动画片了。评论里有说是自己家6岁小孩看的如痴如醉…</p></blockquote><h2 id="浏览器中的页面循环系统"><a href="https://www.yuque.com/liugezhou/drrg7f/ysz6b3">浏览器中的页面循环系统</a></h2><blockquote><p>这个假期，匆忙的学习了一遍浏览器渲染原理第四阶段的内容，刚好与Promise相互正循环向上。<br>本章的主要内容是介绍浏览器的事件循环和消息队列。并讲解了一些宏任务与微任务的应用实践，而其中我面试的那个录音也正好是问的这个问题，由此可见，这部分的内容虽然很晦涩难以总结，但是很有用。<br>笔记链接：<a href="https://www.yuque.com/liugezhou/drrg7f/ysz6b3">https://www.yuque.com/liugezhou/drrg7f/ysz6b3</a></p></blockquote><h2 id="Chapter4-10-English-study-mistakes"><a href="https://www.yuque.com/liugezhou/daipp3/bzsi59"><strong>Chapter4- 10 English study mistakes</strong></a></h2><blockquote><p>不知道干什么，就学英语吧。<br>接着Teach Mike的英语课，本周来到了第四章的内容，总结了十个学习英语可能会犯的错。<br>很多点都命中，而其中的Not Setting a goal让我为之烦恼。<br>我学英语应该定个什么目标呢？<br>考雅思吗？</p></blockquote><h2 id="fig"><a href="https://fig.io/">fig</a></h2><blockquote><p>Your teminal reimagined.<br>一个命令行输入提示工具，没什么大用，但就是友好。<br>设置快捷命令：fig setting</p></blockquote><h2 id="本周小结">本周小结</h2><blockquote><p>诚如所上，小结如下：<br>一篇Promise学习笔记<br>浏览器工作原理阶段四再学习<br>英语一篇观看Mike Teacher老师视频总结<br>七天百词斩打卡<br>观看Word World九个小视频<br>本周小结一篇</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阶段四：浏览器中的页面循环系统</title>
      <link href="/A4%E9%98%B6%E6%AE%B5%E5%9B%9B%EF%BC%9A%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%9A%84%E9%A1%B5%E9%9D%A2%E5%BE%AA%E7%8E%AF%E7%B3%BB%E7%BB%9F/"/>
      <url>/A4%E9%98%B6%E6%AE%B5%E5%9B%9B%EF%BC%9A%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%9A%84%E9%A1%B5%E9%9D%A2%E5%BE%AA%E7%8E%AF%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="15-消息队列和事件循环：页面是怎么-活-起来的">15 | 消息队列和事件循环：页面是怎么&quot;活&quot;起来的</h2><blockquote><p>渲染进程我们已经知道他有一个主线程，这个主线程非常非常的繁忙，要处理DOM、布局，还要处理JS任务和各种输入事件，因此为了保证不同类型任务的执行，需要一个系统来调度这些任务，这个调度系统就是本节要探究的消息队列和事件循环。</p></blockquote><h3 id="引入事件循环和消息队列过程">引入事件循环和消息队列过程</h3><blockquote><ol><li>如果只是一些确定好的任务，然后使用一个单线程按照顺序处理这些任务就可以了，线程执行完毕退出。</li><li>但是在单线程执行任务的过程中，会处理新的任务，这个时候就需要引入<strong>循环语句</strong>和<strong>事件循环</strong>，循环机制保证线程会一直执行，事件循环保证可以处理临时任务。</li><li>接着，如果有来自其他线程的任务，这个时候就需要引入<strong>消息队列</strong>(一种数据结构，先进先出)了，通过从消息队列中取出其他任务，得以实现解决其他线程发过来的任务。</li><li>最后，还有一个情况时来自其他进程发来的任务，这个时候是通过浏览器的<strong>IPC机制</strong>把其他进程任务发给渲染进程的<strong>IO进程</strong>，IO进程再发给页面主线程。</li></ol></blockquote><h3 id="消息队列中的任务类型">消息队列中的任务类型</h3><blockquote><p>包括：输入事件、鼠标移动、鼠标点击、鼠标滚动、微任务、文件读写、WebSocket、定时器、JS操作DOM、解析DOM、样式计算、布局阶段、CSS动画等。</p></blockquote><h3 id="页面使用单线程的缺点">页面使用单线程的缺点</h3><blockquote><p>通过上面简单的学习我们知道，页面线程中的所有任务都是来自消息队列，那么：<br>问题一：如何处理高优先级任务。<br>问题二：如何解决单个任务执行过长的问题。</p></blockquote><h4 id="如何处理高优先任务">如何处理高优先任务</h4><blockquote><p>比如，如何优先处理DOM的变化。<br>解决办法就是引入了<strong>微任务</strong>。<br>我们通常把消息队列中的任务称为<strong>宏任务</strong>，每个宏任务包含了一个微任务队列，当执行宏任务过程中，DOM有变化了,就将这个变化添加到微任务列表中，当宏任务执行完后，不会去执行下一个宏任务，而是执行当前的微任务列表。因此就解决了实效和实时性问题。<br>常见的宏任务:setTimeout、setIntervval、<br>常见的微任务：Promise、process.nextTick</p></blockquote><h4 id="如何解决单个任务执行时间过长的问题">如何解决单个任务执行时间过长的问题</h4><blockquote><p>单线程意味着每次只能执行一个任务，其他任务处于等待状态，因此为了解决一个任务执行时间过长，JS通过异步-回调功能来规避这个问题，也即让要执行的JS任务滞后执行。</p></blockquote><h2 id="16-WebAPI：setTimeOut是如何实现的？">16 | WebAPI：setTimeOut是如何实现的？</h2><blockquote><p>setTimeOut的使用这里不再赘述。</p></blockquote><h3 id="浏览器是怎么实现setTimeout的">浏览器是怎么实现setTimeout的</h3><blockquote><p>首先，我们知道渲染进程中所有运行在主线程上的任务都需要先添加到消息队列中去，然后事件循环系统按照顺序执行消息队列中的任务。<br>所以说要执行一段异步任务，需要先将其放在消息队列中去。<br>但是定时器设置回调函数有些特别，它是在一段时间间隔后执行的，但是消息队列是按顺序执行的，因此不能将定时器直接放入到消息队列中去。</p><p>在Chrome中，除了消息队列，还维护了一个<strong>延迟消息队列</strong>，定时器以及Chrome就是放到了这个延迟消息队列中去。</p></blockquote><h3 id="使用setTimeout的一些注意事项">使用setTimeout的一些注意事项</h3><blockquote><ul><li>如果当前任务执行过久，会影响定时器任务的执行。</li><li>如果setTimeout存在嵌套调用，那么系统会设置最短时间间隔为4ms。</li><li>未激活的页面，setTimeout执行最小间隔是1000毫秒</li><li>延时执行时间有最大值：24.8天。</li><li>使用setTimeout设置的回调函数中的this不符合直觉，使用箭头函数解决。</li></ul></blockquote><h2 id="17-WebApi：XMLHttpRequest是怎么实现的">17 | WebApi：XMLHttpRequest是怎么实现的</h2><blockquote><p>xhr提供了异步从Web服务器获取数据局部刷新页面的能力。</p></blockquote><h3 id="同步回调和异步回调">同步回调和异步回调</h3><blockquote><p><strong>将一个函数作为参数传递给另一个函数 ，这个作为参数的函数就叫做回调函数</strong>。<br>若回调函数在主函数返回之前执行的，我们把这个回调过程称为<strong>同步回调</strong>。<br>把这种回调函数在主函数外部执行的过程称为<strong>异步回调</strong>。</p></blockquote><h3 id="异步回调过程">异步回调过程</h3><blockquote><ul><li>第一种是把异步函数做成一个任务，添加到消息对了尾部。</li><li>第二种是把异步函数添加到微任务列表中，等当前任务执行完毕就执行微任务。<br>异步函数的两个类型不同也就导致了一个是宏任务，一个是微任务。</li></ul></blockquote><h3 id="XMLHttpRequest运作机制">XMLHttpRequest运作机制</h3><blockquote><ul><li>创建XMLHttpRequest对象: let xhr = new XMLHttpRequest()</li><li>为xhr对象注册回调函数：ontimeout监控超时、onerror监控错误信息、onreadyshatechange监控后台请求过程。</li><li>通过open接口配置基础请求信息：请求地址、请求方式、请求方法、超时时间…</li><li>通过xhr.send发起请求。</li></ul></blockquote><h3 id="XMLHttpRequest使用过程中的坑">XMLHttpRequest使用过程中的坑</h3><blockquote><ul><li>安全策略的跨域问题</li><li>HTTPS混合内容的问题：https页面中包含了不符合https安全要求的内容(http资源)</li></ul></blockquote><h2 id="18-宏任务和微任务：不是所有任务都是一个待遇">18 | 宏任务和微任务：不是所有任务都是一个待遇</h2><blockquote><p>微任务可以在实时性和效率之间做一个有效的权衡。</p></blockquote><h3 id="宏任务">宏任务</h3><blockquote><p>就是一些鼠标、渲染、交互、脚本、网络读写、文件读写等等操作被称为宏任务。<br>宏任务在主线程上的执行，是由页面线程引入了消息队列和循环机制，消息队列中的任务是通过事件循环来执行的。<br>宏任务难以满足时间精度要求较高的任务，比如一个setTimeout中包裹一个setTimeout，虽然设定时间都是0之后，但是会有其它任务窜进来执行。</p></blockquote><h3 id="微任务">微任务</h3><blockquote><p>微任务就是一个需要异步执行的一个函数，执行时机是在主函数执行完毕之后、当前宏任务结束之前。<br>V8引擎在执行JS脚本的时候，除了创建一个全局的执行上下文，还会在其内部创建一个微任务队列，由于实在V8引擎内部给的，所以我们无法通过JS访问。<br>也就是说，每一个宏任务都关联了一个微任务队列。</p></blockquote><blockquote><p>在现代浏览器里面，产生微任务的主要两个方式：</p><ol><li>使用MutationObserve监听某个DOM节点的变换。</li><li>使用Promise。</li></ol></blockquote><blockquote><p>执行时机：就是在本轮宏任务执行完毕后，去检查微任务队列中是否有微任务，需要注意一点的是执行微任务过程中产生的新的微任务不会推迟到下个宏任务中去执行，而是在当前宏任务中继续执行。</p></blockquote><h2 id="19-使用Promise，告别回调函数">19 | 使用Promise，告别回调函数</h2><blockquote><p>Promise已经成为现代前端的水和电。so important！，那么Promise的出现是为了解决什么问题呢？</p></blockquote><h3 id="异步编程的问题">异步编程的问题</h3><blockquote><p>Web页面的单线程架构决定了异步回调，而异步回调决定了我们的编码方式。在之前的很多回调中，代码逻辑变得不连续且混乱。<br>然后，为了解决这个问题，我们可以封装异步代码，让处理流程变得线性。但同时出现了新的问题：回调地狱。<br>回调地狱主要是嵌套混乱，下面的任务依赖上一个任务，嵌套多次代码可读性很差，且任务的不确定性(执行每个任务都有两种可能结果)，所以也增加了代码的混乱程度。<br>于是，解决问题的两个思路就是：消灭嵌套调用、合并多个任务的错误处理。</p></blockquote><h3 id="Promise">Promise</h3><blockquote><p>Promise的出现就解决了消灭嵌套调用和多次错误处理的问题。<br>Promise的核心其实就是resolve函数，resolve函数执行会触发.then的回调，但回调函数还没有执行，而是采用了延迟绑定，可以理解为.then放入到了微任务队列中去，等待宏任务执行完毕后检查执行。</p></blockquote><h2 id="20-async-await：使用同步的方式去写异步代码">20 | async/await：使用同步的方式去写异步代码</h2><blockquote><p>ES7引入了async和await，这是JavaScript异步编程的一个重大改进，提高了在不阻塞主线程的情况下使用同步代码实现异步访问资源的能力，并且使得代码逻辑更加清晰。<br>Promise编程模型因为充斥大量then方法，虽然解决了地狱回调的问题，但是语义方面的缺陷，使得async和wait出现了。<br>本节会首先介绍生成器(Generator)是如何工作的，接着讲解Generator的底层实现机制–协程(Coroutine),又因为async和await使用了Generator和Promise两种技术，接着通过Generator和Promise来分析async和await到底是如何以同步的方式来编写异步代码的。</p></blockquote><h3 id="生成器-VS协程">生成器 VS协程</h3><blockquote><p>生成器函数一个带有星号的函数，可以暂停和恢复执行</p></blockquote><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span>* <span class="title function_">genDeomo</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;开始执行第一段&#x27;</span>)</span><br><span class="line">  yield <span class="string">&#x27;generator 2&#x27;</span></span><br><span class="line">  <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&quot;开始执行第二段&quot;</span>) </span><br><span class="line">  yield <span class="string">&#x27;generator 2&#x27;</span> </span><br><span class="line">  <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&quot;开始执行第三段&quot;</span>) </span><br><span class="line">  yield <span class="string">&#x27;generator 2&#x27;</span> </span><br><span class="line">  <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&quot;执行结束&quot;</span>) </span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;generator 2&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">  <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;main 0&#x27;</span>)</span><br><span class="line">  let gen = genDemo()</span><br><span class="line">  <span class="built_in">console</span>.<span class="built_in">log</span>(gen.next().value)</span><br><span class="line">  <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;main 1&#x27;</span>)</span><br><span class="line">  <span class="built_in">console</span>.<span class="built_in">log</span>(gen.next().value)</span><br><span class="line">  <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;main 2&#x27;</span>)</span><br><span class="line">  <span class="built_in">console</span>.<span class="built_in">log</span>(gen.next().value)</span><br><span class="line">  <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;main 3&#x27;</span>)</span><br><span class="line">  <span class="built_in">console</span>.<span class="built_in">log</span>(gen.next().value)</span><br><span class="line">  <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;main 4&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>在生成器函数内部执行一段代码，如果遇到yield关键字，那么JS引起会返回该关键字后面的内容给外部，并暂停该函数的执行,如果遇到return关键字，JS引擎会结束该生成函数，并将return后面的内容进行最后的返回。<br>外部函数通过next方法恢复函数的执行。</p></blockquote><blockquote><p>那么，这个暂停和恢复执行的实现其关键原理是什么呢？这就需要先了解协程的概念。<br>协程是一种比线程更加轻量级的存在。我们可以把协程看成是跑在线程上的任务，一个线程上可以存在多个协程，但是在线程上同时只能执行一个协程，比如当前执行的是 A 协程，要启动 B 协程，那么 A 协程就需要将主线程的控制权交给 B 协程，这就体现在 A 协程暂停执行，B 协程恢复执行；同样，也可以从 B 协程中启动 A 协程。通常，如果从 A 协程启动 B 协程，我们就把 A 协程称为 B 协程的父协程。正如一个进程可以拥有多个线程一样，一个线程也可以拥有多个协程。最重要的是，协程不是被操作系统内核所管理，而完全是由程序所控制（也就是在用户态执行）。<br>这样带来的好处就是性能得到了很大的提升，不会像线程切换那样消耗资源。</p></blockquote><blockquote><p>然后通过Generator函数的写法，经过改造后就可以用同步的方式写出异步的代码了，略过不表。</p></blockquote><h3 id="async-await">async/await</h3><blockquote><p>async和await技术背后的实现方式就是Generator和Promise应用，往底层说就是微任务和协程应用。</p></blockquote><h3 id="async">async</h3><blockquote><p>根据MDN定义，async是一个通过<strong>异步执行</strong>并<strong>隐式返回Promise</strong>作为结果的函数。<br>通过async声明的函数返回的是Promise对象，如代码所示：</p></blockquote><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">async <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.<span class="built_in">log</span>(foo())  <span class="comment">// Promise &#123;&lt;resolved&gt;: 2&#125;</span></span><br></pre></td></tr></table></figure><h3 id="await">await</h3><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">async <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="number">1</span>)</span><br><span class="line">    let a = await <span class="number">100</span></span><br><span class="line">    <span class="built_in">console</span>.<span class="built_in">log</span>(a)</span><br><span class="line">    <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.<span class="built_in">log</span>(<span class="number">0</span>)</span><br><span class="line">foo()</span><br><span class="line"><span class="built_in">console</span>.<span class="built_in">log</span>(<span class="number">3</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 浏览器工作原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浏览器工作原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>很爽的Promise几道console题</title>
      <link href="/026-%E5%BE%88%E7%88%BD%E7%9A%84Promise%E5%87%A0%E9%81%93console%E9%A2%98/"/>
      <url>/026-%E5%BE%88%E7%88%BD%E7%9A%84Promise%E5%87%A0%E9%81%93console%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本篇博文是学习的掘金的一篇博文：<a href="https://juejin.cn/post/6844904077537574919">【建议星星】要就来45道Promise面试题一次爽到底(1.1w字用心整理)</a>，经过自己一个个问题的学习，整理如下：</p></blockquote><h2 id="一-Promise的几道基础题">一.Promise的几道基础题</h2><h3 id="题目一-✨">题目一 ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise1 = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;promise1&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;1&#x27;</span>,promise1)</span><br><span class="line"><span class="comment">// promise1</span></span><br><span class="line"><span class="comment">// 1 Promise &#123;&lt;pending&gt;&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>先执行构造函数中的代码promise1，然后执行同步代码 1，由于没有resolve或者reject，此时状态为pending</p></blockquote><h3 id="题目二-✨✨">题目二 ✨✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)</span><br><span class="line">  <span class="title function_">resolve</span>(<span class="string">&#x27;success&#x27;</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>)</span><br><span class="line">&#125;)</span><br><span class="line">promise.<span class="title function_">then</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">4</span>)</span><br><span class="line"><span class="comment">// 1 2 4 3</span></span><br></pre></td></tr></table></figure><blockquote><ol><li>首先执行同步代码，打印出1</li><li>接着resolve的出现，只是将promise的状态改变成了resolved，将success这个值保存了下来。</li><li>会接着执行同步代码，输出2</li><li>promsie.then是一个微任务，放入到微任务列表，等待宏任务执行完毕后，来执行微任务列表</li><li>继续执行本轮的宏任务，输出4</li><li>之后本轮宏任务执行完毕，检查微任务列表发现了这个promise…then，执行输出3</li></ol></blockquote><h3 id="题目三-✨">题目三 ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>);</span><br><span class="line">&#125;);</span><br><span class="line">promise.<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">4</span>);</span><br><span class="line"><span class="comment">// 1 2 4</span></span><br></pre></td></tr></table></figure><blockquote><p>在promise中没有resolve或者reject，因此promise.then不会执行</p></blockquote><h3 id="题目四-✨">题目四 ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise1 = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;promise1&#x27;</span>)  <span class="comment">// 1 执行构造函数中代码，打印输出</span></span><br><span class="line">  <span class="title function_">resolve</span>(<span class="string">&#x27;resolve1&#x27;</span>)      <span class="comment">// 2 将promise1状态改为resolved，并将结果保存下来</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> promise2 = promise1.<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123; <span class="comment">// 3. 将这个微任务，放入到微任务队列</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res)  <span class="comment">// 6.执行微任务，打印出结果 resolve1</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;1&#x27;</span>, promise1);  <span class="comment">//4 打印出promise1的状态为 resolved</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;2&#x27;</span>, promise2);  <span class="comment">//5 打印出promise2的状态为 pending，宏任务执行完毕，寻找微任务队列,去到步骤6</span></span><br><span class="line"><span class="comment">// promise1</span></span><br><span class="line"><span class="comment">// 1 Promise&#123;&lt;resolved&gt;&#125;</span></span><br><span class="line"><span class="comment">// 2 Promise&#123;&lt;pending&gt;&#125;</span></span><br><span class="line"><span class="comment">// resolve1</span></span><br></pre></td></tr></table></figure><h3 id="题目五-✨">题目五 ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">fn</span> = (<span class="params"></span>) =&gt; (<span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);   <span class="comment">//2.执行同步代码，打印1</span></span><br><span class="line">  <span class="title function_">resolve</span>(<span class="string">&#x27;success&#x27;</span>) <span class="comment">//3.更新fn的状态为resolved的Promise，且保存其值</span></span><br><span class="line">&#125;))</span><br><span class="line"><span class="title function_">fn</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123; <span class="comment">// 1.执行fn函数，.then为微任务列表，等待本轮宏任务执行完毕来检查</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res)  <span class="comment">// 4执行完，发现有微列表，打印success</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;start&#x27;</span>) <span class="comment">// 4 本来宏任务，打印4</span></span><br><span class="line"><span class="comment">// 1 </span></span><br><span class="line"><span class="comment">// start</span></span><br><span class="line"><span class="comment">// success</span></span><br></pre></td></tr></table></figure><blockquote><p>fn是一个函数且直接返回的是一个Promise，主要是因为fn的调用在start之前的，所以fn里面的代码先执行</p></blockquote><h3 id="题目六-✨">题目六 ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">fn</span> = (<span class="params"></span>) =&gt;</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);     <span class="comment">// 3.执行fn函数同步代码，打印1</span></span><br><span class="line">  <span class="title function_">resolve</span>(<span class="string">&quot;success&quot;</span>); <span class="comment">// 4.将fn的结果Promise状态改为resolved，且保存这个值</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;start&quot;</span>); <span class="comment">// 1.直接打印 start</span></span><br><span class="line"><span class="title function_">fn</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;<span class="comment">// 2.先去执行调用的fn函数，且将.then存入到微任务列表</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res);<span class="comment">// 5.打印保存的这个值 success</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// start</span></span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// success</span></span><br></pre></td></tr></table></figure><blockquote><p>这个fn的调用是在start之后才开始执行的，所以先打印start，再去执行fn这个函数</p></blockquote><h2 id="二、Promise结合setTimeout">二、Promise结合setTimeout</h2><h3 id="题目七-✨">题目七 ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;start&#x27;</span>)  <span class="comment">// 1.本轮宏任务开始，打印出 start</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;<span class="comment">// 2. setTimeout是宏任务，会放到下一轮中去执行</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;time&#x27;</span>)  <span class="comment">// 6.第二轮宏任务开始，打印出 time</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">resolve</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;  <span class="comment">//3.then为微任务，等到本轮宏任务执行完毕，来检查</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;resolve&#x27;</span>)<span class="comment">// 5.检查到本轮微任务，打印出resolve，开始执行下一个宏任务</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;end&#x27;</span>) <span class="comment">// 4.本轮宏任务打印出end，然后去检查本轮微任务</span></span><br><span class="line"><span class="comment">// start</span></span><br><span class="line"><span class="comment">// end</span></span><br><span class="line"><span class="comment">// resolve</span></span><br><span class="line"><span class="comment">// time</span></span><br></pre></td></tr></table></figure><h3 id="题目八-✨✨">题目八  ✨✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);  <span class="comment">// 1.执行同步代码，打印出1</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123; <span class="comment">// 2.下一轮宏任务才来执行，我们继续走我们本轮的宏任务</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;timerStart&quot;</span>); <span class="comment">// 7.第二次宏任务开始执行，打印出 timeStart</span></span><br><span class="line">    <span class="title function_">resolve</span>(<span class="string">&quot;success&quot;</span>); <span class="comment">// 8.将promise状态改为resolved，且将结果保存</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;timerEnd&quot;</span>); <span class="comment">// 9.继续执行同步代码，打印出timeEnd</span></span><br><span class="line">  &#125;, <span class="number">0</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>); <span class="comment">// 3.本轮的宏任务，直接打印出 2</span></span><br><span class="line">&#125;);</span><br><span class="line">promise.<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123; <span class="comment">//4. .then是个微任务，等本轮宏任务执行完毕，再来检查，进入5</span></span><br><span class="line"> <span class="comment">//6.来检查了，但是promise还是pending状态，不执行，直接开始下一轮宏任务</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res);     宏任务    <span class="comment">// 10 打印出success</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">4</span>); <span class="comment">// 5.本轮宏任务，打印出4，然后去检查本轮微任务</span></span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="comment">// 4</span></span><br><span class="line"><span class="comment">// timerStart</span></span><br><span class="line"><span class="comment">// timerEnd</span></span><br><span class="line"><span class="comment">// success</span></span><br></pre></td></tr></table></figure><h3 id="题目九-✨✨">题目九 ✨✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.本轮宏任务1开始</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;  <span class="comment">// 2.遇到setTimeout，放入到宏任务2去</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timer1&#x27;</span>); <span class="comment">// 4.宏任务2开始，打印出timer1</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;<span class="comment">// 5.遇到setTimeout，放入到宏任务3后去，定义为4且宏任务2结束</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timer3&#x27;</span>) <span class="comment">// 6. 宏任务4开始，打印出timer3</span></span><br><span class="line">  &#125;, <span class="number">0</span>)</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;<span class="comment">//3. 遇到setTimeout，放入到宏任务2之后去，定义为宏任务3</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timer2&#x27;</span>) <span class="comment">// 6.宏任务3开始，打印出 timer2，宏任务3结束</span></span><br><span class="line">&#125;, <span class="number">0</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;start&#x27;</span>) <span class="comment">// 4.宏任务1执行完毕，打印出start</span></span><br><span class="line"><span class="comment">// start</span></span><br><span class="line"><span class="comment">// timer1</span></span><br><span class="line"><span class="comment">// timer2</span></span><br><span class="line"><span class="comment">// timer3</span></span><br></pre></td></tr></table></figure><p>加个Promise</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;  <span class="comment">// 1.加入到宏任务2中</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timer1&#x27;</span>); <span class="comment">// 4.宏任务2开始，打印出 timer1</span></span><br><span class="line">  <span class="title class_">Promise</span>.<span class="title function_">resolve</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123; <span class="comment">//5.遇到.then，那么放入到宏任务2的微任务队列</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;promise&#x27;</span>)   <span class="comment">// 6.没有其它宏任务，直接打印 promise</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123; <span class="comment">// 2.加入到宏任务2之后，定义为宏任务3</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timer2&#x27;</span>) <span class="comment">//7.开始执行宏任务3，打印出 timer2</span></span><br><span class="line">&#125;, <span class="number">0</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;start&#x27;</span>) <span class="comment">// 3.宏任务1执行完毕，打印出start</span></span><br><span class="line"><span class="comment">// start</span></span><br><span class="line"><span class="comment">// timer1</span></span><br><span class="line"><span class="comment">// promise</span></span><br><span class="line"><span class="comment">// time2</span></span><br></pre></td></tr></table></figure><blockquote><p>之所以先打印出promise是因为，第一个setTimeout为下一个宏任务队列，第二个setImeout为下下一个宏任务队列，因此在第二个宏任务队列执行完毕之后，会先去本轮的微任务队列中去查找是否有微任务。</p></blockquote><h3 id="题目十-✨">题目十  ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Promise</span>.<span class="title function_">resolve</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123; <span class="comment">// 1.遇到.then，放入到本轮微任务列表中去</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;promise1&#x27;</span>);    <span class="comment">// 4.查到本轮微任务列表，打印 promise1</span></span><br><span class="line">  <span class="keyword">const</span> timer2 = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123; <span class="comment">//5.遇到setTimeout，放入到第三轮宏任务列表中去</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timer2&#x27;</span>)  <span class="comment">//7.第三轮宏任务开始，打印出timer2</span></span><br><span class="line">  &#125;, <span class="number">0</span>)</span><br><span class="line">  &#125;);</span><br><span class="line"><span class="keyword">const</span> timer1 = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123; <span class="comment">//2.遇到setTimeout，放入到第二轮宏任务列表中去</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timer1&#x27;</span>)<span class="comment">//5.打印出timer1</span></span><br><span class="line">  <span class="title class_">Promise</span>.<span class="title function_">resolve</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123; <span class="comment">//6.宏任务2执行完毕后，发现微任务列表，打印出promise2</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;promise2&#x27;</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;start&#x27;</span>); <span class="comment">//3.打印出 start,查找本轮微任务列表</span></span><br><span class="line"><span class="comment">// start</span></span><br><span class="line"><span class="comment">// promise1</span></span><br><span class="line"><span class="comment">// timer1</span></span><br><span class="line"><span class="comment">// promise2</span></span><br><span class="line"><span class="comment">// timer2</span></span><br></pre></td></tr></table></figure><h3 id="题目十一-✨✨✨">题目十一 ✨✨✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise1 = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123; <span class="comment">// 1.放到下一轮宏任务中去</span></span><br><span class="line">    <span class="title function_">resolve</span>(<span class="string">&#x27;success&#x27;</span>) <span class="comment">//7.将promise1的状态修改为resoled，且保存值，查找还有没有微任务，查找到了.then</span></span><br><span class="line">  &#125;, <span class="number">1000</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> promise2 = promise1.<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123; <span class="comment">//2.放到本轮微任务列表中去</span></span><br><span class="line">  <span class="comment">// 6.此时，promise1还没返回状态，不执行</span></span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;error!!!&#x27;</span>)  <span class="comment">// 8.throw相当于给了promise2状态为rejected,且打印出异常，开始执行下一轮宏任务</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;promise1&#x27;</span>, promise1) <span class="comment">// 3.此时打印的promise1为pending状态</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;promise2&#x27;</span>, promise2) <span class="comment">// 4.此时打印的promise2为pending状态</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;     <span class="comment">// 5.放入到下一轮宏任务中去,找到到.then，去执行本轮微任务</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;promise1&#x27;</span>, promise1) <span class="comment">// 9.此时打印出promise1的状态为resolved，且值为success</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;promise2&#x27;</span>, promise2) <span class="comment">// 10. promise2此时的状态为rejected</span></span><br><span class="line">&#125;, <span class="number">2000</span>)</span><br><span class="line"><span class="comment">// promise1 Promise&#123;pending&#125;</span></span><br><span class="line"><span class="comment">// promise2 Promise&#123;pending&#125;</span></span><br><span class="line"><span class="comment">// 102 Uncaught (in promise) Error: error!!! </span></span><br><span class="line"><span class="comment">// promise1 Promise&#123;resoled:&#x27;success&#x27;&#125;</span></span><br><span class="line"><span class="comment">// promise2 Promise&#123;rejected:&#x27;error!!!&#x27;&#125;</span></span><br></pre></td></tr></table></figure><h3 id="题目十二-✨✨">题目十二 ✨✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise1 = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;  <span class="comment">// 1.下一轮宏任务</span></span><br><span class="line">    <span class="title function_">resolve</span>(<span class="string">&quot;success&quot;</span>); <span class="comment">//7.promise微resoled，且拿到了这个值进行保存</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;timer1&quot;</span>);<span class="comment">//8.打印4:打印出timer1</span></span><br><span class="line">  &#125;, <span class="number">1000</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;promise1里的内容&quot;</span>); <span class="comment">// 2.本轮同步代码，打印1 </span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> promise2 = promise1.<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123; <span class="comment">//3.本轮微任务队列</span></span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;error!!!&quot;</span>); <span class="comment">// 9.打印出5异常，且promise2为rejected状态，保存值</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;promise1&quot;</span>, promise1); <span class="comment">//4.打印2:promise1此时为pending状态</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;promise2&quot;</span>, promise2); <span class="comment">//5.打印3：此时promise2位pending状态</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123; <span class="comment">// 6.下下一轮宏任务</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;timer2&quot;</span>); <span class="comment">// 10.打印出timer2</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;promise1&quot;</span>, promise1); <span class="comment">// 11 打印6出success</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;promise2&quot;</span>, promise2); <span class="comment">// 12 打印7出error！！！！</span></span><br><span class="line">&#125;, <span class="number">2000</span>);</span><br><span class="line"><span class="comment">// promise1里的内容</span></span><br><span class="line"><span class="comment">// promise1 Promise&#123;pending&#125;</span></span><br><span class="line"><span class="comment">// promise2 Promise&#123;pending&#125;</span></span><br><span class="line"><span class="comment">// timer1</span></span><br><span class="line"><span class="comment">// throw error</span></span><br><span class="line"><span class="comment">// timer2</span></span><br><span class="line"><span class="comment">// promise1 Promise&#123;resolved&#125;</span></span><br><span class="line"><span class="comment">// promise2 Promise&#123;rejected&#125;</span></span><br></pre></td></tr></table></figure><h2 id="三、Promise中的then、catch、finally">三、Promise中的then、catch、finally</h2><h3 id="题目十三-✨">题目十三 ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">resolve</span>(<span class="string">&quot;success1&quot;</span>);</span><br><span class="line">  <span class="title function_">reject</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">  <span class="title function_">resolve</span>(<span class="string">&quot;success2&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">promise</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;then: &quot;</span>, res);</span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;catch: &quot;</span>, err);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// then success1</span></span><br></pre></td></tr></table></figure><blockquote><p>Promise中的状态一经改变，就不能再次进行改变了。</p></blockquote><h3 id="题目十四-✨✨">题目十四 ✨✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">reject</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">  <span class="title function_">resolve</span>(<span class="string">&quot;success2&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">promise</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;then1: &quot;</span>, res);</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;then2: &quot;</span>, res);</span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;catch: &quot;</span>, err);</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;then3: &quot;</span>, res);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// catch error</span></span><br><span class="line"><span class="comment">// then3 undefined</span></span><br></pre></td></tr></table></figure><blockquote><p>之所以最后是undefined，是因为catch()也会返回一个Promise，且由于这个Promise没有返回值</p></blockquote><h3 id="题目十五-✨">题目十五 ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="number">1</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;)</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">&#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 1 2</span></span><br></pre></td></tr></table></figure><blockquote><p>return 2 会被包装成 Promise(2)</p></blockquote><h3 id="题目十六-✨">题目十六 ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="number">1</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;)</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">3</span></span><br><span class="line">&#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 1 3</span></span><br></pre></td></tr></table></figure><h3 id="题目十七-✨-✨">题目十七 ✨ ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timer&#x27;</span>)</span><br><span class="line">    <span class="title function_">resolve</span>(<span class="string">&#x27;success&#x27;</span>)</span><br><span class="line">  &#125;, <span class="number">1000</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> start = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">promise.<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res, <span class="title class_">Date</span>.<span class="title function_">now</span>() - start)</span><br><span class="line">&#125;)</span><br><span class="line">promise.<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res, <span class="title class_">Date</span>.<span class="title function_">now</span>() - start)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// timer</span></span><br><span class="line"><span class="comment">// success 1000</span></span><br><span class="line"><span class="comment">// success 10001</span></span><br></pre></td></tr></table></figure><blockquote><p>这里的.then之所以都会执行，是因为Promise中的.then或者.catch可以被调用多次。</p></blockquote><h3 id="题目十八-✨-✨">题目十八  ✨ ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Promise</span>.<span class="title function_">resolve</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;error!!!&#x27;</span>)</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;then: &quot;</span>, res)</span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;catch: &quot;</span>, err)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// then error</span></span><br></pre></td></tr></table></figure><blockquote><p>返回任意一个非promise的值都会包裹成promise对象，这里的return new Error(‘error!!!’)被包装成 return Promise.resolve(new Error(‘error’)),如果需要抛出错误，可以使用Promise.reject()或者throw</p></blockquote><h3 id="题目十九-✨-✨">题目十九  ✨ ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="title class_">Promise</span>.<span class="title function_">resolve</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> promise;</span><br><span class="line">&#125;)</span><br><span class="line">promise.<span class="title function_">catch</span>(<span class="variable language_">console</span>.<span class="property">err</span>)</span><br><span class="line"><span class="comment">// 结果报错：Uncaught (in promise) TypeError: Chaining cycle detected for promise #&lt;Promise&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>Promise的.then或者.catch中返回的值不能是promise本身，否则会造成死循环、报错</p></blockquote><h3 id="题目二十-✨-✨">题目二十  ✨ ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="number">1</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="number">2</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="number">3</span>))</span><br><span class="line">  .<span class="title function_">then</span>(<span class="variable language_">console</span>.<span class="property">log</span>)</span><br><span class="line"><span class="comment">// 1</span></span><br></pre></td></tr></table></figure><blockquote><p>.then或者.catch中的参数期望是<strong>函数</strong>，如果传入非函数那么就会发生<strong>值穿透</strong>，第一个then和第二个then中传入的都不是函数，因此发生了值的透传，将resolve(1)传入到了最后一个then中。</p></blockquote><h3 id="题目二十一-✨">题目二十一  ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="string">&#x27;err!!!&#x27;</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;success&#x27;</span>, res)</span><br><span class="line">&#125;, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;error&#x27;</span>, err)</span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;catch&#x27;</span>, err)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// error,err!!!</span></span><br></pre></td></tr></table></figure><blockquote><p>then函数中会有两个参数，第一个为传入resolve结果的，第二个为reject，可以理解为.catch为.then的简写.then(undeifined,err)</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Promise</span>.<span class="title function_">resolve</span>()</span><br><span class="line">  .<span class="title function_">then</span>(<span class="keyword">function</span> <span class="title function_">success</span> (res) &#123;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;error!!!&#x27;</span>)</span><br><span class="line">&#125;, <span class="keyword">function</span> <span class="title function_">fail1</span> (err) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;fail1&#x27;</span>, err)</span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="keyword">function</span> <span class="title function_">fail2</span> (err) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;fail2&#x27;</span>, err)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// fail2 error!</span></span><br></pre></td></tr></table></figure><h3 id="题目二十二-✨-✨-✨">题目二十二  ✨ ✨ ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">&#125;)</span><br><span class="line">  .<span class="title function_">finally</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;finally&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">  .<span class="title function_">finally</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;finally2&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;我是finally2返回的值&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;finally2后面的then函数&#x27;</span>, res)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// finally2</span></span><br><span class="line"><span class="comment">// finally</span></span><br><span class="line"><span class="comment">// finally2后面的then函数 2</span></span><br></pre></td></tr></table></figure><blockquote><p>为什么finally要在finally2中，看下面代码</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">  .<span class="title function_">finally</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;finally1&#x27;</span>)</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;我是finally中抛出的异常&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;finally后面的then函数&#x27;</span>, res)</span><br><span class="line">&#125;)</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;捕获错误&#x27;</span>, err)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// finally1</span></span><br><span class="line"><span class="comment">// 捕获错误 我是finally中抛出的异常</span></span><br></pre></td></tr></table></figure><h2 id="四、Promise中的all和race">四、Promise中的all和race</h2><h3 id="题目二十三-all-✨">题目二十三-all  ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">runAsync</span> (x) &#123;</span><br><span class="line">  <span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">r</span> =&gt;</span> <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="title function_">r</span>(x, <span class="variable language_">console</span>.<span class="title function_">log</span>(x)), <span class="number">1000</span>))</span><br><span class="line">  <span class="keyword">return</span> p</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">all</span>([<span class="title function_">runAsync</span>(<span class="number">1</span>), <span class="title function_">runAsync</span>(<span class="number">2</span>), <span class="title function_">runAsync</span>(<span class="number">3</span>)])</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(res))</span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line"><span class="comment">// [1,2,3]</span></span><br></pre></td></tr></table></figure><blockquote><p>有了all，可以并行执行多个异步操作，并且在一个回调中处理所有的返回数据，.all后面的then接收的是所有异步操作的结果。</p></blockquote><h3 id="题目二十四-all-✨-✨">题目二十四-all  ✨ ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">runAsync</span> (x) &#123;</span><br><span class="line">  <span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">r</span> =&gt;</span> <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="title function_">r</span>(x, <span class="variable language_">console</span>.<span class="title function_">log</span>(x)), <span class="number">1000</span>))</span><br><span class="line">  <span class="keyword">return</span> p</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">runReject</span> (x) &#123;</span><br><span class="line">  <span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">res, rej</span>) =&gt;</span> <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="title function_">rej</span>(<span class="string">`Error: <span class="subst">$&#123;x&#125;</span>`</span>, <span class="variable language_">console</span>.<span class="title function_">log</span>(x)), <span class="number">1000</span> * x))</span><br><span class="line">  <span class="keyword">return</span> p</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">all</span>([<span class="title function_">runAsync</span>(<span class="number">1</span>), <span class="title function_">runReject</span>(<span class="number">4</span>), <span class="title function_">runAsync</span>(<span class="number">3</span>), <span class="title function_">runReject</span>(<span class="number">2</span>)])</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(res))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err))</span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="comment">// Error 2</span></span><br><span class="line"><span class="comment">// 4</span></span><br></pre></td></tr></table></figure><h3 id="题目二十五-race-✨">题目二十五-race ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">runAsync</span> (x) &#123;</span><br><span class="line">  <span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">r</span> =&gt;</span> <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="title function_">r</span>(x, <span class="variable language_">console</span>.<span class="title function_">log</span>(x)), <span class="number">1000</span>))</span><br><span class="line">  <span class="keyword">return</span> p</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">race</span>([<span class="title function_">runAsync</span>(<span class="number">1</span>), <span class="title function_">runAsync</span>(<span class="number">2</span>), <span class="title function_">runAsync</span>(<span class="number">3</span>)])</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;result: &#x27;</span>, res))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err))</span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// result 1</span></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="comment">// 3</span></span><br></pre></td></tr></table></figure><blockquote><p>虽然race是赛跑且只会获取最先执行的那个结果，但是 2和3还是会去执行的。<br>应用场景是：为异步请求设置超时时间。</p></blockquote><h3 id="题目二十六-race✨">题目二十六-race✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">runAsync</span>(<span class="params">x</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">r</span> =&gt;</span></span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="title function_">r</span>(x, <span class="variable language_">console</span>.<span class="title function_">log</span>(x)), <span class="number">1000</span>)</span><br><span class="line">     );</span><br><span class="line">  <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">runReject</span>(<span class="params">x</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">res, rej</span>) =&gt;</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="title function_">rej</span>(<span class="string">`Error: <span class="subst">$&#123;x&#125;</span>`</span>, <span class="variable language_">console</span>.<span class="title function_">log</span>(x)), <span class="number">1000</span> * x)</span><br><span class="line">   );</span><br><span class="line">  <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">race</span>([<span class="title function_">runReject</span>(<span class="number">0</span>), <span class="title function_">runAsync</span>(<span class="number">1</span>), <span class="title function_">runAsync</span>(<span class="number">2</span>), <span class="title function_">runAsync</span>(<span class="number">3</span>)])</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;result: &quot;</span>, res))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err));</span><br><span class="line"><span class="comment">// 0</span></span><br><span class="line"><span class="comment">// result :Error:0</span></span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="comment">// 3</span></span><br></pre></td></tr></table></figure><blockquote><p>all与race小结</p><ul><li>Promise.all的作用是接收一组异步任务，然后并行执行异步任务，在所有异步任务执行完毕后才执行回调。</li><li>Promise.race也是接收一组异步任务，然后并行执行异步任务，只保留第一个先完成的异步执行结果，其它的结果会抛弃不用。</li><li>Promise.all.then中的结果与传入到all中的顺序是一致的。</li><li>all和race传入的数组如果有抛出异常的错误，那么只会抛出第一个错误。</li></ul></blockquote><h2 id="五、async和await">五、async和await</h2><blockquote><p>在很多时候，async和await的解法和Promise差不多，但是有些又不一样。</p></blockquote><h3 id="题目二十七-✨✨">题目二十七 ✨✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async1</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;async1 start&quot;</span>);</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">async2</span>();   <span class="comment">//会阻塞后面代码的执行</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;async1 end&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async2</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;async2&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">async1</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;start&#x27;</span>)</span><br><span class="line"><span class="comment">// async1 start</span></span><br><span class="line"><span class="comment">// async2</span></span><br><span class="line"><span class="comment">// start</span></span><br><span class="line"><span class="comment">// async1 end</span></span><br></pre></td></tr></table></figure><blockquote><p>await后面的语句相当于放到了Prmise中，下一行以及之后的语句相当于放到了.then中。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async1</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;async1 start&quot;</span>);</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;async2&quot;</span>)</span><br><span class="line">    <span class="title function_">resolve</span>()</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;async1 end&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async2</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;async2&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">async1</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;start&quot;</span>)</span><br><span class="line"><span class="comment">// async1 start</span></span><br><span class="line"><span class="comment">// async2</span></span><br><span class="line"><span class="comment">// start</span></span><br><span class="line"><span class="comment">// async1 end</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async1</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;async1 start&quot;</span>);</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;promise&#x27;</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;async1 end&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">async1</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;start&quot;</span>)</span><br><span class="line"><span class="comment">// async1 start</span></span><br><span class="line"><span class="comment">// promise</span></span><br><span class="line"><span class="comment">// async1 end</span></span><br><span class="line"><span class="comment">// start</span></span><br></pre></td></tr></table></figure><h3 id="题目二十八-✨✨">题目二十八 ✨✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async1</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;async1 start&quot;</span>);</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">async2</span>();</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;async1 end&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async2</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timer&#x27;</span>)</span><br><span class="line">  &#125;, <span class="number">0</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;async2&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">async1</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;start&quot;</span>)</span><br><span class="line"><span class="comment">// async1 start</span></span><br><span class="line"><span class="comment">// async2</span></span><br><span class="line"><span class="comment">// async1 end</span></span><br><span class="line"><span class="comment">// start</span></span><br><span class="line"><span class="comment">// timer</span></span><br></pre></td></tr></table></figure><h3 id="题目二十九-✨✨✨">题目二十九 ✨✨✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async1</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;async1 start&quot;</span>);  <span class="comment">// 2.打印1 async1 start</span></span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">async2</span>();<span class="comment">// 3.相当于new Promise，去里面执行同步代码</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;async1 end&quot;</span>);    <span class="comment">// 8.打印4 async1 end</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;  <span class="comment">//9. 放入到下下下一轮宏任务</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timer1&#x27;</span>)       <span class="comment">// 11 打印7  timer1</span></span><br><span class="line">  &#125;, <span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async2</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;         <span class="comment">//4. 放到下一步宏任务中去</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timer2&#x27;</span>)    <span class="comment">//9. 打印5  timer2</span></span><br><span class="line">  &#125;, <span class="number">0</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;async2&quot;</span>);     <span class="comment">//5. 打印2  async2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">async1</span>();     <span class="comment">//1.开始执行async1函数</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;        <span class="comment">// 6. 放入到下下一轮宏任务中去</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timer3&#x27;</span>)<span class="comment">//10. 打印6 timer3</span></span><br><span class="line">&#125;, <span class="number">0</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;start&quot;</span>)      <span class="comment">//7.打印3  start，然后检查本轮微任务</span></span><br><span class="line"><span class="comment">// async1 start</span></span><br><span class="line"><span class="comment">// async2</span></span><br><span class="line"><span class="comment">// start</span></span><br><span class="line"><span class="comment">// async1 end</span></span><br><span class="line"><span class="comment">// timer2</span></span><br><span class="line"><span class="comment">// timer3</span></span><br><span class="line"><span class="comment">// timer1</span></span><br></pre></td></tr></table></figure><h3 id="题目三十-✨">题目三十 ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fn</span> () &#123;</span><br><span class="line">  <span class="comment">// return await 1234</span></span><br><span class="line">  <span class="comment">// 等同于</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">123</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(res))</span><br><span class="line"><span class="comment">// 123</span></span><br></pre></td></tr></table></figure><blockquote><p>正常情况下，await后面是一个Promise对象，会返回改对象的结果</p></blockquote><h3 id="题目三十一-✨✨✨">题目三十一 ✨✨✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async1</span> () &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;async1 start&#x27;</span>);  <span class="comment">// 2</span></span><br><span class="line">  <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;promise1&#x27;</span>)   <span class="comment">// 3</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;async1 success&#x27;</span>); </span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;async1 end&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;srcipt start&#x27;</span>)   <span class="comment">// 1</span></span><br><span class="line"><span class="title function_">async1</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(res)) </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;srcipt end&#x27;</span>)   <span class="comment">// 4</span></span><br><span class="line"><span class="comment">// srcipt start</span></span><br><span class="line"><span class="comment">// async1 start</span></span><br><span class="line"><span class="comment">// promise1</span></span><br><span class="line"><span class="comment">// srcipt end</span></span><br></pre></td></tr></table></figure><blockquote><p>在async1中await后面的Promise是没有返回值的，也就是它的状态始终是pending状态，因此相当于一直在await，await，await却始终没有响应…<br>所以在await之后的内容是不会执行的，也包括async1后面的 .then。</p></blockquote><h3 id="题目三十二-✨✨">题目三十二 ✨✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async1</span> () &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;async1 start&#x27;</span>); <span class="comment">// 2</span></span><br><span class="line">  <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;promise1&#x27;</span>) <span class="comment">// 3</span></span><br><span class="line">    <span class="title function_">resolve</span>(<span class="string">&#x27;promise1 resolve&#x27;</span>)</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(res)) <span class="comment">//5</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;async1 success&#x27;</span>); <span class="comment">//6</span></span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;async1 end&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;srcipt start&#x27;</span>) <span class="comment">// 1</span></span><br><span class="line"><span class="title function_">async1</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(res)) <span class="comment">//7</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;srcipt end&#x27;</span>) <span class="comment">// 4</span></span><br><span class="line"><span class="comment">// srcipt start</span></span><br><span class="line"><span class="comment">// async1 start</span></span><br><span class="line"><span class="comment">// promise1</span></span><br><span class="line"><span class="comment">// srcipt end</span></span><br><span class="line"><span class="comment">// promise1 resolve</span></span><br><span class="line"><span class="comment">// async1 success</span></span><br><span class="line"><span class="comment">// async1 end</span></span><br></pre></td></tr></table></figure><h3 id="题目三十三-✨✨">题目三十三 ✨✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async1</span> () &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;async1 start&#x27;</span>);  <span class="comment">// 2</span></span><br><span class="line">  <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;promise1&#x27;</span>) <span class="comment">// 3</span></span><br><span class="line">    <span class="title function_">resolve</span>(<span class="string">&#x27;promise resolve&#x27;</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;async1 success&#x27;</span>); <span class="comment">// 5</span></span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;async1 end&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;srcipt start&#x27;</span>)  <span class="comment">// 1</span></span><br><span class="line"><span class="title function_">async1</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res) <span class="comment">// 6</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;promise2&#x27;</span>) <span class="comment">// 4</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timer&#x27;</span>) <span class="comment">// 7</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// srcipt start</span></span><br><span class="line"><span class="comment">// async1 start</span></span><br><span class="line"><span class="comment">// promise1</span></span><br><span class="line"><span class="comment">// promise2</span></span><br><span class="line"><span class="comment">// async1 success</span></span><br><span class="line"><span class="comment">// async1 end</span></span><br><span class="line"><span class="comment">// timer</span></span><br></pre></td></tr></table></figure><h3 id="题目三十四-✨✨">题目三十四  ✨✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async1</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;async1 start&quot;</span>); <span class="comment">// 2</span></span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">async2</span>();</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;async1 end&quot;</span>); <span class="comment">// 6</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async2</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;async2&quot;</span>); <span class="comment">// 3</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;script start&quot;</span>); <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;  </span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;setTimeout&quot;</span>);<span class="comment">//8</span></span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">async1</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolve</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;promise1&quot;</span>); <span class="comment">// 4</span></span><br><span class="line">  <span class="title function_">resolve</span>();</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;promise2&quot;</span>); <span class="comment">//7</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;script end&#x27;</span>) <span class="comment">// 5</span></span><br><span class="line"><span class="comment">// script start</span></span><br><span class="line"><span class="comment">// async1 start</span></span><br><span class="line"><span class="comment">// async2</span></span><br><span class="line"><span class="comment">// promise1</span></span><br><span class="line"><span class="comment">// script end</span></span><br><span class="line"><span class="comment">// async1 end</span></span><br><span class="line"><span class="comment">// promise2</span></span><br><span class="line"><span class="comment">// setTimeout</span></span><br></pre></td></tr></table></figure><h3 id="题目三十五-✨✨">题目三十五  ✨✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">testSometing</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;执行testSometing&quot;</span>); <span class="comment">// 2</span></span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;testSometing&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">testAsync</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;执行testAsync&quot;</span>); <span class="comment">// 6</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="string">&quot;hello async&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;test start...&quot;</span>); <span class="comment">// 1</span></span><br><span class="line">  <span class="keyword">const</span> v1 = <span class="keyword">await</span> <span class="title function_">testSometing</span>();</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(v1); <span class="comment">//5</span></span><br><span class="line">  <span class="keyword">const</span> v2 = <span class="keyword">await</span> <span class="title function_">testAsync</span>();</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(v2); <span class="comment">// 8</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(v1, v2);<span class="comment">//9</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">test</span>();</span><br><span class="line"><span class="keyword">var</span> promise = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;promise start...&quot;</span>); <span class="comment">// 3</span></span><br><span class="line">  <span class="title function_">resolve</span>(<span class="string">&quot;promise&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">promise.<span class="title function_">then</span>(<span class="function"><span class="params">val</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(val)); <span class="comment">// 7</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;test end...&quot;</span>); <span class="comment">// 4</span></span><br><span class="line"><span class="comment">// test start...</span></span><br><span class="line"><span class="comment">// 执行testSometing</span></span><br><span class="line"><span class="comment">// promise start...</span></span><br><span class="line"><span class="comment">// test end...</span></span><br><span class="line"><span class="comment">// testSometing</span></span><br><span class="line"><span class="comment">// 执行testAsync</span></span><br><span class="line"><span class="comment">// promise</span></span><br><span class="line"><span class="comment">// hello async</span></span><br><span class="line"><span class="comment">// testSometing hello async</span></span><br></pre></td></tr></table></figure><h2 id="六、async处理错误">六、async处理错误</h2><h3 id="题目三十六-✨">题目三十六  ✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async1</span> () &#123;</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">async2</span>();</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;async1&#x27;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;async1 success&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async2</span> () &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;async2&#x27;</span>) <span class="comment">// 1</span></span><br><span class="line">    <span class="title function_">reject</span>(<span class="string">&#x27;error&#x27;</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">async1</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(res))</span><br><span class="line"><span class="comment">// async2</span></span><br><span class="line"><span class="comment">// Uncaught (in promise) error</span></span><br></pre></td></tr></table></figure><blockquote><p>await后面跟着一个rejected的promise，那么就会抛出错误，不再往下执行</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async1</span> () &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;async1&#x27;</span>);</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;error!!!&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;async1 success&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">async1</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(res))</span><br></pre></td></tr></table></figure><blockquote><p>同上</p></blockquote><h3 id="题目三十七-✨✨">题目三十七 ✨✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async1</span> () &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="string">&#x27;error!!!&#x27;</span>)</span><br><span class="line">  &#125; <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e) <span class="comment">// 2</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;async1&#x27;</span>); <span class="comment">// 3</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;async1 success&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">async1</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(res)) <span class="comment">//4</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;script start&#x27;</span>)<span class="comment">//1</span></span><br><span class="line"><span class="comment">// script start</span></span><br><span class="line"><span class="comment">// error!!!</span></span><br><span class="line"><span class="comment">// async1</span></span><br><span class="line"><span class="comment">// async1 success</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async1</span> () &#123;</span><br><span class="line">  <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="string">&#x27;error!!!&#x27;</span>)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function"><span class="params">e</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(e))</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;async1&#x27;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;async1 success&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">async1</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(res))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;script start&#x27;</span>)</span><br><span class="line"><span class="comment">// 同上</span></span><br></pre></td></tr></table></figure><h2 id="七、综合题">七、综合题</h2><h3 id="题目三十八-✨✨">题目三十八 ✨✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">first</span> = (<span class="params"></span>) =&gt; (<span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>); <span class="comment">//1</span></span><br><span class="line">  <span class="keyword">let</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">7</span>); <span class="comment">//2</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123; </span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">5</span>); <span class="comment">//6</span></span><br><span class="line">      <span class="title function_">resolve</span>(<span class="number">6</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(p) <span class="comment">//7-1</span></span><br><span class="line">    &#125;, <span class="number">0</span>)</span><br><span class="line">    <span class="title function_">resolve</span>(<span class="number">1</span>); </span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="title function_">resolve</span>(<span class="number">2</span>); </span><br><span class="line">  p.<span class="title function_">then</span>(<span class="function">(<span class="params">arg</span>) =&gt;</span> &#123; </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arg); <span class="comment">// 4-1</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;));</span><br><span class="line"><span class="title function_">first</span>().<span class="title function_">then</span>(<span class="function">(<span class="params">arg</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(arg); <span class="comment">//5-2</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">4</span>); <span class="comment">//3</span></span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line"><span class="comment">// 7</span></span><br><span class="line"><span class="comment">// 4</span></span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="comment">// 5</span></span><br><span class="line"><span class="comment">// Promise&#123;&lt;resolved&gt;: 1&#125;</span></span><br></pre></td></tr></table></figure><h3 id="题目三十九-✨✨">题目三十九 ✨✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">async1</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;async1&#x27;</span>); <span class="comment">// 2-async1</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timer1&#x27;</span>) <span class="comment">//7-timer1</span></span><br><span class="line">  &#125;, <span class="number">2000</span>)</span><br><span class="line">  <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;promise1&#x27;</span>) <span class="comment">//3-promise1</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;async1 end&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;async1 success&#x27;</span></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;script start&#x27;</span>); <span class="comment">// 1-script start</span></span><br><span class="line"><span class="title function_">async1</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(res));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;script end&#x27;</span>); <span class="comment">//4-script end</span></span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="number">1</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="number">2</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="number">3</span>))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="number">4</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(res)) <span class="comment">//5-1</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timer2&#x27;</span>) <span class="comment">//6-timer2</span></span><br><span class="line">&#125;, <span class="number">1000</span>)</span><br><span class="line"><span class="comment">// script start</span></span><br><span class="line"><span class="comment">// async1</span></span><br><span class="line"><span class="comment">// promise1</span></span><br><span class="line"><span class="comment">// script end</span></span><br><span class="line"><span class="comment">// 1 </span></span><br><span class="line"><span class="comment">// timer2</span></span><br><span class="line"><span class="comment">// timer1</span></span><br></pre></td></tr></table></figure><blockquote><p>这里需要注意的一点是：async函数中await的new Promise要是没有返回值的话则不执行后面的内容。</p></blockquote><h3 id="题目四十-✨✨✨">题目四十 ✨✨✨</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> p1 = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">resolve</span>(<span class="string">&#x27;resolve3&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timer1&#x27;</span>) <span class="comment">//3-timer1</span></span><br><span class="line">  &#125;, <span class="number">0</span>)</span><br><span class="line">  <span class="title function_">resolve</span>(<span class="string">&#x27;resolve1&#x27;</span>);</span><br><span class="line">  <span class="title function_">resolve</span>(<span class="string">&#x27;resolve2&#x27;</span>);</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res) <span class="comment">//1-resolve1</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(p1) <span class="comment">//4-p1返回的是finally最终的值，所以也是undefined</span></span><br><span class="line">  &#125;, <span class="number">1000</span>)</span><br><span class="line">&#125;).<span class="title function_">finally</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;  <span class="comment">//finally中是接收不到Promise结果的，这个res是个迷惑项</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;finally&#x27;</span>, res) <span class="comment">// 2-finally-undefined</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// resolve1</span></span><br><span class="line"><span class="comment">// finally,undefined</span></span><br><span class="line"><span class="comment">// timer1</span></span><br><span class="line"><span class="comment">// Promise &#123;resolve:undefined&#125;</span></span><br></pre></td></tr></table></figure><h2 id="八、大厂面试题">八、大厂面试题</h2><h3 id="题目四十一–使用Promise每秒输入1-2-3">题目四十一–使用Promise每秒输入1 2 3</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">arr.<span class="title function_">reduce</span>(<span class="function">(<span class="params">p, x</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> p.<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">r</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="title function_">r</span>(<span class="variable language_">console</span>.<span class="title function_">log</span>(x)), <span class="number">1000</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;, <span class="title class_">Promise</span>.<span class="title function_">resolve</span>())</span><br></pre></td></tr></table></figure><h3 id="题目四十二–使用Promise实现红绿灯交替重复亮">题目四十二–使用Promise实现红绿灯交替重复亮</h3><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 红灯3秒亮一次，黄灯2秒亮一次，绿灯1秒亮一次</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">red</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">yellow</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;yellow&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">green</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;green&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line">const light = <span class="keyword">function</span> (<span class="params">timer, cb</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Promise(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      cb()</span><br><span class="line">      resolve()</span><br><span class="line">    &#125;, timer)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">const step = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  Promise.resolve().then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> light(<span class="number">3000</span>, red)</span><br><span class="line">  &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> light(<span class="number">2000</span>, green)</span><br><span class="line">  &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> light(<span class="number">1000</span>, yellow)</span><br><span class="line">  &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> step()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">step();</span><br></pre></td></tr></table></figure><h3 id="题目四十三：封装一个异步加载图片的方法">题目四十三：封装一个异步加载图片的方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">loadImg</span>(<span class="params">url</span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> img = <span class="keyword">new</span> <span class="title class_">Image</span>();</span><br><span class="line">    img.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;一张图片加载完成&#x27;</span>)</span><br><span class="line">      <span class="title function_">resolve</span>(img)</span><br><span class="line">    &#125;</span><br><span class="line">     img.<span class="property">onerror</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Could not load image at&#x27;</span> + url));</span><br><span class="line">    &#125;;</span><br><span class="line">    img.<span class="property">src</span> = url;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阶段三：V8工作原理</title>
      <link href="/A3%E9%98%B6%E6%AE%B5%E4%B8%89%EF%BC%9AV8%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/"/>
      <url>/A3%E9%98%B6%E6%AE%B5%E4%B8%89%EF%BC%9AV8%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="12-栈空间和堆空间：数据是如何存储的？">12 | 栈空间和堆空间：数据是如何存储的？</h2><blockquote><p>这节讲解的是<strong>JavaScript的内存机制</strong>。<br>首先，我们知道JavaScript是弱类型动态语言。<br>接着，JavaScript的数据类型一共是八种:Boolean｜ String ｜ Number | Undefined | Null | BigInt | Symbol | Object<br>前七种为基本数据类型，他们存在栈中，后一种为引用数据类型，它存在堆中。</p></blockquote><h2 id="13-｜-垃圾回收：垃圾数据是如何自动回收的？">13 ｜ 垃圾回收：垃圾数据是如何自动回收的？</h2><h3 id="不同语言的垃圾回收策略">不同语言的垃圾回收策略</h3><blockquote><ul><li>通常情况下，垃圾回收分为手动回收和自动回收两种策略。</li><li>手动垃圾回收：例如C++,何时分配内存、何时销毁是由代码控制的。</li><li>自动垃圾回收：JavaScript、Java、Python等，产生的垃圾数据是由垃圾回收器释放的。</li></ul></blockquote><h3 id="调用栈中的数据是如何回收的">调用栈中的数据是如何回收的</h3><blockquote><p>当一个函数执行完毕，JavaScript引擎会通过向下移动ESP(记录当前执行状态的指针)来销毁该函数保存在<strong>栈</strong>中的执行上下文。</p></blockquote><h3 id="堆中的数据是如何回收的">堆中的数据是如何回收的</h3><blockquote><p>要回收堆中的垃圾数据，就需要用到JavaScript中的垃圾回收器了。</p></blockquote><h3 id="代际假说">代际假说</h3><blockquote><p>代际假说(The Generaltional Hypothesis),是垃圾回收领域一个重要的术语，后续垃圾回收策略都是建立在该假说的基础上的。<br>特点一：大部分对象在内存中的时间很短，简单来说，很多对象一经分配内存，很快就变得不可访问。<br>特点二：不死的对象，会活的更久。</p></blockquote><h3 id="堆中区域">堆中区域</h3><blockquote><p>V8中会把堆分为<strong>新生代</strong>和<strong>老生代</strong>两个区域。新生代存放的是生存时间短的对象，老生代存放的是生存时间久的对象。<br>堆中的这两块区域，V8分别使用两个不同的垃圾回收器，以便高效的实施垃圾回收。<br>副垃圾回收器，主要负责新生代区域的垃圾回收。<br>主垃圾回收器，主要负责老生代区域的垃圾回收。</p></blockquote><h3 id="垃圾回收器工作流程">垃圾回收器工作流程</h3><blockquote><ol><li>标记空间中的活动对象和不活动对象。</li><li>回收非活动对象所占据的内存。</li><li>内存整理(主垃圾回收器产生的内存碎片会导致出现不连续内存空间，所以需要整理)</li></ol></blockquote><h3 id="副垃圾回收器">副垃圾回收器</h3><blockquote><ol><li>负责新生代区域的垃圾回收</li><li>大多数小的对象会分配至此。</li><li>新生代用Scavenge算法处理–》一半对象区域，一半空闲区域。</li><li>存活的对象放入对象区域，然后垃圾清理阶段，将对象区域中活跃对象复制至空闲区域，完成复制后，两个区域进行角色转换。</li><li>经过两次垃圾回收依然还存活的对象，会被移到老生区中。</li></ol></blockquote><h3 id="主垃圾回收器">主垃圾回收器</h3><blockquote><ol><li>负责老生代区域的垃圾回收。</li><li>除了新生区中移过来的对象，一些大对象会被直接分配到老生区</li><li>老生区对象的特点:存活时间长，占用内存空间大。</li><li>主垃圾回收器采用的是标记-清除的算法进行垃圾回收。</li></ol></blockquote><h3 id="全停顿">全停顿</h3><blockquote><p>当执行垃圾回收算法的时候，JS脚本会暂停下来，这种行文叫做全停顿。<br>为了降低全停顿的卡顿影响，V8通过<strong>增量标记</strong>算法将完整的垃圾回收任务分为一个个小任务，并与JS脚本交替执行。</p></blockquote><h2 id="14-编译器和解释器：V8是如何执行一段JavaScript代码的？">14 | 编译器和解释器：V8是如何执行一段JavaScript代码的？</h2><blockquote><p>了解V8是如何执行一段JavaScript代码，可以让我们对babel、EsLint、Vue、React等其底层实现机制有一个更充分的认识。<br>首先，我们需要搞懂一些概念和原理：<strong>编译器(Compiler)</strong>、<strong>解释器(Interpreter)</strong>、<strong>抽象语法树(AST)</strong>、<strong>字节码(Bytecode)</strong>、**即时编译器(JIT)**等。</p></blockquote><h3 id="编译器和解释器">编译器和解释器</h3><blockquote><p>首先我们必须得知道编译型语言和解释型语言的区别。<br>编译型语言就是程序执行前，编辑器经过编译，成二进制文件，程序可直接运行二进制文件。如C/C++、Go<br>解释器语言是在运行时动态解释和执行。如JS、Python等。</p></blockquote><h4 id="编译器、解释器执行流程">编译器、解释器执行流程</h4><blockquote><p>编译型语言的编译过程：</p><ol><li>编译器对源代码进行词法分析、语法分析，生成抽象语法树(AST)</li><li>优化代码，生成机器码、二进制文件。</li><li>编译成功，生成可执行文件。编译失败抛出异常。<br>解释型语言解释过程：</li><li>解释器对源代码进行词法分析、语法分析，生成抽象语法树(AST)</li><li>基于抽象语法树生成字节码。</li><li>根据字节码执行程序、输出结果。</li></ol></blockquote><h3 id="V8是如何执行一段JavaScript代码的">V8是如何执行一段JavaScript代码的</h3><blockquote><p>V8执行过程中，既有解释器又有编译器。其执行流程为：</p></blockquote><h4 id="1-生成抽象语法树-AST-和执行上下文">1. 生成抽象语法树(AST)和执行上下文</h4><blockquote><p>将源代码转换成抽象语法树，并生成执行上下文。<br>过程就是这么个过程，但是抽象语法树的理解我们要展开。</p><ol><li>无论编译型语言还是解释型语言，都会将源代码生成AST。</li><li>AST的结构与代码结构类似。<br>(Babel工作原理就是：ES6源码-&gt;ES6AST-&gt;ES5AST-&gt;ES5源码)</li><li>生成ATS经过两个阶段：</li></ol><ul><li>第一阶段是分词(词法分析),将一行行源码拆解成不可再分的最小当个字符或字符串token。</li><li>第二阶段是解析(语法分析),将token根据语法规则生成AST</li></ul></blockquote><h4 id="2-生成字节码">2.生成字节码</h4><blockquote><p>解释器登场，根据AST生成字节码、解释字节码。<br>一开始V8没有字节码，之前是直接生成机器码，这样的效率很高，但是很占内存，随着移动互联网的发展，为了解决内存占用过高问题，而引入了字节码,即字节码的内存占用要比机器码小很多。<br>字节码是介于AST和机器码之间的一种代码，它需要通过解释器将其转换为机器码后才能执行。</p></blockquote><h4 id="3-执行代码">3.执行代码</h4><blockquote><p>解释器除了生成字节码，还要解释字节码，后台编译器会把热点字节码编译成高效的机器码，这种字节码配合解释器和编译器的技术，就叫做即时编译(JIT).使用这种技术的除了V8还有Java和Python虚拟机等都使用了。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 浏览器工作原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浏览器工作原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阶段二：浏览器中JavaScript的执行机制</title>
      <link href="/A2%E9%98%B6%E6%AE%B5%E4%BA%8C%EF%BC%9A%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%ADJavaScript%E7%9A%84%E6%89%A7%E8%A1%8C%E6%9C%BA%E5%88%B6/"/>
      <url>/A2%E9%98%B6%E6%AE%B5%E4%BA%8C%EF%BC%9A%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%ADJavaScript%E7%9A%84%E6%89%A7%E8%A1%8C%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1>阶段二:浏览器中JavaScript的执行机制</h1><h2 id="07｜变量提升-JavaScript中的代码是按顺序执行的吗？">07｜变量提升:JavaScript中的代码是按顺序执行的吗？</h2><blockquote><p>只有理解了JavaScript执行上下文，才能更好的理解JavaScript语言本身：变量提升、作用域、闭包等。</p></blockquote><h3 id="变量提升">变量提升</h3><blockquote><p>变量提升指的是:JS代码在执行过程中，JS引擎会把变量的声明部分和函数的声明部分提升到代码开头的行为，变量提升后，会给变量设置默认值，这个值就是我们熟悉的undefined。</p></blockquote><h3 id="JavaScript的代码执行流程">JavaScript的代码执行流程</h3><blockquote><p>JavaScript是<strong>先编译后执行</strong>，在编译阶段变量的声明和函数的声明提升到代码开头,被JS引擎放入到内存中去了。</p></blockquote><h3 id="编译阶段">编译阶段</h3><blockquote><p>输入一段代码，经过JS引擎编译后，会生成两部分内容：<strong>执行上下文</strong>和<strong>可执行代码</strong>。<br>执行上下文是JavaScript执行一段代码的运行环境：比如调用一个函数，就会进入这个函数的执行上下文，确定函数在执行期间的诸如this、变量、对象以及函数等。<br>要谨记在执行上下文中存在一个变量环境(Variable Enviroment)和词法环境的对象，变量环境对象中保存了变量提升的内容。</p></blockquote><h3 id="执行阶段">执行阶段</h3><blockquote><p>JS引擎执行可执行代码，按照顺序一行一行执行。执行过程中遇到一些变量或者函数就去变量变量环境中查找。</p></blockquote><h3 id="总结">总结</h3><blockquote><p>JavaScript代码执行过程中，需要先做变量提升，这是因为代码执行前需要先编译，编译阶段JS引擎会将变量和函数的存放到变量环境中去，变量默认值为undefined，执行阶段，JS引擎会从变量环境中查找变量和函数，若在编译阶段，存在两个相同函数，会被第二个覆盖掉。<br>核心是要清楚JavaScript的执行机制：先编译后执行。</p></blockquote><h2 id="08｜调用栈：为什么JavaScript代码会出现栈溢出？">08｜调用栈：为什么JavaScript代码会出现栈溢出？</h2><blockquote><p>学习完执行上下文，本章学习调用栈。<br>学习调用栈我们可以了解JavaScript引擎背后的工作原理、有调试JavaScript代码的能力。</p></blockquote><blockquote><p>调用栈是用来管理函数调用关系的一种数据结构–这个函数调用另外一个函数。</p></blockquote><h3 id="函数调用">函数调用</h3><blockquote><p>通过几行代码来看函数调用</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a =<span class="number">1</span>;</span><br><span class="line"><span class="function">function <span class="title">add</span>()</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> b=<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">add</span>()</span><br></pre></td></tr></table></figure><blockquote><ol><li>JS引擎为上面这段代码创建全局执行上下文，将全局变量和函数都保存在全局执行上下文的变量环境中。</li><li>执行到add，从全局执行上下文中取出add函数</li><li>对add这个函数创建，函数执行上下文和可执行代码</li><li>此刻，拥有两个执行上下文。</li><li>执行上下文的管理通过叫做栈的数据结构管理(后进先出原则)–想像一个盒子，将全局执行上下文当如盒底部、再放入函数执行上下文。</li></ol></blockquote><h3 id="JS的调用栈">JS的调用栈</h3><blockquote><p>通常把管理执行上下文的栈成为执行上下文栈，又称调用栈，调用栈是引擎追踪函数执行的一个机制。<br>可以通过查看浏览器的call stack或者在函数中输出console.trace()来查看调用栈。</p></blockquote><h3 id="栈递归溢出问题">栈递归溢出问题</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function <span class="built_in">runStack</span>(n)&#123;</span><br><span class="line">  <span class="built_in">if</span>(n===<span class="number">0</span>) return <span class="number">100</span>;</span><br><span class="line">  return <span class="built_in">runStack</span>(n-<span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 修改后</span></span><br><span class="line">function <span class="built_in">runStack</span>(n)&#123;</span><br><span class="line">  <span class="built_in">if</span>(n===<span class="number">0</span>) return <span class="number">100</span>;</span><br><span class="line">  return <span class="built_in">setTimeout</span>(function()&#123;<span class="built_in">runStack</span>(n-<span class="number">2</span>)&#125;,<span class="number">0</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="09-块级作用域-var缺陷以及为什么要引入let和const">09|块级作用域:var缺陷以及为什么要引入let和const</h2><blockquote><ul><li>ES6之前没有块级作用域</li><li>变量提升使得变量容易在不被察觉的情况下被覆盖掉。</li><li>变量提升使本应销毁的变量没有被销毁</li></ul></blockquote><h3 id="ES6是如何解决变量提升带来的缺陷">ES6是如何解决变量提升带来的缺陷</h3><blockquote><ul><li>ES6引入了let和const关键字，从而拥有了块级作用域。<br>引入let后，一段代码的执行流程变为：</li><li>编译并创建执行上下文：</li><li>函数内部通过var声明的变量，在编译阶段都被存放到变量环境中去了。</li><li>通过let声明的变量，在编译阶段被存放到词法环境中去了。</li><li>在函数的作用域内部，let声明的变量并没有被放到词法环境中去。</li><li>在词法环境内部，维护了一个小型栈结构，栈底是函数最外层的变量，进入一个作用域后，就会把该作用域内部的变量压到栈顶。</li></ul></blockquote><blockquote><p>块级作用域就是通过词法环境的栈结构来实现的，而变量提升是通过变量环境来实现，通过两者结合，JavaScript引擎也就同时支持了变量提升和块级作用域。</p></blockquote><h2 id="10-作用域和闭包：代码出现相同的变量，JavaScript引擎是如何选择的">10 | 作用域和闭包：代码出现相同的变量，JavaScript引擎是如何选择的</h2><blockquote><p>理解作用域链是理解闭包的基础，简单总结下作用域链，然后通过作用域链来理解什么是闭包。</p></blockquote><h3 id="作用域链">作用域链</h3><blockquote><p>其实在每个执行上下文变量环境中，都包含了一个外部引用，用来指向外部的执行上下文，我们把这个外部引用称为outer。<br>上句话明白之后，我们接着分析。<br>当一段代码中使用了一个变量，首先在&quot;当前的执行上下文&quot;的词法环境中查找该变量，若没有找到，继续在变量环境中去查找该变量。<br>如何它依旧没有找到，那么JavaScript引擎就会继续在outer所指向的执行上下文中查找。<br><strong>我们就把这个查找变量过程的链条称为作用域链</strong>。</p></blockquote><blockquote><p>到这里，还需要解决的一个问题是，foo函数中调用bar函数，为什么bar函数内部的外部引用执行的是全局执行上下文，而不是foo函数的执行上下文呢？</p></blockquote><h3 id="词法作用域">词法作用域</h3><blockquote><p>词法作用域是指作用域是由代码中<strong>函数声明的位置</strong>来决定的，所有词法作用域是静态的作用域，通过它能够预测代码在执行过程中如何查找标识符。<br>词法作用域是代码编译阶段就决定好的，和函数是怎么调用的没有关系，即之和函数声明的位置有关系。</p></blockquote><h3 id="闭包">闭包</h3><blockquote><p>了解了作用域链，接着我们就要来聊聊闭包了。<br>确切的说，了解了变量环境、词法环境和作用域链等概念，来理解闭包就容易多了。<br>先看段代码：</p></blockquote><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> myName = <span class="string">&quot;内部变量&quot;</span></span><br><span class="line">    let test1 = <span class="number">1</span></span><br><span class="line">    const test2 = <span class="number">2</span></span><br><span class="line">    <span class="keyword">var</span> innerBar = &#123;</span><br><span class="line">        <span class="attr">getName</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="built_in">console</span>.<span class="built_in">log</span>(test1)</span><br><span class="line">            <span class="keyword">return</span> myName</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">setName</span>:<span class="keyword">function</span>(<span class="params">newName</span>)&#123;</span><br><span class="line">            myName = newName</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> innerBar</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> bar = foo()</span><br><span class="line">bar.setName(<span class="string">&quot;外部传入&quot;</span>)</span><br><span class="line">bar.getName()</span><br><span class="line"><span class="built_in">console</span>.<span class="built_in">log</span>(bar.getName())</span><br></pre></td></tr></table></figure><blockquote><p>分析上面代码，调用栈是这么进行的：<br>首先，全局执行上下文压入栈底，其中的变量环境为bar == undefined,词法环境为空，其作用域链包含的外部引用outer为空。<br>接着，执行foo函数的时候，形成了foo函数的执行上下文，它的变量环境为 myName=‘内部变量’，innerBar为函数，词法环境为test1为1，test2为2，其作用域链包含的外部outer(通过函数的定义位置)为全局作用域。<br>然后foo函数执行完毕之后，一般情况下我们分析内部的变量环境和词法环境就会清空，但是由于foo函数返回的innerBar还在使用者test1和myName这两个变量，所以虽然foo函数的执行上下文从栈顶弹出，但是用到的两个变量还是依旧保存在了内存中，而这两个变量除了setName和getName这两个方法可以访问，其他无论什么情况都访问不了，这个时候我们称：foo函数为闭包。</p></blockquote><h3 id="闭包定义">闭包定义</h3><blockquote><p>在JavaScript中，<br>根据词法作用域的规则，内部函数总是可以访问其外部函数中声明的变量，<br>当通过调用一个外部函数返回一个内部函数后，<br>即使外部函数已经执行结束了，但内部函数中引用外部函数的变量依然保存在内存中，<br>我们就把这些变量的集合称为闭包。<br>比如外部函数是foo，那么这些变量的集合就称为foo函数的闭包。</p></blockquote><h3 id="闭包是怎么回收的">闭包是怎么回收的</h3><blockquote><p>之所以需要关注闭包的回收，是因为如果闭包使用不正确，会很容易造成内存泄漏。<br>通常，如果引用闭包的函数是一个全局变量，那么变量会一直存在页面直到页面关闭，但如果这个闭包以后不再使用的话，就会造成内存泄漏。<br>如果引用闭包的是一个局部变量，那么当函数销毁时，在下次JavaScript引擎执行垃圾回收时，会判断闭包这块内容是否已经不再使用，若不再使用，那额就回收这块内存。<br>最后，记住一个原则：如果该闭包一直使用，那么它可以作为全局变量而存在，如果使用频率不高且占用内存较大，那么尽量让它称为一个局部变量。</p></blockquote><h2 id="11-this-从JavaScript执行上下文的视角学习this">11 | this:从JavaScript执行上下文的视角学习this</h2><blockquote><p>作用域链和this是两套不同的系统，它们之间没有太多的联系。<br>在前文中，我们提到了执行上下文包含了：<strong>变量环境</strong>、<strong>词法环境</strong>、<strong>外部环境outer</strong>，这一节加上我们要分析的<strong>this</strong>，也就是四个部分。</p></blockquote><blockquote><p>this是和执行上下文进行绑定的，而我们已经知道了执行上下文包括全局执行上下文、函数执行上下文以及eval执行上下文，那么对应的this也只要这三种，撇去这个eval中的this，我们重点关注全局执行上下文中的this和函数执行上下文中的this。</p></blockquote><blockquote><p>全局执行上下文中的this，通过控制台打印的方式验证，我们知道这个this就是window。<br>然后，重点分析的就是函数中的this了,从下面最简单代码开始分析。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">foo</span>()</span><br></pre></td></tr></table></figure><blockquote><p>打印结果为this，也就是：“默认情况下调用一个函数，函数内部的执行上下文中的this也是指向Window对象”<br>那么，能不能设置函数内执行上下文中this的指向呢？That must be!</p></blockquote><h3 id="通过call、apply、bind方法设置">通过call、apply、bind方法设置</h3><blockquote><ul><li>call apply bind因为继承自Funtion.prototype,所以函数、数组、对象的实例都可以使用这三个方法。</li><li>call方法如果没有参数、或者参数为null或者参数为undefined，那么this都是指向Window对象，如果有参数，支持传入两个参数，第一个参数为this的指向，后面的参数为this指向的那个对象所传入的参数，需要特别注意的是这个参数需要一个个的传入，即不能以数组形式传入。</li><li>apply方法与apply类似，唯一的区别是第二个传入的参数将以数组的形式传入。</li><li>bind方法是非立即执行的一个函数，即用于执行函数内部this的指向—执行时所在的区域，传递参数与call方法相同。</li></ul></blockquote><blockquote><p>应用：找出一个数组const arr = [1,10,7]中最大的数:Math.max.call(null,…arr) or Math.max.apply(null,arr)</p></blockquote><h3 id="通过调用对象方法设置">通过调用对象方法设置</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myObj = &#123;</span><br><span class="line">  <span class="attr">name</span>:<span class="string">&#x27;liugezhou&#x27;</span>,</span><br><span class="line">  <span class="attr">showThis</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">myObj.<span class="title function_">showThis</span>()</span><br></pre></td></tr></table></figure><blockquote><p>以上代码输出的为myObj对象，通过这个小例子，我们可以得出结论：<br>使用对象调用<strong>内部的一个方法</strong>，该方法的this是指向对象本身的。</p></blockquote><h3 id="通过构造函数中设置">通过构造函数中设置</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">function <span class="title">CreateObj</span>()</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.name=<span class="string">&#x27;liugezhou&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> myObj = <span class="keyword">new</span> CreateObj()</span><br></pre></td></tr></table></figure><blockquote><p>这几行代码的理解，可以让我们对new一个对象内部过程到底发生了什么，产生深刻的理解。<br>首先，new的时候呢，创建了一个临时 空对象，<br>然后，调用CreateObj的call方法，将临时对象作为参数传入<br>接着，执行CreateObj方法的时候，内部的this就是这个临时对象<br>最后返回这个临时对象，也就得到了我们的myObj。<br>¸</p></blockquote><h3 id="this的设计缺陷和应对方案">this的设计缺陷和应对方案</h3><ol><li>嵌套函数中的this不会从外层函数中继承。</li></ol><blockquote><p>也就是说在一个对象中定义个方法，输出的this为这个对象，然后这个对象中的方法继续定义个方法，输出的this执行的就是window，因此在解决this执行的时候，可以在该对象内部的方法中定义一个变量that指向this，然后这个对象中方法的方法输出的that就是该对象。<br>当然，我们现在的做法一般是在该对象内部的方法中的方法使用ES6的箭头函数，这样就不用再去定义一个中间变量了。<br>也就告诉我们箭头函数不会创建自己的执行上下文，箭头函数中的this取决于他的外部函数。</p></blockquote><ol start="2"><li>普通函数中的this默认指向全局对象Window</li></ol><blockquote><p>这个原理我们已经清楚，这也是一个设计缺陷，在我们编写代码的时候，并不希望函数中的this是指向全局的，因此会容易造成误操作，，像我们前面学的，通过call方法来改变this指向。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 浏览器工作原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浏览器工作原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*49):Go back to basics</title>
      <link href="/202212(3.21-3.27)/"/>
      <url>/202212(3.21-3.27)/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本周是2022年的第十二周(3.21-3.27)–每周小结的第49期，这里记录过去一周，我的一些小总结。<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/202212.mtaynrxk474.webp" alt="Basic"></p></blockquote><span id="more"></span><h2 id="Go-back-to-basics">Go back to basics</h2><blockquote><p><strong>很多人的一生都在不停的拔刀挥刀，每天训练成千上万次，就是为了等待属于自己的那个时刻。</strong><br>来，记录下这周看到的两个小鸡汤故事。</p><p>一个机长在飞行的时候两侧引擎吸入飞鸟同时停止运转，结果机长凭借高超的驾驶技术将飞机迫降到了纽约的一条河面上，所有乘客全部生还，机长一生的训练和驾驶经验似乎就是为了这个神奇的一天。</p><p>另一个例子是加拿大议会的侍卫长，他是个行政人员，但每周坚持射击和体能训练。2014年一个枪手杀死一人冲入议会，侍卫长冲上去，在恐怖分子举枪射击之际，一个漂亮的侧扑翻滚，然后冷静的开枪击毙了歹徒。他说，我的一生都在为此刻准备着。</p><p>然后回到题眼，what’s the meaning of Go back to basics?</p></blockquote><!--more --><h2 id="Mike-Teacher">Mike Teacher</h2><blockquote><p>上回说到，英语开始记录电影台词。<br>而这周的某天，我突然意识到我掌握的英语单词在口语交流、日常运用中大多数是够用了的，缺憾在于少于交流和使用，或者说应当换种方式去感受下。<br>然后在Youtube找了一个英语老师–MikeTeacher。</p><p>总共16节课，一节课为5到8分钟，目前学了三节课。<br>第一节就是 Go back to basic，这里是笔记：<a href="https://www.yuque.com/liugezhou/daipp3/rgg8im">https://www.yuque.com/liugezhou/daipp3/rgg8im</a><br>第一节的内容非常的简单，就是117个最常用的名词、动词、形容词、基础单词、介词。这些我们在初高中都学过。<br>第二节的内容也相较简单–625 words across the world，这里是笔记:<a href="https://www.yuque.com/liugezhou/daipp3/fo49uq">https://www.yuque.com/liugezhou/daipp3/fo49uq</a><br>列举了625个单词在在百分之六十的场景都会用到，就是一些阿狗阿猫的基础单词。<br>第三节的内容对我来说相对有点意思–50 ways to start a sentence in English，这里是课程内容:<a href="https://www.yuque.com/liugezhou/daipp3/zudrw3">https://www.yuque.com/liugezhou/daipp3/zudrw3</a><br>一些非常简单的句子，如果掌握完好，对口语交流很有帮助。</p><p>然后，下一步，我要去找几个外国的小伙伴，交流交流，实践实践，Wakaka。</p></blockquote><h2 id="个人所得税退税">个人所得税退税</h2><blockquote><p>近日发现：个人所得税退税还可以对两年前的已结算完的税进行重新申报。<br>于是，找了个家里的老人身份证进行重新申报、审核。<br>一下子又多退出来好几千，还挺香的。</p></blockquote><h2 id="观点">观点</h2><blockquote><p>有本不记得是什么书的书，有个观点说是：<br><em>但凡一件事我们都应该有自己的观点，对于这观点，我们应该先说清楚他，再坚持它，再尝试否定它。</em></p></blockquote><h2 id="写出我心">写出我心</h2><blockquote><p>写作不需要太多物质条件的事情–你只需要普通的一张纸、一支笔或者一台电脑，加上你的想法，就可以解决问题。这本书的作者，为此赋诗一首：<br><em>胸中感知何处安？秋色月明何时来？</em><br><em>蓝莓颗颗知何味？车马行行何人盼？</em><br><em>何人恋恋有佳人？何人所思何人看？</em><br>写作造就了你胸中之自信，让你的精神觉醒。</p></blockquote><h2 id="本周小结">本周小结</h2><blockquote><p>粗略的一篇读书笔记：《七节物理极简课》<br>webpack技术文档一篇<br>英语学习三个小视频笔记三份<br>浏览器工作原理阶段二再学习文档一篇<br>跑步6公里<br>超能陆战队英文台词十分钟<br>简短周报一篇</p></blockquote><pre><code>So,Let's go hearing the song for the Monday blue.&lt;br /&gt;See you next week.</code></pre>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>七堂极简物理课</title>
      <link href="/read001-%E4%B8%83%E5%A0%82%E6%9E%81%E7%AE%80%E7%89%A9%E7%90%86%E8%AF%BE/"/>
      <url>/read001-%E4%B8%83%E5%A0%82%E6%9E%81%E7%AE%80%E7%89%A9%E7%90%86%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/image.z3lruw59b40.webp" alt="七堂极简物理课"></p><span id="more"></span><h2 id="介绍">介绍</h2><blockquote><p>七堂极简物理课是意大利作家卡洛-罗韦利，湖南科学技术出版社与2016年出版，这本书向读者讲述的是20世纪以来现代物理学的伟大理论发现。全文2.8万字，短小精悍，非常简单易懂，书的开头这么介绍：只有诗意的讲述，没有科学背景的人也能轻松读懂。<br>读起来确实很简单，下面运用我极致的总结如下。</p></blockquote><h2 id="第一课：最美的理论">第一课：最美的理论</h2><blockquote><p>这个最美的理论，说的是爱因斯坦的“<strong>广义相对论</strong>&quot;。<br>小爱同学于1905年发表的三篇论文使他名声大噪，但其中的第三篇“狭义相对论”与我们的认知–自由落体产生矛盾，于是对牛哥的万有引力提出质疑，希冀不与他新提出的的相对论水火不融。为此小爱同学又花了十年时间，疯狂的尝试、犯错，1905年，最美的理论献世：<strong>“广义相对论”</strong>。</p><p>牛哥解释的自由落体和行星运转，是假设万物之间存在一种互相吸引的力量，称之为引力。<br>牛哥认为<strong>空间</strong>是个能装下宇宙的容器，所有物体做直线运动，直到来了个力使他们的轨道发生弯曲，至于这个容器是由什么做成的，牛哥没给出答案。</p><p>然后，这个小爱同学从小对<strong>电磁场</strong>很着迷，受家庭影响：父亲在工业革命刚开始那会，正建造第一批发电站。<br>而电磁场的运用，可以让他爸爸修建的发电厂里的发电机运转起来。</p><p>回到万有引力，小爱同学研究认为：这个引力也是类似于“电场”的“引力场”。<br>他灵光一闪:<strong>引力场不弥漫与空间，因为他本身就是空间</strong>，这个就是相对论的思想。</p><p>这个惊骇世俗的理论，意思就是说：<strong>空间</strong>不再是一种有别于物质的东西，而是构成世界&quot;物质&quot;的成分之一，一种可以波动、弯曲、变形的<strong>实体</strong>，地球并不是由于某种神秘力量牵引才围绕太阳转，而是<strong>在弯曲的空间中行进</strong>，即空间发生了弯曲。<br>接着，黎曼曲率–就是一个方程式，将弯曲空间的特征使用了一个数学量来描述。<br>小爱同学基于又写了个公式：Rab -1/2Rgab=Tab，表示<strong>有物质的地方会发生弯曲</strong>。</p><p>然后就是这么一个咱也看不懂的方程公式，小爱的一些预测一一被证实：<br>太阳会使光线偏折。<br>不仅是空间，时间也会发生弯曲。<br>在高空中，离太阳更近的地方，时间会过的比较快。(一对双胞胎，住在山上的哥们比住在海上的哥们老的快)。<br>一个大恒星燃烧完自己所有燃料，由于自身重量坍塌，导致空间强烈弯曲，塌陷成黑洞。<br>空间不可能一直保持静止，而是一直在不断膨胀。<br>这个膨胀是由一个极小、极热的年轻宇宙爆炸引起–‘宇宙大爆炸’。<br>空间会像海平面一样起伏–‘引力波’。</p></blockquote><h2 id="第二课：量子力学">第二课：量子力学</h2><blockquote><p>20世纪物理学两大支柱，除了广义相对论，另一个就是<strong>量子力学</strong>。<br>量子力学的理论每天在应用于物理、工程、化学元素周期表(化学学科的基石)、生物、晶体管、激光、电子显微镜、原子钟、核磁共振等等。<br>量子力学是统治<strong>微观</strong>世界的一种理论，与传统经典力学不是很一样，让人很难理解。<br>量子力学到底是个什么，读起来也不知道怎么总结，非常的神奇，然后我去看了两个简单的科普视频，可能不是那么准确的的总结如下：</p><p>量子力学的开端是由当时存在物理学上两片乌云的其中一片：<strong>黑体辐射</strong>发展而来。<br>_普朗克_通过一个公式完美解释了黑体辐射，但是他对自己理论有所怀疑，与传统物理学能量可以连续的理论相比非常不符合，然后普兰克怀疑的这个理论就成为了量子力学的开端。</p><p>然后小爱同学，运用普朗克的观点：“震动带电粒子能量是一份一份的”，做了个光电效应实验，因为这个实验而获得诺尔儿奖，结论是：光具有<strong>波粒二象性</strong>。<br>(因此有说：普朗克是量子力学之父，爱因斯坦是让量子力学理论成长的培养人)</p><p>接着，_波尔_提出**“量子跃迁”<strong>。然后_海森堡_为量子理论列出了方程，他们同属于</strong>哥本哈本学派**阵营。<br>量子力学直捣传统物理学核心、直指狭义相对论，这下小爱同学不乐意了，他又联合了一堆物理学家作为另一个阵营，开始反对量子理论，开始两个阵营一生的互相对吵，其中“上帝不会掷骰子”这句话就是小爱对波尔说的。</p><p>量子力学是怎么直指狭义相对论的呢？这就得说下量子纠缠。<br>量子纠缠的理论是<strong>量子超距作用</strong>，量子超距作用违背了<strong>局域性原理(<strong>一个地方发生的事件不可能立刻影响到另外一个地方)，而狭义相对论说</strong>任何物质和信息的传播速度的上限就是光速</strong>。也就是说：量子超距作用与狭义相对论是互斥的。于是小爱至到去世也始终坚持认为量子纠缠是<strong>一定存在的隐变量导致的</strong>。</p><p>然后说一丁点这个量子纠缠实验相关的：<br>量子纠缠这个几乎没法完成的实验，直到约翰～贝尔的出现。<br>首先约翰贝尔认为量子力学理论是不对的，他同意小爱的说法。然后他为此研究，提出了著名的<strong>贝尔不等式</strong>。<br>然而，这个贝尔不等式，证明了爱因斯坦的隐变量假设是错的，也就是说<strong>贝尔用理论证明了自己的信仰是错的</strong>。他的最大贡献是让量子纠缠可以通过实验(幽灵成像实验)来验证了，众多实验证明量子理论是对的，也即：<strong>隐变量不存在，量子纠缠具有超距作用，因和果同时发生。</strong></p></blockquote><blockquote><p>好了，刚才表达的是什么不是很重要，换一个比较读得懂的大白话方式来进行最后的总结：<br>爱因斯坦认为：<br><strong>“所有的事情，都会被人的认知、举止、决定和行动影响，一件事情的发生必然有其所有因素汇集而成，人的自主意志其实是决定论的一个关键所在。”</strong><br>波尔给出的是：<strong>终极决定论。</strong><br><strong>“他认为这个宇宙的所有规律，都是决定好了的，每一步都是绝对精确的，客观世界下的运动都是安排好的，我们做的每一步都是早就确定了的，甚至人的意识也不是自主的，也都是确定的，不会被改变。”</strong></p></blockquote><h2 id="第三课：宇宙的构造">第三课：宇宙的构造</h2><blockquote><p>这节课讲的是宇宙的构造。<br>内容笔记简答，简答来说：<br>关于宇宙构造的认识，从几千年前的<strong>地在下，天在上</strong>，到2600年前的第一次科学革命—有人想弄明白为什么太阳、月亮和星辰围绕着我们<strong>转</strong>，然后到亚里士多德用科学论证证明<strong>地球是圆</strong>的。再然后到哥白尼，比亚里士多德多提出的一个观点是行星运动的中心是太阳。<br>然后，随着科学仪器发展，我们又知道太阳系是不计其数星系中的一个，有千亿个如太阳般的恒星。再到20世纪30年代。经精确测量发现银河系也不过是众多星系中的一粒尘埃。<br>宇宙成了一片均匀的、没有尽头的疆域。<br>最后，结论是这个布满星系、富有弹性的浩瀚宇宙是大约150亿年前由一个密度极大热量极强的小星云,大爆炸后膨胀到现在的规模。<br>这就是我们现在对宇宙的最大程度了解。</p></blockquote><h2 id="第四课-粒子">第四课 粒子</h2><blockquote><p>这节内容在我们还是学生时期都学过，小结如下：</p><p>粒子分为光和其他物质。<br><strong>光由光子组成</strong>，这是小爱同学凭直觉想出的光的微粒。<br>物质由<strong>原子</strong>组成，原子由<strong>原子核</strong>和围绕它的<strong>电子</strong>组成，原子核由<strong>中子</strong>和<strong>质子</strong>构成。质子和中子由更小的<strong>夸克</strong>组成。夸克之所以能将质子和中子&quot;黏&quot;在一起，是由一种物理学家成为&quot;<strong>胶子</strong>&quot;的粒子。<br>目前为止，标准模型虽然不完美，但却是解释我们周围世界的最好模型。<br>屈指可数的几种基本粒子，不断地存在和不存在之间震动、起伏，充斥在似乎一无所有的空间中。</p></blockquote><h2 id="第五课-空间的颗粒">第五课 空间的颗粒</h2><blockquote><p>在第二节的量子力学中，我们知道20世纪最伟大的两个方向，存在了<strong>悖论</strong>。</p><p>广义相对论和量子力学这两个理论为我们带来了丰富的成果，奠定了当代科技的基石，彻底改变了我们的生活方式，但这两个理论不可能都同时正确。至少依照目前的了解来说，他们是互相矛盾的。</p><p>然后作者从历史角度简单说明了物理学已经不是第一次面对两个看起来完全对立的伟大理论了，之前都被一一整合，也说明了这两个理论的对立恰是一个难得机会。<br>目前针对这两个理论的重要尝试就是“<strong>圈量子引力</strong>”，各国的研究小组都在从事相关研究。</p><p>圈量子引力的目的是为了整合这两个伟大的理论，而圈量子引力核心理论是：<br>「<strong>空间是不连续的，不可被无穷分割的，而是由细小的颗粒，或者说“空间原子”构成的，这个空间原子要比原子核还要小几亿-亿倍，它们被称为&quot;圈&quot;或环–环环相扣，形成了一个互相关联的网络，从而编织出了空间的纹理。这些空间量子不存在任何地方，它本身就是空间</strong>」</p><p>圈量子引力的第二个结论说：<strong>这些描述空间和物质的颗粒的方程不再包含时间这个变量</strong>，意思并不是说一切保持稳态没有变换，相反，它说明变化是普遍存在，但是不能将其过程形容为：“一个瞬间接着另一个瞬间”</p><p>还有一个结论极其轰动，是关于宇宙的起源。<br>第三课中我们看到宇宙的开始是源自只要一丁点时候的大爆炸，那么在此之前呢？<br>圈量子引力又把宇宙的历史往回推了一点：那个开始的著名大爆炸实际上可能是<strong>大反弹</strong>，宇宙在自身重量下坍缩到非常小的时候，开始反弹膨胀，开始回弹的那一瞬间，进入了量子引力领域：<strong>时间和空间一起消失，世界融化成一团涌动的概率云。</strong></p></blockquote><blockquote><p>物理开阔了人类的眼界，我们看到的东西不断让我们惊异。<br>我们意识到人类满脑子的都是偏见，我们对世界本能的认识是片面的、狭隘的、不合时宜的。<br>嗯，让我们继续关注圈量子引力的破译把。</p></blockquote><h2 id="第六章概率、时间和黑洞的热">第六章概率、时间和黑洞的热</h2><blockquote><p>什么是&quot;热&quot;？<br>最终英国和奥地利的两个物理学家，发现了热的本质，结论是：<strong>一个热的物质并不是因为包含热质，而仅仅因为其中的原子运动速度过快。冷空气之所以冷是因为空气中的分子，跑的比较慢，热空气热是因为空气中的分子跑的比较快</strong>。</p><p>那为什么热量会从热的物体跑到冷的物体上？<br>作者先是没有直接给出答案，通过钟摆–摩擦生热的小例子，给出一个有趣的结论：<strong>只有存在热量的时候，过去和未来才有区别，能将过去和未来区分开来的基本现象就是热量总是从热的物体跑到冷的物体上</strong>。</p><p>接着继续解释，为什么热量会从热的物体跑到冷的物体上。。。</p><p>波尔兹曼发现其中的原因惊人的简单：<strong>这完全是随机的。</strong><br>热的物体跑到冷的物体并非遵循什么绝对的定律。只是这种情况发生的<strong>概率</strong>比较大。<br><strong>从统计学角度看，快速运动的热物体原子更有可能碰上一个冷物体的原子。</strong><br><strong>热的物体和冷的物体接触后温度不降反升的情况不是没有可能，只是概率小的可怜罢了。</strong></p><p>这种通过讲概率引入物理核心，直接解释热动力学的基础，刚开始被人认为荒谬至极，波尔兹曼自缢身亡。<br>但随着发展，概率进入了物理学的核心位置。并由此发展的分支为统计物理学，成果之一就是<strong>热力学</strong>。<br>热力学和统计力学随后都延伸到了电磁场和量子现象的领域。</p><p>但是延伸到<strong>引力场</strong>时，引起场会如何变化，仍是一个未解的难题。<br>引力场就是空间本身，或者说是时空，当热量在引力场扩散开来的时候，空间和时间也应该发生振动，但我们目前还不知道如何描述它。</p></blockquote><h2 id="尾声：我们">尾声：我们</h2><blockquote><p>这部分内容是作者发散了自己的感性思维，对于我们处在这个宇宙中扮演的角色， 从<strong>我们到底是什么</strong>这个角度进行了一些碎碎念。<br>其中的碎碎念观点以及一些内容主要就是：<br>我们扮演的角色是内部观察者、<br>我们只是宇宙中很小的一部分、<br>与自然界其他事物相比我们没有什么特别、<br>我们尝试了解我们所处在的这个真实世界、<br>编故事和追寻踪迹是两种截然不同的人类活动、<br>自然界中连续不断的信息交流如何塑造我们和我们的思想是当今科学领域最有趣的前沿之一、<br>自由的决定疑问着什么？<br>我们这个物种不会延续很久、<br>我们的爱与真诚与生俱来，我们天生就渴望懂得很多，渴望不断学习。<br>我们的认知在不断增长，我们的求知欲在燃烧。<br>我们渴望探索宇宙纹理的细微之处、探索宇宙的起源、时间的本质、黑洞的现象、思维的运行。<br>这一切，让我们目眩神迷。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阶段一：宏观视角下的浏览器</title>
      <link href="/A1%E9%98%B6%E6%AE%B5%E4%B8%80%EF%BC%9A%E5%AE%8F%E8%A7%82%E8%A7%86%E8%A7%92%E4%B8%8B%E7%9A%84%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
      <url>/A1%E9%98%B6%E6%AE%B5%E4%B8%80%EF%BC%9A%E5%AE%8F%E8%A7%82%E8%A7%86%E8%A7%92%E4%B8%8B%E7%9A%84%E6%B5%8F%E8%A7%88%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="01-Chrome架构：仅仅打开了1个页面，为什么有4个进程？">01 | Chrome架构：仅仅打开了1个页面，为什么有4个进程？</h2><hr><h3 id="一、操作">一、操作</h3><blockquote><p>在Chrome浏览器中，我们点击右上角三个点–更多工具–任务管理器。<br>会看到打开一个页面，启动了多个进程。<br>在进行每个进程分析前，先明确下线程与进程之间的关系。</p></blockquote><h3 id="二、线程-VS-进程">二、线程 VS 进程</h3><blockquote><ul><li>进程：一个进程就是一个运行实例–启动一个程序的时候，操作系统会为该程序创建一块内存，用来存放代码、运行中的数据和一个执行任务的主线程，这样的一个运行环境就叫做进程。</li><li>线程：线程不能单独存在，需要由进程来启动和管理。<br>线程与进程的关系：</li></ul><ol><li>进程中任一线程执行出错，整个进程都会崩溃。</li><li>线程之间共享进程中的数据。</li><li>当一个进程关闭之后，操作系统会回收进程所占用的内存。</li><li>进程之间的内容相互隔离。</li></ol></blockquote><h3 id="三、单进程浏览器时代">三、单进程浏览器时代</h3><blockquote><p>单进程浏览器是指所有功能模块(网路、插件、JS运行环境、渲染引擎等)都是运行在同一个进程里，2007年以前，市面上浏览器都是单进程架构。<br>这种结构模式：不稳定、不流畅、不安全。</p></blockquote><h3 id="四、多进程浏览器时代">四、多进程浏览器时代</h3><blockquote><ul><li>进程之间通过IPC机制进行通信</li><li>不稳定问题解决：由于进程的隔离性，当一个页面或插件崩溃时，不会影响到浏览器的其他页面</li><li>不流畅问题解决：即使JS的执行阻塞了渲染进程，也只是影响当前页面</li><li>不安全问题解决：安全沙箱<br>最新的Chrome浏览器包括：<strong>一个浏览器主进程</strong>、<strong>一个GPU进程</strong>、<strong>一个网络进程</strong>、<strong>多个渲染进程</strong>和<strong>多个插件进程</strong>。<br>存在问题：更高的资源占用和更复杂的体系结构。</li></ul></blockquote><h3 id="五、未来面向服务的架构">五、未来面向服务的架构</h3><blockquote><p>2016年，Chrome官方团队使用“面向服务的架构”(SOA)的思想设计了新的Chrome架构。</p></blockquote><h2 id="02-TCP协议：如何保证页面文件能被完整送达浏览器？">02 | TCP协议：如何保证页面文件能被完整送达浏览器？</h2><hr><blockquote><p>衡量web性能的一个重要指标叫&quot;FP(First Paint)&quot;,指页面加载到首次开始绘制的时长。影响FP的重要因素有一个网络加载速度。<br>网络加载的过程就是数据包的传输过程，站在数据包角度，从“数据包如何送达主机”，“主机如何将数据包转交给应用”，“数据如何被完整送达应用程序”三个方面来分析。</p></blockquote><h3 id="一、IP：把数据包送达目的主机">一、IP：把数据包送达目的主机</h3><blockquote><ul><li>数据包要在互联网上进行传输，要符合<strong>网际协议IP(Internet Protocol)标准</strong>。</li><li>计算机的地址称为IP地址，访问任何网站实际上只是你的计算机向另外一台计算机请求信息。</li><li>IP头是IP数据包开头的信息，包含IP版本、源IP地址、目标IP地址、生存时间等信息。</li></ul></blockquote><h3 id="二、UDP：把数据包送达应用程序">二、UDP：把数据包送达应用程序</h3><blockquote><p>IP是非常底层的协议，只负责把数据包传达给目标主机，但是并不知道交给哪个应用程序。<br>因此需要基于IP之上开发能和应用打交道的协议，最常见的协议就是<strong>UDP协议–User Datagram Protocol(用户数据包协议)</strong><br>UDP通过端口号把数据包分发给正确的程序。<br>UDP可以校验数据是否正确，但是不提供重传机制，只是丢弃当前的包。虽然UDP不能保证数据的准确性，但是传输速度非常快。</p></blockquote><h3 id="三、TCP：把数据完整的送达应用程序">三、TCP：把数据完整的送达应用程序</h3><blockquote><p>TCP(Transition Control Protocol,传输控制协议)，是一种面向连接的、可靠的、基于字节流的传输层通信协议。<br>TCP提供重传机制、引入了数据包排序机制。</p></blockquote><blockquote><p>一个完整的TCP连接的生命周期包含了“建立连接“、”传输数据“、“断开连接”三个阶段。<br>建立连接阶段：这个阶段通过三次握手来建立客户端与服务端之间的连接，它们之间总共要发送三个数据包以确认连接的建立。<br>传输数据阶段：该阶段，接收端需要对每个数据包进行确认操作。<br>断开连接阶段：四次挥手来保证双方都能断开连接。</p></blockquote><h2 id="03｜HTTP请求流程：为什么很多站点第二次打开速度会很快">03｜HTTP请求流程：为什么很多站点第二次打开速度会很快</h2><hr><blockquote><p>HTTP协议是建立在TCP连接基础之上的。<br>HTTP是一种允许浏览器向服务器获取资源的协议，是Web的基础。<br>浏览器端发起HTTP请求流程如下：</p></blockquote><h3 id="一、构建请求">一、构建请求</h3><blockquote><p>浏览器构建请求行信息，构建好后，浏览器准备发起网络请求。</p></blockquote><h3 id="二、查找缓存">二、查找缓存</h3><blockquote><p>在准备发起网路请求阶段，浏览器偷偷的在它的缓存中查询是否有要请求的资源。<br>若有：拦截请求，返回资源副本，直接结束请求。<br>若缓存查找失败：继续下一步。</p></blockquote><h3 id="三、准备IP地址和端口号">三、准备IP地址和端口号</h3><blockquote><p>浏览器第一步会请求域名系统DNS返回域名对应的IP，如果没有特别指明端口号，则默认为80。 (浏览器提供了DNS数据缓存服务，若缓存过也就不会去请求，直接解析。从而减少一次网络请求)</p></blockquote><h3 id="四、等待TCP队列">四、等待TCP队列</h3><blockquote><p>拿到IP地址与端口号后，还需要在TCP队列中排队才能建立TCP连接。<br>这是因为：Chrome有个机制，同一个域名同时最多只能建立6个TCP连接，若此刻同时有10个请求发生。则四个会进入TCP队列进行排队。 当然，若当前请求数量少于6个，则会直接进入下一步。</p></blockquote><h3 id="五、建立TCP连接">五、建立TCP连接</h3><blockquote><p>建立TCP连接，上一节我们已经知道，一个完整的TCP连接过程包括“建立连接”、“数据传输”、“断开连接“三个阶段。</p></blockquote><h3 id="六、发送HTTP请求">六、发送HTTP请求</h3><blockquote><p>HTTP请求是在TCP连接的数据传输阶段工作的，这个时候浏览器向服务器发送<em>请求行</em>，它包括请求方法、请求URI、HTTP版本协议。HTTP中的数据在这个通信过程中传输。</p></blockquote><h3 id="七、服务端处理HTTP请求流程">七、服务端处理HTTP请求流程</h3><blockquote><p>返回请求：通过 ‘curl -i domainName’命令，可以返回响应行(协议版本和状态码)、响应头(服务端返回请求的时间、Cookie、返回的数据类型等)、响应体信息.<br>通常情况，一旦服务器向客户端返回了请求数据，它就要关闭TCP连接，但是如果浏览器或者服务器设置了Connection:keep-alive，那么TCP连接在发送后将仍保持打开状态。保持TCP连接可以省去下次请求时需要建立连接的时间，提升资源加载速度。</p></blockquote><h3 id="八、问题解答">八、问题解答</h3><ol><li>为什么很多站点第二次打开速度会很快？</li></ol><blockquote><p>主要原因肯定是第一次加载页面的过程中，缓存了一些数据(从上面的过程分析，我们知道DNS缓存和页面资源缓存这两块数据是会被浏览器缓存起来的).<br>网站把很多资源都缓存到了本地，浏览器缓存直接使用本地副本来回应请求，而不会产生真实的网络请求，从而节省了时间。</p></blockquote><ol start="2"><li>登录状态是如何保持的</li></ol><blockquote><p>简单地说，如果服务器端发送的响应头内有 Set-Cookie 的字段，那么浏览器就会将该字段的内容保持到本地。当下次客户端再往该服务器发送请求时，客户端会自动在请求头中加入 Cookie 值后再发送出去。服务器端发现客户端发送过来的 Cookie 后，会去检查究竟是从哪一个客户端发来的连接请求，然后对比服务器上的记录，最后得到该用户的状态信息。</p></blockquote><h2 id="04-导航流程：从输入URL到页面展示，这中间发生了什么？">04| 导航流程：从输入URL到页面展示，这中间发生了什么？</h2><blockquote><p>从输入URL到页面展示</p></blockquote><h3 id="1-用户输入">1.用户输入</h3><blockquote><p>如果是搜索内容，地址栏使用浏览器默认的搜索引擎合成带关键字的URL，如果符合URL规则，则合成完整的URL。</p></blockquote><h3 id="2-URL请求过程">2.URL请求过程</h3><blockquote><p>浏览器主进程通过进程间通信(IPC)把URL请求发送到网络进程，网络进程接收到URL请求后，会发起真正的URL请求。<br>首先，浏览器会查找本地缓存是否缓存了该资源，如果缓存则直接返回资源给浏览器主进程，如果没有缓存，那么直接进入网络请求流程：请求前的第一步是DNS解析，用来获取域名对应的IP地址，如果是HTTPS协议，还需要建立TLS连接。<br>接下来就是利用IP地址和服务器建立TCP连接，连接建立后，浏览器端会构建请求行、请求头等信息。<br>服务器接收到请求信息后，根据请求信息生成响应行、响应头发给网络进程。网络进程接收到后，开始解析响应数据。</p></blockquote><h3 id="3-准备渲染进程">3.准备渲染进程</h3><blockquote><p>同一站点：协议相同、根域名相同。<br>通常情况下，打开一个新的页面，浏览器就会为开辟一个新的渲染进程，但若从A页面打开的B页面，它们同属同一站点，那么使用同一渲染进程。</p></blockquote><h3 id="4-提交文档">4.提交文档</h3><blockquote><p>浏览器进程将网络进程接受到的HTML数据提交给渲染进程。</p></blockquote><h3 id="5-渲染阶段">5.渲染阶段</h3><blockquote><p>一旦文档被提交，渲染进程就开始页面解析和子资源加载了。</p></blockquote><h2 id="05-渲染流程-HTML、CSS和JAVASCRIPT是如何变成页面的？">05| 渲染流程:HTML、CSS和JAVASCRIPT是如何变成页面的？</h2><blockquote><p>按照渲染的时间顺序，流水线可以分为：构建DOM树、样式计算、布局计算、分层、绘制、分块、光栅化、合成。<br>每个阶段需要关注：输入的内容、处理过程、输出的内容</p></blockquote><h3 id="1-构建DOM树">1.构建DOM树</h3><blockquote><p>因为浏览器无法直接理解和使用HTML，所以需要将HTML转换为浏览器能够理解的结构–DOM树。</p><ul><li>输入内容是HTML文件</li><li>经过HTML解析器解析</li><li>输出树状的DOM结构–DOM树结构与HTML内容几乎一模一样，但DOM是保存在内存中树状结构</li></ul></blockquote><h3 id="2-样式计算">2.样式计算</h3><blockquote><p>样式计算的目的是为了计算出DOM节点中每个元素的具体样式</p><ul><li>输入内容是CSS文件</li><li>处理过程是将CSS文件进行转换成浏览器可以理解的结构–styleSheets、对属性值进行标准化(em-px,red-rgb,bold-700)、计算DOM树中每个节点的样式属性(css继承和层叠规则)</li><li>输出了经过处理的styleSheets</li></ul></blockquote><h3 id="3-布局阶段">3.布局阶段</h3><blockquote><p>DOM结构有了、样式结构有了，需要对几何位置信息进行布局。</p><ul><li>创建布局树(DOM结构与样式结构结合，将display为none的去除，构成布局树)</li><li>布局计算(输入为布局树，经过复杂计算，输出也为布局树)、由于输入输出一致，因此Google下一代布局系统的优化叫做LayoutNG。</li></ul></blockquote><h3 id="4-分层">4.分层</h3><blockquote><p>页面开始绘制之前，浏览器会对3D变换、页面滚动、z-index等操作去为特定的节点生产专用的图层、并生成一颗对应的图层树。<br>结果是：最终每一个节点都会直接或间接的从属于一个层。<br>满足分层有两个条件：用于层叠上下文属性(定位属性、透明属性、滤镜等)和需要裁剪的地方(overflow)</p></blockquote><h3 id="5-图层绘制">5.图层绘制</h3><blockquote><p>将图层绘制命令拆分为很多小的绘制指令，然后一个个执行这些命令，汇总成待绘制列表。</p></blockquote><h3 id="6-栅格化操作">6.栅格化操作</h3><blockquote><p>有了这些绘制命令、浏览器渲染引擎中的合成线程进行绘制。<br>所谓栅格化操作就是按照视口附近的图块优先生成位图。</p></blockquote><h3 id="7-合成和显示">7.合成和显示</h3><blockquote><p>浏览器进程通过via组件，接收合成线程发过来的绘制图块命令，将页面绘制到内存中，显示在屏幕上。</p></blockquote><h3 id="相关概念">相关概念</h3><h4 id="重排">重排</h4><blockquote><p>改变了元素长宽、浏览器会出发重新布局–后续一系列过程，会更新完成的渲染流水线，因此开销最大。</p></blockquote><h4 id="重绘">重绘</h4><blockquote><p>改变了颜色等未引起几何位置变化，重绘相较重排、省去了布局和分层阶段，因此效率会高一些。</p></blockquote><h4 id="直接合成">直接合成</h4><blockquote><p>比如CSS的transform实现的动画效果，可以避开重排和重绘阶段，大大提升绘制效率。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 浏览器工作原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浏览器工作原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*48):七堂极简物理课</title>
      <link href="/202211(3.14-3.20)/"/>
      <url>/202211(3.14-3.20)/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本周是2022年的第十一周(3.14-3.20)–每周小结的第48期，这里记录过去一周，我的一些小总结。<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/202211.510nqnfnklc0.webp" alt="七堂极简物理课"></p></blockquote><span id="more"></span><h2 id="七堂极简物理课"><strong>七堂极简物理课</strong></h2><blockquote><p>周六晚上在整理浏览器书签的时候，突然看到了这本书的推荐。<br>总共七堂课，读了两章，新建了个知识库，做了两章笔记。<br>第一章讲的是爱因斯坦的相对论，第二章讲的是量子力学。<br>为了写第二堂课量子力的读书笔记，还专门去看了几个视频，了解了一下，量子力学的理论甚是有趣。<br>这本书的读书笔记要赶紧造起来，或许这就是我开始读书留痕的美好开端。</p></blockquote><h2 id="English">English</h2><blockquote><p>现在每天的背单词，已经不能满足我的求知欲，并且这么漫无目的的背着单词，没有个新鲜玩意的出现，貌似没个意思，于是，我列了个电影动画节目单。<br>从<strong>超能陆战队-Big Hero</strong>开始，我准备将电影的英语台词全部跟着写一遍，之前整过一次《阿甘正传》的台词摘抄，但由于是写在本子上的，久而久之就不知去向了。<br>同读书笔记一样，English相关也建了个知识库，开始花点心思的对第二语言进行一波探究。<br>虽然一直没有找到学习英语的源动力，但就是觉得该学学、记记，反正也没什么压力。<br>如量子力学的理论那样：<strong>因果同时发生着</strong>。</p></blockquote><h2 id="跑步">跑步</h2><blockquote><p>上周总结完，确实管用，跑了两次5公里，全年合计已达成目标3/100了，<br>然后坚持下去就是需要考虑的事了，这篇周记完毕，再去跑个五公里。<br>每周都有意的暗示自己一把，望自己尽快养成习惯。</p></blockquote><h2 id="小说">小说</h2><blockquote><p>心心念的小说，着实让我的心思乱了几天。<br>目标是逼着自己编上那么一章，但脑子里又确实没东西，曾花过一个多小时，坐在电脑跟前，就是吐不出来一个字。<br>然后上班通勤、喝水抽烟的的间隙，还专门列了一些瞬时想到的大纲，比较粗制滥造，不知所云：<br>比如，故事里有个XX笔记本，写下什么就可以实现什么<br>比如，写东西不能随便写，得跑个步什么的触发规则<br>比如，主人公生活在未来，深处软件行业，迎来了行业巨变，遭遇裁员，云云…<br>比如，主人公去上厕所，发现其中一个坑没纸了，然后换了个坑，那个没纸的坑，后来有人进去了…<br>比如，有些人注定这辈子就是要写一些东西的<br>比如，好的文章应该是可以调动读者想象力的，故事的讲述应该是言简意赅的(这种感觉是看了几章《西游记》而发，啧啧，字字精炼到不行)<br>总之吧，我还是得降低下期望，多积累吧，让自己好受一些。</p></blockquote><h2 id="小结">小结</h2><blockquote><p>诚如所上，小结如下。<br>本周工作时间全都用在工作上。<br>跑了一次步。<br>读了两章物理课，写了两章小笔记。<br>写了电影二十分钟时长的台词。<br>整理了下自己的电脑书签。<br>梳理下语雀知识库。<br>顺带着更新了一小波简历。<br>打卡了七天单词。<br>写了一篇SCSS基础使用技术文。</p><p>貌似也没做什么了，但比起前段时间什么也不做还是好很多的吧。<br>尝试吧，总会碰到好玩的。</p><p>So，Let’s Go Running。<br>See you next Week。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周小结(*47):破局</title>
      <link href="/202210(3.7-3.13)/"/>
      <url>/202210(3.7-3.13)/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本周是2022年的第十周(3.7-3.13)–每周小结的第47期，这里记录过去一周，我的一些小总结。<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/202210.6hecdavlmi80.webp" alt="破局"></p></blockquote><span id="more"></span><h1>破局</h1><blockquote><p>本周是入职新东家–boring的第四周，周末。<br>最近的日常被工作填满，早晨6:40起床、晚上8:00到家，白天码天代码，晚上到家很闲，总是少点精气神。<br>想法多也杂的到处乱窜，脑中小人吵个不停，许久没有周记总结一番。<br>因此，茶水一杯，小烟一点，打开电脑，来上一发。<br>工作上，也就最近，工作的时候状态还是可以的，有活干有咖啡喝，工作的时候能全身心投入，能很快有产出。<br>生活上就想法很high了：一会想着得读读书、一会想着得去写部小说、一会又想得去刷刷leetcode题、下班回家又觉得太闲得去做点什么，一会又想着得动起来去跑跑步。<br>什么都在想，什么也没去做，俗话说实践出真知，没有实践，格局就是打不开，都将有自闭之症。<br>本周小结就敞开下：我在想些什么，我是怎么想的，存在什么问题，当下什么局面，又该如何破局。</p></blockquote><h1>跑步</h1><blockquote><p>剖到底，心心念的还是大学那段早起时光，校运会的一千五百米冠军。体验过后的精神愉悦，可能就根植脑海了。<br>2020年8月份那会，为了自己能够重拾跑步带来的满足，配了块watch，整了个耳机，弄了几双鞋，坚持了半个多月跑了六十多公里，就此歇菜了。<br>2021年的时候，定的目标是全年跑个500km，结果只是一次偶然奥森跑了个5公里。<br>2022年的时候，也就是今年，还想定个500km的小目标，结果俩月过去了，又是一次偶然的短短明湖5公里。</p><p>其实真是想如何能让运动成为我生活中的一部分？<br>为此，之前想着定个目标在心头，先跑起来再说，一年54周，一周10公里，一年下来就够了。<br>然一年多的结果表明，这个念头是好的，实践起来是成为心病的，结果是惨不忍睹的。<br>对于一个思想性选手来说，想在前、做在后的这个局得破，并且迫不及待，那该如何破？</p><p>我的借口有：没有一个好的跑步场地、跑步的乐趣是什么、目的是什么，我想通过跑步收获什么、我如何开始、又如何坚持，我有时间吗。<br>首先，<strong>跑步场地的问题</strong>：现在想来，怀念的奥森场地，只是一份小执念和懒惰的借口，是对前年那小段跑步回忆的思念。然其实跑步场地应有尽有，这个最开始恼人的题，也恰恰是最好解决的，悦跑圈上的跑步路线一大坨，如商品琳琅满目，随意挑选。<br><strong>跑步的乐趣目的和收获</strong>：目的是让自己动起来，闲下来的时候有事可做，时间充实起来。跑步身心会愉悦、会挑战耐性、可以通过参加马拉松赛事结交很多跑者、可以通过数字记录装个逼而自我感觉良好、可以自我陶醉、好处是多方的，未来是可期的。<br><strong>如何开始</strong>：找个周边的跑步路线，趁着这个周末的热火劲，先跑为上。<br><strong>如何坚持</strong>：定目标是坚持的偏方，却不是解药。需要从一次次跑步中去发现点乐趣、通过了解一些跑步的周边、身体素质的提高、思想跟上、围绕着它循序渐进开启执念。<br><strong>有时间吗</strong>：时间随时为你服务。<br>此局已露端倪。</p></blockquote><h1>小说</h1><blockquote><p>2021年的时候，在某平台上脑坑写下八千字水文，名为&lt;凡人是仙转&gt;。<br>虽然写的很烂，纯属瞎扯，但还是受到了几位善良人的鼓励，被夸赞文笔还行、只是没有情节。<br>现在想来，对于每一句话都是现想现编现呻吟的无序文字，能够脑洞开来，其实已经迈出了步伐。<br>那么，怎么就又没坚持下去呢？<br>可能是工作的拉扯、可能是生活的呻吟、可能是对文笔的自不爱、可能是对意义的否定、可能是没有形成正反馈，可能是万恶之源的懒惰。</p><p>那么这个局，该怎么破呢？<br>我对去写一部小说的强烈感有吗？写小说的源动力来自哪里？要开始的话怎么定基调、要去写什么故事？自身是否有过积累？是否可以忍受写出来的东西恶心到自己乃至别人？如何开始？如何坚持到发现此事可以成为生活的一个小兴趣？<br>啧儿的，那就一个一个的问题，剖开翻一翻。</p><p><strong>强烈感</strong>：那是有的吧，如果一百分的强烈感，打个五十九的不及格分吧，不然也不会这么叨逼叨刷存在感了，因此从下面的源动力上再去寻得一分。<br><strong>源动力</strong>：首先有写点东西的念头，是觉得生活需要做一点cool的事来为意义增光添瓦，而写东西在我看来，想象力的发挥、白日梦的延伸、生命的孤独、情绪的宣泄、生活的感悟，怎么来看都是一件很酷很文艺的事。写东西的时候可以让自己的思维活跃起来，不再是一滩死水的想工作、想别墅、想放纵。其次，写一部小说、除了是想象力的发挥，也是对生活的热爱体现、是在这个世界留下自己脑洞的一份见证、是对自己认知的提升、是获取思想自由的有力途径。<br><strong>定基调</strong>：鉴于当下自我兴趣的丧失、常识的缺失、修仙不感兴趣、悬疑没有文笔、脑洞不够大，这个基调还是贴近生活更有触感，可以异能、可以都市、可以青春、可以感悟，像韩寒的&lt;光荣日&gt;就很让我中意。<br><strong>积累</strong>：那确实是万万不够的，所以才要多读书、多感悟、多学习，对于一个人人都是作家的时代来说，没文化写点东西也倒不是什么问题。<br><strong>恶心</strong>：这就是一个玻璃心的问题考验了，或者说这根本就不是个问题、这得用多大能量去触达读者呢？此为庸人自扰。<br><strong>如何开始</strong>：多思多想多产出，这个周末要发散思维，逼着自己整一章去，先上路，补不补票的问题再说。<br><strong>如何坚持</strong>：嘶～，这就是补票的问题了，万事需要坚持，坚持做一件事需要兴趣的引导、需要正反馈的向上循环，需要感受选择是否正确，这个问题是个大问题，还需研究。<br>人生路也漫，生活路也短，即使真的不行，但想到可以再去试一试还是很上头的。</p></blockquote><h1>工作</h1><blockquote><p>生活的每笔账单支付、三十上下有老有小的角色建立、婚丧嫁娶突发唯恐面对的突然考验，房车、医疗、教育的三座大山、兴趣爱好的延展，对于大多数工薪阶层的我们来说，工作是保障这一切的来源。<br>焦虑文三十五岁危机带来的谈资，私企不是铁饭碗的前人经验，科技进步引发的瞬息万变 、我们不仅需要努力做好本职工作，更需要保持时刻充电学习，才能稍稍减缓些焦虑。<br>然而对于我来说，赚钱的欲望即使强烈，但却没有吃苦的觉悟。话说：吃苦往往是主动的，而不是被动的，被动的吃苦难有进步。</p><p>对于未到的事情，我还不是很担忧三十五岁危机，也还未体验到私企的残酷、鉴于盲目的自嗨，口口声声说要努力学习也只是因为学习想要跳槽带来涨薪的诱惑。<br>工作赚钱是可以的，发财是万万不能的，前段时间又认真的读了一遍&lt;穷爸爸富爸爸&gt;，收获不是很大，但书中阐述的工作陷阱带来的忧虑感侵入大脑乱窜，直到后来忙碌起来，才略有好转。</p><p>又碎碎念了这么多，我在想些什么？我要表达什么？<br>可能我只是在想怎么平衡工作带给自己的各种想法？局在哪？要怎么破？<br>一方面我告诫自己，工作是生活的主旋律，要寻找一个高昂的斗志努力搞钱，另一方面，我又说、生活很短，为什么不多花点时间找点乐趣、看看诗和远方？<br>现在清楚的看，这根本不是个局，这两方面一丁点的也不互斥，只是格局小了，时间管理不到位。<br>工作作为生活的主旋律，写到这，可能只是觉得应该有个态度，聊聊自己的感受吧。</p><p>面对我的工作，我想起码我是不讨厌这份职业的，我需要做的是，再次制定一些学习计划，时刻保持跳槽信念、思路延展开来。像抽烟喝酒一样，我得对工作也造出一份瘾，顺其自然的融入脊髓，最好中毒极深、无法自拔。<br>保持乐观、保持开放，心中默念：工作真是生活最最美丽的一个消遣。</p></blockquote><h1>读书</h1><blockquote><p>如果说，我只允许给别人推荐一本书看看的话，我首先想到的是以色列作家尤瓦尔~赫拉利《人类简史》。<br>如果说，想读一本书觉得很欢乐还有点内涵的书，我首先想到的是韩寒很久之前写的一本小说《光荣日》。<br>如果说，在理财方面我要给孩子看什么书的话，我会让他很早的看一看《小狗钱钱》《穷爸爸富爸爸》。<br>如果说，想对美国这个国家历史有个大概的了解，我会觉得通俗易懂的陈勤教授写的《简明美国史》值得看看。<br>如果说，想对中国民营企业这改革开放四十年的变迁有个大概的了解，吴晓波的《激荡四十年》让人感觉恍如隔世。<br>如果说，我还能想到什么书可以推荐给人看看，或者说还有什么印象深刻的书，那似乎是想不起来了。</p><p>总是会有一些读书计划，可总是搁浅。<br>之前还想着读一本书咱也静一静，侃侃而谈的写上一篇读后感，整理个观感书单，也思考下是不是读到了什么高深理论？是不是又学会了个什么做人的道理？讲的是人性的光辉？还是揭露了什么黑暗？总得有点收获不是吗？<br>很多次都是这看三行，那读五句，没有沉淀，没有引起思想的碰撞，久而久之也就失了兴趣。<br>这是不好的，为了我的小说大业不至于那么过早的夭折，为了精神不那么的萎靡，也是增加点常识，现在开始，我要去找上那么几本书，仔细感受几番，搞一搞读后感，不行万里路，总得阅上几卷书吗不是。</p></blockquote><h1>本周小结</h1><blockquote><p>今夜，孤枕难眠–其实就是下午睡多了。<br>敞开心扉这么一唠，貌似事情都渐渐清晰起来，无论你在哪，无论你在做什么，一个好的心情，一个乐观的心态，培养一个爱好，柴米油盐就不再没有色彩。<br>当然，对属于心情忽高忽低、情绪颠荡起伏的我这类人来说，今后还会陷入某个负循环，所以还要继续保持思考、保持总结。<br>Fighting  ING。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 每周小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vscode开发秘籍</title>
      <link href="/Vscode%E5%BC%80%E5%8F%91%E7%A7%98%E7%B1%8D/"/>
      <url>/Vscode%E5%BC%80%E5%8F%91%E7%A7%98%E7%B1%8D/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><blockquote><p>VsCode调试大法好，对其熟练掌握，使我们的开发效率倍增，这篇博文记录各种Vscode从基础到深入的各种快速使用技巧。<br>文章的开始是学习自掘金的这篇文章：<a href="https://juejin.cn/post/7071146744339234846">深入讲解VsCode各场景高级调试与使用技巧</a><br>后续会加入各种有关Vscode技巧内容。<br>快捷键、调试等基于Mac系统，划删除线为已深刻脑子中马上就会用的，其它还需对其状态形成肌肉记忆。</p></blockquote><h2 id="基本技巧">基本技巧</h2><blockquote><ul><li>访达进入到某项目后，终端下使用 **<s>code</s> **快速在VsCode中打开此项目。</li><li>在当前行想快速添加一行？,不用到末尾Enter了，直接：<strong><s>Command + Enter</s></strong></li><li>项目中文件较多多，直接使用 ** <s>Command + p</s>** 搜索文件</li><li>要保持专注，不想看到左侧目录，使用** <s>Command + B</s>**</li><li>正在编辑的文件,需要使用这个文件的上下文，使用** ~~Ctrl + ~~ **打开同文件(注意在英文格式下)</li><li>批量修改：<strong><s>option + 鼠标左键</s></strong></li><li>同列下同一位置添加光标：<strong>option + shift + Command + down</strong> 或者<strong>option+ shift +鼠标左键</strong></li><li>当前行代码上移 ：<strong>~~ option + up~~</strong></li><li>复制当前行：** <s>shift + option + down</s>**</li><li>剪切当前行：** <s>⌘ + X (空选定)</s>**</li><li>复制当前行：~~ ~~<strong><s>⌘ + C (空选定)</s></strong></li><li>关闭所有窗口 ：~~ ~~<strong><s>⌘ + K ,W</s></strong></li><li></li></ul></blockquote><h2 id="进阶技巧">进阶技巧</h2><blockquote><ul><li>想将某一行的代码整体前移或后移，还在使用Tab键或者Shift+Tab键吗，替换成⌘ + 【</li><li>还在直接使用 ⌘ + F,查找后再替换吗？可以使用使用** ⌘+ option + F **批量替换： **⌘ + Enter **</li><li>还在用 ⌘+option + F进行批量替换吗？换成 shift + ⌘ + L</li><li>文件过长，想跳到某一行？** ctrl + G**</li><li>是不是想要把某几行的代码合并成一行？ 代码选中 Ctrl + J</li><li>一个方法过长？想要讲这个方法收起来？ option + ⌘ + [</li><li></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>scss在项目实战中的使用</title>
      <link href="/025-scss%E5%9C%A8%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/025-scss%E5%9C%A8%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="变量使用">变量使用</h2><blockquote><ul><li>全局使用：使用$varaible格式定义变量，比如全局的主题色，可在common.scss中定义，通过@import的方式引用即可</li><li>局部使用：在本文件中创建变量$themeColor = red,然后直接使用，存在块级作用域。</li></ul></blockquote><blockquote><p>CSS原生可通过定义<code>-- 变量名</code>结合var函数的方式来达到这一目标。</p></blockquote><h2 id="混合使用-mixins">混合使用(mixins)</h2><blockquote><ul><li>可在common.scss中使用@mixin varibaleName{}的方式定义 多次重复使用的样式，通过@include的方式应用。</li><li>还可以使用@mixin varibaleName(varib1 varib2 varib3){} 的方式传入自定义的属性，进行代码复用，比如可以将 flex布局使用mixin的形式，传入变量使用。</li></ul></blockquote><h2 id="嵌套">嵌套</h2><blockquote><p>嵌套功能避免了重复输入父选择器，令复杂的CSS结果更易于管理。</p></blockquote><h2 id="导入">导入</h2><blockquote><ul><li>@import 导入，文件扩展名为.scss或.sass</li><li>可同时导入多个文件 @import ‘bar’,‘foo’;</li></ul></blockquote><h2 id="使用">&amp;使用</h2><blockquote><ul><li>在嵌套 CSS 规则时，有时也需要直接使用嵌套外层的父选择器，比如hover、first-child等使用。</li><li>&amp;还有一个使用情况是: .main{ &amp;-content{}}，这里经过编译后就是 .main-content.</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3基础</title>
      <link href="/024-Vue3%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/024-Vue3%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h1>Vue3快速上手</h1><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/vue3-logo.1gv867hynum8.webp" alt="vue3-logo"></p><h2 id="1-Vue3简介">1.Vue3简介</h2><ul><li>2020年9月18日，Vue.js发布3.0版本，代号：One Piece（海贼王）</li><li>耗时2年多、<a href="https://github.com/vuejs/vue-next/graphs/commit-activity">2600+次提交</a>、<a href="https://github.com/vuejs/rfcs/tree/master/active-rfcs">30+个RFC</a>、<a href="https://github.com/vuejs/vue-next/pulls?q=is%3Apr+is%3Amerged+-author%3Aapp%2Fdependabot-preview+">600+次PR</a>、<a href="https://github.com/vuejs/vue-next/graphs/contributors">99位贡献者</a></li><li>github上的tags地址：<a href="https://github.com/vuejs/vue-next/releases/tag/v3.0.0">https://github.com/vuejs/vue-next/releases/tag/v3.0.0</a></li></ul><h2 id="2-Vue3带来了什么">2.Vue3带来了什么</h2><h3 id="1-性能的提升">1.性能的提升</h3><ul><li>打包大小减少41%</li><li>初次渲染快55%, 更新渲染快133%</li><li>内存减少54%<br>…</li></ul><h3 id="2-源码的升级">2.源码的升级</h3><ul><li>使用Proxy代替defineProperty实现响应式</li><li>重写虚拟DOM的实现和Tree-Shaking<br>…</li></ul><h3 id="3-拥抱TypeScript">3.拥抱TypeScript</h3><ul><li>Vue3可以更好的支持TypeScript</li></ul><h3 id="4-新的特性">4.新的特性</h3><ol><li>Composition API（组合API）</li></ol><ul><li>setup配置</li><li>ref与reactive</li><li>watch与watchEffect</li><li>provide与inject</li><li>…</li></ul><ol start="2"><li>新的内置组件</li></ol><ul><li>Fragment</li><li>Teleport</li><li>Suspense</li></ul><ol start="3"><li>其他改变</li></ol><ul><li>新的生命周期钩子</li><li>data 选项应始终被声明为一个函数</li><li>移除keyCode支持作为 v-on 的修饰符</li><li>…</li></ul><h1>一、创建Vue3.0工程</h1><h2 id="1-使用-vue-cli-创建">1.使用 vue-cli 创建</h2><p>官方文档：<a href="https://cli.vuejs.org/zh/guide/creating-a-project.html#vue-create">https://cli.vuejs.org/zh/guide/creating-a-project.html#vue-create</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看@vue/cli版本，确保@vue/cli版本在4.5.0以上</span></span><br><span class="line">vue --version</span><br><span class="line"><span class="comment">## 安装或者升级你的@vue/cli</span></span><br><span class="line">npm install -g @vue/cli</span><br><span class="line"><span class="comment">## 创建</span></span><br><span class="line">vue create vue_test</span><br><span class="line"><span class="comment">## 启动</span></span><br><span class="line"><span class="built_in">cd</span> vue_test</span><br><span class="line">npm run serve</span><br></pre></td></tr></table></figure><h2 id="2-使用-vite-创建">2.使用 vite 创建</h2><p>官方文档：<a href="https://v3.cn.vuejs.org/guide/installation.html#vite">https://v3.cn.vuejs.org/guide/installation.html#vite</a></p><p>vite官网：<a href="https://vitejs.cn">https://vitejs.cn</a></p><ul><li>什么是vite？—— 新一代前端构建工具。</li><li>优势如下：<ul><li>开发环境中，无需打包操作，可快速的冷启动。</li><li>轻量快速的热重载（HMR）。</li><li>真正的按需编译，不再等待整个应用编译完成。</li></ul></li><li>传统构建 与 vite构建对比图</li></ul><p><img src="https://cn.vitejs.dev/assets/bundler.37740380.png#id=gmE2O&amp;originHeight=1068&amp;originWidth=1918&amp;originalType=binary&amp;ratio=1&amp;status=done&amp;style=none" alt=""><br><img src="https://cn.vitejs.dev/assets/esm.3070012d.png#id=NFXRF&amp;originHeight=1030&amp;originWidth=1646&amp;originalType=binary&amp;ratio=1&amp;status=done&amp;style=none" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 创建工程</span></span><br><span class="line">npm init vite-app &lt;project-name&gt;</span><br><span class="line"><span class="comment">## 进入工程目录</span></span><br><span class="line"><span class="built_in">cd</span> &lt;project-name&gt;</span><br><span class="line"><span class="comment">## 安装依赖</span></span><br><span class="line">npm install</span><br><span class="line"><span class="comment">## 运行</span></span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h1>二、常用 Composition API</h1><p>官方文档: <a href="https://v3.cn.vuejs.org/guide/composition-api-introduction.html">https://v3.cn.vuejs.org/guide/composition-api-introduction.html</a></p><h2 id="1-拉开序幕的setup">1.拉开序幕的setup</h2><ol><li>理解：Vue3.0中一个新的配置项，值为一个函数。</li><li>setup是所有<strong>Composition API（组合API）</strong>“ 表演的舞台 ”。</li><li>组件中所用到的：数据、方法等等，均要配置在setup中。</li><li>setup函数的两种返回值：<ol><li>若返回一个对象，则对象中的属性、方法, 在模板中均可以直接使用。（重点关注！）</li><li>若返回一个渲染函数：则可以自定义渲染内容。（了解）</li></ol></li><li>注意点：<ol><li>尽量不要与Vue2.x配置混用<ul><li>Vue2.x配置（data、methos、computed…）中<strong>可以访问到</strong>setup中的属性、方法。</li><li>但在setup中<strong>不能访问到</strong>Vue2.x配置（data、methos、computed…）。</li><li>如果有重名, setup优先。</li></ul></li><li>setup不能是一个async函数，因为返回值不再是return的对象, 而是promise, 模板看不到return对象中的属性。（后期也可以返回一个Promise实例，但需要Suspense和异步组件的配合）</li></ol></li></ol><h2 id="2-ref函数">2.ref函数</h2><ul><li>作用: 定义一个响应式的数据</li><li>语法: <code>const xxx = ref(initValue)</code><ul><li>创建一个包含响应式数据的<strong>引用对象（reference对象，简称ref对象）</strong>。</li><li>JS中操作数据： <code>xxx.value</code></li><li>模板中读取数据: 不需要.value，直接：<code>&lt;div&gt;&#123;&#123;xxx&#125;&#125;&lt;/div&gt;</code></li></ul></li><li>备注：<ul><li>接收的数据可以是：基本类型、也可以是对象类型。</li><li>基本类型的数据：响应式依然是靠<code>Object.defineProperty()</code>的<code>get</code>与<code>set</code>完成的。</li><li>对象类型的数据：内部 “ 求助 ” 了Vue3.0中的一个新函数—— <code>reactive</code>函数。</li></ul></li></ul><h2 id="3-reactive函数">3.reactive函数</h2><ul><li>作用: 定义一个<strong>对象类型</strong>的响应式数据（基本类型不要用它，要用<code>ref</code>函数）</li><li>语法：<code>const 代理对象= reactive(源对象)</code>接收一个对象（或数组），返回一个<strong>代理对象（Proxy的实例对象，简称proxy对象）</strong></li><li>reactive定义的响应式数据是“深层次的”。</li><li>内部基于 ES6 的 Proxy 实现，通过代理对象操作源对象内部数据进行操作。</li></ul><h2 id="4-Vue3-0中的响应式原理">4.Vue3.0中的响应式原理</h2><h3 id="vue2-x的响应式">vue2.x的响应式</h3><ul><li>实现原理：<ul><li>对象类型：通过<code>Object.defineProperty()</code>对属性的读取、修改进行拦截（数据劫持）。</li><li>数组类型：通过重写更新数组的一系列方法来实现拦截。（对数组的变更方法进行了包裹）。</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(data, <span class="string">&#x27;count&#x27;</span>, &#123;</span><br><span class="line">    get () &#123;&#125;, </span><br><span class="line">    set () &#123;&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>存在问题：<ul><li>新增属性、删除属性, 界面不会更新。</li><li>直接通过下标修改数组, 界面不会自动更新。</li></ul></li></ul><h3 id="Vue3-0的响应式">Vue3.0的响应式</h3><ul><li>实现原理:<ul><li>通过Proxy（代理）:  拦截对象中任意属性的变化, 包括：属性值的读写、属性的添加、属性的删除等。</li><li>通过Reflect（反射）:  对源对象的属性进行操作。</li><li>MDN文档中描述的Proxy与Reflect：<ul><li>Proxy：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy</a></li><li>Reflect：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect</a></li></ul></li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Proxy</span>(data, &#123;</span><br><span class="line"><span class="comment">// 拦截读取属性值</span></span><br><span class="line">    get (target, prop) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Reflect</span>.<span class="title function_">get</span>(target, prop)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 拦截设置属性值或添加新属性</span></span><br><span class="line">    set (target, prop, value) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Reflect</span>.<span class="title function_">set</span>(target, prop, value)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 拦截删除属性</span></span><br><span class="line">    deleteProperty (target, prop) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Reflect</span>.<span class="title function_">deleteProperty</span>(target, prop)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">proxy.<span class="property">name</span> = <span class="string">&#x27;tom&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="5-reactive对比ref">5.reactive对比ref</h2><ul><li>从定义数据角度对比：<ul><li>ref用来定义：<strong>基本类型数据</strong>。</li><li>reactive用来定义：<strong>对象（或数组）类型数据</strong>。</li><li>备注：ref也可以用来定义<strong>对象（或数组）类型数据</strong>, 它内部会自动通过<code>reactive</code>转为<strong>代理对象</strong>。</li></ul></li><li>从原理角度对比：<ul><li>ref通过<code>Object.defineProperty()</code>的<code>get</code>与<code>set</code>来实现响应式（数据劫持）。</li><li>reactive通过使用<strong>Proxy</strong>来实现响应式（数据劫持）, 并通过<strong>Reflect</strong>操作<strong>源对象</strong>内部的数据。</li></ul></li><li>从使用角度对比：<ul><li>ref定义的数据：操作数据<strong>需要</strong><code>.value</code>，读取数据时模板中直接读取<strong>不需要</strong><code>.value</code>。</li><li>reactive定义的数据：操作数据与读取数据：<strong>均不需要</strong><code>.value</code>。</li></ul></li></ul><h2 id="6-setup的两个注意点">6.setup的两个注意点</h2><ul><li>setup执行的时机<ul><li>在beforeCreate之前执行一次，this是undefined。</li></ul></li><li>setup的参数<ul><li>props：值为对象，包含：组件外部传递过来，且组件内部声明接收了的属性。</li><li>context：上下文对象<ul><li>attrs: 值为对象，包含：组件外部传递过来，但没有在props配置中声明的属性, 相当于 <code>this.$attrs</code>。</li><li>slots: 收到的插槽内容, 相当于 <code>this.$slots</code>。</li><li>emit: 分发自定义事件的函数, 相当于 <code>this.$emit</code>。</li></ul></li></ul></li></ul><h2 id="7-计算属性与监视">7.计算属性与监视</h2><h3 id="1-computed函数">1.computed函数</h3><ul><li>与Vue2.x中computed配置功能一致</li><li>写法</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;computed&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">setup</span>(<span class="params"></span>)&#123;</span><br><span class="line">    ...</span><br><span class="line"><span class="comment">//计算属性——简写</span></span><br><span class="line">    <span class="keyword">let</span> fullName = <span class="title function_">computed</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> person.<span class="property">firstName</span> + <span class="string">&#x27;-&#x27;</span> + person.<span class="property">lastName</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">//计算属性——完整</span></span><br><span class="line">    <span class="keyword">let</span> fullName = <span class="title function_">computed</span>(&#123;</span><br><span class="line">        <span class="title function_">get</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> person.<span class="property">firstName</span> + <span class="string">&#x27;-&#x27;</span> + person.<span class="property">lastName</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">set</span>(<span class="params">value</span>)&#123;</span><br><span class="line">            <span class="keyword">const</span> nameArr = value.<span class="title function_">split</span>(<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">            person.<span class="property">firstName</span> = nameArr[<span class="number">0</span>]</span><br><span class="line">            person.<span class="property">lastName</span> = nameArr[<span class="number">1</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-watch函数">2.watch函数</h3><ul><li>与Vue2.x中watch配置功能一致</li><li>两个小“坑”：<ul><li>监视reactive定义的响应式数据时：oldValue无法正确获取、强制开启了深度监视（deep配置失效）。</li><li>监视reactive定义的响应式数据中某个属性时：deep配置有效。</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//情况一：监视ref定义的响应式数据</span></span><br><span class="line"><span class="title function_">watch</span>(sum,<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;sum变化了&#x27;</span>,newValue,oldValue)</span><br><span class="line">&#125;,&#123;<span class="attr">immediate</span>:<span class="literal">true</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//情况二：监视多个ref定义的响应式数据</span></span><br><span class="line"><span class="title function_">watch</span>([sum,msg],<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;sum或msg变化了&#x27;</span>,newValue,oldValue)</span><br><span class="line">&#125;) </span><br><span class="line"></span><br><span class="line"><span class="comment">/* 情况三：监视reactive定义的响应式数据</span></span><br><span class="line"><span class="comment">若watch监视的是reactive定义的响应式数据，则无法正确获得oldValue！！</span></span><br><span class="line"><span class="comment">若watch监视的是reactive定义的响应式数据，则强制开启了深度监视 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_">watch</span>(person,<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;person变化了&#x27;</span>,newValue,oldValue)</span><br><span class="line">&#125;,&#123;<span class="attr">immediate</span>:<span class="literal">true</span>,<span class="attr">deep</span>:<span class="literal">false</span>&#125;) <span class="comment">//此处的deep配置不再奏效</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//情况四：监视reactive定义的响应式数据中的某个属性</span></span><br><span class="line"><span class="title function_">watch</span>(<span class="function">()=&gt;</span>person.<span class="property">job</span>,<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;person的job变化了&#x27;</span>,newValue,oldValue)</span><br><span class="line">&#125;,&#123;<span class="attr">immediate</span>:<span class="literal">true</span>,<span class="attr">deep</span>:<span class="literal">true</span>&#125;) </span><br><span class="line"></span><br><span class="line"><span class="comment">//情况五：监视reactive定义的响应式数据中的某些属性</span></span><br><span class="line"><span class="title function_">watch</span>([<span class="function">()=&gt;</span>person.<span class="property">job</span>,<span class="function">()=&gt;</span>person.<span class="property">name</span>],<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;person的job变化了&#x27;</span>,newValue,oldValue)</span><br><span class="line">&#125;,&#123;<span class="attr">immediate</span>:<span class="literal">true</span>,<span class="attr">deep</span>:<span class="literal">true</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//特殊情况</span></span><br><span class="line"><span class="title function_">watch</span>(<span class="function">()=&gt;</span>person.<span class="property">job</span>,<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;person的job变化了&#x27;</span>,newValue,oldValue)</span><br><span class="line">&#125;,&#123;<span class="attr">deep</span>:<span class="literal">true</span>&#125;) <span class="comment">//此处由于监视的是reactive素定义的对象中的某个属性，所以deep配置有效</span></span><br></pre></td></tr></table></figure><h3 id="3-watchEffect函数">3.watchEffect函数</h3><ul><li>watch的套路是：既要指明监视的属性，也要指明监视的回调。</li><li>watchEffect的套路是：不用指明监视哪个属性，监视的回调中用到哪个属性，那就监视哪个属性。</li><li>watchEffect有点像computed：<ul><li>但computed注重的计算出来的值（回调函数的返回值），所以必须要写返回值。</li><li>而watchEffect更注重的是过程（回调函数的函数体），所以不用写返回值。</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//watchEffect所指定的回调中用到的数据只要发生变化，则直接重新执行回调。</span></span><br><span class="line"><span class="title function_">watchEffect</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> x1 = sum.<span class="property">value</span></span><br><span class="line">    <span class="keyword">const</span> x2 = person.<span class="property">age</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;watchEffect配置的回调执行了&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="8-生命周期">8.生命周期</h2><p><strong>vue2.x的生命周期</strong><br><img src="https://cn.vuejs.org/images/lifecycle.png#height=1221&amp;id=StK23&amp;originHeight=3039&amp;originWidth=1200&amp;originalType=binary&amp;ratio=1&amp;status=done&amp;style=none&amp;width=482.00567626953125" alt=""><br><strong>vue3.0的生命周期</strong><br><img src="https://v3.cn.vuejs.org/images/lifecycle.svg#height=834&amp;id=P5NRu&amp;originHeight=1388&amp;originWidth=840&amp;originalType=binary&amp;ratio=1&amp;status=done&amp;style=none&amp;width=505.00848388671875" alt=""></p><ul><li>Vue3.0中可以继续使用Vue2.x中的生命周期钩子，但有有两个被更名：<ul><li><code>beforeDestroy</code>改名为 <code>beforeUnmount</code></li><li><code>destroyed</code>改名为 <code>unmounted</code></li></ul></li><li>Vue3.0也提供了 Composition API 形式的生命周期钩子，与Vue2.x中钩子对应关系如下：<ul><li><code>beforeCreate</code>===&gt;<code>setup()</code></li><li><code>created</code>=======&gt;<code>setup()</code></li><li><code>beforeMount</code> ===&gt;<code>onBeforeMount</code></li><li><code>mounted</code>=======&gt;<code>onMounted</code></li><li><code>beforeUpdate</code>===&gt;<code>onBeforeUpdate</code></li><li><code>updated</code> =======&gt;<code>onUpdated</code></li><li><code>beforeUnmount</code> ==&gt;<code>onBeforeUnmount</code></li><li><code>unmounted</code> =====&gt;<code>onUnmounted</code></li></ul></li></ul><h2 id="9-自定义hook函数">9.自定义hook函数</h2><ul><li>什么是hook？—— 本质是一个函数，把setup函数中使用的Composition API进行了封装。</li><li>类似于vue2.x中的mixin。</li><li>自定义hook的优势: 复用代码, 让setup中的逻辑更清楚易懂。</li></ul><h2 id="10-toRef">10.toRef</h2><ul><li>作用：创建一个 ref 对象，其value值指向另一个对象中的某个属性。</li><li>语法：<code>const name = toRef(person,'name')</code></li><li>应用:   要将响应式对象中的某个属性单独提供给外部使用时。</li><li>扩展：<code>toRefs</code> 与<code>toRef</code>功能一致，但可以批量创建多个 ref 对象，语法：<code>toRefs(person)</code></li></ul><h1>三、其它 Composition API</h1><h2 id="1-shallowReactive-与-shallowRef">1.shallowReactive 与 shallowRef</h2><ul><li>shallowReactive：只处理对象最外层属性的响应式（浅响应式）。</li><li>shallowRef：只处理基本数据类型的响应式, 不进行对象的响应式处理。</li><li>什么时候使用?<ul><li>如果有一个对象数据，结构比较深, 但变化时只是外层属性变化 ===&gt; shallowReactive。</li><li>如果有一个对象数据，后续功能不会修改该对象中的属性，而是生新的对象来替换 ===&gt; shallowRef。</li></ul></li></ul><h2 id="2-readonly-与-shallowReadonly">2.readonly 与 shallowReadonly</h2><ul><li>readonly: 让一个响应式数据变为只读的（深只读）。</li><li>shallowReadonly：让一个响应式数据变为只读的（浅只读）。</li><li>应用场景: 不希望数据被修改时。</li></ul><h2 id="3-toRaw-与-markRaw">3.toRaw 与 markRaw</h2><ul><li>toRaw：<ul><li>作用：将一个由<code>reactive</code>生成的<strong>响应式对象</strong>转为<strong>普通对象</strong>。</li><li>使用场景：用于读取响应式对象对应的普通对象，对这个普通对象的所有操作，不会引起页面更新。</li></ul></li><li>markRaw：<ul><li>作用：标记一个对象，使其永远不会再成为响应式对象。</li><li>应用场景:<ol><li>有些值不应被设置为响应式的，例如复杂的第三方类库等。</li><li>当渲染具有不可变数据源的大列表时，跳过响应式转换可以提高性能。</li></ol></li></ul></li></ul><h2 id="4-customRef">4.customRef</h2><ul><li>作用：创建一个自定义的 ref，并对其依赖项跟踪和更新触发进行显式控制。</li><li>实现防抖效果：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; v-model=&quot;keyword&quot;&gt;</span><br><span class="line">&lt;h3&gt;&#123;&#123;keyword&#125;&#125;&lt;/h3&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123;ref,customRef&#125; from &#x27;vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">name:&#x27;Demo&#x27;,</span><br><span class="line">setup()&#123;</span><br><span class="line">// let keyword = ref(&#x27;hello&#x27;) //使用Vue准备好的内置ref</span><br><span class="line">//自定义一个myRef</span><br><span class="line">function myRef(value,delay)&#123;</span><br><span class="line">let timer</span><br><span class="line">//通过customRef去实现自定义</span><br><span class="line">return customRef((track,trigger)=&gt;&#123;</span><br><span class="line">return&#123;</span><br><span class="line">get()&#123;</span><br><span class="line">track() //告诉Vue这个value值是需要被“追踪”的</span><br><span class="line">return value</span><br><span class="line">&#125;,</span><br><span class="line">set(newValue)&#123;</span><br><span class="line">clearTimeout(timer)</span><br><span class="line">timer = setTimeout(()=&gt;&#123;</span><br><span class="line">value = newValue</span><br><span class="line">trigger() //告诉Vue去更新界面</span><br><span class="line">&#125;,delay)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">let keyword = myRef(&#x27;hello&#x27;,500) //使用程序员自定义的ref</span><br><span class="line">return &#123;</span><br><span class="line">keyword</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="5-provide-与-inject">5.provide 与 inject</h2><p><img src="https://v3.cn.vuejs.org/images/components_provide.png#height=319&amp;id=CKekR&amp;originHeight=454&amp;originWidth=578&amp;originalType=binary&amp;ratio=1&amp;status=done&amp;style=none&amp;width=405.99713134765625" alt=""></p><ul><li>作用：实现<strong>祖与后代组件间</strong>通信</li><li>套路：父组件有一个 <code>provide</code> 选项来提供数据，后代组件有一个 <code>inject</code> 选项来开始使用这些数据</li><li>具体写法：<ol><li>祖组件中：</li></ol></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">setup</span>(<span class="params"></span>)&#123;</span><br><span class="line">......</span><br><span class="line">    <span class="keyword">let</span> car = <span class="title function_">reactive</span>(&#123;<span class="attr">name</span>:<span class="string">&#x27;奔驰&#x27;</span>,<span class="attr">price</span>:<span class="string">&#x27;40万&#x27;</span>&#125;)</span><br><span class="line">    <span class="title function_">provide</span>(<span class="string">&#x27;car&#x27;</span>,car)</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>后代组件中：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">setup</span>(<span class="params">props,context</span>)&#123;</span><br><span class="line">......</span><br><span class="line">    <span class="keyword">const</span> car = <span class="title function_">inject</span>(<span class="string">&#x27;car&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> &#123;car&#125;</span><br><span class="line">......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-响应式数据的判断">6.响应式数据的判断</h2><ul><li>isRef: 检查一个值是否为一个 ref 对象</li><li>isReactive: 检查一个对象是否是由 <code>reactive</code> 创建的响应式代理</li><li>isReadonly: 检查一个对象是否是由 <code>readonly</code> 创建的只读代理</li><li>isProxy: 检查一个对象是否是由 <code>reactive</code> 或者 <code>readonly</code> 方法创建的代理</li></ul><h1>四、Composition API 的优势</h1><h2 id="1-Options-API-存在的问题">1.Options API 存在的问题</h2><p>使用传统OptionsAPI中，新增或者修改一个需求，就需要分别在data，methods，computed里修改 。</p><h2 id="2-Composition-API-的优势">2.Composition API 的优势</h2><p>我们可以更加优雅的组织我们的代码，函数。让相关功能的代码更加有序的组织在一起。</p><h1>五、新的组件</h1><h2 id="1-Fragment">1.Fragment</h2><ul><li>在Vue2中: 组件必须有一个根标签</li><li>在Vue3中: 组件可以没有根标签, 内部会将多个标签包含在一个Fragment虚拟元素中</li><li>好处: 减少标签层级, 减小内存占用</li></ul><h2 id="2-Teleport">2.Teleport</h2><ul><li>什么是Teleport？—— <code>Teleport</code> 是一种能够将我们的<strong>组件html结构</strong>移动到指定位置的技术。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;teleport to=&quot;移动位置&quot;&gt;</span><br><span class="line">&lt;div v-if=&quot;isShow&quot; class=&quot;mask&quot;&gt;</span><br><span class="line">&lt;div class=&quot;dialog&quot;&gt;</span><br><span class="line">&lt;h3&gt;我是一个弹窗&lt;/h3&gt;</span><br><span class="line">&lt;button @click=&quot;isShow = false&quot;&gt;关闭弹窗&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/teleport&gt;</span><br></pre></td></tr></table></figure><h2 id="3-Suspense">3.Suspense</h2><ul><li>等待异步组件时渲染一些额外内容，让应用有更好的用户体验</li><li>使用步骤：<ul><li>异步引入组件</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;defineAsyncComponent&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Child</span> = <span class="title function_">defineAsyncComponent</span>(<span class="function">()=&gt;</span><span class="keyword">import</span>(<span class="string">&#x27;./components/Child.vue&#x27;</span>))</span><br></pre></td></tr></table></figure><ul><li>使用<code>Suspense</code>包裹组件，并配置好<code>default</code> 与 <code>fallback</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;app&quot;&gt;</span><br><span class="line">&lt;h3&gt;我是App组件&lt;/h3&gt;</span><br><span class="line">&lt;Suspense&gt;</span><br><span class="line">&lt;template v-slot:default&gt;</span><br><span class="line">&lt;Child/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;template v-slot:fallback&gt;</span><br><span class="line">&lt;h3&gt;加载中.....&lt;/h3&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;/Suspense&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h1>六、其他</h1><h2 id="1-全局API的转移">1.全局API的转移</h2><ul><li>Vue 2.x 有许多全局 API 和配置。<ul><li>例如：注册全局组件、注册全局指令等。</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注册全局组件</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&#x27;MyButton&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">data</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">    <span class="attr">count</span>: <span class="number">0</span></span><br><span class="line">  &#125;),</span><br><span class="line">  <span class="attr">template</span>: <span class="string">&#x27;&lt;button @click=&quot;count++&quot;&gt;Clicked &#123;&#123; count &#125;&#125; times.&lt;/button&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//注册全局指令</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(<span class="string">&#x27;focus&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">inserted</span>: <span class="function"><span class="params">el</span> =&gt;</span> el.<span class="title function_">focus</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Vue3.0中对这些API做出了调整：<ul><li>将全局的API，即：<code>Vue.xxx</code>调整到应用实例（<code>app</code>）上<br>| 2.x 全局 API（<code>Vue</code><br>） | 3.x 实例 API (<code>app</code><br>) |<br>| — | — |<br>| Vue.config.xxxx | app.config.xxxx |<br>| Vue.config.productionTip | <strong>移除</strong> |<br>| Vue.component | app.component |<br>| Vue.directive | app.directive |<br>| Vue.mixin | app.mixin |<br>| Vue.use | app.use |<br>| Vue.prototype | app.config.globalProperties |</li></ul></li></ul><h2 id="2-其他改变">2.其他改变</h2><ul><li>data选项应始终被声明为一个函数。</li><li>过度类名的更改：<ul><li>Vue2.x写法</li></ul></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.v-enter</span>,</span><br><span class="line"><span class="selector-class">.v-leave-to</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.v-leave</span>,</span><br><span class="line"><span class="selector-class">.v-enter-to</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Vue3.x写法</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.v-enter-from</span>,</span><br><span class="line"><span class="selector-class">.v-leave-to</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.v-leave-from</span>,</span><br><span class="line"><span class="selector-class">.v-enter-to</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>移除</strong>keyCode作为 v-on 的修饰符，同时也不再支持<code>config.keyCodes</code></li><li><strong>移除</strong><code>v-on.native</code>修饰符<ul><li>父组件中绑定事件</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;my-component</span><br><span class="line">  v-on:close=&quot;handleComponentEvent&quot;</span><br><span class="line">  v-on:click=&quot;handleNativeClickEvent&quot;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><ul><li>子组件中声明自定义事件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    emits: [&#x27;close&#x27;]</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>移除</strong>过滤器（filter）</li></ul><blockquote><p>过滤器虽然这看起来很方便，但它需要一个自定义语法，打破大括号内表达式是 “只是 JavaScript” 的假设，这不仅有学习成本，而且有实现成本！建议用方法调用或计算属性去替换过滤器。</p></blockquote><ul><li>…</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS中常用的一些函数</title>
      <link href="/023-CSS%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0/"/>
      <url>/023-CSS%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h3 id="calc用法">calc用法</h3><blockquote><ul><li>calc()函数支持加减乘除四种运算。</li><li>书写上一定要注意啊，<strong>加减号两边一定要有空格</strong></li><li>任何长度值都可以使用calc函数进行计算:% vh vw px em等</li><li>calc函数使DOM元素更加灵活的响应视口改变，还可以通过calc函数实现元素的绝对剧中定位(postion:absoute;top(50vh-Xpx))</li></ul></blockquote><h3 id="min函数-max函数">min函数(max函数)</h3><blockquote><p>min()函数支持一个或多个表达式，每个表达式用逗号分隔，将最小的值作为返回值</p></blockquote><h3 id="clamp函数">clamp函数</h3><blockquote><p>语法为clamp(MIN,VAL,MAX)：作用是返回一个区间范围内的值，首选值为VAL，大于MAX使用MAX，小与MIN，使用MIN。<br>相当于min(MIN,min(max,MAX))</p></blockquote><h3 id="变量使用-var函数"><strong>变量使用(var函数)</strong></h3><blockquote><ul><li>CSS声明变量，需要在声明的变量前加两根连接线：<code>--</code>,需要注意变量名大小写敏感。且注意如果变量值有单位，不能写成字符串。</li><li>var函数用于读取变量，var函数还可以接收第二个参数，表示变量的默认值，即如果变量不存在，就使用默认值。</li><li>利用css动态根据页面变化导致的规则变化，可以在响应式布局中使用media声明全局变量，使得不同的屏幕宽度有不同的变量值。</li></ul></blockquote><h3 id="line-gradient">line-gradient</h3><blockquote><ul><li>用于创建一个线性渐变的图像，需要设置起点的方向和渐变的起始颜色。</li><li>未设置方向，默认是从上到下。</li><li>语法 line-gradient<code>[&lt;angel&gt; | &lt;side-or-corner&gt;],stopColor1,stopColor2</code></li></ul></blockquote><h3 id="radial-gradient">radial-gradient</h3><blockquote><ul><li>与line-gradient类似，语法为<code>[shape size position],stopColor1,stopColor2</code></li><li>shape:指明径向渐变的形状，可以为circle和ellipse.</li><li>size:代表径向渐变范围的半径大小，shape为ellipse时需要设置两个值、、shape为circle时不能设置百分比。</li><li>postion:默认值是中心点，支持关键字，支持距离左上角的角标位置(px或百分比单位)</li></ul></blockquote><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">.<span class="property">radial_1</span> &#123;</span><br><span class="line">  <span class="comment">/*最简单的渐变：由中心到四周，由蓝色到黄色*/</span></span><br><span class="line">  <span class="built_in">background</span>-<span class="built_in">image</span>: radial-<span class="title function_">gradient</span>(<span class="built_in">blue</span>, yellow);</span><br><span class="line">&#125;</span><br><span class="line">.<span class="property">radial_2</span> &#123;</span><br><span class="line">  <span class="comment">/*半椭圆形渐变：由左侧中心点到四周，有蓝色到黄色*/</span></span><br><span class="line">  <span class="built_in">background</span>-<span class="built_in">image</span>: radial-<span class="title function_">gradient</span>(<span class="built_in">ellipse</span> <span class="number">100</span>% <span class="number">50</span>% at left center, <span class="built_in">blue</span>, yellow);</span><br><span class="line">&#125;</span><br><span class="line">.<span class="property">radial_3</span> &#123;</span><br><span class="line">  <span class="comment">/*左上角到右下角的发散式渐变*/</span></span><br><span class="line">  <span class="built_in">background</span>-<span class="built_in">image</span>: radial-<span class="title function_">gradient</span>(circle farthest-corner at left top, <span class="built_in">blue</span>, yellow);</span><br><span class="line">&#125;</span><br><span class="line">.<span class="property">radial_4</span> &#123;</span><br><span class="line">  <span class="comment">/*指定颜色渐变范围*/</span></span><br><span class="line">  <span class="built_in">background</span>-<span class="built_in">image</span>: radial-<span class="title function_">gradient</span>(<span class="built_in">ellipse</span> <span class="number">50</span>% <span class="number">30</span>%, <span class="built_in">blue</span> <span class="number">30</span>%, yellow <span class="number">70</span>%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Babel有关基础内容</title>
      <link href="/022-babel/"/>
      <url>/022-babel/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="背景">背景</h2><p>项目中babel的设置一团遭，确实有必要搞懂这个babel。有的项目中直接在配置文件.babelrc中配置好，有的在main.js中全局import 这个polyfill，有的是在webpack中配置，有的引入了大量的第三方babel插件，这样可不行啊，如果不对babel有个全面的认知，在面对这些一系列满眼的配置下去修改，就有点力不从心。<br>本文，抽丝剥茧，彻底的搞懂babel，并测试、去实践修改babe的配置。</p><h2 id="一、babel基础介绍">一、babel基础介绍</h2><ol><li>babel是什么？<br><a href="https://babeljs.io/">Babel</a> 是一个广泛使用的 ES6 转码器，可以将 ES6 代码转为 ES5 代码，从而在老版本的浏览器执行。这意味着，你可以用 ES6 的方式编写程序，又不用担心现有环境是否支持。</li><li>Babel的基本工作原理<br>主要分为 parsing、transforming、printing三个阶段</li></ol><ul><li>parsing为解析阶段，将ES6代码进行词法分析和语法分析转换成抽象语法树</li><li>transforming为转换阶段，将抽象语法树进行变换操作</li><li>printing为生成阶段，通过babel-generator生成对应的代码。</li></ul><ol start="3"><li>配置文件.babelrc的基本格式<br>首先，我们先对babel配置的基本格式有个浅显的了解：他是个对象、他的两个属性都是数组，他们分别是presets和plugins。</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;presets&quot;</span>: [],</span><br><span class="line">  <span class="string">&quot;plugins&quot;</span>: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着我们在介绍这两个属性前，了解下babel的插件与预设的概念。</p><h2 id="二、babel插件与预设">二、babel插件与预设</h2><p>在继续上面的问题之前，这里我们需要深刻的晓得：babel的核心是<strong>插件</strong>，babel的所有工作都是由插件完成的。然后我们去查看babel的插件列表：<a href="https://babeljs.io/docs/en/plugins-list">https://babeljs.io/docs/en/plugins-list</a>，部分截图如下</p><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/babel.5z62x05kn300.webp" alt="babel"></p><p>其中arrow-functions(也就是ES6的箭头函数)对应的插件是@babel/plugin-transform-arrow-functions<br>如果要使用这个插件，需要安装：npm install --save-dev @babel/plugin-transform-arrow-functions<br>这个插件作用就是将ES6的箭头函数转化为ES5写法。<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/babel.1pbhb3j4a5s0.webp" alt="babel"></p><p>进入到这个方法的详情页，如上图，我们看到：<strong>This plugin is included in @babel/preset-env</strong><br>也就是说这个插件以及其他各种单个插件都放在了@babel/preset-env这个包中。之所以要<strong>included到一个里面</strong>，是因为我们总不能一个一个插件的安装引入，官方就提供了一个包：<br><strong>嘿，兄弟，我把一些你们都会用到的一系列的插件包在一块，你们就不用单个安装了，只需要执行下面的命令</strong>：<br>npm install --save-dev @babel/preset-env’</p><p>此时，这个preset-env(一系列插件的集合)，安装好后，我们就可以去配置文件里面配置了。<br>【这个presets叫做“预设”：预设可以看成是一组插件或者配置项的集合。】</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;plugins&quot;</span>: [],</span><br><span class="line">  <span class="string">&quot;presets&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;@babel/preset-env&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、✨✨✨垫片-polyfill的使用">三、✨✨✨垫片-polyfill的使用</h2><p>垫片就是我们平时早已知道的babel-polyfill。<br>为什么引入了babel还需要引入babel-polyfill呢。<br>这是因为babel将ES6代码是分成了两种情况进行转换的：<strong>语法层和API层</strong>。</p><ul><li>语法层就是let const 箭头函数 class这些</li><li>API层就是 includes Promise  map这些，因此上面的preset-env预设只是对语法层进行了转换，需要对低版本的ES6上的API进行转换就需要polyfill了。</li></ul><p>之前的项目中，我们的使用方式如下：<br>首先，我们需要安装它：</p><ul><li>npm install @babel/polyfill -S</li></ul><p>关于项目中使用polyfill，有好多种写法，我们这里需要对他们的每个写法都了然于胸，才会 知道如何真正优化配置。</p><p><strong>type1:</strong></p><blockquote><p>在 node/React/Vue中使用,可能需要在入口文件最上层引入：</p><ul><li>require(‘@babel/polyfill’)</li><li>import '@babel/polyfill&quot;</li></ul></blockquote><p><strong>type2:</strong></p><blockquote><p>在webpack中可以通过配置文件加入：<br>module.exports = {<br>entry: [“@babel/polyfill”, “./app/js”],<br>};</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;plugins&quot;</span>: [],</span><br><span class="line">  <span class="string">&quot;presets&quot;</span>: [</span><br><span class="line">    [</span><br><span class="line">      <span class="string">&quot;@babel/preset-env&quot;</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;useBuiltIns&quot;</span>:<span class="string">&quot;usage&quot;</span>,</span><br><span class="line">        <span class="string">&quot;modules&quot;</span>: <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样引入polyfill，存在的一个问题是打出的包非常的大。<br>这里有一个很重要的配置 useBuiltIns : usage<br>它的含义是当我们在做polyfill填充的时候，在一些低版本不存在的特性的时候，并不会把全部加载，只是根据业务代码进行加载==》按需加载</p><h2 id="四、-babel-plugin-transform-runtime">四、@babel/plugin-transform-runtime</h2><p>看到一些资料说，引入的polyfill会污染全局变量，意思是别人如果使用了我们的类库，就可能造成这种问题，这里还未搞懂为什么会污染全局变量(暂且记下这个结论)，按我的理解，如果我们是开发自己的项目，不会对外提供，那么是不是就不需要去解决这个问题？</p><p>总之，babel为了解决这个<strong>污染全局变量</strong>以及<strong>代码冗余</strong>的问题，为我们提供了一个插件@babel/plugin-transform-runtime</p><ul><li>npm install --save-dev @babel/plugin-transform-runtime</li><li>npm install --save-dev @babel/runtime</li></ul><p>添加到配置文件中代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;plugins&quot;</span>: [</span><br><span class="line">    [<span class="string">&quot;@babel/plugin-transform-runtime&quot;</span>,&#123;</span><br><span class="line">      <span class="string">&quot;corejs&quot;</span>:<span class="number">3</span></span><br><span class="line">    &#125;]</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;presets&quot;</span>: [</span><br><span class="line">    [</span><br><span class="line">      <span class="string">&quot;@babel/preset-env&quot;</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;useBuiltIns&quot;</span>:<span class="string">&quot;usage&quot;</span>,</span><br><span class="line">        <span class="string">&quot;modules&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&quot;corejs&quot;</span>:<span class="number">3</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="五、babel的几个包">五、babel的几个包</h2><p>最后我们总结一下有关babel的几个包</p><ul><li>@babel/cli<br>一般情况下，我们在项目中是不会安装@babel/cli这个包的，因为这个包的作用是：如果我们想在命令行使用才需要安装，即只是一个终端cli工具。</li><li>@babel/core<br>这个是babel的核心包，拆分成了三个模块:parser/traverse/generator，如果需要以编程的方式来使用 Babel，可以使用 babel-core 这个包。<br>若是想要用babel-loader把es6的代码转换成为es5的代码，那么需要对应版本的babel-core。</li><li>@babel/preset-env<br>预设：预先设定一组插件，方便我们对插件集成配置管理。</li><li>@babel/polyfill<br>为浏览器不支持的API提供对应的兼容性代码，很明显如果你不提供，如果在不支持的浏览器里面使用了新API，那么你的页面就会挂掉,@babel-polyfill带来的一些问题以及介绍后续再说。</li><li>@babel/plugin-*<br>babel插件机制、方便扩展、集成。</li><li>@babel/plugin-transform-runtime<br>，解决转译语法层时出现的代码冗余、解决转译api层出现的全局变量污染</li></ul><h2 id="六、小结">六、小结</h2><p>Babel 是一个工具链，主要用于将采用ECMAScript 2015+ 语法编写的代码转换为向后兼容的JavaScript 语法，以便能够运行在当前和旧版本的浏览器或其他环境中。<br>这里的重点是这个 + 号，差不多的理解为：  所以现在的项目有些不会使用polyfiil，但不会出现问题，是因为写的ES代码几乎都没有什么新的特性，浏览器差不多都支持了，为了保险起见后续新API的标准推出，有的项目才会装这个polyfill     吧。</p>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker</title>
      <link href="/021-Docker%E7%9B%B8%E5%85%B3/"/>
      <url>/021-Docker%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<h2 id="一、快速命令一览">一、快速命令一览</h2><ul><li><code>docker -v</code>: 查看 docker 版本</li><li><code>docker images</code>: 查看本地安装的所有镜像</li><li><code>docker images -q</code>: 查看本地安装的所有镜像ID</li><li><code>docker search liugezhou</code>: 搜索公共镜像</li><li><code>docker pull something</code>: 下载某个镜像</li><li><code>docker rmi something</code>: 删除某个镜像</li></ul><hr><ul><li><code>docker ps</code>: 查看正在运行的容器</li><li><code>docker stop id</code>: 停止正在运行的容器</li><li><code>docker start id</code>: 再次启动停止的容器</li><li><code>docker restart id</code>: 重新启动已经启动的容器</li><li><code>docker rm id</code>: 删除已经停止运行的容器</li><li><code>docker rm id -f</code>: 直接删除正在运行中的容器</li><li><code>docker run -it --name=nginx nginx /bin/bash</code>: 此启动方式会给出一个命令终端<ul><li><strong>-i</strong>: 表示容器运行</li><li><strong>-t</strong>: 表示分配一个终端</li><li><strong>-d</strong>: 表示守护后台运行</li><li><strong>-p</strong>: 表示修改默认的端口</li><li><strong>–name</strong>: 给容器起一个名字</li></ul></li><li><code>docker exec  -it id /bin/bash</code> : 可以通过这个命令进入到容器中去</li><li>在容器中退出而不停止，使用 <code>ctrl+p ctrl+q</code></li></ul><h2 id="二、Docker-应用部署实践">二、Docker 应用部署实践</h2><h3 id="2-1-MySQL">2.1 MySQL</h3><ol><li>搜索 mysql 镜像</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">search</span> <span class="string">mysql</span></span><br></pre></td></tr></table></figure><ol start="2"><li>拉取 mysql 镜像</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">pull</span> <span class="string">mysql:5.6</span></span><br></pre></td></tr></table></figure><ol start="3"><li>创建容器，设置端口映射、目录映射</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在/root目录下创建mysql目录用于存储mysql数据信息</span></span><br><span class="line"><span class="string">mkdir</span> <span class="string">~/mysql</span></span><br><span class="line"><span class="string">cd</span> <span class="string">~/mysql</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">run</span> <span class="string">-id</span> <span class="string">\</span></span><br><span class="line"><span class="string">-p</span> <span class="number">3307</span><span class="string">:3306</span> <span class="string">\</span></span><br><span class="line"><span class="string">--name=c_mysql</span> <span class="string">\</span></span><br><span class="line"><span class="string">-v</span> <span class="string">$PWD/conf:/etc/mysql/conf.d</span> <span class="string">\</span></span><br><span class="line"><span class="string">-v</span> <span class="string">$PWD/logs:/logs</span> <span class="string">\</span></span><br><span class="line"><span class="string">-v</span> <span class="string">$PWD/data:/var/lib/mysql</span> <span class="string">\</span></span><br><span class="line"><span class="string">-e</span> <span class="string">MYSQL_ROOT_PASSWORD=123456</span> <span class="string">\</span></span><br><span class="line"><span class="string">mysql:5.7</span></span><br></pre></td></tr></table></figure><ul><li>参数说明：<ul><li><strong>-p 3307:3306</strong>：将容器的 3306 端口映射到宿主机的 3307 端口。</li><li><strong>-v $PWD/conf:/etc/mysql/conf.d</strong>：将主机当前目录下的 conf/my.cnf 挂载到容器的 /etc/mysql/my.cnf。配置目录</li><li><strong>-v $PWD/logs:/logs</strong>：将主机当前目录下的 logs 目录挂载到容器的 /logs。日志目录</li><li><strong>-v $PWD/data:/var/lib/mysql</strong> ：将主机当前目录下的 data 目录挂载到容器的 /var/lib/mysql 。数据目录</li><li>**-e MYSQL_ROOT_PASSWORD=123456：**初始化 root 用户的密码。</li></ul></li></ul><ol start="4"><li>进入容器，操作 mysql</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">exec</span> <span class="string">–it</span> <span class="string">c_mysql</span> <span class="string">/bin/bash</span></span><br></pre></td></tr></table></figure><ol start="5"><li>使用外部机器连接容器中的 mysql</li></ol><h3 id="2-2-Tomcat">2.2 Tomcat</h3><ol><li>搜索 tomcat 镜像</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">search</span> <span class="string">tomcat</span></span><br></pre></td></tr></table></figure><ol start="2"><li>拉取 tomcat 镜像</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">pull</span> <span class="string">tomcat</span></span><br></pre></td></tr></table></figure><ol start="3"><li>创建容器，设置端口映射、目录映射</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在/root目录下创建tomcat目录用于存储tomcat数据信息</span></span><br><span class="line"><span class="string">mkdir</span> <span class="string">~/tomcat</span></span><br><span class="line"><span class="string">cd</span> <span class="string">~/tomcat</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">run</span> <span class="string">-id</span> <span class="string">--name=c_tomcat</span> <span class="string">\</span></span><br><span class="line"><span class="string">-p</span> <span class="number">8080</span><span class="string">:8080</span> <span class="string">\</span></span><br><span class="line"><span class="string">-v</span> <span class="string">$PWD:/usr/local/tomcat/webapps</span> <span class="string">\</span></span><br><span class="line"><span class="string">tomcat</span></span><br></pre></td></tr></table></figure><ul><li>参数说明：<ul><li>**-p 8080:8080：**将容器的 8080 端口映射到主机的 8080 端口<br>**-v $PWD:/usr/local/tomcat/webapps：**将主机中当前目录挂载到容器的 webapps</li></ul></li></ul><ol start="4"><li>使用外部机器访问 tomcat</li></ol><h3 id="2-3-Nginx">2.3 Nginx</h3><ol><li>搜索 nginx 镜像</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">search</span> <span class="string">nginx</span></span><br></pre></td></tr></table></figure><ol start="2"><li>拉取 nginx 镜像</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">pull</span> <span class="string">nginx</span></span><br></pre></td></tr></table></figure><ol start="3"><li>创建容器，设置端口映射、目录映射</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在/root目录下创建nginx目录用于存储nginx数据信息</span></span><br><span class="line"><span class="string">mkdir</span> <span class="string">~/nginx</span></span><br><span class="line"><span class="string">cd</span> <span class="string">~/nginx</span></span><br><span class="line"><span class="string">mkdir</span> <span class="string">conf</span></span><br><span class="line"><span class="string">cd</span> <span class="string">conf</span></span><br><span class="line"><span class="comment"># 在~/nginx/conf/下创建nginx.conf文件,粘贴下面内容</span></span><br><span class="line"><span class="string">vim</span> <span class="string">nginx.conf</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="string">user</span>  <span class="string">nginx;</span></span><br><span class="line"><span class="string">worker_processes</span>  <span class="number">1</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line"><span class="string">error_log</span>  <span class="string">/var/log/nginx/error.log</span> <span class="string">warn;</span></span><br><span class="line"><span class="string">pid</span>        <span class="string">/var/run/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">events</span> &#123;</span><br><span class="line">    <span class="string">worker_connections</span>  <span class="number">1024</span><span class="string">;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">http</span> &#123;</span><br><span class="line">    <span class="string">include</span>       <span class="string">/etc/nginx/mime.types;</span></span><br><span class="line">    <span class="string">default_type</span>  <span class="string">application/octet-stream;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">log_format</span>  <span class="string">main</span>  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">access_log</span>  <span class="string">/var/log/nginx/access.log</span>  <span class="string">main;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">sendfile</span>        <span class="string">on;</span></span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">keepalive_timeout</span>  <span class="number">65</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">include</span> <span class="string">/etc/nginx/conf.d/*.conf;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">run</span> <span class="string">-id</span> <span class="string">--name=c_nginx</span> <span class="string">\</span></span><br><span class="line"><span class="string">-p</span> <span class="number">80</span><span class="string">:80</span> <span class="string">\</span></span><br><span class="line"><span class="string">-v</span> <span class="string">$PWD/conf/nginx.conf:/etc/nginx/nginx.conf</span> <span class="string">\</span></span><br><span class="line"><span class="string">-v</span> <span class="string">$PWD/logs:/var/log/nginx</span> <span class="string">\</span></span><br><span class="line"><span class="string">-v</span> <span class="string">$PWD/html:/usr/share/nginx/html</span> <span class="string">\</span></span><br><span class="line"><span class="string">nginx</span></span><br></pre></td></tr></table></figure><ul><li>参数说明：<ul><li><strong>-p 80:80</strong>：将容器的 80 端口映射到宿主机的 80 端口。</li><li><strong>-v $PWD/conf/nginx.conf:/etc/nginx/nginx.conf</strong>：将主机当前目录下的 /conf/nginx.conf 挂载到容器的 :/etc/nginx/nginx.conf。配置目录</li><li><strong>-v $PWD/logs:/var/log/nginx</strong>：将主机当前目录下的 logs 目录挂载到容器的/var/log/nginx。日志目录</li></ul></li></ul><ol start="4"><li>使用外部机器访问 nginx</li></ol><h3 id="2-4-Redis">2.4 Redis</h3><ol><li>搜索 redis 镜像</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">search</span> <span class="string">redis</span></span><br></pre></td></tr></table></figure><ol start="2"><li>拉取 redis 镜像</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">pull</span> <span class="string">redis:5.0</span></span><br></pre></td></tr></table></figure><ol start="3"><li>创建容器，设置端口映射</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">run</span> <span class="string">-id</span> <span class="string">--name=c_redis</span> <span class="string">-p</span> <span class="number">6379</span><span class="string">:6379</span> <span class="string">redis:5.0</span></span><br></pre></td></tr></table></figure><ol start="4"><li>使用外部机器连接 redis</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./redis-cli.exe</span> <span class="string">-h</span> <span class="number">192.168</span><span class="number">.149</span><span class="number">.135</span> <span class="string">-p</span> <span class="number">6379</span></span><br></pre></td></tr></table></figure><h2 id="三、Dockerfile">三、Dockerfile</h2><h3 id="3-1-Docker-镜像原理">3.1 Docker 镜像原理</h3><blockquote><ul><li>Docker 镜像的本质是什么？<ul><li>是一个分层文件系统</li></ul></li><li>Docker 中一个 CentOS 镜像为什么只有 200MB，而一个 centos 操作系统的 iso 文件要几个 G？<ul><li>CentOS 的 iso 镜像文件包含 bootfs 和 rootfs，而 docker 的 centos 镜像复用了操作系统的 bootfs，只有 rootfs 和其他镜像层</li></ul></li><li>Docker 中一个 Tomcat 镜像为什么有 680MB，而一个 tomcat 安装包只要 70 多 MB？<ul><li>由于 docker 中镜像是分层的，tomcat 一个安装包虽然只有 70 多 MB，但也需要依赖与父镜像和基础镜像，所有整个对外暴露的 tomcat 镜像大小有差不多 700MB。</li></ul></li></ul></blockquote><p>下面为原理讲解：<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/image.7klmm4fsfyg0.webp" alt="image"></p><ul><li>linux 文件系统由 boottfs 和 rootfs 两部分组成<ul><li>bootfs：包含 bootloader(引导加载程序)和 kernel(内核)</li><li>rootfs：root 文件系统，典型的 /dev,/bin,/etc 等标准目录和文件</li><li>不同的 linux 发行版，bootfs 基本一样，而 rootfs 不同，如 ubuntu，centos 等。</li></ul></li><li>Docker 镜像原理<ul><li>Docker 镜像是由特殊的文件系统叠加而成</li><li>最底端是 bootfs，并使用宿主机的 bootfs</li><li>第二层是 root 文件系统 rootfs，成为 base image</li><li>再往上可以叠加其他的镜像文件</li><li>只读镜像不可修改，如果需要对镜像 tomcat 做修改，Docker 在最顶层提供了可加载一个读写文件系统作为容器</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/image.4799tc2g20y0.webp" alt="image"></p><h3 id="3-2-Docker-镜像如何制作">3.2 Docker 镜像如何制作</h3><ol><li><p>容器转为镜像</p><ul><li>docker commit 容器 id 镜像名称：版本号 【数据卷内容不会 commit 到 tar 文件中】</li><li>docker save -o 压缩文件名称 自定义镜像名：版本</li><li>docker load -i 压缩文件名称</li></ul></li><li><p>commit</p><ul><li>将容器转化为一个镜像</li><li>‘docker commit -m ‘ubuntu with vim wget node yum’ -a liugezhou tender_saha liugezhou/ubuntu:node12’ 这个node12很重要，表示tag</li><li>‘docker push liugezhou/ubuntu:node12’ 直接推送到仓库</li></ul></li><li><p>dockerfile</p></li></ol><h3 id="3-3-DockerFile-概念以及作用">3.3 DockerFile 概念以及作用</h3><blockquote><ul><li>DockerFile 是一个文本文件</li><li>包含了一条条的指令</li><li>每一条指令构建一层，基于基础镜像，最终构建出一个新的镜像</li><li>对于开发人员：可以为开发团队提供一个完全一致的开发环境</li><li>对于测试人员：可以直接拿开发时所构建的镜像或者通过 DockerFile 文件构建一个新的镜像开始工作</li><li>对于运维人员：在部署时，可以实现应用的无缝移植</li></ul></blockquote><h3 id="3-4-Docker-关键字">3.4 Docker 关键字</h3><blockquote><p>FROM：指定父镜像–指定 dockerfiel 基于哪个 image 构建<br>MAINTAINER：作者信息–用来标明这个 dockerfile 谁写的<br>LABLE：标签<br>RUN: 执行 linux 命令 --默认是 /bin/sh，RUN command 或者 Run [“command”,“param1”,“param2”]<br>EXPOSE：暴露端口<br>CMD：容器启动命令<br>COPY：复制文件–build 的时候复制文件到 image 中<br>ADD：添加文件–可以来源于远程服务<br>ENV：环境变量<br>VOLUMN：定义外部可以挂载的数据卷–启动容器的时候用-v 绑定 volume 目录<br>WORKDIR：工作目录–指定容器内部的工作目录，没有就创建</p></blockquote><h3 id="3-5-案例">3.5 案例</h3><blockquote><p>案例一：定义 DockerFile，发布 spring-boot 项目</p><ul><li>定义父镜像：FROM java:8</li><li>定义作者信息：MAINTAINER liugezhou<a href="mailto:18231133236@163.com">18231133236@163.com</a></li><li>将 jar 包添加到容器 ： ADD springboot.jar app.jar</li><li>定义容器启动执行命令：CMD java -jar app.jar</li></ul><p>通过 dockerfile 构建镜像： docker build -f dockerfile 文件路径 -t 镜像名称：版本</p></blockquote><blockquote><p>案例二：自定义 centos 镜像，默认登录路径为 /usr,可以使用 vim</p><ul><li>定义父镜像：FROM centos:7</li><li>定义作者信息：MAINTAINER liugezhou<a href="mailto:18231133236@163.com">18231133236@163.com</a></li><li>执行安装 vim 命令： RUN yum install -y vim</li><li>定义默认的工作目录 WORKDIR /usr</li><li>定义容器启动执行的命令：CMD /bin/bash</li></ul><p>操作：</p><ul><li>cd /Users/liugezhou/Desktop/demo/dockerfiles</li><li>vi centos_dockerfile</li><li>将上面内容写入到 centos_dockerfile 中</li><li>docker build -t ./centos_dockerfile mycentos:1 .</li></ul><p>此时，查看镜像列表：docker images<br>然后，进入查看目录与 vim 命令是否生效：docker run -it --name=c4 mycentos</p></blockquote><h2 id="四、docker-compose">四、docker compose</h2><h3 id="4-1-Docker-服务编排">4.1 Docker 服务编排</h3><blockquote><p>服务编排：按照一定的业务规则批量管理容器</p><p>Docker Compose：Docker Compose 是一个编排多容器分布式部署的工具 ，提供命令集管理容器化应用的完整开发周期，包括服务构建、启动和停止。<br>使用步骤：</p><ol><li>利用 Dockerfile 定义运行环境镜像</li><li>使用 docker-compose.yml 定义组成应用的各服务</li><li>运行 docker-compose up 启动应用</li></ol></blockquote><h3 id="4-2-Docker-Compose-安装-使用">4.2 Docker Compose 安装 &amp; 使用</h3><blockquote><ul><li>curl -L <a href="https://github.com/docker/compose/releases/download/1.22.0/docker-compose-%60uname">https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname</a> -s<code>-</code>uname -m` -o /usr/local/bin/docker-compose</li><li>chmod +x /usr/local/bin/docker-compose</li><li>查看docker-compose版本：<code>docker-compose --version</code></li><li>docker-compose 卸载 <strong>rm /usr/local/bin/docker-compose</strong></li></ul></blockquote><blockquote><ul><li>cd /Users/liumingzhou/Desktop/demo</li><li>mkdir docker-compose</li><li>cd docker-compose</li><li>vim docker-compose.yml</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version</span>: <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services</span>:</span><br><span class="line">  <span class="attr">nginx</span>:</span><br><span class="line">   <span class="attr">image</span>: nginx</span><br><span class="line">   <span class="attr">ports</span>:</span><br><span class="line">    - <span class="number">80</span>:<span class="number">80</span></span><br><span class="line">   <span class="attr">links</span>:</span><br><span class="line">    - app</span><br><span class="line">   <span class="attr">volumes</span>:</span><br><span class="line">    - ./nginx/conf.<span class="property">d</span>:<span class="regexp">/etc/</span>nginx/conf.<span class="property">d</span></span><br><span class="line">  <span class="attr">app</span>:</span><br><span class="line">    <span class="attr">image</span>: app</span><br><span class="line">    <span class="attr">expose</span>:</span><br><span class="line">      - <span class="string">&quot;8080&quot;</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>mkdir -p ./nginx/conf.d</li><li>cd nginx/conf.d</li><li>vim test.conf</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen <span class="number">80</span>;</span><br><span class="line">    access_log off;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass <span class="attr">http</span>:<span class="comment">//app:8080;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>cd /Users/liumingzhou/Desktop/demo/docker-compose</li><li>docker-compose up</li></ul></blockquote><h2 id="五、Docker-私有仓库">五、Docker 私有仓库</h2><h3 id="5-1-搭建私有仓库">5.1 搭建私有仓库</h3><blockquote><p>1、拉取私有仓库镜像</p><ul><li>docker pull registry</li></ul><p>2、启动私有仓库容器</p><ul><li>docker run -id --name=registry -p 5000:5000 registry</li></ul><p>3、打开浏览器 输入地址 <a href="http://xn--5mqq6g52d62kn3k0a6264a">http://私有仓库服务器</a> ip:5000/v2/_catalog，<br>看到{“repositories”:[]} 表示私有仓库 搭建成功<br>4、修改 daemon.json</p><ul><li>vim /etc/docker/daemon.json</li><li>在上述文件中添加一个 key，保存退出。此步用于让 docker 信任私有仓库地址；注意将私有仓库服务器 ip 修改为自己私有仓库服务器真实 ip</li><li>{“insecure-registries”:[“私有仓库服务器 ip:5000”]}</li></ul><p>5、重启 docker 服务</p><ul><li>systemctl restart docker</li><li>docker start registry</li></ul></blockquote><h3 id="5-2-上传镜像到私有仓库">5.2 上传镜像到私有仓库</h3><blockquote><p>1、标记镜像为私有仓库的镜像<br>docker tag centos:7 私有仓库服务器 IP:5000/centos:7<br>2、上传标记的镜像<br>docker push 私有仓库服务器 IP:5000/centos:7</p></blockquote><h3 id="5-3-从私有仓库拉取镜像">5.3 从私有仓库拉取镜像</h3><blockquote><p>docker pull 私有仓库服务器 ip:5000/centos:7</p></blockquote><h2 id="六、Docker-相关概念">六、Docker 相关概念</h2><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/image.5j5a1fna9340.webp" alt="image"></p><blockquote><p>docker 容器与传统虚拟机比较</p><ul><li>相同：容器和虚拟机具有相似的资源隔离和分配优势</li><li>不同：容器虚拟化的是操作系统，虚拟机虚拟化的是硬件；传统虚拟机可以运行不同的操作系统，容器只能运行统一类型操作系统。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/image.xisha1ny828.webp" alt="image"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运维相关</title>
      <link href="/020-%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/"/>
      <url>/020-%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><blockquote><p>服务器配置：<br>数据库rds、redis、nacos、nginx、node、git、域名、OSS、java、maven</p></blockquote><h2 id="安装Java-maven-nginx-Mysal"><a href="https://juejin.cn/post/6883785131052498958">安装Java\maven\nginx\Mysal</a></h2><blockquote><p><strong>JAVA</strong></p><ul><li>yum install java-1.8.0-openjdk :</li><li>java -version</li><li>vim /etc/profile.d/java.sh</li><li>JAVA_HOME=“/usr/lib/jvm/java-1.8.0-openjdk”</li><li>source /etc/profile.d/java.sh</li><li>验证：echo $JAVA_HOME -&gt;输出目录即为正确</li></ul></blockquote><blockquote><p><strong>MAVEN</strong></p><ul><li>yum install -y maven</li><li>mvn --version</li><li>vim /etc/maven/setting.xml</li></ul></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>/opt/maven_repo<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/central<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-maven<span class="tag">&lt;/<span class="name">id</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>Nginx</strong></p><ul><li>yum install -y nginx</li><li>端口开放</li><li>nginx -s start</li></ul></blockquote><p><strong>Mysql8</strong></p><blockquote><ul><li>yum localinstall <a href="https://repo.mysql.com//mysql80-community-release-el7-1.noarch.rpm">https://repo.mysql.com//mysql80-community-release-el7-1.noarch.rpm</a></li><li>systemctl start mysqld</li><li>systemctl status mysqld</li><li>grep ‘temporary password’ /var/log/mysqld.log（若无直接跳过）</li><li>mysql -uroot -p<ul><li>use mysql;</li><li>ALTER USER ‘root’@‘localhost’ IDENTIFIED BY ‘newpassword’;</li></ul></li><li>create user test_user@‘%’ identified by ‘password’;<ul><li>·%· 表示可以在任意远程主机登录</li></ul></li><li>grant all on databasename.tablename to ‘username’@‘%’ with grant option;<ul><li>privileges可以为select/ insert /update/all</li><li>tablename可以为*</li><li>with grant option 【该用户可授权】</li></ul></li><li>flush privileges;   刷新权限表</li><li>SET PASSWORD FOR ‘username’@‘host’ = PASSWORD(‘newpassword’);</li><li>SET PASSWORD = PASSWORD(“newpassword”); --当前登陆用户</li><li>REVOKE privilege ON databasename.tablename FROM ‘username’@‘host’; -撤销用户权限</li><li>drop user ‘username’@‘host’ --删除用户</li></ul></blockquote><h2 id="安装git">安装git</h2><blockquote><ul><li>yum install git  =&gt; git --version</li></ul></blockquote><h2 id="安装配置nacos">安装配置nacos</h2><blockquote><ul><li>下载 nacos-server-$version.zip 包</li><li>tar -xvf nacos-server-$version.tar.gz</li><li>默认情况为单实例启动,本服务器设置集群</li></ul></blockquote><p><strong>nacos集群设置</strong></p><blockquote><ul><li>mysql创建数据库 nacos</li><li>将nacos-mysql脚本倒入到数据库</li><li>修改config/application.properties<ul><li>If use MySQL as datasource:   注释打开</li></ul></li></ul></blockquote><p><strong>spring.datasource.platform=mysql</strong></p><blockquote><ul><li>设置用户名密码为mysql新建的用户/密码</li><li>配置cluster<ul><li>cp cluster.conf.example cluster.conf</li></ul></li></ul></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">172.31.0.8:8848</span><br><span class="line">172.31.0.8:8850</span><br><span class="line">172.31.0.8:8860</span><br></pre></td></tr></table></figure><blockquote><ul><li>将 /data/nacos/nacos  改名称  mv nacos/ nacos8848</li><li>cp -r nacos8848 nacos8860</li><li>cp -r nacos8848 nacos8850</li><li>修改8860与8850端口号：application.properties</li><li>然后分别启动</li><li>接着看之前单实例的配置：–本地没配置，如果有配置应该先倒出然后再倒入最新启动的</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/image.7f88td0nf0w0.webp" alt="image"></p><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/image.7942uutpjcg0.webp" alt="image"></p><blockquote><ul><li>nginx配置–直接放入到nginx.conf即可</li></ul></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">upstream nacos_cluster&#123;</span><br><span class="line">server 127.0.0.1:8848;</span><br><span class="line">server 127.0.0.1:8849;</span><br><span class="line">server 127.0.0.1:8850;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">listen 8848;</span><br><span class="line">server_namelocahost;</span><br><span class="line">localtions / &#123;</span><br><span class="line">proxy_pass http://nacos_cluster;</span><br><span class="line">proxy_set_header Host $host:$server_port;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>nginx重启即可。</p></blockquote><h2 id="安装redis"><a href="https://www.4spaces.org/centos-8-install-redis/">安装redis</a></h2><blockquote><ul><li>yum install redis</li><li>systemctl start redis</li><li>systemctl enable redis [开机启动]</li><li>/etc/redis.conf   [允许远程连接  注释掉 bind:127.0.0.1]</li><li><code>#</code> requirepass foobared  [密码登录：注释掉该行，将footbared改为 your password]</li><li>修改 daemonize no（第128行） 为 daemonize yes</li><li>开放安全组：6379</li><li>redis-server /etc/redis.conf  启动！</li></ul></blockquote><p><strong>telnet</strong></p><blockquote><p><a href="https://www.opss.cn/5167.html">https://www.opss.cn/5167.html</a></p></blockquote><h2 id="安装NVM">安装NVM</h2><blockquote><ul><li>安装CentOS系统上的默认nodejs:   yum module install nodejs</li><li>安装nvm: curl -o- <a href="https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh">https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh</a> | bash</li></ul></blockquote><h2 id="安装pm2">安装pm2</h2><blockquote><p>服务器上node版本为14 安装pm2<br>npm i pm2 -g</p></blockquote><h2 id="安装Docker">安装Docker</h2><p>配置mysql/redis/tomcat/nginx</p><blockquote><ul><li>yum install -y yum-utils device-mapper-persistent-data lvm2</li><li>yum-config-manager --add-repo <a href="http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo">http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</a></li><li>yum install docker-ce -y</li><li>systemctl start docker</li><li>docker -v</li><li>设置开机启动: <strong>chkconfig docker on</strong></li><li>systemctl enable docker</li></ul></blockquote><blockquote><p><a href="https://www.yuque.com/liugezhou/front-end/wp1neo"><strong>Docker应用部署</strong></a></p><ul><li><strong>java:8</strong><ul><li>docker pull java:8</li></ul></li><li><strong>mysql</strong><ul><li><strong>cd /root</strong></li><li><strong>mkdir mysql</strong></li></ul></li></ul></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -id \</span><br><span class="line">-p 3307:3306 \</span><br><span class="line">--name=c_mysql \</span><br><span class="line">-v $PWD/conf:/etc/mysql/conf.d \</span><br><span class="line">-v $PWD/logs:/logs \</span><br><span class="line">-v $PWD/data:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=****** \</span><br><span class="line">mysql:5.7</span><br></pre></td></tr></table></figure><blockquote><ul><li><strong>nginx</strong><ul><li><strong>cd /root</strong></li><li><strong>mkdir nginx</strong></li><li><strong>cd nginx</strong></li><li><strong>mkdir conf</strong></li><li>**cd conf **</li><li><strong>vim nginx.conf [内容见下方]</strong></li><li><strong>cd /root</strong></li><li><strong>新建容器</strong></li></ul></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -id --name=c_nginx \</span><br><span class="line">-p <span class="number">8880</span>:<span class="number">80</span> \</span><br><span class="line">-v $PWD/conf/nginx.<span class="property">conf</span>:<span class="regexp">/etc/</span>nginx/nginx.<span class="property">conf</span> \</span><br><span class="line">-v $PWD/<span class="attr">logs</span>:<span class="regexp">/var/</span>log/nginx \</span><br><span class="line">-v $PWD/<span class="attr">html</span>:<span class="regexp">/usr/</span>share/nginx/html \</span><br><span class="line">nginx</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// /root/nginx/conf/nginx.conf</span></span><br><span class="line">user  nginx;</span><br><span class="line">worker_processes  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">error_log  /<span class="keyword">var</span>/log/nginx/error.<span class="property">log</span> warn;</span><br><span class="line">pid        /<span class="keyword">var</span>/run/nginx.<span class="property">pid</span>;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.<span class="property">types</span>;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /<span class="keyword">var</span>/log/nginx/access.<span class="property">log</span>  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    <span class="string">`#`</span>tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="string">`#`</span>gzip  on;</span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.<span class="property">d</span><span class="comment">/*.conf;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><ul><li><strong>tomcat</strong></li><li><strong>cd /root</strong></li><li><strong>mkdir tomcat</strong></li></ul></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -id --name=c_tomcat \</span><br><span class="line">-p 8080:8080 \</span><br><span class="line">-v $PWD:/usr/local/tomcat/webapps \</span><br><span class="line">tomcat</span><br><span class="line"></span><br><span class="line">// 在/root/tomcat/test/index.html，开放8080端口测试</span><br></pre></td></tr></table></figure><blockquote><ul><li><strong>redis</strong><ul><li>redis由于需要配置密码登录以及远程连接等，而服务器已配好.</li><li>**因此这里不再安装，**下面为启动命令(没有文件映射)</li></ul></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -id --name=c_redis -p <span class="number">6379</span>:<span class="number">6379</span> <span class="attr">redis</span>:<span class="number">5.0</span></span><br><span class="line">测试：redis-cli.<span class="property">exe</span> -h <span class="number">192.168</span><span class="number">.149</span><span class="number">.135</span> -p <span class="number">6379</span></span><br></pre></td></tr></table></figure><p><strong>Docker搭建私有仓库</strong></p><blockquote><ul><li>docker pull registry</li><li>docker run -id --name=registry -p 5000:5000 registry</li><li>输入地址 <a href="http://xn--ip-xd3cw3mfxfowofno8a6207a:5000/v2/_catalog">http://私有仓库服务器ip:5000/v2/_catalog</a></li><li>修改daemon.json<ul><li>{“insecure-registries”:[“私有仓库服务器ip:5000”]}</li></ul></li><li>systemctl restart docker</li><li>docker start registry</li></ul></blockquote><p><strong>在CentOS 8上添加Jenkins存储库</strong></p><blockquote><p>由于Jenkins在CentOS 8存储库中不可用，因此我们将手动将Jenkins存储库添加到系统中。</p><ul><li>首先添加Jenkins Key<br><code>#</code> rpm --import <a href="https://pkg.jenkins.io/redhat-stable/jenkins.io.key">https://pkg.jenkins.io/redhat-stable/jenkins.io.key</a></li><li>将Jenkins的存储库追加到CentOS 8<br>＃cd /etc/yum.repos.d<br>＃curl -O <a href="https://pkg.jenkins.io/redhat-stable/jenkins.repo">https://pkg.jenkins.io/redhat-stable/jenkins.repo</a></li><li>安装Jenkins</li></ul></blockquote><p><strong>dnf install jenkins</strong></p><blockquote><ul><li>验证状态<br><code>#</code> systemctl start jenkins<br><code>#</code> systemctl status jenkins</li><li>修改端口<br><code># </code>vi  /etc/sysconfig/jenkins</li><li>浏览<br><code>#</code> <a href="http://server-IP:8081">http://server-IP:8081</a> || 输入密码 || 安装插件</li></ul></blockquote><h2 id="Tips">Tips</h2><blockquote><ol><li>服务终端总是断开：</li></ol><ul><li>vi /etc/ssh/sshd_config</li><li>修改 ClientAliveInterval 和 ClientAliveCountMax</li><li>重启：systemctl restart sshd.service</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Week33-组件平台开发</title>
      <link href="/Week33-%E7%BB%84%E4%BB%B6%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91/"/>
      <url>/Week33-%E7%BB%84%E4%BB%B6%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章目录排版做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="第一章-本周导学">第一章 本周导学</h2><p><strong>1-1 本章介绍</strong></p><blockquote><ul><li>组件平台</li><li>组件预览</li><li>组件README</li></ul></blockquote><h2 id="第二章-组件平台架构设计和技术选型">第二章 组件平台架构设计和技术选型</h2><p><strong>2-1 组件平台架构设计</strong><br><a href="https://www.processon.com/embed/61298d22637689579630027a">点击查看【processon】</a><br><strong>2-2 组件平台技术选型和框架搭建</strong><br>umi-component-test改项目代码提交至：<a href="https://github.com/liugezhou/umi-component-test">https://github.com/liugezhou/umi-component-test</a></p><ol><li><strong>初始化UmiJS</strong></li></ol><blockquote><ul><li>mkdir umi-component-dev</li><li>cd umi-component-dev</li><li>yarn create @umijs/umi-app</li><li>yarn install</li><li>yarn start</li></ul></blockquote><ol start="2"><li>新建页面</li></ol><blockquote><p>npx umi g page detail</p></blockquote><ol start="3"><li><strong>配置路由</strong></li></ol><blockquote><p><strong>.umirc.ts新建页面路由</strong><br>routes: [<br>{ path:‘/’, component:‘@/pages/index’ },<br>{ path:‘/nice’, component:‘@/pages/detail’ },<br>],<br>yarn start启动项目后，访问 <a href="http://192.168.1.3:8000/nice%E5%8D%B3%E5%8F%AF%E7%9C%8B%E5%88%B0%E6%9C%80%E6%96%B0%E7%9A%84%E9%A1%B5%E9%9D%A2">http://192.168.1.3:8000/nice即可看到最新的页面</a></p></blockquote><ol start="4"><li>安装 Ant Design</li></ol><blockquote><p>yarn add antd</p></blockquote><ol start="5"><li><strong>使用</strong></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import &#123; Button &#125; from &quot;antd&quot;;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>Button<span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="第三章-组件平台基础功能开发">第三章 组件平台基础功能开发</h2><p><strong>3-1 umi 项目全局入口文件+国际化开发</strong></p><blockquote><ul><li>运行时配置:约定src/app.tsx为运行时配置,该配置文件下可以做一些全局性的操作</li><li>国际化：文档-插件-@umijs/plugin-locale<ul><li>**mkdir：**src/locales/zh-CN.ts | en-US.ts，配置WELCOME_TO_UMI_WORLD字段内容</li><li>.umirc.ts中配置国际化[代码如下所示]</li><li>src/app.tsx中引入国际化[代码如下所示]</li></ul></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/umirc.ts</span></span><br><span class="line"><span class="attr">locale</span>: &#123;</span><br><span class="line">    <span class="attr">default</span>: <span class="string">&#x27;zh-CN&#x27;</span>,</span><br><span class="line">    <span class="attr">antd</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">title</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">baseNavigator</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">baseSeparator</span>: <span class="string">&#x27;-&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">    </span><br><span class="line"> <span class="comment">// src/app.tsx</span></span><br><span class="line">  <span class="keyword">import</span> <span class="string">&#x27;antd/dist/antd.css&#x27;</span>;</span><br><span class="line">  <span class="keyword">import</span> &#123; getLocale,setLocale &#125; <span class="keyword">from</span> <span class="string">&#x27;umi&#x27;</span>;</span><br><span class="line">  <span class="keyword">import</span> qs <span class="keyword">from</span> <span class="string">&#x27;qs&#x27;</span>;</span><br><span class="line">  <span class="keyword">const</span> &#123; search &#125; = <span class="variable language_">window</span>.<span class="property">location</span>;</span><br><span class="line">  <span class="keyword">const</span> &#123; locale = <span class="string">&#x27;zh-CN&#x27;</span> &#125; = qs.<span class="title function_">parse</span>(search, &#123; <span class="attr">ignoreQueryPrefix</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">  <span class="title function_">setLocale</span>(locale,<span class="literal">false</span>)</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="comment">// src/pages/index.tsx</span></span><br><span class="line">  <span class="keyword">import</span> &#123; useIntl &#125; <span class="keyword">from</span> <span class="string">&#x27;umi&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">IndexPage</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> init = <span class="title function_">useIntl</span>()</span><br><span class="line">  <span class="keyword">const</span> msg = init.<span class="title function_">formatMessage</span>(&#123;</span><br><span class="line">      <span class="attr">id</span>:<span class="string">&#x27;WELCOME_TO_UMI_WORLD&#x27;</span>,</span><br><span class="line">      <span class="attr">defaultMessage</span>:<span class="string">&#x27;你好，牛逼的前端架构师！&#x27;</span></span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;liugezhou&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(msg)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>最后：yarn start启动文件，访问查看控制台：<a href="http://localhost:8000/?locale=en-US">http://localhost:8000/?locale=en-US</a></p></blockquote><p><strong>3-2 组件平台功能展示 + 页头页脚开发</strong></p><blockquote><p>umijs支持layout引入，于是我们在开发页头页脚的时候，页面页头与页脚是在各个页面都存在的，于是我们可以将页面不同的地方以layout的形式注入</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/layouts/index.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">&#x27;./index.less&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">BasicLayout</span>(<span class="params">props</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;styles.normal&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;styles.title&#125;</span>&gt;</span>&#123;slogan&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">&#123;props.children&#125;</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;styles.footer&#125;</span>&gt;</span>&#123;copyright&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">BasicLayout</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//src/layouts/index.less</span></span><br><span class="line">@<span class="keyword">import</span> <span class="string">&#x27;~antd/dist/antd&#x27;</span>;</span><br><span class="line"></span><br><span class="line">.<span class="property">normal</span>&#123;</span><br><span class="line">    text-<span class="attr">align</span>:center</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.<span class="property">title</span>&#123;</span><br><span class="line">    font-<span class="attr">size</span>:15px;</span><br><span class="line">    font-<span class="attr">weight</span>: normal;</span><br><span class="line">    <span class="attr">background</span>: @primary-color;</span><br><span class="line">    <span class="attr">padding</span>: 10px <span class="number">0</span>;</span><br><span class="line">    <span class="attr">color</span>: white;</span><br><span class="line">    <span class="attr">margin</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.<span class="property">footer</span> &#123;</span><br><span class="line">    font-<span class="attr">size</span>: 12px;</span><br><span class="line">    font-<span class="attr">weight</span>: normal;</span><br><span class="line">    <span class="attr">background</span>: @primary-color;</span><br><span class="line">    <span class="attr">padding</span>: 10px <span class="number">0</span>;</span><br><span class="line">    <span class="attr">color</span>: white;</span><br><span class="line">    <span class="attr">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">// .umijsrc.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;umi&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">nodeModulesTransform</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="string">&#x27;@/layouts/index&#x27;</span>,</span><br><span class="line">      <span class="attr">routes</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="string">&#x27;@/pages/index&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;/detail&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="string">&#x27;@/pages/detail&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">fastRefresh</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">locale</span>: &#123;</span><br><span class="line">    <span class="attr">default</span>: <span class="string">&#x27;zh-CN&#x27;</span>,</span><br><span class="line">    <span class="attr">antd</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">title</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">baseNavigator</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">baseSeparator</span>: <span class="string">&#x27;-&#x27;</span>,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>3-3 组件平台动态配置 API 开发</strong></p><blockquote><p>我们的页面与页脚内容需要从接口获取，因此，本节内容为在 cloudscope-cli-server服务中去编写接口代码。<br>本周相关代码提交至：<a href="https://github.com/liugezhou/cloudscope-cli-server/tree/lesson32">cloudscope-cli/server/lesson33</a></p></blockquote><p><strong>3-3-1 添加路由</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/route.js</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function"><span class="params">app</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; router, controller &#125; = app;</span><br><span class="line"> </span><br><span class="line">  router.<span class="title function_">resources</span>(<span class="string">&#x27;componentSite&#x27;</span>, <span class="string">&#x27;/api/v1/componentSite&#x27;</span>, controller.<span class="property">v1</span>.<span class="property">componentSite</span>);</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>3-3-2 API编写</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/controller/v1/ComponentSite.js</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Controller</span> = <span class="built_in">require</span>(<span class="string">&#x27;egg&#x27;</span>).<span class="property">Controller</span>;</span><br><span class="line"><span class="keyword">const</span> mongo = <span class="built_in">require</span>(<span class="string">&#x27;../../utils/mongo&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ComponentSiteController</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Controller</span>&#123;</span><br><span class="line">  asynx <span class="title function_">index</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; ctx &#125; = <span class="variable language_">this</span>;</span><br><span class="line"><span class="keyword">const</span> data = <span class="keyword">await</span> mongo.<span class="title function_">query</span>(<span class="string">&#x27;componentSite);</span></span><br><span class="line"><span class="string">  if(data &amp;&amp; data.length&gt;0)&#123;</span></span><br><span class="line"><span class="string">    ctx.body = data[0]</span></span><br><span class="line"><span class="string">     &#125;else&#123;</span></span><br><span class="line"><span class="string">      ctx.body = []</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">  &#125;                                </span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>需要在mongoDB中新建集合 componentSite,添加页面页脚数据</li><li>启动项目，浏览器输入地址，测试访问结果</li></ul></blockquote><p><strong>3-4 前端动态配置 API 接入</strong></p><blockquote><p>代码无分支提交至：<a href="https://github.com/liugezhou/umi-component-test">umi-component-test</a></p></blockquote><blockquote><p>上一节我们开发完毕api接口后，在前端请求该接口</p><ul><li>首先需要install axios</li><li>接着需要封装request请求。</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/layouts/util/reques.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> BASE_URl = <span class="string">&#x27;http://liugezhou.com:7001&#x27;</span></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line"><span class="attr">baseURl</span>:<span class="variable constant_">BASE_URL</span>,</span><br><span class="line">  <span class="attr">timeout</span>:<span class="number">5000</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">service.<span class="property">interceptor</span>.<span class="property">request</span>.<span class="title function_">use</span>(&#123;</span><br><span class="line"><span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> config;</span><br><span class="line">&#125;</span><br><span class="line">  error =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)                              </span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  service.<span class="property">interceptor</span>.<span class="property">response</span>.<span class="title function_">use</span>(&#123;</span><br><span class="line">    <span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> response.<span class="property">data</span>;</span><br><span class="line">  &#125;</span><br><span class="line">error =&gt; &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)                              </span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> request;</span><br><span class="line"></span><br><span class="line"><span class="comment">//src/layouts/utils/service.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;./request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getSiteInfo</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>:<span class="string">&#x27;/api/v1/componentSite&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>最后，在首页中去调用该接口，且赋值为页头与页脚</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/layouts/index.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">&#x27;./index.less&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;getSiteInfo &#125; <span class="keyword">from</span> <span class="string">&#x27;../utils/service&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span><span class="string">&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function BasicLayout(props)&#123;</span></span><br><span class="line"><span class="string">const [init,setInit] = useState(false);</span></span><br><span class="line"><span class="string">  const [slogan,setSlogan] = useState(&#x27;</span><span class="string">&#x27;);</span></span><br><span class="line"><span class="string">  const [copyright,setCopyright ] = useState(&#x27;</span><span class="string">&#x27;);</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  useEffect( () =&gt;&#123;</span></span><br><span class="line"><span class="string">     if (!init) &#123;</span></span><br><span class="line"><span class="string">         setInit(true);</span></span><br><span class="line"><span class="string">         getSiteInfo().then(data =&gt; &#123;</span></span><br><span class="line"><span class="string">           setSlogan(data.slogan);</span></span><br><span class="line"><span class="string">           setCopyright(data.copyright);</span></span><br><span class="line"><span class="string">         &#125;).catch(err =&gt; &#123;</span></span><br><span class="line"><span class="string">           console.log(err);</span></span><br><span class="line"><span class="string">           setSlogan(&#x27;</span><span class="string">&#x27;);</span></span><br><span class="line"><span class="string">           setCopyright(&#x27;</span><span class="string">&#x27;);</span></span><br><span class="line"><span class="string">         &#125;);</span></span><br><span class="line"><span class="string">       &#125;</span></span><br><span class="line"><span class="string">    &#125;,[init])</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  return (</span></span><br><span class="line"><span class="string">       &lt;div className=&#123;styles.normal&#125;&gt;</span></span><br><span class="line"><span class="string">            &lt;div className=&#123;styles.title&#125;&gt;&#123;slogan&#125;&lt;/div&gt;</span></span><br><span class="line"><span class="string">            &#123;props.children&#125;</span></span><br><span class="line"><span class="string">            &lt;div className=&#123;styles.footer&#125;&gt;&#123;copyright&#125;&lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">      )</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"> export default BasiLayout;</span></span><br></pre></td></tr></table></figure><h2 id="第四章-组件平台组件列表页面开发">第四章 组件平台组件列表页面开发</h2><p><strong>4-1 组件列表 API 开发</strong></p><blockquote><p>本周相关代码提交至：<a href="https://github.com/liugezhou/cloudscope-cli-server/tree/lesson32">cloudscope-cli/server/lesson33</a></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/controller/v1/Components.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">index</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; ctx, app &#125; = <span class="variable language_">this</span>;</span><br><span class="line">  <span class="keyword">const</span> &#123; name &#125; = ctx.<span class="property">query</span>;</span><br><span class="line">  <span class="keyword">const</span> andWhere = name ? <span class="string">`AND c.name LIKE &#x27;%<span class="subst">$&#123;name&#125;</span>%&#x27;`</span> : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">const</span> sql = <span class="string">`SELECT c.id, c.name, c.classname, c.description, c.npm_name, c.npm_version, c.git_type, c.git_remote, c.git_owner, c.git_login, c.create_dt, c.update_dt, v.version, v.build_path, v.example_path, v.example_list</span></span><br><span class="line"><span class="string">FROM component AS c</span></span><br><span class="line"><span class="string">LEFT JOIN version AS v ON c.id = v.component_id</span></span><br><span class="line"><span class="string">WHERE c.status = 1 AND v.status = 1 <span class="subst">$&#123;andWhere&#125;</span></span></span><br><span class="line"><span class="string">ORDER BY c.create_dt, v.version DESC`</span>;</span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> app.<span class="property">mysql</span>.<span class="title function_">query</span>(sql);</span><br><span class="line">  <span class="keyword">const</span> components = [];</span><br><span class="line">  result.<span class="title function_">forEach</span>(<span class="function"><span class="params">component</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> hasComponent = components.<span class="title function_">find</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">id</span> === component.<span class="property">id</span>);</span><br><span class="line">    <span class="keyword">if</span> (!hasComponent) &#123;</span><br><span class="line">      hasComponent = &#123;</span><br><span class="line">        ...component,</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="keyword">delete</span> hasComponent.<span class="property">version</span>;</span><br><span class="line">      <span class="keyword">delete</span> hasComponent.<span class="property">build_path</span>;</span><br><span class="line">      <span class="keyword">delete</span> hasComponent.<span class="property">example_path</span>;</span><br><span class="line">      <span class="keyword">delete</span> hasComponent.<span class="property">example_list</span>;</span><br><span class="line">      hasComponent.<span class="property">versions</span> = [];</span><br><span class="line">      components.<span class="title function_">push</span>(hasComponent);</span><br><span class="line">      hasComponent.<span class="property">versions</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">        <span class="attr">version</span>: component.<span class="property">version</span>,</span><br><span class="line">        <span class="attr">build_path</span>: component.<span class="property">build_path</span>,</span><br><span class="line">        <span class="attr">example_path</span>: component.<span class="property">example_path</span>,</span><br><span class="line">        <span class="attr">example_list</span>: component.<span class="property">example_list</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      hasComponent.<span class="property">versions</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">        <span class="attr">version</span>: component.<span class="property">version</span>,</span><br><span class="line">        <span class="attr">build_path</span>: component.<span class="property">build_path</span>,</span><br><span class="line">        <span class="attr">example_path</span>: component.<span class="property">example_path</span>,</span><br><span class="line">        <span class="attr">example_list</span>: component.<span class="property">example_list</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  ctx.<span class="property">body</span> = components;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4-2 测试组件数据创建</strong></p><blockquote><ul><li><p>上一节我们获取的组件列表数据为一条，本节首先再去创建几条测试数据。</p></li><li><p>在此之前，先去更改之前的组件模版 cloudscope-cli-components，packahe.json的配置：publishConfig为access：true 和 build:demo</p><ul><li>外层package.json 增加一个版本号</li><li>template内package.json 配置 publishConfig</li><li>template内package.json 配置‘build:demo’:“npm install &amp;&amp; npm run build &amp;&amp; cd examples &amp;&amp; npm install &amp;&amp; npm run build”</li><li>npm publish</li><li>mongodb数据库中将版本号升级</li></ul></li><li><p>mkdir cloudscope-cli_component-test3</p></li><li><p>cd cloudscope-cli_component-test3</p></li><li><p>cloudscope-cli init -tp /Users/liumingzhou/Documents/imoocCourse/Web前端架构师/cloudscope-cli/commands/init/  【这里需要注意的是，由于我本读安装且默认设置了node的版本为14，而之前开发的本地脚手架为12.16，因此支持以上代码需要更换node版本】</p><ul><li>@cloudscope-cli/components-test2</li><li>1.0.0</li><li>通用的Vue3组件库模版</li><li>components test2</li></ul></li><li><p>code .</p></li><li><p>npm run build:demo</p></li><li><p>cloudscope-cli publish -tp /Users/liumingzhou/Documents/imoocCourse/Web前端架构师/cloudscope-cli/commands/publish/  [不加prod属性，不用关心OSS与NPM发布]</p></li></ul><p>检查：</p><ul><li><p>git remote -v  【查看远程仓库信息】</p></li><li><p>查看mysql数据库插入信息</p></li><li><p>如果添加了 --prod属性</p></li><li><p>查看npm发布组件信息</p></li><li><p>查看云OSS上传信息</p></li></ul></blockquote><p><strong>4-3 组件列表页面开发</strong><br><strong>4-4 组件卡片面板开发</strong><br><strong>4-5 搜索框组件开发+模糊搜索API开发</strong></p><blockquote><p>这三节内容为组件首页列表的umi项目代码开发，包括布局、请求、点击事件等功能，代码分类为：国际化配置、工具类、业务代码，其中核心内容为业务代码，主要是使用UI库ant-design-react和umi以及react的一些用法。</p><ul><li><strong>国际化配置</strong></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/locales/en-US.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">WELCOME_TO_UMI_WORLD</span>: <span class="string">&quot;&#123;name&#125;, welcome to umi&#x27;s world&quot;</span>,</span><br><span class="line">    <span class="attr">INDEX_SEARCH</span>: <span class="string">&#x27;Search&#x27;</span>,</span><br><span class="line">    <span class="attr">INDEX_PLACEHOLDER</span>: <span class="string">&#x27;Component Name&#x27;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line"><span class="comment">// src/locales/zh-CN.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">WELCOME_TO_UMI_WORLD</span>: <span class="string">&#x27;&#123;name&#125;，欢迎光临umi的世界&#x27;</span>,</span><br><span class="line">  <span class="attr">INDEX_SEARCH</span>: <span class="string">&#x27;搜索&#x27;</span>,</span><br><span class="line">  <span class="attr">INDEX_PLACEHOLDER</span>: <span class="string">&#x27;组件名称&#x27;</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><ul><li><strong>工具类</strong></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/utils/index.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">formatName</span>(<span class="params">name</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> _name = name;</span><br><span class="line">  <span class="keyword">if</span> (_name &amp;&amp; _name.<span class="title function_">startsWith</span>(<span class="string">&#x27;@&#x27;</span>) &amp;&amp; _name.<span class="title function_">indexOf</span>(<span class="string">&#x27;/&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="comment">// @cloudscope-cli/component-test -&gt;</span></span><br><span class="line">    <span class="comment">// @cloudscope-cli_component-test</span></span><br><span class="line">    <span class="keyword">const</span> nameArray = _name.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">    _name = nameArray.<span class="title function_">join</span>(<span class="string">&#x27;_&#x27;</span>).<span class="title function_">replace</span>(<span class="string">&#x27;@&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> _name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"><span class="comment">// src/utils/request.js</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">BASE_URL</span> = <span class="string">&#x27;http://liugezhou.com:7001&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">    <span class="attr">baseURL</span>: <span class="variable constant_">BASE_URL</span>,</span><br><span class="line">    <span class="attr">timeout</span>: <span class="number">5000</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">    <span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> config</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">    <span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> response.<span class="property">data</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service;</span><br><span class="line"></span><br><span class="line"><span class="comment">//src/utils/service.js</span></span><br><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;./request&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getSiteInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/api/v1/componentSite&#x27;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getComponentList</span>(<span class="params">params</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/api/v1/components&#x27;</span>,</span><br><span class="line">    params,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//src/utils/git.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; formatName &#125; <span class="keyword">from</span> <span class="string">&#x27;../utils&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getGitUrl</span>(<span class="params">item</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> name = item.<span class="property">classname</span>;</span><br><span class="line">  <span class="keyword">if</span> (name.<span class="title function_">startsWith</span>(<span class="string">&#x27;@&#x27;</span>) &amp;&amp; name.<span class="title function_">indexOf</span>(<span class="string">&#x27;/&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> nameArray = name.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">    name = nameArray.<span class="title function_">join</span>(<span class="string">&#x27;_&#x27;</span>).<span class="title function_">replace</span>(<span class="string">&#x27;@&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`https://<span class="subst">$&#123;item.git_type&#125;</span>.com/<span class="subst">$&#123;item.git_login&#125;</span>/<span class="subst">$&#123;name&#125;</span>`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取组件预览链接</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> name      组件名称</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> version   组件版本</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> path      组件预览文件路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> file      组件预览文件名称</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getPreviewUrl</span>(<span class="params">&#123; name, version, path, file &#125;</span>) &#123;</span><br><span class="line">  <span class="comment">// 上传至OSS再来配置</span></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`https:// /<span class="subst">$&#123;formatName(name)&#125;</span>@<span class="subst">$&#123;version&#125;</span>/<span class="subst">$&#123;path&#125;</span>/<span class="subst">$&#123;file&#125;</span>`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;&#125;;</span><br></pre></td></tr></table></figure><blockquote><ul><li><strong>业务代码 ✨✨✨✨✨</strong></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/pages/index.jsx</span></span><br><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">&#x27;./index.less&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Divider</span>, <span class="title class_">Row</span>, <span class="title class_">Col</span>, <span class="title class_">Card</span>, <span class="title class_">Input</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">EditOutlined</span>, <span class="title class_">EllipsisOutlined</span>, <span class="title class_">EyeOutlined</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@ant-design/icons&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useIntl,history &#125; <span class="keyword">from</span> <span class="string">&#x27;umi&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; getGitUrl,getPreviewUrl &#125; <span class="keyword">from</span> <span class="string">&quot;../utils/git&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; getComponentList &#125; <span class="keyword">from</span> <span class="string">&#x27;../utils/service&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">Meta</span> &#125; = <span class="title class_">Card</span>;</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">Search</span> &#125; = <span class="title class_">Input</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">IndexPage</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [init, setInit] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line">  <span class="keyword">const</span> [list, setList] = <span class="title function_">useState</span>([]);</span><br><span class="line">  <span class="keyword">const</span> [name, setName] = <span class="title function_">useState</span>(<span class="literal">null</span>);</span><br><span class="line">  <span class="keyword">const</span> intl = <span class="title function_">useIntl</span>();</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!init) &#123;</span><br><span class="line">      <span class="title function_">setInit</span>(<span class="literal">true</span>);</span><br><span class="line">      <span class="title function_">getComponentList</span>(&#123; name &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">        <span class="title function_">setList</span>(data);</span><br><span class="line">      &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">        <span class="title function_">setList</span>([]);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, [init, name]);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">getAvatar</span>(<span class="params">item</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (item.<span class="property">git_type</span> === <span class="string">&#x27;gitee&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">img</span>: <span class="string">&#x27;https://gitee.com/static/images/logo-black.svg&#x27;</span>,</span><br><span class="line">        <span class="attr">style</span>: &#123; <span class="attr">height</span>: <span class="string">&#x27;20px&#x27;</span>, <span class="attr">cursor</span>: <span class="string">&#x27;pointer&#x27;</span> &#125;,</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">img</span>: <span class="string">&#x27;https://www.youbaobao.xyz/arch/img/github.jpeg&#x27;</span>,</span><br><span class="line">        <span class="attr">style</span>: &#123; <span class="attr">height</span>: <span class="string">&#x27;40px&#x27;</span>, <span class="attr">cursor</span>: <span class="string">&#x27;pointer&#x27;</span> &#125;,</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">getLastPreviewUrl</span>(<span class="params">item</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> lastVersion = item.<span class="property">versions</span>[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">const</span> examplePath = lastVersion.<span class="property">example_path</span>;</span><br><span class="line">    <span class="keyword">const</span> exampleFile = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(lastVersion.<span class="property">example_list</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">getPreviewUrl</span>(&#123;</span><br><span class="line">      <span class="attr">name</span>: item.<span class="property">classname</span>,</span><br><span class="line">      <span class="attr">version</span>: lastVersion.<span class="property">version</span>,</span><br><span class="line">      <span class="attr">path</span>: examplePath,</span><br><span class="line">      <span class="attr">file</span>: exampleFile,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;styles.container&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;styles.search&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Search</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">width:</span> &#x27;<span class="attr">50</span>%&#x27; &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">placeholder</span>=<span class="string">&#123;intl.formatMessage(&#123;</span> <span class="attr">id:</span> &#x27;<span class="attr">INDEX_PLACEHOLDER</span>&#x27; &#125;)&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">allowClear</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">enterButton</span>=<span class="string">&#123;intl.formatMessage(&#123;</span> <span class="attr">id:</span> &#x27;<span class="attr">INDEX_SEARCH</span>&#x27; &#125;)&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">size</span>=<span class="string">&#x27;large&#x27;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onSearch</span>=<span class="string">&#123;value</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">            setName(value);</span></span><br><span class="line"><span class="language-xml">            setInit(false);</span></span><br><span class="line"><span class="language-xml">          &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        /&gt;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Divider</span> <span class="attr">orientation</span>=<span class="string">&#x27;right&#x27;</span>&gt;</span>共&#123;list.length&#125;个组件<span class="tag">&lt;/<span class="name">Divider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Row</span> <span class="attr">gutter</span>=<span class="string">&#123;16&#125;</span> <span class="attr">justify</span>=<span class="string">&#x27;space-around&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;</span></span><br><span class="line"><span class="language-xml">          list.map(item =&gt; (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Col</span> <span class="attr">span</span>=<span class="string">&#123;6&#125;</span> <span class="attr">key</span>=<span class="string">&#123;item.id&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Card</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">actions</span>=<span class="string">&#123;[</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                  &lt;<span class="attr">EyeOutlined</span> <span class="attr">key</span>=<span class="string">&#x27;setting&#x27;</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">                    window.open(getLastPreviewUrl(item));</span></span><br><span class="line"><span class="language-xml">                  &#125;&#125;</span></span><br><span class="line"><span class="language-xml">                  /&gt;,</span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">EditOutlined</span> <span class="attr">key</span>=<span class="string">&#x27;edit&#x27;</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">                    history.push(&#123;</span></span><br><span class="line"><span class="language-xml">                      pathname: &#x27;/detail&#x27;,</span></span><br><span class="line"><span class="language-xml">                      query: &#123;</span></span><br><span class="line"><span class="language-xml">                        id: item.id,</span></span><br><span class="line"><span class="language-xml">                      &#125;,</span></span><br><span class="line"><span class="language-xml">                    &#125;);</span></span><br><span class="line"><span class="language-xml">                  &#125;&#125;</span></span><br><span class="line"><span class="language-xml">                  /&gt;,</span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">EllipsisOutlined</span> <span class="attr">key</span>=<span class="string">&#x27;ellipsis&#x27;</span> /&gt;</span>,</span></span><br><span class="line"><span class="language-xml">                ]&#125;</span></span><br><span class="line"><span class="language-xml">              &gt;</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">Meta</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                  <span class="attr">avatar</span>=<span class="string">&#123;</span>&lt;<span class="attr">img</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    <span class="attr">alt</span>=<span class="string">&#123;item.name&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    <span class="attr">src</span>=<span class="string">&#123;getAvatar(item).img&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    <span class="attr">style</span>=<span class="string">&#123;getAvatar(item).style&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> window.open(getGitUrl(item))&#125;</span></span><br><span class="line"><span class="language-xml">                  /&gt;&#125;</span></span><br><span class="line"><span class="language-xml">                  title=&#123;item.name&#125;</span></span><br><span class="line"><span class="language-xml">                  description=&#123;item.description&#125;</span></span><br><span class="line"><span class="language-xml">                /&gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;/<span class="name">Card</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Col</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          ))</span></span><br><span class="line"><span class="language-xml">        &#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Row</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// src/pages/index.less</span></span><br><span class="line">.<span class="property">containter</span> &#123;</span><br><span class="line">  <span class="attr">padding</span>: 20px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.<span class="property">search</span> &#123;</span><br><span class="line">  <span class="attr">padding</span>:30px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第五章-组件平台组件详情页面开发">第五章 组件平台组件详情页面开发</h2><p><strong>5-1 组件详情获取API开发</strong></p><blockquote><p>首先在umi-component-dev项目下写details页面</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/pages/details.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">&#x27;./detail.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; getComponentItem &#125; <span class="keyword">from</span> <span class="string">&quot;../utils/service&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">Page</span>(<span class="params">props</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [init, setInit] = <span class="title function_">useState</span>(<span class="literal">false</span>)</span><br><span class="line">  <span class="keyword">const</span> [data, setData] = <span class="title function_">useState</span>(<span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> query = props.<span class="property">location</span>.<span class="property">query</span></span><br><span class="line">    <span class="keyword">if</span>(!init &amp;&amp; query.<span class="property">id</span>)&#123;</span><br><span class="line">      <span class="title function_">setInit</span>(<span class="literal">true</span>);</span><br><span class="line">      <span class="title function_">getComponentItem</span>(query.<span class="property">id</span>).<span class="title function_">then</span>( <span class="function"><span class="params">data</span>=&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// src/utils/service.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getComponentItem</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/api/v1/components/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>接着，重点就是去开发接口获取组件的具体信息了</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/controller/v1/Components.js</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// api/v1/components/:id</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">show</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; ctx, app &#125; = <span class="variable language_">this</span>;</span><br><span class="line">  <span class="keyword">const</span> id = ctx.<span class="property">params</span>.<span class="property">id</span></span><br><span class="line">  <span class="keyword">const</span> results = <span class="keyword">await</span> app.<span class="property">mysql</span>.<span class="title function_">select</span>(<span class="string">&#x27;component&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">where</span>: &#123; id &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">if</span> (results &amp;&amp; results.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> component = results[<span class="number">0</span>]</span><br><span class="line">    component.<span class="property">versions</span> = <span class="keyword">await</span> app.<span class="property">mysql</span>.<span class="title function_">select</span>(<span class="string">&#x27;version&#x27;</span>, &#123;</span><br><span class="line">      <span class="attr">where</span>: &#123; <span class="attr">component_id</span>: id &#125;,</span><br><span class="line">      <span class="attr">orders</span>: [[<span class="string">&#x27;version&#x27;</span>, <span class="string">&#x27;desc&#x27;</span>]]</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// gitee GET https://gitee.com/api/v5/repos/&#123;owner&#125;/&#123;repo&#125;/contents(/&#123;path&#125;)</span></span><br><span class="line">    <span class="comment">// git GET https://api.github.com/repos/&#123;owner&#125;/&#123;repo&#125;/&#123;path&#125;)</span></span><br><span class="line">    <span class="keyword">let</span> readmeUrl;</span><br><span class="line">    <span class="keyword">let</span> _name = component.<span class="property">classname</span>;</span><br><span class="line">    <span class="keyword">if</span> (_name &amp;&amp; _name.<span class="title function_">startsWith</span>(<span class="string">&#x27;@&#x27;</span>) &amp;&amp; _name.<span class="title function_">indexOf</span>(<span class="string">&#x27;/&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> nameArray = _name.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">      _name = nameArray.<span class="title function_">join</span>(<span class="string">&#x27;_&#x27;</span>).<span class="title function_">replace</span>(<span class="string">&#x27;@&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (component.<span class="property">git_type</span> === <span class="string">&#x27;gitee&#x27;</span>) &#123;</span><br><span class="line">      readmeUrl = <span class="string">`https://gitee.com/api/v5/repos/<span class="subst">$&#123;component.git_login&#125;</span>/<span class="subst">$&#123;_name&#125;</span>/contents/README.md`</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      readmeUrl = <span class="string">`https://api.github.com/repos/<span class="subst">$&#123;component.git_login&#125;</span>/<span class="subst">$&#123;_name&#125;</span>/README.md`</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> readme = <span class="keyword">await</span> axios.<span class="title function_">get</span>(readmeUrl);</span><br><span class="line">    <span class="keyword">let</span> content = readme.<span class="property">data</span> &amp;&amp; readme.<span class="property">data</span>.<span class="property">content</span>;</span><br><span class="line">    <span class="keyword">if</span> (content) &#123;</span><br><span class="line">      content = <span class="title function_">decode</span>(content)</span><br><span class="line">      <span class="keyword">if</span> (content) &#123;</span><br><span class="line">        component.<span class="property">readme</span> = content</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ctx.<span class="property">body</span> = component</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    ctx.<span class="property">body</span> = &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>5-2 组件基本信息样式开发</strong><br><strong>5-3 组件代码+预览样式开发</strong><br><strong>5-4 组件安装样式和复制命令功能开发</strong><br><strong>5-5 组件多预览文件上传工作</strong><br><strong>5-6 组件多预览文件上传开发</strong></p>]]></content>
      
      
      <categories>
          
          <category> Web架构之脚手架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web架构之脚手架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS相关</title>
      <link href="/019-CSS%E7%9B%B8%E5%85%B3/"/>
      <url>/019-CSS%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="1-rem">1. rem</h2><p><strong>默认字号</strong></p><blockquote><ul><li><p>rem是相对html根元素来说的；浏览器默认的font-size为16px，也就是说默认 1rem为16px。</p></li><li><p>鉴于此，一些网页定义 根元素 font-size为10/16 = 0.675em，那么这个时候1rem为10px。</p></li><li><p>16px为继承值</p></li><li><p>而使用rem前，一般都需要加入一些js代码，通过判断屏幕宽度去计算根[html]的font-size,代码为：</p></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"> <span class="keyword">function</span> <span class="title function_">autoRootFontSize</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">style</span>.<span class="property">fontSize</span> = <span class="title class_">Math</span>.<span class="title function_">min</span>(screen.<span class="property">width</span>, <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="title function_">getBoundingClientRect</span>().<span class="property">width</span>) / <span class="number">750</span> * <span class="number">32</span> + <span class="string">&#x27;px&#x27;</span>;&#125;</span><br><span class="line">  <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, autoRootFontSize);</span><br><span class="line">  <span class="title function_">autoRootFontSize</span>();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><blockquote><p>而不需要使用js去计算font-size，直接使用CSS的为解决问题的重点：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 基于UI width=750px DPR=2的页面 */</span></span><br><span class="line">html &#123;</span><br><span class="line">    font-<span class="attr">size</span>: <span class="title function_">calc</span>(100vw / <span class="number">7.5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-vw-vh">2. vw vh</h2><blockquote><p><strong>vw:</strong></p><ul><li><strong>1vh表示屏幕可视宽度的1%</strong></li></ul></blockquote><p><strong>vh:</strong></p><blockquote><ul><li><strong>1vh表示屏幕可视高度的1%</strong></li></ul></blockquote><p><strong>calc：</strong></p><blockquote><ul><li><strong>calc()函数用于动态计算长度值,可以组合不同的单位,特别需要注意的是运算符前后都需要保留一个空格</strong></li></ul></blockquote><p><strong>dpr：</strong></p><blockquote><ul><li><strong>window.devicePixedlRatio (物理像素),就是一个比例，IPhone4开始，dpr为2 ，这个东西的作用是设计稿用750px，一个按钮的设计为100px，那么CSS书写就是50px，详细一点的解释为：</strong><a href="https://juejin.cn/post/6844903704567644167">https://juejin.cn/post/6844903704567644167</a></li></ul></blockquote><h2 id="3-使用nth-child-选择指定元素">3. 使用nth-child()选择指定元素</h2><blockquote><p>#demo p:nth-child(2):表示id为demo的元素下的第二个p标签</p></blockquote><h2 id="4-使用writing-mode排版竖文">4. 使用writing-mode排版竖文</h2><blockquote><p>writing-mode:vertical-lr</p></blockquote><h2 id="5-使用-text-align-last对齐两端文本">5. 使用 text-align-last对齐两端文本</h2><blockquote><p>text-align-last:justify</p></blockquote><h2 id="6-css一行文本超出">6. css一行文本超出</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">overflow</span>:hidden;</span><br><span class="line">  <span class="attribute">white-space</span>:nowrap;</span><br><span class="line">  <span class="attribute">text-overflow</span>:ellipsis;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-多行文本超出">7.多行文本超出</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.div</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: -webkit-box;</span><br><span class="line">  -webkit-box-orient:vertical;</span><br><span class="line">  -webkit-line-clamp:<span class="number">3</span>;</span><br><span class="line">  <span class="attribute">overflow</span>:hidden</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-iOS手机容器滚动条滑动不流畅">8.iOS手机容器滚动条滑动不流畅</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.div</span> &#123;</span><br><span class="line"><span class="attribute">overflow</span>:auto;</span><br><span class="line">  -webkit-box-scrolling:touch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-使用CSS写出一个三角形图表">9.使用CSS写出一个三角形图表</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.div</span> &#123;</span><br><span class="line"><span class="attribute">height</span>:<span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border</span>:<span class="number">10px</span> solid #transparent;</span><br><span class="line">  <span class="attribute">border-top-color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-contenteditable">10.contenteditable</h2><blockquote><p>html中大部分标签是不可以编辑的，但是添加了contentditable属性后，标签会变成可编辑状态。</p></blockquote><h2 id="11-CSS边框">11. CSS边框</h2><blockquote><p>本节回顾两个属性<code>border-radius</code>、<code>box-shadow</code></p><table><thead><tr><th>属性</th><th>描述</th><th>扩展</th></tr></thead><tbody><tr><td>border-radius</td><td>给div元素添加圆角的边框<br>border-radius 属性是一个最多可指定四个 border -*- radius 属性的复合属性<br><br>若跟四个值其顺序是：<br>左上角、右上角、右下角、左下角</td><td>~~border-top-left-radius<br>border-top-right-radius<br>border-bottom-right-radius<br>border-bottom-left-radius<br>~~推荐写法:<br>border-radius:20px</td></tr><tr><td>box-shadow</td><td>该属性可以设置一个或多个下拉阴影的框<br>语法：<br>box-shadow:h-shadow v-shadow blur spread color inset</td><td><code>h-shadow</code>  水平阴影位置–必填值（允许负值）<br><code>v-shadow</code>  垂直阴影位置–必填值（允许负值） <br><code>blur</code>  可选值–模糊距离<br><code>spread</code>  可选值–阴影的大小<br> <code>color</code>  可选值-颜色<br><code>inset</code>  可选值 --从外内的阴影（开始时）改变阴影内侧阴影</td></tr><tr><td>border-image</td><td></td><td></td></tr></tbody></table></blockquote><h2 id="12-CSS3背景">12.CSS3背景</h2><blockquote><p>本节回顾以下背景属性：<code>bacground-image</code>、 <code>background-size</code>、 <code>background-origin</code>、 <code>background-clip</code></p><table><thead><tr><th>属性</th><th>描述</th><th>扩展</th></tr></thead><tbody><tr><td>background-image</td><td>添加背景图片(允许在元素上添加多个背景图像)</td><td>background: url(flower.png) right bottom no-repeat, url(summertrack.png) left top repeat;</td></tr><tr><td>background-size</td><td>指定背景图像的大小–该大小是相对于父元素的高度和宽度的百分比</td><td>background-size:20px 60px;<br>background-size:100% 100%;<br>background-size:cover–保持图像纵横比并将图像缩放成完全覆盖背景定位的最小大小<br>background-size:contain–保持图像的纵横比并将图像缩放成将适合背景定位区域的最大大小。</td></tr><tr><td>background-origin</td><td>该属性指定了背景图像的位置区域</td><td>content-box<br>padding-box<br>border-box</td></tr><tr><td>background-clip</td><td>该裁剪属性是指从指定位置开始绘制</td><td>content-box<br>padding-box<br>border-box</td></tr></tbody></table></blockquote><h2 id="13-CSS3的渐变">13.CSS3的渐变</h2><blockquote><p>对CSS3渐变的高效使用，可以提升网站一个Level。<br>我们来回顾：线性渐变（Linear Gradients）和径向渐变（Radial Gradients）</p></blockquote><blockquote><ul><li><p>线性渐变（Linerar Gradients）：<br>从上到下（默认）：<code>background:linear-gradient(red,blue,...)</code><br>从左到右： <code>background:linear-gradient(to right,red,blue,...)</code><br>从左上角到右下角度： <code>background:linear-gradient(to right bottom,red,blue,...)</code><br>角度定义：<code>background:linear-gradient(45deg,red,blue,...)</code></p></li><li><p>径向渐变（Radial Gradients）:<br>颜色结点均匀分布（默认情况下）:<code>background:radial-gradient(red,green,blue)</code><br>颜色结点不均匀分布：<code>background:radial-gradient(red 10%,green 20%,blue 30%)</code><br>设置形状：<code>background: radial-gradient(circle | ellipse, red, yellow, green);</code></p></li></ul></blockquote><h2 id="14-CSS3文本效果">14.CSS3文本效果</h2><blockquote><p>这里我们来回顾以下文本效果的以下几个属性：<code>text-shadow</code>、<code>text-overflow</code>、<code>word-wrap</code>、<code>word-break</code></p><table><thead><tr><th>属性</th><th>描述</th><th>扩展</th></tr></thead><tbody><tr><td>text-shadow</td><td>文本阴影<br>语法：<br>text-shadow: h-shadow v-shadow blur color;</td><td><code>h-shadow</code>  水平阴影位置–必填值（允许负值）<br><code>v-shadow</code>  垂直阴影位置–必填值（允许负值） <br><code>blur</code>  可选值–模糊距离<br><code>spread</code>  可选值–阴影的大小</td></tr><tr><td>text-overflow</td><td>文本溢出属性指定应向用户如何显示溢出内容（clip、ellipsis、string）</td><td>clip --修剪文本<br>ellipsis–显示省略号代替被修剪的文本<br>string – 使用给定的字符串来代表被修剪的文本</td></tr><tr><td>word-wrap</td><td>允许对长的不可分割的单词进行分割并换行到下一行。（normal、break-word）</td><td>normal–只在允许的断字点换行<br>break-word–在长单词或URL地址内部进行换行</td></tr><tr><td>word-break</td><td>规定非中日韩文本的换行规则</td><td>normal–使用浏览器默认的换行规则。<br>break-all–允许在单词内换行。<br>keep-all–只能在半角空格或连字符处换行。</td></tr></tbody></table></blockquote><h2 id="15-2D转换">15.2D转换</h2><blockquote><p>transform:translate(x,y)、rotate(angle)、scale(x,y)、skew(x-angle,y-angle)、matrix()<br>移动、旋转、放大缩小、倾斜。<br>不展开叙述。</p></blockquote><h2 id="16-CSS3过渡-CSS3动画">16.CSS3过渡 || CSS3动画</h2><blockquote><ul><li><p>过渡属性<br><code>transition</code>:简写属性，用于在一个属性中设置四个过渡属性。<br><code>transition-property</code>:规定应用过渡的CSS属性的名称。<br><code>transition-duration</code>：定义过渡效果花费的时间。默认为0<br><code>transition-timing-function</code>:规定过渡效果的时间曲线<br><code>transition-delay</code>:规定过渡效果何时开始</p></li><li><p>动画属性<br>|属性|描述|<br>|—|—|<br>|<code>@keyframse</code>|规定动画|<br>|<code>animation</code>|所有动画的简写属性，除了<code>animation-play-state</code>属性 |<br>|语法：|<code>animation: name duration timing-function delay iteration-count direction fill-mode play-state;</code>|<br>|<code>animation-name</code>|规定@keyframes动画的名称 |<br>|<code>animation-duration</code>|规定动画完成一个周期所花费封秒或毫秒 |<br>|<code>animation-timing-function</code>|规定动画的速度曲线：默认为[ease（低速-加快-变慢）] |<br>| 其它值|linear(匀速)、ease-in(动画以低速开始)、ease-out(动画以低速结束)、ease-in-out(动画以低速开始和结束) |<br>|<code>animation-fill-mode</code>|规定当动画不播放时（当动画完成或者延迟未开始播放时），要应用到的元素的样式。|<br>|<code>animation-delay</code>|规定动画何时开始  |<br>|<code>animation-iteration-count</code>|规定动画被播放的次数   [infinite]无限次  |<br>|<code>animation-direction</code>|规定动画是否在下一周期逆向地播放。默认是[normal]  |<br>|animation-direction – reverse|动画反向播放|<br>|animation-direction --alternate|动画在奇数次（1、3、5…）正向播放，在偶数次（2、4、6…）反向播放。|<br>|animation-direction–alternate-reverse|动画在奇数次（1、3、5…）反向播放，在偶数次（2、4、6…）正向播放|<br>|<code>animation-play-state</code>|规定动画是否正在运行或暂停。默认是[running]|</p></li></ul></blockquote><h2 id="17-CSS3多列">17.CSS3多列</h2><blockquote><p>关于CSS3的多列属性我好像还真没用到过，看到了就记录一下吧。</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>column-count</td><td>指定了需要将一段文字分隔的列数</td></tr><tr><td>column-gap</td><td>该属性指定了列与列之间的缝隙</td></tr><tr><td>column-rule-width</td><td>指定了两列的边框厚度</td></tr><tr><td>column-rule-style</td><td>指定了列与列之间的边框样式（solid | dotted）</td></tr><tr><td>column-rule-color</td><td>指定了两列的边框颜色</td></tr><tr><td>column-rule</td><td>是上述三个属性的缩写</td></tr><tr><td>column-span</td><td>指定元素跨越所有列</td></tr><tr><td>column-width</td><td>指定了列的宽度</td></tr></tbody></table></blockquote><h2 id="18-CSS3用户界面">18.CSS3用户界面</h2><blockquote><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>resizing</td><td>指定一个元素是否应该由用户去调整大小</td></tr><tr><td>box-sizing</td><td>当你设置一个元素为box-sizing:border-box时，此元素的内边距和边框便不再增加它的宽度了</td></tr><tr><td>outline-offset</td><td>对轮廓进行偏移，并在超出边框边缘的位置绘制轮廓</td></tr></tbody></table></blockquote><h2 id="19-CSS3图片">19.CSS3图片</h2><blockquote><ul><li>响应式图片</li></ul></blockquote><pre><code>img&#123;    max-width:100%;    height:auto;&#125;</code></pre><blockquote><ul><li>图片文本<br>定义图片文本的时候结合position:relative和position:absolute。</li></ul></blockquote><blockquote><ul><li>响应式图片相册<br>在这里正确用好这几个属性：<code>box-sizing:border</code>、<code>@media</code>、<code>clear:both</code></li></ul></blockquote><h2 id="20-CSS3多媒体查询">20.CSS3多媒体查询</h2><blockquote><p>CSS3多媒体类型</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>all</td><td>用于所有多媒体类型设备</td></tr><tr><td>print</td><td>用于打印机</td></tr><tr><td>screen</td><td>用于电脑屏幕、平板、智能手机等</td></tr><tr><td>speech</td><td>用于屏幕阅读器</td></tr></tbody></table></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Week32-脚手架组件发布功能开发</title>
      <link href="/Week32-%E8%84%9A%E6%89%8B%E6%9E%B6%E7%BB%84%E4%BB%B6%E5%8F%91%E5%B8%83%E5%8A%9F%E8%83%BD%E5%BC%80%E5%8F%91/"/>
      <url>/Week32-%E8%84%9A%E6%89%8B%E6%9E%B6%E7%BB%84%E4%BB%B6%E5%8F%91%E5%B8%83%E5%8A%9F%E8%83%BD%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章目录排版做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="第一章-周介绍">第一章 周介绍</h2><p><strong>1-1 整体内容介绍</strong></p><blockquote><ul><li>前端组件演讲过程和大厂前端物料体系介绍</li><li>组件复用体系架构设计</li><li>脚手架组件创建+发布全流程实现</li></ul></blockquote><h2 id="第二章-大厂物料体系介绍和前端组件平台架构设计">第二章 大厂物料体系介绍和前端组件平台架构设计</h2><p><strong>2-1 大厂前端物料体系介绍</strong><br><strong>2-2 组件平台架构设计</strong><br><a href="https://www.processon.com/embed/612322001efad44bb279c2f2">点击查看【processon】</a></p><h2 id="第三章-脚手架组件创建和预览项目开发">第三章 脚手架组件创建和预览项目开发</h2><p><strong>3-1 新的组件库模板开发</strong></p><ol><li>发布npm包</li></ol><ul><li>下载源至某处：<a href="https://git.imooc.com/class-110/lego-bricks">https://git.imooc.com/class-110/lego-bricks</a></li><li>新建文件 cloudscope-cli-components</li><li>cd cloudscope-cli-components</li><li>npm init -y</li><li>将源码移动到  cloudscope-cli-components下,并将lego-bricks改名为template</li><li>cloudscope-cli-components/package.json下，添加publishConfig</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cloudscope-cli-components&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;publishConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;access&quot;</span><span class="punctuation">:</span> <span class="string">&quot;public&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ul><li>cloudscope-cli-components/template/package.json下，添加files</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;files&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;src&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;tests&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;dist&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;.browserslistrc&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;.eslintrc.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;.gitignore&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;.travis.yml&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;babel.config.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;jest.config.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;README.md&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;tsconfig.json&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><ul><li>npm publish</li></ul><ol start="2"><li><strong>维护mongodb,添加一条数据</strong></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> ObjectId(<span class="string">&quot;612473d8e1694b2c0191177f&quot;</span>)<span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;通用的Vue3组件库模版&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;npmName&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;cloudscope-cli-components&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;1.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;normal&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;installCommand&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;npm install --registry=https://registry.npm.taobao.org&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;startCommand&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;npm run serve&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tag&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span> </span><br><span class="line">        <span class="string">&quot;component&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ignore&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span> </span><br><span class="line">        <span class="string">&quot;**/public/**&quot;</span><span class="punctuation">,</span> </span><br><span class="line">        <span class="string">&quot;**.png&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ol start="3"><li><strong>新建components-test目录</strong></li></ol><blockquote><p>cloudscope-cli init -tp /Users/liumingzhou/Documents/imoocCourse/Web前端架构师/cloudscope-cli/commands/init</p></blockquote><p><strong>3-2 组件库预览项目开发</strong></p><blockquote><p>这节听的有点懵逼，上一节，通过cloudscope-cli init了一个命令后，</p><ul><li>npm run build</li><li>根目录下继续新建examples目录,cd examples</li><li>vue create examples</li><li>cd examples中</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">LegoComponents</span> <span class="keyword">from</span> <span class="string">&quot;../../../dist/component-test.esm&quot;</span>;</span><br><span class="line"><span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">use</span>(<span class="title class_">LegoComponents</span>).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//App.vue</span></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">l-image</span> <span class="attr">src</span>=<span class="string">&quot;https://img.mukewang.com/5d5e51f900011f0c06550501-100-100.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">l-image</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//vue.config.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line"><span class="attr">publicPath</span>:<span class="string">&#x27;./&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>最后继续 npm run build,打开dist目录下的index.html,查看页面效果</p></blockquote><p><strong>3-3 组件多预览模式开发</strong></p><blockquote><p>有点小懵逼，组件库就开发完毕了</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">publicPath</span>:<span class="string">&#x27;./&#x27;</span>,</span><br><span class="line">    <span class="attr">pages</span>:&#123;</span><br><span class="line">        <span class="attr">index</span>:&#123;</span><br><span class="line">            <span class="attr">entry</span>:<span class="string">&#x27;./src/main.js&#x27;</span>,</span><br><span class="line">            <span class="attr">templates</span>:<span class="string">&#x27;./public/index.html&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">index2</span>:&#123;</span><br><span class="line">            <span class="attr">entry</span>:<span class="string">&#x27;./src/main2.js&#x27;</span>,</span><br><span class="line">            <span class="attr">templates</span>:<span class="string">&#x27;./public/index.html&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3-4 将预览功能集成到组件库模板</strong><br><strong>3-5 组件初始化时自动生成配置文件</strong><br><strong>3-6 组件库命名优化</strong></p><h2 id="第四章-脚手架组件发布流程开发">第四章 脚手架组件发布流程开发</h2><p><strong>4-1 组件仓库初始化流程优化</strong><br>cloudscope-cli 本章相关代码提交至 <a href="https://github.com/liugezhou/cloudscope-cli/tree/lesson32">cloudscope-cli/lesson32</a></p><blockquote><p>本节主要为对仓库名称带有·@·进行一个合法的名字修改</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// cloudscope-cli/models/git/lib/index.js</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Git</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">&#123;name, version, dir&#125;,&#123;</span></span><br><span class="line"><span class="params">      ^^^^^^^</span></span><br><span class="line"><span class="params">      <span class="keyword">if</span>(name.startsWith(<span class="string">&#x27;@&#x27;</span>) &amp;&amp; name.indexOf(<span class="string">&#x27;/&#x27;</span>)&gt;<span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="params">            <span class="keyword">const</span> nameArray = name.split(<span class="string">&#x27;/&#x27;</span>)</span></span><br><span class="line"><span class="params">            <span class="variable language_">this</span>.name = nameArray.join(<span class="string">&#x27;_&#x27;</span>).replace(<span class="string">&#x27;@&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="params">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="params">            <span class="variable language_">this</span>.name = name    //发布项目名称</span></span><br><span class="line"><span class="params">        &#125;</span></span><br><span class="line"><span class="params">    &#125;</span></span><br><span class="line"><span class="params">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>4-2 组件上传前预检查流程开发</strong><br>cloudscope-cli 本章相关代码提交至 <a href="https://github.com/liugezhou/cloudscope-cli/tree/lesson32">cloudscope-cli/lesson32</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// cloudscope-cli/models/git/lib/index.js</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">prepare</span>(<span class="params"></span>)&#123;</span><br><span class="line"> <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">checkComponent</span>()  <span class="comment">// 组件合法性检查</span></span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">async</span> <span class="title function_">checkComponent</span>(<span class="params"></span>)&#123;</span><br><span class="line">   <span class="keyword">let</span> componentFile = <span class="variable language_">this</span>.<span class="title function_">isComponent</span>()</span><br><span class="line">   <span class="keyword">if</span>(componentFile)&#123;</span><br><span class="line">     log.<span class="title function_">info</span>(<span class="string">&#x27;开始检查build结果&#x27;</span>)</span><br><span class="line">     <span class="keyword">if</span>(!<span class="variable language_">this</span>.<span class="property">buildCmd</span>)&#123;</span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">buildCmd</span> = <span class="string">&#x27;npm run build&#x27;</span></span><br><span class="line">     &#125;</span><br><span class="line">     <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>).<span class="title function_">execSync</span>(<span class="variable language_">this</span>.<span class="property">buildCmd</span>,&#123;</span><br><span class="line">       <span class="attr">cwd</span>:<span class="variable language_">this</span>.<span class="property">dir</span></span><br><span class="line">     &#125;)</span><br><span class="line">     <span class="keyword">const</span> buildPath = path.<span class="title function_">resolve</span>(<span class="variable language_">this</span>.<span class="property">dir</span>,componentFile.<span class="property">buildPath</span>)</span><br><span class="line">     <span class="keyword">if</span>(!fs.<span class="title function_">existsSync</span>(buildPath))&#123;</span><br><span class="line">       <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`构建结果：<span class="subst">$&#123;buildPath&#125;</span>不存在！`</span>)</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">const</span> pkg = <span class="variable language_">this</span>.<span class="title function_">getPackageJson</span>()</span><br><span class="line">     <span class="keyword">if</span>(!pkg.<span class="property">files</span> || !pkg.<span class="property">files</span>.<span class="title function_">includes</span>(componentFile.<span class="property">buildPath</span>))&#123;</span><br><span class="line">       <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`packages.json中files属性未添加构建结果目录：[<span class="subst">$&#123;componentFile.buildPath&#125;</span>],请在packag.json中收到添加`</span>)</span><br><span class="line">     &#125;</span><br><span class="line">     log.<span class="title function_">success</span>(<span class="string">&#x27;build结果检查通过！&#x27;</span>)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">isComponent</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> componentFilePath = path.<span class="title function_">resolve</span>(<span class="variable language_">this</span>.<span class="property">dir</span>,<span class="variable constant_">COMPONENT_FILE</span>);</span><br><span class="line">  <span class="keyword">return</span> fs.<span class="title function_">existsSync</span>(componentFilePath) &amp;&amp; fse.<span class="title function_">readJsonSync</span>(componentFilePath)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4-3 组件发布前准备工作开发</strong><br>cloudscope-cli 本章相关代码提交至 <a href="https://github.com/liugezhou/cloudscope-cli/tree/lesson32">cloudscope-cli/lesson32</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">publish</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">let</span> ret = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="title function_">isComponent</span>())&#123;</span><br><span class="line">    log.<span class="title function_">info</span>(<span class="string">&#x27;开始发布组件&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">saveComponentToDB</span>()</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    ………………</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">prod</span> &amp;&amp; ret) &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">uploadComponentToNpm</span>()    </span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">runCreateTagTask</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">async</span> <span class="title function_">saveComponentToDB</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">// 将组件信息上传至数据库-RDS</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 将组件多预览页面上传至OSS</span></span><br><span class="line">&#125;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">uploadComponentToNpm</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// 完成组件上传至npm</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><strong>4-4 创建RDS组件表+后端MySQL插件集成</strong><br>cloudscope-cli-server 本章相关代码提交至 <a href="https://github.com/liugezhou/cloudscope-cli-server/tree/lesson32">cloudscope-cli-server/lesson32</a></p><blockquote><p>本章主要是在服务端链接mysql数据库，并做相关测试<br>编写相关代码前：cnpm i -S egg-mysql</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/config/db.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">MYSQL_HOST</span> = <span class="string">&#x27;liugezhou.com&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">MYSQL_PORT</span> = <span class="number">3306</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">MYSQL_USER</span> = <span class="string">&#x27;root&#x27;</span> </span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">MYSQL_PWD</span> = fs.<span class="title function_">readFileSync</span>(path.<span class="title function_">resolve</span>(userHome,<span class="string">&#x27;.cloudscope-cli&#x27;</span>,<span class="string">&#x27;mysql_pwd&#x27;</span>)).<span class="title function_">toString</span>().<span class="title function_">trim</span>()</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">MYSQL_DB</span> =<span class="string">&#x27;imooc_web_architect_cli&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//app/config/plugin.js</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">mysql</span> = &#123;</span><br><span class="line">  <span class="attr">enable</span>:<span class="literal">true</span>,</span><br><span class="line">  <span class="attr">package</span>: <span class="string">&#x27;egg-mysql&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//app/config/config.default.js</span></span><br><span class="line">config.<span class="property">mysql</span> = &#123;</span><br><span class="line">    <span class="attr">client</span>: &#123;</span><br><span class="line">      <span class="attr">host</span>: <span class="variable constant_">MYSQL_HOST</span>, </span><br><span class="line">      <span class="attr">port</span>: <span class="variable constant_">MYSQL_PORT</span>,</span><br><span class="line">      <span class="attr">user</span>:<span class="variable constant_">MYSQL_USER</span>,</span><br><span class="line">      <span class="attr">password</span>:<span class="variable constant_">MYSQL_PWD</span>,</span><br><span class="line">      <span class="attr">database</span>:<span class="variable constant_">MYSQL_DB</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">app</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">agent</span>:<span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//相关测试代码</span></span><br><span class="line"><span class="comment">// app/app/router.js</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/mysql&#x27;</span>,controller.<span class="property">project</span>.<span class="property">mysqlTest</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// app/controller/project.js</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">mysqlTest</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;ctx, app &#125; = <span class="variable language_">this</span></span><br><span class="line">  <span class="keyword">const</span> list = <span class="keyword">await</span> app.<span class="property">mysql</span>.<span class="title function_">select</span>(<span class="string">&#x27;component&#x27;</span>)</span><br><span class="line">  ctx.<span class="property">body</span> = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(list)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4-5 组件上传数据库准备工作开发</strong><br>cloudscope-cli 本章相关代码提交至 <a href="https://github.com/liugezhou/cloudscope-cli/tree/lesson32">cloudscope-cli/lesson32</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// models/git/lib/index.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ComponentRequest</span> = <span class="built_in">require</span>(<span class="string">&#x27;../lib/ComponentRequest&#x27;</span>);</span><br><span class="line"> <span class="keyword">async</span> <span class="title function_">saveComponentToDB</span>(<span class="params"></span>)&#123;</span><br><span class="line">   <span class="comment">// 将组件信息上传至数据库-RDS</span></span><br><span class="line">   log.<span class="title function_">info</span>(<span class="string">&#x27;上传组件信息至OSS+写入数据库&#x27;</span>)</span><br><span class="line">   <span class="keyword">const</span> componentFile = <span class="variable language_">this</span>.<span class="title function_">isComponent</span>()</span><br><span class="line">   <span class="keyword">let</span> componentExamplePath = path.<span class="title function_">resolve</span>(<span class="variable language_">this</span>.<span class="property">dir</span>,componentFile.<span class="property">examplePath</span>);</span><br><span class="line">   <span class="keyword">let</span> dirs = fs.<span class="title function_">readdirSync</span>(componentExamplePath)</span><br><span class="line">   <span class="keyword">if</span>(dirs.<span class="title function_">includes</span>(<span class="string">&#x27;dist&#x27;</span>))&#123;</span><br><span class="line">     componentExamplePath = path.<span class="title function_">resolve</span>(componentExamplePath,<span class="string">&#x27;dist&#x27;</span>)</span><br><span class="line">     dirs = fs.<span class="title function_">readdirSync</span>(componentExamplePath)</span><br><span class="line">     componentFile.<span class="property">examplePath</span> = <span class="string">`<span class="subst">$&#123;componentFile.examplePath&#125;</span>/dist`</span></span><br><span class="line">   &#125;</span><br><span class="line">   dirs = dirs.<span class="title function_">filter</span>(<span class="function"><span class="params">dir</span> =&gt;</span> dir.<span class="title function_">match</span>(<span class="regexp">/^index(\d)*.html$/</span>))</span><br><span class="line">   componentFile.<span class="property">exampleList</span> = dirs</span><br><span class="line">   componentFile.<span class="property">exampleRealPath</span> = componentExamplePath</span><br><span class="line">   <span class="keyword">const</span> data = <span class="keyword">await</span> <span class="title class_">ComponentRequest</span>.<span class="title function_">createComponent</span>(&#123;</span><br><span class="line">     <span class="attr">component</span>:componentFile,</span><br><span class="line">     <span class="attr">git</span>: &#123;</span><br><span class="line">       <span class="attr">type</span>: <span class="variable language_">this</span>.<span class="property">gitServer</span>.<span class="property">type</span>,</span><br><span class="line">       <span class="attr">remote</span>: <span class="variable language_">this</span>.<span class="property">remote</span>,</span><br><span class="line">       <span class="attr">version</span>: <span class="variable language_">this</span>.<span class="property">version</span>,</span><br><span class="line">       <span class="attr">branch</span>: <span class="variable language_">this</span>.<span class="property">branch</span>,</span><br><span class="line">       <span class="attr">login</span>: <span class="variable language_">this</span>.<span class="property">login</span>,</span><br><span class="line">       <span class="attr">owner</span>: <span class="variable language_">this</span>.<span class="property">owner</span>,</span><br><span class="line">     &#125;,</span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="keyword">if</span> (!data) &#123;</span><br><span class="line">     <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;上传组件失败&#x27;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// 2.将组件多预览页面上传至OSS</span></span><br><span class="line">   <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// models/git/lib/ComponentRequest.js</span></span><br><span class="line"><span class="keyword">const</span> axios = <span class="built_in">require</span>(<span class="string">&#x27;axios&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> log = <span class="built_in">require</span>(<span class="string">&#x27;@cloudscope-cli/log&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">createComponent</span>: <span class="keyword">async</span> <span class="keyword">function</span>(<span class="params">component</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> response = <span class="keyword">await</span> axios.<span class="title function_">post</span>(<span class="string">&#x27;http://liugezhou.com:7001/api/v1/components&#x27;</span>, component);</span><br><span class="line">      log.<span class="title function_">verbose</span>(<span class="string">&#x27;response&#x27;</span>, response);</span><br><span class="line">      <span class="keyword">const</span> &#123; data &#125; = response;</span><br><span class="line">      <span class="keyword">if</span> (data.<span class="property">code</span> === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> data.<span class="property">data</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> e;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>4-6 组件上传restful api开发</strong><br>cloudscope-cli-server 本章相关代码提交至 <a href="https://github.com/liugezhou/cloudscope-cli-server/tree/lesson32">cloudscope-cli-server/lesson32</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/constant.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">STATUS</span>: &#123;</span><br><span class="line">      <span class="attr">ON</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">OFF</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// app/router.js</span></span><br><span class="line">router.<span class="title function_">resources</span>(<span class="string">&#x27;components&#x27;</span>, <span class="string">&#x27;/api/v1/components&#x27;</span>, controller.<span class="property">v1</span>.<span class="property">components</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// app/Controller/v1/Components.js</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Controller</span> = <span class="built_in">require</span>(<span class="string">&quot;egg&quot;</span>).<span class="property">Controller</span>;</span><br><span class="line"><span class="keyword">const</span> constant = <span class="built_in">require</span>(<span class="string">&#x27;../../constant&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ComponentService</span> = <span class="built_in">require</span>(<span class="string">&#x27;../../service/ComponentService&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ComponentsController</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Controller</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// api/v1/components</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">index</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; ctx &#125; = <span class="variable language_">this</span>;</span><br><span class="line">        ctx.<span class="property">body</span> = <span class="string">&#x27;get component&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// api/v1/components/:id</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">show</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; ctx &#125; = <span class="variable language_">this</span>;</span><br><span class="line">        ctx.<span class="property">body</span> = <span class="string">&#x27;get single component&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// post data</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">create</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; ctx, app &#125; = <span class="variable language_">this</span>;</span><br><span class="line">        <span class="keyword">const</span> &#123; component, git &#125; = ctx.<span class="property">request</span>.<span class="property">body</span>;</span><br><span class="line">        <span class="keyword">const</span> timestamp = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>()</span><br><span class="line">          <span class="comment">// 1. 添加组件信息</span></span><br><span class="line">        <span class="keyword">const</span> componentData = &#123;</span><br><span class="line">            <span class="attr">name</span>: component.<span class="property">name</span>,</span><br><span class="line">            <span class="attr">classname</span>: component.<span class="property">className</span>,</span><br><span class="line">            <span class="attr">description</span>: component.<span class="property">description</span>,</span><br><span class="line">            <span class="attr">npm_name</span>: component.<span class="property">npmName</span>,</span><br><span class="line">            <span class="attr">npm_version</span>: component.<span class="property">npmVersion</span>,</span><br><span class="line">            <span class="attr">git_type</span>: git.<span class="property">type</span>,</span><br><span class="line">            <span class="attr">git_remote</span>: git.<span class="property">remote</span>,</span><br><span class="line">            <span class="attr">git_owner</span>: git.<span class="property">owner</span>,</span><br><span class="line">            <span class="attr">git_login</span>: git.<span class="property">login</span>,</span><br><span class="line">            <span class="attr">status</span>: constant.<span class="property">STATUS</span>.<span class="property">ON</span>,</span><br><span class="line">            <span class="attr">create_dt</span>: timestamp,</span><br><span class="line">            <span class="attr">create_by</span>: git.<span class="property">login</span>,</span><br><span class="line">            <span class="attr">update_dt</span>: timestamp,</span><br><span class="line">            <span class="attr">update_by</span>: git.<span class="property">login</span>,</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">const</span> componentService = <span class="keyword">new</span> <span class="title class_">ComponentService</span>(app);</span><br><span class="line">        ctx.<span class="property">body</span> = <span class="string">&#x27;create component&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">ComponentsController</span></span><br></pre></td></tr></table></figure><p><strong>4-7 组件上传数据库逻辑开发</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/service/ComponentService.js</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ComponentService</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">app</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">app</span> = app,</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&#x27;component&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">queryOne</span>(<span class="params">query</span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> data = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">app</span>.<span class="property">mysql</span>.<span class="title function_">select</span>(<span class="variable language_">this</span>.<span class="property">name</span>, &#123;</span><br><span class="line">            <span class="attr">where</span>: query,</span><br><span class="line">          &#125;);</span><br><span class="line">          <span class="keyword">if</span> (data &amp;&amp; data.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> data[<span class="number">0</span>];</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">insert</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">app</span>.<span class="property">mysql</span>.<span class="title function_">insert</span>(<span class="variable language_">this</span>.<span class="property">name</span>, data);</span><br><span class="line">        <span class="keyword">return</span> res.<span class="property">insertId</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">ComponentService</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//app/service/versionService.js</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">VersionService</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">app</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">app</span> = app;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&#x27;version&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">queryOne</span>(<span class="params">query</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> data = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">app</span>.<span class="property">mysql</span>.<span class="title function_">select</span>(<span class="variable language_">this</span>.<span class="property">name</span>, &#123;</span><br><span class="line">            <span class="attr">where</span>: query,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">if</span> (data &amp;&amp; data.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> data[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">insert</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">app</span>.<span class="property">mysql</span>.<span class="title function_">insert</span>(<span class="variable language_">this</span>.<span class="property">name</span>, data);</span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">affectedRows</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">update</span>(<span class="params">data, query</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">app</span>.<span class="property">mysql</span>.<span class="title function_">update</span>(<span class="variable language_">this</span>.<span class="property">name</span>, data, &#123;</span><br><span class="line">            <span class="attr">where</span>: query</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">affectedRows</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">VersionService</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//app/controller/v1/Components.js</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">create</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; ctx, app &#125; = <span class="variable language_">this</span>;</span><br><span class="line">        <span class="keyword">const</span> &#123; component, git &#125; = ctx.<span class="property">request</span>.<span class="property">body</span>;</span><br><span class="line">        <span class="keyword">const</span> timestamp = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>()</span><br><span class="line">        <span class="comment">// 1. 添加组件信息</span></span><br><span class="line">        <span class="keyword">const</span> componentData = &#123;</span><br><span class="line">            <span class="attr">name</span>: component.<span class="property">name</span>,</span><br><span class="line">            <span class="attr">classname</span>: component.<span class="property">className</span>,</span><br><span class="line">            <span class="attr">description</span>: component.<span class="property">description</span>,</span><br><span class="line">            <span class="attr">npm_name</span>: component.<span class="property">npmName</span>,</span><br><span class="line">            <span class="attr">npm_version</span>: component.<span class="property">npmVersion</span>,</span><br><span class="line">            <span class="attr">git_type</span>: git.<span class="property">type</span>,</span><br><span class="line">            <span class="attr">git_remote</span>: git.<span class="property">remote</span>,</span><br><span class="line">            <span class="attr">git_owner</span>: git.<span class="property">owner</span>,</span><br><span class="line">            <span class="attr">git_login</span>: git.<span class="property">login</span>,</span><br><span class="line">            <span class="attr">status</span>: constant.<span class="property">STATUS</span>.<span class="property">ON</span>,</span><br><span class="line">            <span class="attr">create_dt</span>: timestamp,</span><br><span class="line">            <span class="attr">create_by</span>: git.<span class="property">login</span>,</span><br><span class="line">            <span class="attr">update_dt</span>: timestamp,</span><br><span class="line">            <span class="attr">update_by</span>: git.<span class="property">login</span>,</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">const</span> componentService = <span class="keyword">new</span> <span class="title class_">ComponentService</span>(app);</span><br><span class="line">        <span class="keyword">const</span> haveComponentInDB = <span class="keyword">await</span> componentService.<span class="title function_">queryOne</span>(&#123;</span><br><span class="line">            <span class="attr">className</span>: component.<span class="property">className</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">let</span> componentId;</span><br><span class="line">        <span class="keyword">if</span> (!haveComponentInDB) &#123;</span><br><span class="line">            componentId = <span class="keyword">await</span> componentService.<span class="title function_">insert</span>(componentData);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            componentId = haveComponentInDB.<span class="property">id</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!componentId) &#123;</span><br><span class="line">            ctx.<span class="property">body</span> = <span class="title function_">failed</span>(<span class="string">&#x27;添加组件失败&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 2.添加组件版本信息</span></span><br><span class="line">        <span class="keyword">const</span> versionData = &#123;</span><br><span class="line">            <span class="attr">component_id</span>: componentId,</span><br><span class="line">            <span class="attr">version</span>: git.<span class="property">version</span>,</span><br><span class="line">            <span class="attr">build_path</span>: component.<span class="property">buildPath</span>,</span><br><span class="line">            <span class="attr">example_path</span>: component.<span class="property">examplePath</span>,</span><br><span class="line">            <span class="attr">example_list</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(component.<span class="property">exampleList</span>),</span><br><span class="line">            <span class="attr">status</span>: constant.<span class="property">STATUS</span>.<span class="property">ON</span>,</span><br><span class="line">            <span class="attr">create_dt</span>: timestamp,</span><br><span class="line">            <span class="attr">create_by</span>: git.<span class="property">login</span>,</span><br><span class="line">            <span class="attr">update_dt</span>: timestamp,</span><br><span class="line">            <span class="attr">update_by</span>: git.<span class="property">login</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> versionService = <span class="keyword">new</span> <span class="title class_">VersionService</span>(app);</span><br><span class="line">        <span class="keyword">const</span> haveVersionInDB = <span class="keyword">await</span> versionService.<span class="title function_">queryOne</span>(&#123;</span><br><span class="line">            <span class="attr">component_id</span>: componentId,</span><br><span class="line">            <span class="attr">version</span>: git.<span class="property">version</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">if</span> (!haveVersionInDB) &#123;</span><br><span class="line">            <span class="keyword">const</span> versionRes = <span class="keyword">await</span> versionService.<span class="title function_">insert</span>(versionData)</span><br><span class="line">            <span class="keyword">if</span> (!versionRes) &#123;</span><br><span class="line">                ctx.<span class="property">body</span> = <span class="title function_">failed</span>(<span class="string">&#x27;添加组件失败&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> updateData = &#123;</span><br><span class="line">                <span class="attr">build_path</span>: component.<span class="property">buildPath</span>,</span><br><span class="line">                <span class="attr">example_path</span>: component.<span class="property">examplePath</span>,</span><br><span class="line">                <span class="attr">example_list</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(component.<span class="property">exampleList</span>),</span><br><span class="line">                <span class="attr">update_dt</span>: timestamp,</span><br><span class="line">                <span class="attr">update_by</span>: git.<span class="property">login</span>,</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">const</span> versionRes = <span class="keyword">await</span> versionService.<span class="title function_">update</span>(updateData, &#123;</span><br><span class="line">                <span class="attr">component_id</span>: componentId,</span><br><span class="line">                <span class="attr">version</span>: versionData.<span class="property">version</span>,</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">if</span> (!versionRes) &#123;</span><br><span class="line">                ctx.<span class="property">body</span> = <span class="title function_">failed</span>(<span class="string">&#x27;更新组件失败&#x27;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>4-8 组件NPM发布逻辑开发</strong></p><blockquote><p>本节主要是调试过多，重要几行代码为在脚手架 cloudscope-cli中添加NPM发布逻辑</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">uploadComponentToNpm</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 完成组件上传至npm</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">isComponent</span>()) &#123;</span><br><span class="line">    log.<span class="title function_">info</span>(<span class="string">&#x27;开始发布组件NPM&#x27;</span>)</span><br><span class="line">    <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>).<span class="title function_">execSync</span>(<span class="string">&#x27;npm publish&#x27;</span>, &#123;</span><br><span class="line">      <span class="attr">cwd</span>: <span class="variable language_">this</span>.<span class="property">dir</span></span><br><span class="line">    &#125;)</span><br><span class="line">    log.<span class="title function_">success</span>(<span class="string">&#x27;组件NPM发布成功&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4-9 组件自动生成远程仓库Tag问题解决</strong></p><blockquote><p>End</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web架构之脚手架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web架构之脚手架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Week31-脚手架发布模块云发布功能开发</title>
      <link href="/Week31-%E8%84%9A%E6%89%8B%E6%9E%B6%E5%8F%91%E5%B8%83%E6%A8%A1%E5%9D%97%E4%BA%91%E5%8F%91%E5%B8%83%E5%8A%9F%E8%83%BD%E5%BC%80%E5%8F%91/"/>
      <url>/Week31-%E8%84%9A%E6%89%8B%E6%9E%B6%E5%8F%91%E5%B8%83%E6%A8%A1%E5%9D%97%E4%BA%91%E5%8F%91%E5%B8%83%E5%8A%9F%E8%83%BD%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章目录排版做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="第一章-本周导学">第一章 本周导学</h2><p><strong>1-1 本周介绍和学习方法</strong></p><blockquote><ul><li>云发布原理、架构和实现</li><li>OSS API(OSS接入指南)</li><li>上线发布流程(支持Hash和History模式发布)</li><li>附赠：Node高分库分享(awesome-nodejs)</li></ul></blockquote><h2 id="第二章-云发布模块架构设计">第二章 云发布模块架构设计</h2><p><strong>2-1 前端发布OSS架构设计</strong></p><blockquote><ul><li>CloudBuild实例添加参数：prod（是否为正式版本）</li><li>添加准备阶段 ：获取OSS文件，询问是否覆盖</li></ul></blockquote><p><strong>2-2 云发布架构和流程设计</strong><br><a href="https://www.processon.com/embed/61127e8907912940a9654a57">点击查看【processon】</a></p><h2 id="第三章-云发布功能开发">第三章 云发布功能开发</h2><blockquote><p>本章内容更新代码为分支 <a href="https://github.com/liugezhou/cloudscope-cli/tree/lesson31">lesson31</a></p></blockquote><p><strong>3-1 实现云发布前的预检查逻辑</strong></p><blockquote><p>在上一节中，mdoels/git/lib/index.js中，有preparePublish方法，之前检查命令是否为npm或cnpm<br>在上一节基础上，这里添加了，执行构建命令是否为 build，代码如下</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// models/git/lib/index.js</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">preparePublish</span>(<span class="params"></span>)&#123;</span><br><span class="line">  log.<span class="title function_">info</span>(<span class="string">&#x27;开始进行云构建前代码检查&#x27;</span>)</span><br><span class="line">  …………</span><br><span class="line">  <span class="keyword">const</span> pkg = <span class="variable language_">this</span>.<span class="title function_">getPackageJson</span>()</span><br><span class="line">  <span class="keyword">const</span> buildCmdArray = <span class="variable language_">this</span>.<span class="property">buildCmd</span>.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> buildLastCmd = buildCmArrat.<span class="title function_">slice</span>(-<span class="number">1</span>).<span class="title function_">toString</span>()</span><br><span class="line">  <span class="keyword">if</span>(!pkg.<span class="property">scripts</span> || !<span class="title class_">Object</span>.<span class="title function_">keys</span>(pkg.<span class="property">scripts</span>).<span class="title function_">includes</span>(lastCmd))&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.buildCmd&#125;</span>命令不存在`</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  log.<span class="title function_">success</span>(<span class="string">&#x27;云构建代码预检查通过&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">getPackageJson</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">const</span> pkgPath = path.<span class="title function_">resolve</span>(<span class="variable language_">this</span>.<span class="property">dir</span>,<span class="string">&#x27;package.json&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span>(!fs.<span class="title function_">existSync</span>(pkgPath))&#123;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`package.json不存在,源码目录:<span class="subst">$&#123;<span class="variable language_">this</span>.dir&#125;</span>`</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> fse.<span class="title function_">readJsonSync</span>(pkgPath)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3-2 静态资源服务器类型选择逻辑开发</strong></p><blockquote><ul><li>上一节我们检查了build这个命令</li><li>接着，我们需要选择上传资源服务器的类型，也就是OSS<ul><li>这里的代码是为了后续如果要修改资源服务器类型，可以进行代码的再开发–添加其他资源服务器类型。</li><li>与检查git_token或者git_server等一样，本节需要去新建或者检查.git_publish文件，代码实现如下</li></ul></li><li>最后，cloudscope-cli publish这个命令添加了 --prod这个参数,以及.git_publish文件内容，传入到 Cloudbuild类中去</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// models/git/lib/index.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">GIT_PUBLISH_FILE</span>=<span class="string">&#x27;.git_publish&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">GIT_PUBLISH_TYPE</span>=[&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;OSS&#x27;</span>,</span><br><span class="line">    <span class="attr">value</span>:<span class="string">&#x27;oss&#x27;</span></span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line"> <span class="keyword">async</span> <span class="title function_">preparePublish</span>(<span class="params"></span>)&#123;</span><br><span class="line">   log.<span class="title function_">info</span>(<span class="string">&#x27;开始进行云构建前代码检查&#x27;</span>)</span><br><span class="line">   ………………</span><br><span class="line">   log.<span class="title function_">success</span>(<span class="string">&#x27;云构建代码预检查通过&#x27;</span>)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">const</span> gitPublishPath = <span class="variable language_">this</span>.<span class="title function_">createPath</span>(<span class="variable constant_">GIT_PUBLISH_FILE</span>)</span><br><span class="line">   <span class="keyword">let</span> gitPublish = <span class="title function_">readFile</span>(gitPublishPath)</span><br><span class="line">   <span class="keyword">if</span>(!gitPublish)&#123; <span class="comment">// 如果没有读取到.git-publish文件中的内容</span></span><br><span class="line">     gitPublish = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">choicePublish</span>(gitPublishPath)</span><br><span class="line">     log.<span class="title function_">success</span>(<span class="string">&#x27;git publish 写入成功&#x27;</span>,<span class="string">`<span class="subst">$&#123;gitPublish&#125;</span> -&gt; <span class="subst">$&#123;gitPublishPath&#125;</span>`</span>)</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123; <span class="comment">// 如果读取到了 内容</span></span><br><span class="line">     log.<span class="title function_">success</span>(<span class="string">&#x27;git publish 文件读取成功！&#x27;</span>)</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="variable language_">this</span>.<span class="property">gitPublish</span> = gitPublish</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">choicePublish</span>(<span class="params">gitPublishPath</span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> gitPublish = (<span class="keyword">await</span> inquirer.<span class="title function_">prompt</span>(&#123;</span><br><span class="line">    <span class="attr">type</span>:<span class="string">&#x27;list&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;gitPublish&#x27;</span>,</span><br><span class="line">    <span class="attr">message</span>:<span class="string">&#x27;请选择你想要上传代码的平台&#x27;</span>,</span><br><span class="line">    <span class="attr">choices</span>:<span class="variable constant_">GIT_PUBLISH_TYPE</span></span><br><span class="line">  &#125;)).<span class="property">gitPublish</span>;</span><br><span class="line">  <span class="title function_">writeFile</span>(gitPublishPath,gitPublish)</span><br><span class="line">  <span class="keyword">return</span> gitPublish</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>关于 --prod参数的传入，与–refreshToken等一样，这里就不做演示了。</p></blockquote><p><strong>3-3 云发布服务端预检查逻辑实现</strong></p><blockquote><p>本节是服务端相关的代码实现，同样代码为分支 <a href="https://github.com/liugezhou/cloudscope-cli-server/tree/lesson31"> lesson31</a><br>主要是拿到云构建结果的dist或者build目录</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/io/controller/build.js</span></span><br><span class="line"> <span class="keyword">await</span> <span class="title function_">prePublish</span>(cloudBuildTask,socket,helper)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">prePublish</span>(<span class="params">cloudBuildTask,socket,helper</span>)&#123;</span><br><span class="line">  socket.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;pre-publish&#x27;</span>,&#123;</span><br><span class="line">    <span class="attr">message</span>:<span class="string">&#x27;开始发布前检查&#x27;</span></span><br><span class="line">  &#125;))</span><br><span class="line">  <span class="keyword">const</span> prePublishRes = <span class="keyword">await</span> cloudBuildTask.<span class="title function_">prePublish</span>()</span><br><span class="line">  <span class="keyword">if</span>(!prePublishRes || <span class="title class_">Object</span>.<span class="title function_">is</span>(prePublishRes.<span class="property">code</span>,<span class="variable constant_">FAILED</span>))&#123; </span><br><span class="line">    socket.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;pre-publish failed&#x27;</span>,&#123;</span><br><span class="line">      <span class="attr">message</span>:<span class="string">&#x27;发布前检查失败,失败原因：&#x27;</span> + (prePublishRes &amp;&amp; prePublishRes.<span class="property">message</span> ? prePublishRes.<span class="property">message</span>:<span class="string">&#x27;未知&#x27;</span>)</span><br><span class="line">    &#125;))</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;发布终止&#x27;</span>)</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    socket.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;pre-publish&#x27;</span>,&#123;</span><br><span class="line">      <span class="attr">message</span>:<span class="string">&#x27;发布前检查通过&#x27;</span></span><br><span class="line">    &#125;))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//app/models/cloudBuildTask.js</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">prePublish</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">//获取构建结果</span></span><br><span class="line">  <span class="keyword">const</span> buildPath = <span class="variable language_">this</span>.<span class="title function_">findBuildPath</span>()</span><br><span class="line">  <span class="comment">//检查构建结果</span></span><br><span class="line">  <span class="keyword">if</span>(!buildPath)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">failed</span>(<span class="string">&#x27;未找到构建结果，请检查&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">_buildPath</span> = buildPath</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">success</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">findBuildPath</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> buildDir =[<span class="string">&#x27;build&#x27;</span>,<span class="string">&#x27;dist&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> buildPath = buildDir.<span class="title function_">find</span>(<span class="function"><span class="params">dir</span>=&gt;</span>fs.<span class="title function_">existsSync</span>(path.<span class="title function_">resolve</span>(<span class="variable language_">this</span>.<span class="property">_sourceCodeDir</span>,dir)))</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">_ctx</span>.<span class="property">logger</span>.<span class="title function_">info</span>(<span class="string">&#x27;buildPath&#x27;</span>,buildPath)</span><br><span class="line">  <span class="keyword">if</span>(buildPath)&#123;</span><br><span class="line">    <span class="keyword">return</span> path.<span class="title function_">resolve</span>(<span class="variable language_">this</span>.<span class="property">_sourceCodeDir</span>,buildPath)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3-4 创建OSS bucket+OSS实例化开发(服务端)</strong></p><blockquote><ul><li>cnpm install -S ali-oss</li><li>客户端传递prod参数到服务端，服务端根据prod参数，获取不同环境的OSS</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/models/CloudBuildTask.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">OSS</span> = <span class="built_in">require</span>(<span class="string">&#x27;./OSS&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> config = <span class="built_in">require</span>(<span class="string">&#x27;../../config/db&#x27;</span>)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CloudBuildTask</span>(options,ctx)&#123;</span><br><span class="line"><span class="title function_">constructor</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_prod</span> = options.<span class="property">prod</span> === <span class="string">&#x27;true&#x27;</span> ? <span class="literal">true</span> : <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">prepare</span>(<span class="params"></span>)&#123;</span><br><span class="line">  fse.<span class="title function_">ensureDirSync</span>(<span class="variable language_">this</span>.<span class="property">_dir</span>)</span><br><span class="line">  fse.<span class="title function_">emptyDirSync</span>(<span class="variable language_">this</span>.<span class="property">_dir</span>)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">_git</span> = <span class="keyword">new</span> <span class="title class_">Git</span>(<span class="variable language_">this</span>.<span class="property">_dir</span>)</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">_prod</span>)&#123; <span class="comment">//生产准备OSS</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">oss</span> =<span class="keyword">new</span> <span class="title function_">OSS</span>(config.<span class="property">OSS_PROD_BUCKET</span>)</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;<span class="comment">//测试</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">oss</span> =<span class="keyword">new</span> <span class="title function_">OSS</span>(config.<span class="property">OSS_DEV_BUCKET</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">oss</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">success</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// app/models/OSS.js</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">OSS</span> = <span class="built_in">require</span>(<span class="string">&#x27;ali-oss&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> config = <span class="built_in">require</span>(<span class="string">&#x27;../../config/db&#x27;</span>)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OSS</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">bucket</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">oss</span> = <span class="keyword">new</span> <span class="title function_">OSS</span>(&#123;</span><br><span class="line">            <span class="attr">region</span>:config.<span class="property">OSS_REGION</span>,</span><br><span class="line">            <span class="attr">accessKeyId</span>: config.<span class="property">OSS_ACCESS_KEY</span>,</span><br><span class="line">            <span class="attr">accessKeySecret</span>: config.<span class="property">OSS_ACCESS_SECRET_KEY</span>,</span><br><span class="line">            bucket,</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="variable constant_">OSS</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//app/config/db.js</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> userHome = <span class="built_in">require</span>(<span class="string">&#x27;user-home&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">OSS_ACCESS_KEY</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">OSS_ACCESS_SECRET_KEY</span> = fs.<span class="title function_">readFileSync</span>(path.<span class="title function_">resolve</span>(userHome,<span class="string">&#x27;.cloudscope-cli&#x27;</span>,<span class="string">&#x27;oss_access_secret_key&#x27;</span>)).<span class="title function_">toString</span>()</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">OSS_PROD_BUCKET</span>=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">OSS_DEV_BUCKET</span>=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">OSS_REGION</span>=<span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p>以上关于OSS Key等的配置，可去阿里云免费试用一个月OSS对象存储功能，填入相应的值。</p></blockquote><p><strong>3-5 云发布核心流程：上传OSS功能开发</strong><br>代码逻辑如下</p><blockquote><ul><li>npm i -S glob</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/io/controller/build.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> <span class="title function_">publish</span>(cloudBuildTask,socket,helper)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">publish</span>(<span class="params">cloudBuildTask,socket,helper</span>)&#123;</span><br><span class="line">  socket.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;publish&#x27;</span>,&#123;</span><br><span class="line">    <span class="attr">message</span>:<span class="string">&#x27;开始发布&#x27;</span></span><br><span class="line">  &#125;))</span><br><span class="line">  <span class="keyword">const</span> publishRes = <span class="keyword">await</span> cloudBuildTask.<span class="title function_">publish</span>()</span><br><span class="line">  <span class="keyword">if</span>(!publishRes || <span class="title class_">Object</span>.<span class="title function_">is</span>(publishRes.<span class="property">code</span>,<span class="variable constant_">FAILED</span>))&#123; <span class="comment">//  downlod下载失败</span></span><br><span class="line">    socket.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;publish failed&#x27;</span>,&#123;</span><br><span class="line">      <span class="attr">message</span>:<span class="string">&#x27;发布失败&#x27;</span></span><br><span class="line">    &#125;))</span><br><span class="line">    <span class="keyword">return</span> </span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    socket.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;publish&#x27;</span>,&#123;</span><br><span class="line">      <span class="attr">message</span>:<span class="string">&#x27;发布成功&#x27;</span></span><br><span class="line">    &#125;))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// app/models/CloudBuildTask.js</span></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">publish</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>) =&gt;</span>&#123;</span><br><span class="line">      <span class="title function_">glob</span>(<span class="string">&#x27;**&#x27;</span>,&#123;</span><br><span class="line">        <span class="attr">cwd</span>:<span class="variable language_">this</span>.<span class="property">_buildPath</span>,</span><br><span class="line">        <span class="attr">nodir</span>:<span class="literal">true</span>,</span><br><span class="line">        <span class="attr">ignore</span>:<span class="string">&#x27;**/node_modules/**&#x27;</span></span><br><span class="line">      &#125;,<span class="function">(<span class="params">err,files</span>) =&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">          <span class="title function_">resolve</span>(<span class="literal">false</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="title class_">Promise</span>.<span class="title function_">all</span>(files.<span class="title function_">map</span>(<span class="keyword">async</span> file=&gt;&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(file)</span><br><span class="line">            <span class="keyword">const</span> filePath = path.<span class="title function_">resolve</span>(<span class="variable language_">this</span>.<span class="property">_buildPath</span>,file)</span><br><span class="line">            <span class="keyword">const</span> uploadOSSRes = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">oss</span>.<span class="title function_">put</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>._name&#125;</span>/<span class="subst">$&#123;file&#125;</span>`</span>,filePath) </span><br><span class="line">            <span class="keyword">return</span> uploadOSSRes</span><br><span class="line">          &#125;)).<span class="title function_">then</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="title function_">resolve</span>(<span class="literal">true</span>)</span><br><span class="line">          &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_ctx</span>.<span class="property">logger</span>.<span class="title function_">error</span>(err)</span><br><span class="line">            <span class="title function_">resolve</span>(<span class="literal">false</span>)</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// app/models/OSS.js</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">async</span> <span class="title function_">put</span>(<span class="params">object, localPath, options = &#123;&#125;</span>) &#123;</span><br><span class="line">   <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">oss</span>.<span class="title function_">put</span>(object, localPath, options);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><blockquote><p>最后经过测试，在阿里云控制台看到相关的OSS文件已上传。</p></blockquote><p><strong>3-6 OSS域名绑定 + CDN绑定</strong></p><ul><li>域名绑定</li><li>CDN绑定</li></ul><h2 id="第四章-云发布流程完善">第四章 云发布流程完善</h2><p><strong>4-1 获取OSS API开发</strong><br><strong>服务端</strong></p><blockquote><ul><li><strong>router.js中添加路由 router.get(‘/project/oss’, controller.project.getOSSProject);</strong></li></ul></blockquote><p>本节主要是获取OSS上传的文件，使用oss的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/controller/project.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; failed &#125; = <span class="built_in">require</span>(<span class="string">&quot;../utils/request&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">OSS</span> = <span class="built_in">require</span>(<span class="string">&#x27;../models/OSS&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> config = <span class="built_in">require</span>(<span class="string">&#x27;../../config/db&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">getOSSProject</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; ctx &#125; = <span class="variable language_">this</span></span><br><span class="line"><span class="keyword">const</span> ossProjectType = ctx.<span class="property">query</span>.<span class="property">type</span></span><br><span class="line">  <span class="keyword">const</span> ossProjectName = ctx.<span class="property">query</span>.<span class="property">name</span></span><br><span class="line">  <span class="keyword">if</span>(!ossProjectName)&#123;</span><br><span class="line">    ctx.<span class="property">body</span> = <span class="title function_">failed</span>(<span class="string">&#x27;项目名称不存在)</span></span><br><span class="line"><span class="string">    return</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  if(!ossProjectType)&#123;</span></span><br><span class="line"><span class="string">  ossProjectType = &#x27;</span>prod<span class="string">&#x27;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  let oss;</span></span><br><span class="line"><span class="string">  if(Object.is(ossProjectType,&#x27;</span>prod<span class="string">&#x27;))&#123;</span></span><br><span class="line"><span class="string">  oss = new OSS(config.OSS_DEV_BUCKET)</span></span><br><span class="line"><span class="string">  &#125;else&#123;</span></span><br><span class="line"><span class="string">    oss = new OSS(config.OSS_PROD_BUCKET)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">  const ossList = await oss.list(ossProjectName)</span></span><br><span class="line"><span class="string">  ctx.body = ossList</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  //app/utils/request.js</span></span><br><span class="line"><span class="string">  &#x27;</span>use strict<span class="string">&#x27;</span></span><br><span class="line"><span class="string">  function success(message,data)&#123;</span></span><br><span class="line"><span class="string">  return &#123;</span></span><br><span class="line"><span class="string">    code:0,</span></span><br><span class="line"><span class="string">      message,</span></span><br><span class="line"><span class="string">      data</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  function failed(message,data)&#123;</span></span><br><span class="line"><span class="string">  return &#123;</span></span><br><span class="line"><span class="string">    code:-1,</span></span><br><span class="line"><span class="string">      message,</span></span><br><span class="line"><span class="string">      data</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  module.exports = &#123;</span></span><br><span class="line"><span class="string">  success,</span></span><br><span class="line"><span class="string">    failed</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//app/models/OSS.js</span></span><br><span class="line"><span class="string">async list(&#123;prefix&#125;)&#123;</span></span><br><span class="line"><span class="string">const ossFileList = await this.oss.list(&#123;prefix&#125;)</span></span><br><span class="line"><span class="string">  if(ossFileList &amp;&amp; ossFileList.objects)&#123;</span></span><br><span class="line"><span class="string">  return ossFileList.objects</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  return []</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>4-2 覆盖发布逻辑开发</strong></p><blockquote><p>服务端提供了获取OSS文件列表的接口，接着要在客户端去请求OSS上是否有文件，且是否发布。<br>代码如下：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// models/cloudbuild/index.js</span></span><br><span class="line"><span class="keyword">const</span> getProjectOSS = <span class="built_in">require</span>(<span class="string">&#x27;./getProjectOSS&#x27;</span>)</span><br><span class="line"><span class="keyword">async</span> <span class="title function_">prepare</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">// 判断是否处于正式发布</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">prod</span>)&#123;</span><br><span class="line">    <span class="comment">// 1.获取OSS文件 </span></span><br><span class="line">    <span class="keyword">const</span> name = <span class="variable language_">this</span>.<span class="property">git</span>.<span class="property">name</span></span><br><span class="line">    <span class="keyword">const</span> type = <span class="variable language_">this</span>.<span class="property">prod</span> ? <span class="string">&#x27;prod&#x27;</span>:<span class="string">&#x27;dev&#x27;</span></span><br><span class="line">    <span class="keyword">const</span> ossProject = <span class="keyword">await</span> <span class="title function_">getProjectOSS</span>(&#123;name,type&#125;)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(ossProject)</span><br><span class="line">    <span class="comment">//2.判断当前项目OSS文件是否存在</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title class_">Object</span>.<span class="title function_">is</span>(ossProject.<span class="property">code</span>,<span class="number">0</span>) &amp;&amp; ossProject.<span class="property">data</span>.<span class="property">length</span>&gt;<span class="number">0</span>)&#123;</span><br><span class="line">      <span class="comment">// 3.询问客户是否进行覆盖安装</span></span><br><span class="line">      <span class="keyword">const</span> cover = (<span class="keyword">await</span> inquirer.<span class="title function_">prompt</span>(&#123;</span><br><span class="line">        <span class="attr">type</span>:<span class="string">&#x27;list&#x27;</span>,</span><br><span class="line">        <span class="attr">defaultValue</span>:<span class="literal">true</span>,</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;cover&#x27;</span>,</span><br><span class="line">        <span class="attr">message</span>:<span class="string">`OSS已存在[<span class="subst">$&#123;name&#125;</span>]项目，是否强行覆盖发布？`</span>,</span><br><span class="line">        <span class="attr">choices</span>:[&#123;</span><br><span class="line">          <span class="attr">name</span>:<span class="string">&#x27;覆盖发布&#x27;</span>,</span><br><span class="line">          <span class="attr">value</span>:<span class="literal">true</span></span><br><span class="line">        &#125;,&#123;</span><br><span class="line">          <span class="attr">name</span>:<span class="string">&#x27;放弃发布&#x27;</span>,</span><br><span class="line">          <span class="attr">value</span>:<span class="literal">false</span></span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;)).<span class="property">cover</span></span><br><span class="line">      <span class="keyword">if</span>(!cover)&#123; <span class="comment">//放弃发布</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;发布终止&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// models/cloudbuild/cloudbuild.js</span></span><br><span class="line"><span class="keyword">const</span> request = <span class="built_in">require</span>(<span class="string">&#x27;@cloudscope-cli/request&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;/project/oss&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>:<span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>:data</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4-3 服务端缓存文件清除功能实现</strong><br>本节主要是对redis以及缓存文件进行清除,并在build结束后，断开链接</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/io/middleware/auth.js</span></span><br><span class="line"><span class="comment">//清除缓存文件</span></span><br><span class="line"><span class="keyword">const</span> cloudBuildTask = <span class="keyword">await</span> <span class="title function_">createCloudBuildTask</span>(ctx,app)</span><br><span class="line"><span class="keyword">await</span> cloudBuildTask.<span class="title function_">clean</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// app/models/CloudBuildTask </span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">clean</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">if</span> (fs.<span class="title function_">existsSync</span>(<span class="variable language_">this</span>.<span class="property">_dir</span>)) &#123;</span><br><span class="line">    fse.<span class="title function_">removeSync</span>(<span class="variable language_">this</span>.<span class="property">_dir</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> &#123; socket &#125; = <span class="variable language_">this</span>.<span class="property">_ctx</span>;</span><br><span class="line">  <span class="keyword">const</span> client = socket.<span class="property">id</span>;</span><br><span class="line">  <span class="keyword">const</span> redisKey = <span class="string">`<span class="subst">$&#123;REDIS_PREFIX&#125;</span>:<span class="subst">$&#123;client&#125;</span>`</span>;</span><br><span class="line">  <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">_app</span>.<span class="property">redis</span>.<span class="title function_">del</span>(redisKey);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// app/io/controller/build.js</span></span><br><span class="line"> socket.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;build success&#x27;</span>,&#123;</span><br><span class="line">   <span class="attr">message</span>:<span class="string">`云构建成功，访问链接：https://<span class="subst">$&#123;cloudBuildTask._prod ? <span class="string">&#x27;cloudscope-cli&#x27;</span> : <span class="string">&#x27;cloudscope-cli-dev&#x27;</span>&#125;</span>.liugezhou.online/<span class="subst">$&#123;cloudBuildTask._name&#125;</span>/index.html`</span></span><br><span class="line"> &#125;))</span><br><span class="line">socket.<span class="title function_">disconnect</span>()</span><br></pre></td></tr></table></figure><p><strong>4-4 自动提交代码 BUG 修复</strong></p><blockquote><p>本地未出错</p></blockquote><p><strong>4-5 history模式发布原理讲解</strong></p><blockquote><p>使用 createWebHistory发布代码时，在OSS服务器，改变url地址，再刷新的话，会显示404，在nginx中有try_files的配置，而我们这里没有，因此除了将createWebhistory改为createWebHashHistory模式外，本节课讲述history模式发布解决这个问题—通过<strong>本地</strong>方式演示。</p><ul><li>首先，history模式，需要在nginx上做配置</li><li>然后，分两个步骤实现<ul><li>index.html放到nginx服务器指定位置,配置好这个nginx</li><li>css/js等文件上传到OSS服务器上</li></ul></li></ul></blockquote><ol><li><strong>vue.config.js中配置OSS路径publicPath</strong></li></ol><blockquote><p>module.exports= {<br>publicPath:‘<a href="https://xxxx.online/vue-router-demo/">https://xxxx.online/vue-router-demo/</a>’<br>}</p></blockquote><ol start="2"><li><strong>本地打包文件dist下目录手动上传至oss服务器   ：vue-router-demo目录下。</strong></li><li><strong>将本地dist/index.html下文件复制到Desktop/vue-router/index.html中。</strong></li><li><strong>配置您选配置文件</strong></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen  <span class="number">8081</span>;</span><br><span class="line">  server_name resource;</span><br><span class="line">  root /<span class="title class_">Users</span>/liumingzhou/<span class="title class_">Desktop</span>/ ;</span><br><span class="line">  autoindex on;</span><br><span class="line">  location / &#123;</span><br><span class="line">    add_header  <span class="title class_">Access</span>-<span class="title class_">Control</span>-<span class="title class_">Allow</span>-<span class="title class_">Origin</span> *;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  location /vue-router-demo &#123;</span><br><span class="line">    try_files  $uri  $uri/  <span class="regexp">/vue-router-demo/i</span>ndex.<span class="property">html</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  add_header   <span class="title class_">Cache</span>-<span class="title class_">Control</span> <span class="string">&quot;no-cache, must-revalidate&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li><strong>这个时候启动本地nginx服务器，访问8081端口，再刷新页面，histpry路由模式就不会报404了</strong></li></ol><p><strong>4-6 history模式远程发布原理讲解</strong></p><blockquote><ul><li>登录ESC服务器</li><li>配置nginx</li><li>本地文件上传到服务器<ul><li>scp -r /User/liugezhou/Desktop/vue-router-demo/index.html  root@liugezhou:upload/test</li></ul></li></ul></blockquote><p><strong>4-7 脚手架自动上传模板逻辑开发</strong><br><strong>4-8 获取 OSS 文件 API 开发</strong><br><strong>4-9 上传模板功能实现</strong></p><blockquote><p>通过三个新的参数：sshUser 、sshIp、sshPath继续下一步，具体代码就不贴了，这几章就只是流程的问题了。</p></blockquote><p><strong>4-10 自动打tag+合并代码至master分支流程开发</strong></p><blockquote><p><strong>本节课直接看着仓库代码，具体的流程还需要后续深度学习。</strong></p></blockquote><h2 id="第五章-本周加餐：node常用三方库介绍">第五章 本周加餐：node常用三方库介绍</h2><p><strong>5-1 Node高分库：PDF文件生成工具——PDFKit</strong></p><blockquote><p><a href="https://github.com/sindresorhus/awesome-nodejs">awesome-nodejs</a></p></blockquote><p>本节sam老师，主要是讲解了这个<a href="https://github.com/foliojs/pdfkit">pdfkit</a>库。</p><ul><li>创建一个nodejs项目:npm init -y</li><li>npm install -S pdfkit</li><li>新建kit/index.js,官方仓库代码copy如下：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">PDFDocument</span> = <span class="built_in">require</span>(<span class="string">&#x27;pdfkit&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create a document</span></span><br><span class="line"><span class="keyword">const</span> doc = <span class="keyword">new</span> <span class="title class_">PDFDocument</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Pipe its output somewhere, like to a file or HTTP response</span></span><br><span class="line"><span class="comment">// See below for browser usage</span></span><br><span class="line">doc.<span class="title function_">pipe</span>(fs.<span class="title function_">createWriteStream</span>(<span class="string">&#x27;output.pdf&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// Embed a font, set the font size, and render some text</span></span><br><span class="line">doc</span><br><span class="line">  .<span class="title function_">font</span>(<span class="string">&#x27;fonts/PalatinoBold.ttf&#x27;</span>)</span><br><span class="line">  .<span class="title function_">fontSize</span>(<span class="number">25</span>)</span><br><span class="line">  .<span class="title function_">text</span>(<span class="string">&#x27;Some text with an embedded font!&#x27;</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Add an image, constrain it to a given size, and center it vertically and horizontally</span></span><br><span class="line">doc.<span class="title function_">image</span>(<span class="string">&#x27;path/to/image.png&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">fit</span>: [<span class="number">250</span>, <span class="number">300</span>],</span><br><span class="line">  <span class="attr">align</span>: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">  <span class="attr">valign</span>: <span class="string">&#x27;center&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Add another page</span></span><br><span class="line">doc</span><br><span class="line">  .<span class="title function_">addPage</span>()</span><br><span class="line">  .<span class="title function_">fontSize</span>(<span class="number">25</span>)</span><br><span class="line">  .<span class="title function_">text</span>(<span class="string">&#x27;Here is some vector graphics...&#x27;</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Draw a triangle</span></span><br><span class="line">doc</span><br><span class="line">  .<span class="title function_">save</span>()</span><br><span class="line">  .<span class="title function_">moveTo</span>(<span class="number">100</span>, <span class="number">150</span>)</span><br><span class="line">  .<span class="title function_">lineTo</span>(<span class="number">100</span>, <span class="number">250</span>)</span><br><span class="line">  .<span class="title function_">lineTo</span>(<span class="number">200</span>, <span class="number">250</span>)</span><br><span class="line">  .<span class="title function_">fill</span>(<span class="string">&#x27;#FF3300&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Apply some transforms and render an SVG path with the &#x27;even-odd&#x27; fill rule</span></span><br><span class="line">doc</span><br><span class="line">  .<span class="title function_">scale</span>(<span class="number">0.6</span>)</span><br><span class="line">  .<span class="title function_">translate</span>(<span class="number">470</span>, -<span class="number">380</span>)</span><br><span class="line">  .<span class="title function_">path</span>(<span class="string">&#x27;M 250,75 L 323,301 131,161 369,161 177,301 z&#x27;</span>)</span><br><span class="line">  .<span class="title function_">fill</span>(<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;even-odd&#x27;</span>)</span><br><span class="line">  .<span class="title function_">restore</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Add some text with annotations</span></span><br><span class="line">doc</span><br><span class="line">  .<span class="title function_">addPage</span>()</span><br><span class="line">  .<span class="title function_">fillColor</span>(<span class="string">&#x27;blue&#x27;</span>)</span><br><span class="line">  .<span class="title function_">text</span>(<span class="string">&#x27;Here is a link!&#x27;</span>, <span class="number">100</span>, <span class="number">100</span>)</span><br><span class="line">  .<span class="title function_">underline</span>(<span class="number">100</span>, <span class="number">100</span>, <span class="number">160</span>, <span class="number">27</span>, &#123; <span class="attr">color</span>: <span class="string">&#x27;#0000FF&#x27;</span> &#125;)</span><br><span class="line">  .<span class="title function_">link</span>(<span class="number">100</span>, <span class="number">100</span>, <span class="number">160</span>, <span class="number">27</span>, <span class="string">&#x27;http://google.com/&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Finalize PDF file</span></span><br><span class="line">doc.<span class="title function_">end</span>();</span><br></pre></td></tr></table></figure><p><strong>5-2 Node Excel处理库讲解</strong><br><a href="https://github.com/dtjohnson/xlsx-populate">https://github.com/dtjohnson/xlsx-populate</a></p><p><strong>5-3 命令行交互库Listr讲解</strong></p><ul><li><a href="https://github.com/sindresorhus/np">np</a>：Better npm publish</li><li>np核心库：<a href="https://www.npmjs.com/package/listr">listr</a></li></ul><p><strong>5-4 利用Listr对项目自动创建Tag逻辑进行优化</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Listr</span> = <span class="built_in">require</span>(<span class="string">&#x27;listr&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">Observable</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;rxjs&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> tasks = <span class="keyword">new</span> <span class="title class_">Listr</span>([</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">title</span>:<span class="string">&#x27;Task1&#x27;</span>,</span><br><span class="line">        <span class="attr">task</span>:<span class="function">()=&gt;</span><span class="keyword">new</span> <span class="title class_">Listr</span>([&#123;</span><br><span class="line">            <span class="attr">title</span>:<span class="string">&#x27;Task1-1&#x27;</span>,</span><br><span class="line">            <span class="attr">task</span>:<span class="function">()=&gt;</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Observable</span>(<span class="function"><span class="params">o</span>=&gt;</span>&#123;</span><br><span class="line">                    o.<span class="title function_">next</span>(<span class="string">&#x27;Task-1-1&#x27;</span>)</span><br><span class="line">                    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                        o.<span class="title function_">next</span>(<span class="string">&#x27;Task-1-1-1&#x27;</span>)</span><br><span class="line">                        o.<span class="title function_">complete</span>()</span><br><span class="line">                    &#125;, <span class="number">1000</span>);</span><br><span class="line">                    </span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;])</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">title</span>:<span class="string">&#x27;Task2&#x27;</span>,</span><br><span class="line">        <span class="attr">task</span>:<span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;error&#x27;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">])</span><br><span class="line">tasks.<span class="title function_">run</span>()</span><br><span class="line">process.<span class="title function_">on</span>(<span class="string">&#x27;unhandledRejection&#x27;</span>,<span class="function">(<span class="params">e</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">message</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web架构之脚手架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web架构之脚手架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git进阶</title>
      <link href="/018-git%20%E7%9B%B8%E5%85%B3/"/>
      <url>/018-git%20%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<h3 id="一、tag相关">一、tag相关</h3><p><strong>1-1.显示所有的tag</strong></p><ul><li><code>git tag</code></li></ul><p><strong>1-2. 查看某个版本系统的tag(过滤查看)</strong></p><ul><li><code>git tag -l 'v1.0.*'</code></li></ul><p><strong>1-3. 创建标签</strong></p><ul><li><code>git tag -a v1.0.0 -m '内容'</code></li><li><code>git tag v1.0.0</code></li></ul><p><strong>1-4.查看标签的详情</strong></p><ul><li><code>git show v1.0.0</code></li></ul><p><strong>1-5.推送标签</strong></p><ul><li>推送单个分支tag：<code>git push origin v1.0.0</code></li><li>推送本地所有tag：<code>git push origin --tags</code></li></ul><p><strong>1-6.删除标签</strong><br>删除本地标签</p><ul><li><code>git tag -d v1.0.0</code></li></ul><p>删除远程标签</p><ul><li><code>git push origin :refs/tags/v1.0.0</code></li></ul><p><strong>1-7.完整的打tag</strong></p><ul><li><code>git add *</code></li><li><code>git commit -m 'v1.0.0'</code></li><li><code>git tag v1.0.0</code></li><li><code>git push</code></li><li><code>git push origin v1.0.0</code></li></ul><p><strong>1-8.给指定的commit号加tag</strong><br>打tag不必要在head上打，也可以在之前的版本上打tag，需要知道某个提交对象的校验和(通过git log获取，取校验和的前几位数字即可)</p><ul><li><code>git tag -a v1.0.3 9fedrf -m 'my tag'</code></li></ul><h3 id="二、stash">二、stash</h3><p><code>git stash的内容与branch无关</code></p><p><strong>2-1 <code>git stash</code></strong><br>保存当前工作进度，会把暂存区和工作区的改动保存起来，执行完这个命令后，执行git status会发现当前是一个干净的工作区，没有任何改动.</p><p>可以使用 <code>git stash save 'message'</code> 添加一些注释<br>PS：stash是本地的，不会通过git push 命令上传到git server上。</p><p><strong>2-2 <code>git stash list</code></strong></p><p>显示保存进度的列表，也就是说 git stash可以多次执行。</p><p><strong>2-3 <code>git stash pop</code></strong></p><ul><li>恢复之前缓存的工作目录，且将缓存堆栈中的第一个stash删除</li><li><code>git stash apply</code> 会将缓存区的第一个stash应用到工作目录，而不会删除相应的stash存储。</li></ul><p><strong>2-4 <code>git stash drop [stash-id]</code></strong></p><p>删除一个存储的进度。如果不指定stash_id,则默认删除最新的存储进度。</p><p><strong>2-5 <code>git stash clear</code></strong></p><p>删除所有存储的进度</p><p><strong>2-6 查看制定的 <code>stash diff</code></strong></p><p>可以使用 git stash show stash@{0}查看stash的文件目录</p><p><strong>2-7 暂存未跟踪或忽略的文件</strong></p><p>git stash 默认不会缓存在工作目录中的新文件、被忽略的文件。<br>git stash 命令提供了参数用户缓存上面两种类型的文件，使用 <code>-u</code> 可以 stash  untracked 的文件。使用 <code>-a</code> 可以 stash 所有的文件。</p><h3 id="三、reset">三、reset</h3><p><strong>soft</strong></p><p>有时候，我们在本地 git add &amp;&amp; git commit -m ‘’ 之后，我们想要撤回commit.<br>这个时候可以使用如下命令成功撤回了commit ，且本地文件会保留不会删除</p><p><code>git reset --soft HEAD^ </code></p><p><strong>hard</strong></p><p>如果代码已经push到仓库，但是本地想要去回退到某个版本</p><blockquote><p><code>git reset --hard HEAD^</code>  — 回退到上一个版本<br><code>git reset --hard &lt;commitID&gt;</code> – 回退到制定commit版本</p></blockquote><p>如果代码在本地修改了一部分，想要全部舍弃，回退到远程仓库的状态<br><code>git reset --hard origin/main</code></p><h3 id="四、git-log">四、git log</h3><ol><li><p><code>git shortlog -sn</code><br>数据从大到小，查看一个项目的提交者和提交次数。</p></li><li><p><code>git log --stat</code><br>与 git log 相比，除了 author、Date、提交信息外，还可以看到提交的文件、文件行数。</p></li><li><p><code>git diff --shortstat &quot;@&#123;n days ago&#125;&quot;</code><br>统计 n 天前至现在文件改动数、代码行数添加数、代码行数删减数</p></li><li><p><code>git log --since=2022-01-01 --until=2022-12-31 --pretty=tformat: --numstat | awk '&#123; add += $1; subs += $2; loc += $1 - $2 &#125; END &#123; printf &quot;added lines: %s, removed lines: %s, total lines: %s\n&quot;, add, subs, loc &#125;'</code><br>统计一段时间内，添加和删除的代码行数</p></li></ol><h3 id="五、其它">五、其它</h3><ol><li><p><code>git update-ref -d HEAD</code><br>重设第一个commit</p></li><li><p><code>git pull --rebase A master:dev</code><br>fork了一个仓库(fork),本地仓库(origin),想要拉取 fork 仓库的最新提交：<br>git remote add fork ‘fork url’<br>然后执行上面命令，就可以拉取最新 master 分支的提交到本地分支 dev</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS-伪类和伪元素</title>
      <link href="/017-CSS-%E4%BC%AA%E7%B1%BB%E5%92%8C%E4%BC%AA%E5%85%83%E7%B4%A0/"/>
      <url>/017-CSS-%E4%BC%AA%E7%B1%BB%E5%92%8C%E4%BC%AA%E5%85%83%E7%B4%A0/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="背景">背景</h2><blockquote><p>写了这么多年代码，对CSS中的伪类和伪元素竟然没有细致的进行过学习总结，由此可见在实际代码开发中，用的也确实不多，也就用过一些:first-child,:hover之类的吧，其它的连before什么的都没用过，于是迫切需要大于伪元素与伪类进行一个系统整体的学习。</p></blockquote><h2 id="伪类和伪元素">伪类和伪元素</h2><blockquote><ul><li><strong>伪类：<strong>是以一个冒号作为前缀，被添加到选择器的末尾，当你希望在</strong>特定状态</strong>下(:hover)才被呈现到指定元素时，可以往元素的选择器后面加上伪类。</li><li><strong>伪元素</strong>：用于创建一些<strong>不在文档树中的元素</strong>，并为其添加样式。比如::before是指得元素前添加文本，且为文本添加样式，虽然用户可以看到这些文本，但文本实际不在DOM结构中。</li></ul></blockquote><h2 id="常用的伪类和伪元素">常用的伪类和伪元素</h2><blockquote><p>伪类可以从状态类伪类、结构类伪类、其它伪类和表单相关伪类进行分类。</p><ul><li>状态类伪类：** :hover、:link、:active、:visited、:focus**</li><li>结构类伪类：** :first-child、:last-child、:nth-child(n)**</li><li>其它伪类：   :fullscreen全屏显示、:lang()匹配指定语言</li><li>表单相关伪类：  :checked选中、:disabled禁用、:required必填、:read-only只读</li></ul></blockquote><blockquote><p>伪元素：<strong>::before、::after、::first-letter、::first-line、::selection、::placeholder</strong></p></blockquote><h2 id="伪元素-berfore与-after的用法">伪元素::berfore与::after的用法</h2><blockquote><p>在被选中元素的之前和之后插入内容，其中content属性指定要加入的内容，content必须有值(空值也可以)，其默认伪inline，可以通过display:block改变.<br>content属性：<strong>空值、字符串、url、attr、counter。</strong></p><ul><li>空值可以清除浮动</li></ul></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearFix</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">clear</span>:both,</span><br><span class="line">    display:block;</span><br><span class="line">  <span class="attribute">content</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    height:<span class="number">0</span>;</span><br><span class="line">  <span class="attribute">overflow</span>:hidden</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>字符串可以直接添加内容，不赘述。</li><li>url：引用媒体文件(比如图片)</li><li>attr:可以调用当前元素内的某个属性(比如a标签的href属性)</li><li>counter计数器：可以不使用列表元素实现序号功能。</li></ul></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">h1</span>&gt;Good Coder&lt;/<span class="selector-tag">h1</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">h2</span>&gt;Liu&lt;/<span class="selector-tag">h2</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">h2</span>&gt;Zhou&lt;/<span class="selector-tag">h2</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">h1</span>&gt;Bad Coder&lt;/<span class="selector-tag">h1</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">h2</span>&gt;Lazy&lt;/<span class="selector-tag">h2</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">h2</span>&gt;Not Attentioin&lt;/<span class="selector-tag">h2</span>&gt;</span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">  <span class="attribute">counter-reset</span>:section</span><br><span class="line">&#125;  </span><br><span class="line"><span class="selector-tag">h1</span>&#123;</span><br><span class="line">  <span class="attribute">counter-reset</span>:subsection</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">  <span class="attribute">counter-increment</span>:section;</span><br><span class="line">  <span class="attribute">content</span>:<span class="built_in">counter</span>(section)<span class="string">&#x27;\&#x27;;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">h2::before&#123;</span></span><br><span class="line"><span class="string">  counter-increment:subsection;</span></span><br><span class="line"><span class="string">  content:counter(section)&#x27;</span>.<span class="string">&#x27;counter(subsection);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>week30-脚手架发布模块云构建系统开发</title>
      <link href="/week30-%E8%84%9A%E6%89%8B%E6%9E%B6%E5%8F%91%E5%B8%83%E6%A8%A1%E5%9D%97%E4%BA%91%E6%9E%84%E5%BB%BA%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91/"/>
      <url>/week30-%E8%84%9A%E6%89%8B%E6%9E%B6%E5%8F%91%E5%B8%83%E6%A8%A1%E5%9D%97%E4%BA%91%E6%9E%84%E5%BB%BA%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章目录排版做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="第一章-本周导学">第一章 本周导学</h2><p><strong>1-1 本周整体内容介绍和学习方法</strong></p><blockquote><ul><li><strong>云构建</strong>原理、架构和实现</li><li><strong>WebSocket</strong>入门到实战</li><li><strong>Redis</strong>入门实战</li></ul></blockquote><h2 id="第二章-云架构模块架构设计">第二章 云架构模块架构设计</h2><p><strong>2-1 详细分析为什么需要设计云构建系统</strong></p><p><strong>为什么需要云构建</strong></p><blockquote><ul><li>减少发布过程中的重复劳动<ul><li>打包构建</li><li>上传静态资源服务器</li><li>上传CDN</li></ul></li><li>避免不同环境造成的差异</li><li>提升构建性能</li><li><strong>对构建过程进行统一管控</strong><ul><li>发布前代码统一规则检查</li><li>封网日统一发布卡口</li></ul></li></ul></blockquote><p><strong>2-2 云构建系统架构设计</strong><br><a href="https://www.processon.com/embed/61127e8907912940a9654a57">点击查看【processon】</a></p><h2 id="第三章-WebSocket-快速入门">第三章 WebSocket 快速入门</h2><p><strong>3-1 WebSocket基本概念及同HTTP协议对比</strong></p><blockquote><p>WebSocket概念</p><ul><li>HTTP：请求响应的单向。</li><li>WebSocket：只需发起一次请求，双向发起请求，双向接收响应。常用为聊天工具、云构建请求。</li><li>客户端开发WebSocket与浏览器开发WebSocket是不同的。</li><li>如何通过NodeJs搭建一个WebSocket服务。</li></ul></blockquote><p>相关基本概念：<a href="https://www.runoob.com/html/html5-websocket.html">https://www.runoob.com/html/html5-websocket.html</a></p><p><strong>3-2 egg集成WebSocket服务</strong></p><p><strong>基础介绍</strong></p><blockquote><p>基础教程：<a href="https://eggjs.org/zh-cn/tutorials/socketio.html">https://eggjs.org/zh-cn/tutorials/socketio.html</a><br>demo仓库：<a href="https://github.com/eggjs/egg-socket.io/tree/master/example">https://github.com/eggjs/egg-socket.io/tree/master/example</a></p></blockquote><blockquote><p>代码在lesson01分支基础上继续开发:<a href="https://github.com/liugezhou/cloudscope-cli-server/tree/lesson01">cloudscope-cli-server/leeson01</a><br>在lesson01分支基础上，新建分支 lesson30，本周最终代码在<a href="https://github.com/liugezhou/cloudscope-cli-server/tree/lesson30">lesson30</a>分支上。</p></blockquote><p><strong>WebSocket服务开发流程</strong></p><blockquote><ol><li>安装依赖</li></ol><ul><li>cnpm i -S <a href="http://egg-socket.io">egg-socket.io</a></li></ul><ol start="2"><li>更新配置文件</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// config.default.js</span></span><br><span class="line">config.<span class="property">io</span> = &#123;</span><br><span class="line">  <span class="attr">namespace</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;/&#x27;</span>: &#123;</span><br><span class="line">      <span class="attr">connectionMiddleware</span>: [<span class="string">&#x27;auth&#x27;</span>],</span><br><span class="line">      <span class="attr">packetMiddleware</span>: [<span class="string">&#x27;filter&#x27;</span>],</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;/chat&#x27;</span>: &#123;</span><br><span class="line">      <span class="attr">connectionMiddleware</span>: [<span class="string">&#x27;auth&#x27;</span>],</span><br><span class="line">      <span class="attr">packetMiddleware</span>: [],</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// plugin.js</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">io</span> = &#123;</span><br><span class="line">  <span class="attr">enable</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">package</span>: <span class="string">&#x27;egg-socket.io&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><ol start="3"><li>修改路由配置</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// app.io.of(&#x27;/&#x27;)</span></span><br><span class="line">app.<span class="property">io</span>.<span class="title function_">route</span>(<span class="string">&#x27;chat&#x27;</span>, app.<span class="property">io</span>.<span class="property">controller</span>.<span class="property">chat</span>.<span class="property">index</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// app.io.of(&#x27;/chat&#x27;)</span></span><br><span class="line">app.<span class="property">io</span>.<span class="title function_">of</span>(<span class="string">&#x27;/chat&#x27;</span>).<span class="title function_">route</span>(<span class="string">&#x27;chat&#x27;</span>, app.<span class="property">io</span>.<span class="property">controller</span>.<span class="property">chat</span>.<span class="property">index</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><ol start="4"><li>开发middleware</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/io/middleware/auth.js</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> say = <span class="keyword">await</span> ctx.<span class="property">service</span>.<span class="property">user</span>.<span class="title function_">say</span>();</span><br><span class="line">    ctx.<span class="property">socket</span>.<span class="title function_">emit</span>(<span class="string">&#x27;res&#x27;</span>, <span class="string">&#x27;auth!&#x27;</span> + say);</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">next</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;disconnect!&#x27;</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//app/io/middleware/filter.js</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(ctx.<span class="property">packet</span>);</span><br><span class="line">    <span class="keyword">const</span> say = <span class="keyword">await</span> ctx.<span class="property">service</span>.<span class="property">user</span>.<span class="title function_">say</span>();</span><br><span class="line">    ctx.<span class="property">socket</span>.<span class="title function_">emit</span>(<span class="string">&#x27;res&#x27;</span>, <span class="string">&#x27;packet!&#x27;</span> + say);</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">next</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;packet response!&#x27;</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><ol start="5"><li>开发controller</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/io/controller/chat.js</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function"><span class="params">app</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">class</span> <span class="title class_">Controller</span> <span class="keyword">extends</span> <span class="title class_ inherited__">app.Controller</span> &#123;</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">index</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> message = <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">args</span>[<span class="number">0</span>];</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;chat :&#x27;</span>, message + <span class="string">&#x27; : &#x27;</span> + process.<span class="property">pid</span>);</span><br><span class="line">      <span class="keyword">const</span> say = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">service</span>.<span class="property">user</span>.<span class="title function_">say</span>();</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">socket</span>.<span class="title function_">emit</span>(<span class="string">&#x27;res&#x27;</span>, say);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Controller</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>3-3 WebSocket客户端开发</strong></p><blockquote><p>代码分支在 cloudscope-cli/lesson30上。</p><ul><li>lerna create cloudbuild models/</li><li>cd models/cloudbuild</li><li>npm i -S socket.io-client</li><li>cloudbuild/lib/index.js</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// or http://127.0.0.1:7001/chat</span></span><br><span class="line"><span class="keyword">const</span> socket = <span class="built_in">require</span>(<span class="string">&#x27;socket.io-client&#x27;</span>)(<span class="string">&#x27;http://127.0.0.1:7001&#x27;</span>);</span><br><span class="line"></span><br><span class="line">socket.<span class="title function_">on</span>(<span class="string">&#x27;connect&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;connect!&#x27;</span>);</span><br><span class="line">  socket.<span class="title function_">emit</span>(<span class="string">&#x27;chat&#x27;</span>, <span class="string">&#x27;hello world!&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">socket.<span class="title function_">on</span>(<span class="string">&#x27;res&#x27;</span>, <span class="function"><span class="params">msg</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;res from server: %s!&#x27;</span>, msg);</span><br><span class="line">&#125;); </span><br></pre></td></tr></table></figure><p><strong>3-4 WebSocket客户端与服务端交互流程分析</strong></p><p>以日志的打出分析流程<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/30-1.7281qwkywao0.webp" alt="30-1"><br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/30-2.4f26ut5lap00.webp" alt="30-2"></p><blockquote><ul><li>首先服务端(cloudscope-cli-server)启动服务:<strong>npm run dev</strong></li><li>客户端启动服务：<strong>node models/cloudbuild/lin/index.js</strong></li><li>客户端启动后：<ul><li>socket on 连接成功，监控connect事件：打印出日志** connect！**</li><li>接着客户端emit chat事件：<strong>socket.emit(‘chat’, ‘hello world!’)</strong>;</li></ul></li><li>服务端接收到chat事件后<ul><li>首先会现在服务端config.default.js中找到 / 的 connectMiddleWare的  auth.js去执行<ul><li>auth.js中触发res事件</li><li>客户端监听res事件，打印日志：res from server:auth! Hello Man!!</li></ul></li><li>接着服务端在config.default.js中 找到 / 的packetMiddleWare 的 filter.js去执行<ul><li>服务端打印 ctx.packet日志：[‘chat’,‘hello world!’]</li><li>filter.js触发res事件</li><li>客户端监听res事件，打印日志：res from server:packet! Hello Man!!</li></ul></li><li>服务端通过route匹配到 chat，于是去Controller中找 chat.js<ul><li>服务端打印日志：chat:hello world! : 10826</li><li>接着服务端调用service服务，拿到值，触发 res事件</li><li>客户端监听到res事件，打印日志：res from server:Hello Man!!</li></ul></li><li>服务端等待 next执行完毕后，最后在 filter.js中，打印出：packet response！</li></ul></li></ul></blockquote><h2 id="第四章-Redis-快速入门">第四章 Redis 快速入门</h2><p><strong>4-1 redis基本概念+安装方法+基本命令</strong></p><blockquote><ul><li>该项目应用redis是要：存储任务信息</li><li>redis安装</li><li>常用命令redis-cli[进入终端服务]和redis-server[启动redis服务]</li></ul></blockquote><p><strong>4-2 阿里云redis服务配置和远程连接方法讲解</strong><br>我这里实在腾讯云领了一个月的redis免费试用版本,下面记录为课程的讲解，腾讯云相关redis见读书笔记。</p><blockquote><ul><li>购买完数据库后，第一个设置是白名单设置，0.0.0.0/0 如果不设置，会出现远程无法连接的问题</li><li>创建账号：使用默认账号或创建账号连接</li><li>连接成功后 AUTH <password></li></ul></blockquote><p><strong>4-3 egg集成redis方法讲解</strong><br>redis为使用本地</p><blockquote><ul><li>首先在npm官网上查看 egg-redis这个插件</li><li>在server安装：npm i egg-redis  --save</li><li>根据npm官网上关于egg-redis的代码讲解，分别在plugin.js和config.default.js中添加相关代码。</li><li>添加一个新路由：/redis/test，并在project的controller中测试</li><li>添加 await app.redis.get(key)获取key值</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">getRedis</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; ctx, app &#125; = <span class="variable language_">this</span>;</span><br><span class="line">  <span class="keyword">const</span> num = <span class="keyword">await</span> app.<span class="property">redis</span>.<span class="title function_">get</span>(<span class="string">&#x27;number&#x27;</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(num)</span><br><span class="line">  ctx.<span class="property">body</span> = <span class="string">&#x27;hello redis&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//config.defualt.js</span></span><br><span class="line"> config.<span class="property">redis</span> = &#123;</span><br><span class="line">   <span class="attr">client</span>: &#123;</span><br><span class="line">     <span class="attr">port</span>: <span class="variable constant_">REDIS_PORT</span>,</span><br><span class="line">     <span class="attr">host</span>: <span class="variable constant_">REDIS_HOST</span>, </span><br><span class="line">     <span class="attr">password</span>:<span class="variable constant_">REDIS_PWD</span>,</span><br><span class="line">     <span class="attr">db</span>: <span class="number">0</span>,</span><br><span class="line">   &#125;,</span><br><span class="line">   </span><br><span class="line">   <span class="comment">//plugin.js</span></span><br><span class="line">   <span class="built_in">exports</span>.<span class="property">redis</span> = &#123;</span><br><span class="line">   <span class="attr">enable</span>: <span class="literal">true</span>,</span><br><span class="line">   <span class="attr">package</span>: <span class="string">&#x27;egg-redis&#x27;</span>,</span><br><span class="line"> &#125;;</span><br></pre></td></tr></table></figure><h2 id="第五章-云构建初始化流程开发">第五章 云构建初始化流程开发</h2><p><strong>5-1 CloudBuild类开发</strong></p><blockquote><p>根据第二章 架构图，本节主要代码为 CloudBuild类的创建与引用，最终传入git对象</p></blockquote><blockquote><p>3-3节已经创建了cloudbuild，修改这里的代码为</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CloudBuild</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">git, props</span>)&#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;cloudbuild&#x27;</span>,git)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// or http://127.0.0.1:7001/chat</span></span><br><span class="line"><span class="comment">// const socket = require(&#x27;socket.io-client&#x27;)(&#x27;http://127.0.0.1:7001&#x27;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// socket.on(&#x27;connect&#x27;, () =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   console.log(&#x27;connect!&#x27;);</span></span><br><span class="line"><span class="comment">//   socket.emit(&#x27;chat&#x27;, &#x27;hello world!&#x27;);</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// socket.on(&#x27;res&#x27;, msg =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   console.log(&#x27;res from server: %s!&#x27;, msg);</span></span><br><span class="line"><span class="comment">// &#125;); </span></span><br><span class="line">&#125;</span><br><span class="line"> <span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">CloudBuild</span></span><br></pre></td></tr></table></figure><blockquote><p>在modes/git下引入@cloudscope-cli/cloudbuild，并新建publish方法</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">publish</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">preparePublish</span>()</span><br><span class="line">  <span class="keyword">const</span> buildCmd = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">const</span> cloudBuild = <span class="keyword">new</span> <span class="title class_">CloudBuild</span>(<span class="variable language_">this</span>,&#123;</span><br><span class="line">    buildCmd</span><br><span class="line">  &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">preparePublish</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;preparePublish&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在commands/publish/lib/index.js 文件中，接着上一周的 自动化提交代码，接着调用 git.publsih方法。</p><ul><li>这样从 commands/publish/lib/index.js中调用 git.publish()方法</li><li>在 models/git/lib/index.js中开发publish方法，publish中会生成一个cloudbuild实例</li><li>这个cloudbild实例为我们在models下新建的一个包，这样本节就形成了一个闭环。</li><li>下节开始就是cloudbuild实例的开发，以及publish流程。</li></ul></blockquote><p><strong>5-2 生成构建命令+构建命令检查开发</strong></p><blockquote><p>本节主要内容是，用于定制build命令，通过 --buildCmd参数，如果用户传入build命令，那么使用传入的build命令打包，如果不是则传入默认的打包命令。</p><ol><li>首先在 core/cli/lib/index.js中传入 --buildCmd参数</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">program</span><br><span class="line">  .<span class="title function_">command</span>(<span class="string">&#x27;publish&#x27;</span>)</span><br><span class="line">  .<span class="title function_">option</span>(<span class="string">&#x27;--refreshServer&#x27;</span>,<span class="string">&#x27;强制更新远程Git仓库类型和token&#x27;</span>)</span><br><span class="line">  .<span class="title function_">option</span>(<span class="string">&#x27;--refreshOwner&#x27;</span>,<span class="string">&#x27;强制更新远程Git仓库用户类型&#x27;</span>)</span><br><span class="line">  .<span class="title function_">option</span>(<span class="string">&#x27;--buildCmd &lt;buildCmd&gt;&#x27;</span>,<span class="string">&#x27;构建命令&#x27;</span>)</span><br><span class="line">  .<span class="title function_">action</span>(exec)</span><br></pre></td></tr></table></figure><blockquote><ol start="2"><li>然后在commands/publish/lib/index.js中接收这个参数</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">PublishCommand</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Command</span> &#123;</span><br><span class="line">    <span class="title function_">init</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="comment">// 处理参数</span></span><br><span class="line">        log.<span class="title function_">verbose</span>(<span class="string">&#x27;publish init&#x27;</span>,<span class="variable language_">this</span>.<span class="property">_argv</span>)</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">options</span> = &#123;</span><br><span class="line">                <span class="attr">refreshServer</span>:<span class="variable language_">this</span>.<span class="property">_argv</span>[<span class="number">0</span>].<span class="property">refreshServer</span>,</span><br><span class="line">                <span class="attr">refreshOwner</span>:<span class="variable language_">this</span>.<span class="property">_argv</span>[<span class="number">0</span>].<span class="property">refreshOwner</span>,</span><br><span class="line">                <span class="attr">buildCmd</span>:<span class="variable language_">this</span>.<span class="property">_argv</span>[<span class="number">0</span>].<span class="property">buildCmd</span> </span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  …………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ol start="3"><li>此时Git类接收并赋值该参数，然后在上节我们写的 <strong>[models/git/lib/index.js]</strong> publishPrepare中见检查这个命令</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">preparePublish</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">buildCmd</span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> buildCmdArray = <span class="variable language_">this</span>.<span class="property">buildCmd</span>.<span class="title function_">split</span>(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title class_">Object</span>.<span class="title function_">is</span>(buildCmdArray[<span class="number">0</span>],<span class="string">&#x27;npm&#x27;</span>) &amp;&amp; !<span class="title class_">Object</span>.<span class="title function_">is</span>(buildCmdArray[<span class="number">0</span>],<span class="string">&#x27;cnpm&#x27;</span>))&#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Build命令非法，必须使用npm或cnpm！&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">buildCmd</span> = <span class="string">&#x27;npm run build&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">buildCmd</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>最后测试一下：</li></ul></blockquote><p>终端命令：</p><blockquote><p><strong>cloudscope-cli publish --targetPath /Users/liumingzhou/Documents/imoocCourse/Web前端架构师/cloudscope-cli/commands/publish --buildCmd ‘anpm run build:prod’</strong><br>**抛出异常：**Build命令非法，必须使用npm或cnpm</p></blockquote><p><strong>5-3 通过CloudBuild创建WebSocket连接</strong></p><blockquote><p>我们在第三章的学习当中已经大略的知道了 前后端如何建立起socket连接，本节就是对服务端代码修改以及客户端代码开发-传递git.repo参数到服务端。</p><ul><li>服务端<ul><li>将与service有关的代码先删掉</li><li>将routes.js中与chat相关的修改为 build：app.io.route(‘build’, app.io.controller.build.index);</li><li>服务端学习的核心代码为：const query = socket.handshake.query</li></ul></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//app/controller/io/controller/build.js</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function"><span class="params">app</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">class</span> <span class="title class_">Controller</span> <span class="keyword">extends</span> <span class="title class_ inherited__">app.Controller</span> &#123;</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">index</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Controller build!&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Controller</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//app/controller/io/middleware/auth.js</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;socket,logger&#125; = ctx</span><br><span class="line">    <span class="keyword">const</span> query = socket.<span class="property">handshake</span>.<span class="property">query</span></span><br><span class="line">    logger.<span class="title function_">info</span>(query)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;connect!&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">next</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;disconnect!&#x27;</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><ul><li><strong>客户端</strong><ul><li><strong>Cloudbuild实例的init方法传入了一个参数：git.remote</strong></li></ul></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// models/cloudbuild/lib/index.js</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> io = <span class="built_in">require</span>(<span class="string">&#x27;socket.io-client&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">TIME_OUT</span> = <span class="number">5</span>* <span class="number">60</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">WS_SERVER</span> = <span class="string">&#x27;http://liugezhou.com:7001&#x27;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CloudBuild</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">git, options</span>)&#123;</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">git</span> = git</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">buildCmd</span> = options.<span class="property">buildCmd</span></span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">timeout</span> = <span class="variable constant_">TIME_OUT</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">init</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> socket = <span class="title function_">io</span>(<span class="variable constant_">WS_SERVER</span>,&#123;</span><br><span class="line">      <span class="attr">query</span>:&#123;</span><br><span class="line">        <span class="attr">repo</span>:<span class="variable language_">this</span>.<span class="property">git</span>.<span class="property">remote</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    socket.<span class="title function_">on</span>(<span class="string">&#x27;connect&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;connect!&#x27;</span>);</span><br><span class="line">    <span class="comment">// socket.emit(&#x27;chat&#x27;, &#x27;hello world!&#x27;);</span></span><br><span class="line">  &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>最后测试一下：</strong></p><ul><li>最后测试一下，将服务端启动，在客户端执行命令：</li></ul></blockquote><p>终端命令：</p><blockquote><p><strong>cloudscope-cli publish --targetPath /Users/liumingzhou/Documents/imoocCourse/Web前端架构师/cloudscope-cli/commands/publish --buildCmd ‘npm run build:prod’</strong></p><ul><li>在客户端与服务端分别打印出日志，测试正确</li></ul></blockquote><p><strong>5-4 WebSocket超时自动断开连接逻辑开发</strong></p><blockquote><p>本节比较简单，是解决连接不上服务端的问题–连接超时，抛出异常，部分代码如下：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">CONNET_TIME_OUT</span> = <span class="number">5</span>*<span class="number">1000</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CloudBuild</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">git, options</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">git</span> = git</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">buildCmd</span> = options.<span class="property">buildCmd</span></span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">timeout</span> = <span class="variable constant_">TIME_OUT</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">doTtimeout</span>(<span class="params">fn,timeout</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">timer</span> &amp;&amp; <span class="built_in">clearTimeout</span>(<span class="variable language_">this</span>.<span class="property">timer</span>)</span><br><span class="line">    log.<span class="title function_">info</span>(<span class="string">&#x27;设置任务超时时间：&#x27;</span>,<span class="string">`<span class="subst">$&#123;timeout/<span class="number">1000</span>&#125;</span>秒`</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">timer</span> = <span class="built_in">setTimeout</span>(fn,timeout);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">init</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> socket = <span class="title function_">io</span>(<span class="variable constant_">WS_SERVER</span>,&#123;</span><br><span class="line">      <span class="attr">query</span>:&#123;</span><br><span class="line">        <span class="attr">repo</span>:<span class="variable language_">this</span>.<span class="property">git</span>.<span class="property">remote</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">disconnect</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">      <span class="built_in">clearTimeout</span>(<span class="variable language_">this</span>.<span class="property">timer</span>)</span><br><span class="line">      socket.<span class="title function_">disconnect</span>()</span><br><span class="line">      socket.<span class="title function_">close</span>()</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="variable language_">this</span>.<span class="title function_">doTtimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    log.<span class="title function_">error</span>(<span class="string">&#x27;云构建服务连接超时，自动终止&#x27;</span>)    </span><br><span class="line">    <span class="title function_">disconnect</span>()</span><br><span class="line">    &#125;, <span class="variable constant_">CONNET_TIME_OUT</span>);</span><br><span class="line">   </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>5-5 WebSocket客户端和服务端通信优化</strong></p><blockquote><p>在整个websocket连接成功之后，是可以发送一些标准化日志的。</p><ul><li>友好实现socket连接后的标准化日志，服务端改造<ul><li>第一个改造点，cloudscope-cli-server中auth.js添加try catch异常捕获</li><li>第二个改造点：新建app/extend/helper.js，统一的返回格式</li></ul></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/extend/helper.js</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="title function_">parseMsg</span>(<span class="params">action,payload=&#123;&#125;,metadata=&#123;&#125;</span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> meta = <span class="title class_">Object</span>.<span class="title function_">assign</span>(&#123;&#125;,&#123;</span><br><span class="line">            <span class="attr">timestamp</span>:<span class="title class_">Date</span>.<span class="title function_">now</span>()</span><br><span class="line">        &#125;,metadata);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            meta,</span><br><span class="line">            <span class="attr">data</span>:&#123;</span><br><span class="line">                action,</span><br><span class="line">                payload</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// app/controller/io/middleware/auth.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123;socket,logger,helper&#125; = ctx</span><br><span class="line">socket.<span class="title function_">emit</span>(id,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;connect&#x27;</span>,&#123;</span><br><span class="line">  <span class="attr">type</span>:<span class="string">&#x27;connect&#x27;</span>,</span><br><span class="line">  <span class="attr">message</span>:<span class="string">&#x27;云构建服务连接成功&#x27;</span></span><br><span class="line">&#125;))</span><br></pre></td></tr></table></figure><p>客户端</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> get =<span class="built_in">require</span>(<span class="string">&#x27;lodash/get&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">parseMsg</span>(<span class="params">msg</span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> action = <span class="title function_">get</span>(msg,<span class="string">&#x27;data.action&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> message = <span class="title function_">get</span>(msg,<span class="string">&#x27;data.payload.message&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    action,</span><br><span class="line">    message</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">socket.<span class="title function_">on</span>(<span class="string">&#x27;connect&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">clearTimeout</span>(<span class="variable language_">this</span>.<span class="property">timer</span>)</span><br><span class="line">  <span class="keyword">const</span> &#123;id&#125; = socket</span><br><span class="line">  socket.<span class="title function_">on</span>(id,<span class="function"><span class="params">msg</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> parsedMsg = <span class="title function_">parseMsg</span>(msg)</span><br><span class="line">    log.<span class="title function_">success</span>(parsedMsg.<span class="property">action</span>,parsedMsg.<span class="property">message</span>,<span class="string">`任务ID：<span class="subst">$&#123;id&#125;</span>`</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">socket.<span class="title function_">on</span>(<span class="string">&#x27;disconnect&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  log.<span class="title function_">success</span>(<span class="string">&#x27;disconnect&#x27;</span>,<span class="string">&#x27;云构建任务断开&#x27;</span>)</span><br><span class="line">  <span class="title function_">disconnect</span>();</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">socket.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>,<span class="function">(<span class="params">err</span>)=&gt;</span>&#123;</span><br><span class="line">  log.<span class="title function_">error</span>(<span class="string">&#x27;error&#x27;</span>,<span class="string">&#x27;云构建错误&#x27;</span>,err)</span><br><span class="line">  <span class="title function_">disconnect</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>5-6 云构建任务写入Redis</strong></p><blockquote><p>本节主要内容就是将云构建任务写入到redis中去【服务端】,核心代码如下：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/controller/io/middleware/auth.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">REDIS_PREFIX</span> = <span class="string">&#x27;cloudbuild&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123;app&#125; = ctx</span><br><span class="line"><span class="keyword">const</span> &#123;redis&#125; = app</span><br><span class="line"><span class="comment">// 判断redis任务是否存在</span></span><br><span class="line"><span class="keyword">let</span> hashTask = <span class="keyword">await</span> redis.<span class="title function_">get</span>(<span class="string">`<span class="subst">$&#123;REDIS_PREFIX&#125;</span>:<span class="subst">$&#123;id&#125;</span>`</span>)</span><br><span class="line"><span class="keyword">if</span>(!hashTask)&#123;</span><br><span class="line">  <span class="keyword">await</span> redis.<span class="title function_">set</span>(<span class="string">`<span class="subst">$&#123;REDIS_PREFIX&#125;</span>:<span class="subst">$&#123;id&#125;</span>`</span>,<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(query))</span><br><span class="line">&#125;</span><br><span class="line">hashTask = <span class="keyword">await</span> redis.<span class="title function_">get</span>(<span class="string">`<span class="subst">$&#123;REDIS_PREFIX&#125;</span>:<span class="subst">$&#123;id&#125;</span>`</span>)</span><br><span class="line">logger.<span class="title function_">info</span>(hashTask)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>5-7 创建云构建任务功能开发</strong><br>客户端添加build方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// models/cloudbuild/lib/index.js   </span></span><br><span class="line"><span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">socket</span>.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">socket</span>.<span class="title function_">on</span>(<span class="string">&quot;build&quot;</span>,<span class="function"><span class="params">msg</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">const</span> parsedMsg = <span class="title function_">parseMsg</span>(msg)</span><br><span class="line">        log.<span class="title function_">success</span>(parsedMsg.<span class="property">action</span>,parsedMsg.<span class="property">message</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">socket</span>.<span class="title function_">on</span>(<span class="string">&#x27;building&#x27;</span>,<span class="function"><span class="params">msg</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">const</span> parsedMsg = <span class="title function_">parseMsg</span>(msg)</span><br><span class="line">        log.<span class="title function_">success</span>(parsedMsg.<span class="property">action</span>,parsedMsg.<span class="property">message</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">      </span><br><span class="line"> <span class="comment">//commands/publish/lib/index.js</span></span><br><span class="line">   <span class="comment">//publish方法中 </span></span><br><span class="line">      <span class="keyword">await</span> cloudBuild.<span class="title function_">init</span>()</span><br><span class="line">      <span class="keyword">await</span> cloudBuild.<span class="title function_">build</span>()</span><br></pre></td></tr></table></figure><p>在服务端，我们在已经建好的 app/controller/io/controller/build.js中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">REDIS_PREFIX</span> = <span class="string">&#x27;cloudbuild&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CloudBuildTask</span> = <span class="built_in">require</span>(<span class="string">&#x27;../../models/CloudBuildTask&#x27;</span>)</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">createCloudBuildTask</span>(<span class="params">ctx,app</span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; socket,helper &#125; = ctx</span><br><span class="line">  <span class="keyword">const</span> &#123; redis &#125; = app</span><br><span class="line">  <span class="keyword">const</span> client = socket.<span class="property">id</span></span><br><span class="line">  <span class="keyword">const</span> redisKey = <span class="string">`<span class="subst">$&#123;REDIS_PREFIX&#125;</span>:<span class="subst">$&#123;client&#125;</span>`</span></span><br><span class="line">  <span class="keyword">const</span> redisTask = <span class="keyword">await</span> redis.<span class="title function_">get</span>(redisKey)</span><br><span class="line">  <span class="keyword">const</span> task = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(redisTask)</span><br><span class="line">  socket.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;create task&#x27;</span>,&#123;</span><br><span class="line">    <span class="attr">message</span>:<span class="string">&#x27;创建云构建任务&#x27;</span></span><br><span class="line">  &#125;))</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CloudBuildTask</span>(&#123;</span><br><span class="line">    <span class="attr">repo</span>:task.<span class="property">repo</span>,</span><br><span class="line">    <span class="attr">name</span>:task.<span class="property">name</span>,</span><br><span class="line">    <span class="attr">version</span>:task.<span class="property">version</span>,</span><br><span class="line">    <span class="attr">branch</span>:task.<span class="property">branch</span>,</span><br><span class="line">    <span class="attr">buildCmd</span>:task.<span class="property">buildCmd</span></span><br><span class="line">  &#125;) </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function"><span class="params">app</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">class</span> <span class="title class_">Controller</span> <span class="keyword">extends</span> <span class="title class_ inherited__">app.Controller</span> &#123;</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">index</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">//创建云构建任务</span></span><br><span class="line">      <span class="keyword">const</span> &#123;ctx,app&#125; = <span class="variable language_">this</span></span><br><span class="line">      <span class="keyword">const</span> cloudBuildTask = <span class="keyword">await</span> <span class="title function_">createCloudBuildTask</span>(ctx,app)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Controller</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// app/models/CloudBuildTask.js</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CloudBuildTask</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">options</span>)&#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(options)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">CloudBuildTask</span></span><br></pre></td></tr></table></figure><p>测试，可在服务端打印出options。</p><h2 id="第六章-云构建执行流程开发">第六章 云构建执行流程开发</h2><p><strong>6-1 云构建任务初始化流程开发</strong></p><blockquote><p>服务端云构建的初始化流程，主要内容为CloudBuildTask这个类</p><ul><li>npm i -S user-home simple-git fs-extra</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注意CloudBuildTask类需要传入的第二个参数为ctx</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> fse = <span class="built_in">require</span>(<span class="string">&#x27;fs-extra&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> userHome = <span class="built_in">require</span>(<span class="string">&#x27;user-home&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Git</span> = <span class="built_in">require</span>(<span class="string">&#x27;simple-git&#x27;</span>)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CloudBuildTask</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">options,ctx</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_ctx</span> = ctx</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_name</span> = options.<span class="property">name</span> <span class="comment">//项目名称</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_version</span> = options.<span class="property">version</span> <span class="comment">//项目版本号</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_repo</span> = options.<span class="property">repo</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_branch</span> = options.<span class="property">branch</span> </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_buildCmd</span> = options.<span class="property">buildCmd</span> <span class="comment">//构建命令</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">logger</span> = <span class="variable language_">this</span>.<span class="property">_ctx</span> .<span class="property">logger</span></span><br><span class="line">        <span class="comment">// 服务器的用户主目录</span></span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">_dir</span> = path.<span class="title function_">resolve</span>(userHome,<span class="string">&#x27;.cloudscope-cli&#x27;</span>,<span class="string">&#x27;cloudbuild&#x27;</span>,<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>._name&#125;</span>@<span class="subst">$&#123;<span class="variable language_">this</span>._version&#125;</span>`</span>) <span class="comment">//缓存目录</span></span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">_sourceCodeDir</span> = path.<span class="title function_">resolve</span>(<span class="variable language_">this</span>.<span class="property">_dir</span>,<span class="variable language_">this</span>.<span class="property">_name</span>) <span class="comment">//缓存源码目录</span></span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">logger</span>.<span class="title function_">info</span>(<span class="string">&#x27;_dir&#x27;</span>,<span class="variable language_">this</span>.<span class="property">_dir</span>)</span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">logger</span>.<span class="title function_">info</span>(<span class="string">&#x27;_sourceCodeDir&#x27;</span>,<span class="variable language_">this</span>.<span class="property">_sourceCodeDir</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">prepare</span>(<span class="params"></span>)&#123;</span><br><span class="line">        fse.<span class="title function_">ensureDirSync</span>(<span class="variable language_">this</span>.<span class="property">_dir</span>)</span><br><span class="line">        fse.<span class="title function_">emptyDirSync</span>(<span class="variable language_">this</span>.<span class="property">_dir</span>)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_git</span> = <span class="keyword">new</span> <span class="title class_">Git</span>(<span class="variable language_">this</span>.<span class="property">_dir</span>)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">CloudBuildTask</span></span><br></pre></td></tr></table></figure><p><strong>6-2 云构建任务交互日志开发</strong></p><blockquote><p>本节在CloudBuildTask类中，还未进行开发前，现对错误日志，进行了升级或者说是友好的异常抛出。<br>首先在CloudBuildTask这个类中，对于返回的格式进行了统一</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/models/CloudBuildTask.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123;<span class="variable constant_">SUCCESS</span>,<span class="variable constant_">FAILED</span>&#125; = <span class="built_in">require</span>(<span class="string">&#x27;../constant&#x27;</span>) <span class="comment">//定义了常量</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">success</span>(<span class="params">msg,data</span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">response</span>(<span class="variable constant_">SUCCESS</span>,msg,data)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fail</span>(<span class="params">msg,data</span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">response</span>(<span class="variable constant_">FAILED</span>,msg,data)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">response</span>(<span class="params">code,message,data</span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    code,</span><br><span class="line">    message,</span><br><span class="line">    data</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><blockquote><p>然后在 app/io/controller/build.js中。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">prepare</span>(<span class="params">cloudBuildTask,socket,helper</span>) &#123;</span><br><span class="line">  socket.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;prepare&#x27;</span>,&#123;</span><br><span class="line">    <span class="attr">message</span>:<span class="string">&#x27;开始执行构建前的准备工作&#x27;</span></span><br><span class="line">  &#125;))</span><br><span class="line">  <span class="keyword">const</span> prepareRes = <span class="keyword">await</span> cloudBuildTask.<span class="title function_">prepare</span>()</span><br><span class="line">  <span class="keyword">if</span>(!prepareRes || <span class="title class_">Object</span>.<span class="title function_">is</span>(prepareRes.<span class="property">code</span>,<span class="variable constant_">FAILED</span>))&#123;</span><br><span class="line">    <span class="keyword">const</span> msg = prepareRes ? prepareRes.<span class="property">message</span> : <span class="string">&#x27;prepare返回为undefined&#x27;</span></span><br><span class="line">    socket.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;prepare failed&#x27;</span>,&#123;</span><br><span class="line">       <span class="attr">message</span>: <span class="string">`执行云构建准备工作失败，失败原因：<span class="subst">$&#123;msg&#125;</span>`</span></span><br><span class="line">    &#125;))</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  socket.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;prepare&#x27;</span>,&#123;</span><br><span class="line">    <span class="attr">message</span>:<span class="string">&#x27;构建前准备工作成功&#x27;</span></span><br><span class="line">  &#125;))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>然后在客户端的models/cloudbuild/lib/index.js，监听的build方法中做了一个优化</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">socket</span>.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>)</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">socket</span>.<span class="title function_">on</span>(<span class="string">&quot;build&quot;</span>,<span class="function"><span class="params">msg</span>=&gt;</span>&#123;</span><br><span class="line">       <span class="keyword">const</span> parsedMsg = <span class="title function_">parseMsg</span>(msg)</span><br><span class="line">       <span class="keyword">if</span>(<span class="variable constant_">FAILED_CODE</span>.<span class="title function_">indexOf</span>(parsedMsg.<span class="property">action</span>)&gt;-<span class="number">1</span>)&#123;</span><br><span class="line">         log.<span class="title function_">error</span>(parsedMsg.<span class="property">message</span>)</span><br><span class="line">         <span class="built_in">clearTimeout</span>(<span class="variable language_">this</span>.<span class="property">timer</span>)</span><br><span class="line">         <span class="variable language_">this</span>.<span class="property">socket</span>.<span class="title function_">disconnect</span>()</span><br><span class="line">         <span class="variable language_">this</span>.<span class="property">socket</span>.<span class="title function_">close</span>()</span><br><span class="line">       &#125;</span><br><span class="line">       log.<span class="title function_">success</span>(parsedMsg.<span class="property">action</span>,parsedMsg.<span class="property">message</span>)</span><br><span class="line">     &#125;)</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">socket</span>.<span class="title function_">on</span>(<span class="string">&#x27;building&#x27;</span>,<span class="function"><span class="params">msg</span>=&gt;</span>&#123;</span><br><span class="line">       <span class="keyword">const</span> parsedMsg = <span class="title function_">parseMsg</span>(msg)</span><br><span class="line">       log.<span class="title function_">success</span>(parsedMsg.<span class="property">action</span>,parsedMsg.<span class="property">message</span>)</span><br><span class="line">     &#125;)</span><br><span class="line">   &#125;)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><strong>6-3 服务端源码下载 + 切换分支</strong></p><blockquote><p>在服务端 app/io/controller/build.js下，</p><ul><li>我们完成了 await prepare(cloudBuildTask,socket,helper)，</li><li>接着我们继续实现  await download(cloudBuildTask,socket,helper)</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/io/controller/build.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">download</span>(<span class="params">cloudBuildTask,socket,helper</span>)&#123;</span><br><span class="line">  socket.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;download repo&#x27;</span>,&#123;</span><br><span class="line">    <span class="attr">message</span>:<span class="string">&#x27;开始下载源码&#x27;</span></span><br><span class="line">  &#125;))</span><br><span class="line">  <span class="keyword">const</span> downloadRes = <span class="keyword">await</span> cloudBuildTask.<span class="title function_">download</span>()</span><br><span class="line">  <span class="keyword">if</span>(!downloadRes || <span class="title class_">Object</span>.<span class="title function_">is</span>(downloadRes.<span class="property">code</span>,<span class="variable constant_">FAILED</span>))&#123; <span class="comment">//  downlod下载失败</span></span><br><span class="line">    socket.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;download failed&#x27;</span>,&#123;</span><br><span class="line">      <span class="attr">message</span>:<span class="string">&#x27;源码下载失败&#x27;</span></span><br><span class="line">    &#125;))</span><br><span class="line">    <span class="keyword">return</span> </span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    socket.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;download repo&#x27;</span>,&#123;</span><br><span class="line">      <span class="attr">message</span>:<span class="string">&#x27;源码下载成功&#x27;</span></span><br><span class="line">    &#125;))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// app/models/CloudBuildTask.js</span></span><br><span class="line"> <span class="keyword">async</span> <span class="title function_">download</span>(<span class="params"></span>)&#123;</span><br><span class="line">   <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">_git</span>.<span class="title function_">clone</span>(<span class="variable language_">this</span>.<span class="property">_repo</span>)  <span class="comment">//clone仓库</span></span><br><span class="line">   <span class="variable language_">this</span>.<span class="property">_git</span> = <span class="keyword">new</span> <span class="title class_">Git</span>(<span class="variable language_">this</span>.<span class="property">_sourceCodeDir</span>)  <span class="comment">//将git地址更改，生成新的simple git</span></span><br><span class="line">   <span class="comment">// 切换分支  git checkout -b dev/1.0.2  origin/dev/1.0.2</span></span><br><span class="line">   <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">_git</span>.<span class="title function_">checkout</span>([<span class="string">&#x27;-b&#x27;</span>,<span class="variable language_">this</span>.<span class="property">_branch</span>,<span class="string">`origin/<span class="subst">$&#123;<span class="variable language_">this</span>._branch&#125;</span>`</span>])</span><br><span class="line">   <span class="keyword">return</span> fs.<span class="title function_">existsSync</span>(<span class="variable language_">this</span>.<span class="property">_sourceCodeDir</span>) ? <span class="variable language_">this</span>.<span class="title function_">success</span>() : <span class="variable language_">this</span>.<span class="title function_">failed</span>()</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><blockquote><p>然后在客户端执行命令：cloudscope-cli publish --targetPath /Users/liumingzhou/Documents/imoocCourse/Web前端架构师/cloudscope-cli/commands/publish</p><p>经过测试，在/User/username/.cloudscoe-cli/cloudbuild/test@1.0.2/test下安装了源码，执行git branch 看到切换到了 开发分支。</p></blockquote><p><strong>6-4 服务端源码依赖安装+命令执行功能封装</strong></p><p>与上一节的download流程一样</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// app/io/controller/build.js</span></span><br><span class="line"><span class="keyword">await</span> <span class="title function_">install</span>(cloudBuildTask,socket,helper)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">install</span>(<span class="params">cloudBuildTask,socket,helper</span>) &#123;</span><br><span class="line">  socket.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;install&#x27;</span>,&#123;</span><br><span class="line">    <span class="attr">message</span>:<span class="string">&#x27;开始安装依赖&#x27;</span></span><br><span class="line">  &#125;))</span><br><span class="line">  <span class="keyword">const</span> installRes = <span class="keyword">await</span> cloudBuildTask.<span class="title function_">install</span>()</span><br><span class="line">  <span class="keyword">if</span>(!installRes || <span class="title class_">Object</span>.<span class="title function_">is</span>(installRes.<span class="property">code</span>,<span class="variable constant_">FAILED</span>))&#123; <span class="comment">//  downlod下载失败</span></span><br><span class="line">    socket.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;install failed&#x27;</span>,&#123;</span><br><span class="line">      <span class="attr">message</span>:<span class="string">&#x27;安装依赖失败&#x27;</span></span><br><span class="line">    &#125;))</span><br><span class="line">    <span class="keyword">return</span> </span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    socket.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;install&#x27;</span>,&#123;</span><br><span class="line">      <span class="attr">message</span>:<span class="string">&#x27;安装依赖成功&#x27;</span></span><br><span class="line">    &#125;))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// app/models/CloudBuildTask.js</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">install</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">let</span> res = <span class="literal">true</span></span><br><span class="line">  res &amp;&amp; (res = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">execCmd</span>(<span class="string">&#x27;npm install --registry=https://registry.npm.taobao.org&#x27;</span>))</span><br><span class="line">  <span class="keyword">return</span> res ? <span class="variable language_">this</span>.<span class="title function_">success</span>(): <span class="variable language_">this</span>.<span class="title function_">failed</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">execCmd</span>(<span class="params">cmd</span>)&#123;</span><br><span class="line">  <span class="comment">// npm install -&gt;[&#x27;npm&#x27;,&#x27;install&#x27;]</span></span><br><span class="line">  <span class="keyword">let</span> command = cmd.<span class="title function_">split</span>(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span>(command.<span class="property">length</span> === <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> firstCommand = command[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">const</span> leftCommand = command.<span class="title function_">slice</span>(<span class="number">1</span>) || []</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> p = <span class="title function_">exec</span>(firstCommand,leftCommand,&#123;</span><br><span class="line">      <span class="attr">cwd</span>:<span class="variable language_">this</span>.<span class="property">_sourceCodeDir</span></span><br><span class="line">    &#125;,&#123;<span class="attr">stdio</span>:<span class="string">&#x27;pipe&#x27;</span>&#125;)</span><br><span class="line">    p.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>,<span class="function"><span class="params">e</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">_ctx</span>.<span class="property">logger</span>.<span class="title function_">error</span>(<span class="string">&#x27;build error&#x27;</span>,e)</span><br><span class="line">      <span class="title function_">resolve</span>(fasle)</span><br><span class="line">    &#125;)</span><br><span class="line">    p.<span class="title function_">on</span>(<span class="string">&#x27;exit&#x27;</span>,<span class="function"><span class="params">c</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">_ctx</span>.<span class="property">logger</span>.<span class="title function_">info</span>(<span class="string">&#x27;build exit&#x27;</span>,c)</span><br><span class="line">      <span class="title function_">resolve</span>(<span class="literal">true</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    p.<span class="property">stdout</span>.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>,<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">_ctx</span>.<span class="property">socket</span>.<span class="title function_">emit</span>(<span class="string">&#x27;building&#x27;</span>,data.<span class="title function_">toString</span>())</span><br><span class="line">    &#125;)</span><br><span class="line">    p.<span class="property">stderr</span> .<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, <span class="function"><span class="params">data</span> =&gt;</span>&#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">_ctx</span>.<span class="property">socket</span>.<span class="title function_">emit</span>(<span class="string">&#x27;building&#x27;</span>,data.<span class="title function_">toString</span>())</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">exec</span>(<span class="params">command,args,options</span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> win32 = process.<span class="property">platform</span> === <span class="string">&#x27;win32&#x27;</span>;</span><br><span class="line">  <span class="keyword">const</span> cmd = win32 ? <span class="string">&#x27;cmd&#x27;</span>: command</span><br><span class="line">  <span class="keyword">const</span> cmdArgs = win32  ?  [<span class="string">&#x27;/c&#x27;</span>].<span class="title function_">concat</span>(command,args) : args;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>).<span class="title function_">spawn</span>(cmd, cmdArgs,options || &#123;&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>6-5 云构建任务执行逻辑开发</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// app/io/controller/build.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> <span class="title function_">build</span>(cloudBuildTask,socket,helper)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">build</span>(<span class="params">cloudBuildTask,socket,helper</span>) &#123;</span><br><span class="line">  socket.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;build&#x27;</span>,&#123;</span><br><span class="line">    <span class="attr">message</span>:<span class="string">&#x27;开始启动云构建&#x27;</span></span><br><span class="line">  &#125;))</span><br><span class="line">  <span class="keyword">const</span> buildRes = <span class="keyword">await</span> cloudBuildTask.<span class="title function_">build</span>()</span><br><span class="line">  <span class="keyword">if</span>(!buildRes || <span class="title class_">Object</span>.<span class="title function_">is</span>(buildRes.<span class="property">code</span>,<span class="variable constant_">FAILED</span>))&#123; <span class="comment">//  downlod下载失败</span></span><br><span class="line">    socket.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;build failed&#x27;</span>,&#123;</span><br><span class="line">      <span class="attr">message</span>:<span class="string">&#x27;云构建任务执行失败&#x27;</span></span><br><span class="line">    &#125;))</span><br><span class="line">    <span class="keyword">return</span> </span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    socket.<span class="title function_">emit</span>(<span class="string">&#x27;build&#x27;</span>,helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;build&#x27;</span>,&#123;</span><br><span class="line">      <span class="attr">message</span>:<span class="string">&#x27;云构建任务执行成功&#x27;</span></span><br><span class="line">    &#125;))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// app/models/CloudBuildTask.js</span></span><br><span class="line"> <span class="keyword">async</span> <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">   <span class="keyword">let</span> res = <span class="literal">true</span></span><br><span class="line">   <span class="keyword">if</span>(<span class="title function_">checkCommand</span>(<span class="variable language_">this</span>.<span class="property">_buildCmd</span>))&#123;</span><br><span class="line">     res = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">execCmd</span>(<span class="variable language_">this</span>.<span class="property">_buildCmd</span>)</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">     res = <span class="literal">false</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">false</span> ? <span class="variable language_">this</span>.<span class="title function_">success</span>():<span class="variable language_">this</span>.<span class="title function_">failed</span>()</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">checkCommand</span>(<span class="params">command</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(command)&#123;</span><br><span class="line">    <span class="keyword">const</span> commands = command.<span class="title function_">split</span>(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span>(commands.<span class="property">length</span> === <span class="number">0</span> || [<span class="string">&#x27;npm&#x27;</span>,<span class="string">&#x27;cnpm&#x27;</span>].<span class="title function_">indexOf</span>(commands[<span class="number">0</span>])&lt;<span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;     </span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>最后在客户端经过测试，看到 build的dist目录没有构建成功：这是因为我的test源码不是一个可以打包的项目。<br>于是重写创建项目，并且publish 的时候输入参数 --refreshServer  --refreshOwner ，构建成功。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web架构之脚手架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web架构之脚手架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Week29-脚手架发布模式git自动化流程开发</title>
      <link href="/Week29-%E8%84%9A%E6%89%8B%E6%9E%B6%E5%8F%91%E5%B8%83%E6%A8%A1%E5%BC%8Fgit%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%81%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
      <url>/Week29-%E8%84%9A%E6%89%8B%E6%9E%B6%E5%8F%91%E5%B8%83%E6%A8%A1%E5%BC%8Fgit%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%81%E7%A8%8B%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章目录排版做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="第一章-本周导学">第一章 本周导学</h2><p><strong>1-1 本周整体介绍和学习方法</strong></p><blockquote><ul><li>GitFlow实战</li><li>通过simple-git操作git命令</li><li>Github和Gitee openAPI接入</li><li>本周加餐：Node最佳实践分享</li></ul></blockquote><p><strong>主要内容</strong></p><blockquote><ul><li>Git仓库初始化(利用Github和Gitee OpenAPI)</li><li>本地Git初始化</li><li>GitFlow流程实现(代码自动提交)</li></ul></blockquote><p><strong>附赠内容</strong></p><blockquote><p>Node项目最佳实践：</p><ul><li>项目结构最佳实践</li><li>异常处理最佳实践</li><li>测试最佳实践</li><li>发布上线最佳实践</li><li>安全最佳实践</li></ul></blockquote><h2 id="第二章-Git-Flow-模块架构设计">第二章 Git Flow 模块架构设计</h2><p><strong>2-1 GitFlow模块架构设计</strong><br><a href="https://www.processon.com/embed/610bf5d81e0853337b1eb8bd">点击查看【processon】</a><br><strong>2-2 GitFlow流程回顾</strong></p><p><a href="https://www.processon.com/embed/60f2487c1efad41bbea86894">点击查看【processon】</a></p><h2 id="第三章-Github-Gitee-API-接入">第三章 Github&amp;Gitee API 接入</h2><p><strong>3-1 创建Git类</strong></p><blockquote><ol><li>首先创建一个新的package–git，用来管理与git相关的所有内容</li></ol><ul><li>lerna create git models/git</li></ul><ol start="2"><li>在上周代码写完this.prepare()之后（commands/publish/lib/index.js中），我们就需要去调用这个新建的git包，实例化出来一个对象，并将projectInfo的信息传递进去</li></ol><ul><li>const Git = require(‘@cloudscope-cli/git’)</li><li>const git = new Git()</li></ul><ol start="3"><li>我们在新建的 models/git/lib/index.js中新建一个Git类，本节代码内容为：</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">SimpleGit</span> = <span class="built_in">require</span>(<span class="string">&#x27;simple-git&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Git</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">&#123;name, version, dir&#125;</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">version</span> = version</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">dir</span> = dir</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">git</span> = <span class="title class_">SimpleGit</span>(dir)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">gitServer</span> = <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">prepare</span>(<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">init</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Git init&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">Git</span>;</span><br></pre></td></tr></table></figure><p><strong>3-2 用户主目录检查逻辑开发</strong></p><blockquote><p>本节的主要代码为在Class Git中编写prepare方法，检查用户主目录是否存在</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">SimpleGit</span> = <span class="built_in">require</span>(<span class="string">&#x27;simple-git&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> userHome = <span class="built_in">require</span>(<span class="string">&#x27;user-home&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> log = <span class="built_in">require</span>(<span class="string">&#x27;@cloudscope-cli/log&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> fse = <span class="built_in">require</span>(<span class="string">&#x27;fs-extra&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">DEFAULT_CLI_HOME</span> = <span class="string">&#x27;.cloudscope-cli&#x27;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Git</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">&#123;name, version, dir&#125;</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">version</span> = version</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">dir</span> = dir</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">git</span> = <span class="title class_">SimpleGit</span>(dir)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">gitServer</span> = <span class="literal">null</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">homePath</span> = <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">prepare</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">checkHomePath</span>();<span class="comment">// 检查缓存主目录</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">checkHomePath</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable language_">this</span>.<span class="property">homePath</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(process.<span class="property">env</span>.<span class="property">CLI_HOME_PATH</span>)&#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">homePath</span> = process.<span class="property">env</span>.<span class="property">CLI_HOME_PATH</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">homePath</span> = path.<span class="title function_">resolve</span>(userHome,<span class="variable constant_">DEFAULT_CLI_HOME</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        log.<span class="title function_">verbose</span>(<span class="string">&#x27;home:&#x27;</span>,<span class="variable language_">this</span>.<span class="property">homePath</span> )</span><br><span class="line">        fse.<span class="title function_">ensureDirSync</span>(<span class="variable language_">this</span>.<span class="property">homePath</span>);</span><br><span class="line">        <span class="keyword">if</span>(!fs.<span class="title function_">existsSync</span>(<span class="variable language_">this</span>.<span class="property">homePath</span>))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;用户主目录获取失败！&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">init</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Git init&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">Git</span>;</span><br></pre></td></tr></table></figure><blockquote><p>本节对path/fs/user-home/fs-extra进行简单回顾。</p><ul><li>path：node内置，path模块提供了处理文件和目录的路径的实用工具。<ul><li><strong>path.dirname(path)</strong> ,返回something(文件或文件夹)所在的文件目录。</li><li><strong>path.extname(path)</strong>:返回最后一次出现**.**字符到字符串的结尾</li><li><strong>path.isAbsolute(path)</strong>:确定这个path路径是否为绝对路径。</li><li><strong>path.join([…paths])</strong>:路径拼接</li><li>**path.parse(path):**将路径返回成一个对象{root,dir,name,ext,base}</li><li><strong>path.resolve(path):<strong>将路径或路径片段的序列解析为</strong>绝对路径</strong>，给定的路径序列从右向左处理</li><li>**path.seq:**window上是\，Mac上是/</li></ul></li><li>fs：node内置，文件系统<ul><li>**fs.existsSync(path):**如果路径存在返回true，不存在返回false</li></ul></li><li>user-home\fs-extra:第三方</li></ul></blockquote><p><strong>3-3 选择远程Git仓库逻辑开发</strong></p><blockquote><ul><li>上一节的内容总结一句大白话就是：获取 /User/username/.cloudscope-cli目录，如果没有就创建。</li><li>本节的内容一句话总结就是实现了一个<strong>checkGitServer</strong>方法，这个方法的主要功能是检查在上文提到的.cloudscope-cli下是否有.git/.git-server文件，没有的话通过 inquirer询问创建</li><li>且在 @cloudscope-cli/utils下新建了** readFile**和writeFile方法</li><li>并且添加了一个参数：refreshServer，如果有这个参数就判断是否重写.git-server文件</li></ul></blockquote><p>本节新开发添加代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; readFile,writeFile &#125; = <span class="built_in">require</span>(<span class="string">&#x27;@cloudscope-cli/utils&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> inquirer = <span class="built_in">require</span>(<span class="string">&#x27;inquirer&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">DEFAULT_CLI_HOME</span> = <span class="string">&#x27;.cloudscope-cli&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">GIT_ROOT_DIR</span> = <span class="string">&#x27;.git&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">GIT_SERVER_FILE</span> = <span class="string">&#x27;.git_server&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">GITHUB</span> = <span class="string">&#x27;github&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">GITEE</span> =<span class="string">&#x27;gitee&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">GIT_SERVER_TYPE</span> = [&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;Github&#x27;</span>,</span><br><span class="line">    <span class="attr">value</span>: <span class="variable constant_">GITHUB</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;Gitee&#x27;</span>,</span><br><span class="line">    <span class="attr">value</span>: <span class="variable constant_">GITEE</span></span><br><span class="line">&#125;]  </span><br><span class="line"></span><br><span class="line"> <span class="keyword">async</span> <span class="title function_">prepare</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">checkHomePath</span>();<span class="comment">// 检查缓存主目录</span></span><br><span class="line">        <span class="keyword">await</span>  <span class="variable language_">this</span>.<span class="title function_">checkGitServer</span>();<span class="comment">//检查用户远程仓库类型</span></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">checkGitServer</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> gitServerPath = <span class="variable language_">this</span>.<span class="title function_">createPath</span>(<span class="variable constant_">GIT_SERVER_FILE</span>)</span><br><span class="line">        <span class="keyword">let</span> gitServer = <span class="title function_">readFile</span>(gitServerPath)</span><br><span class="line">        <span class="keyword">if</span>(!gitServer)&#123; <span class="comment">// 如果没有读取到.git-server文件中的内容</span></span><br><span class="line">            gitServer = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">choiceServer</span>(gitServerPath)</span><br><span class="line">            log.<span class="title function_">success</span>(<span class="string">&#x27;git server 写入成功&#x27;</span>,<span class="string">`<span class="subst">$&#123;gitServer&#125;</span> -&gt; <span class="subst">$&#123;gitServerPath&#125;</span>`</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123; <span class="comment">// 如果读取到了 内容</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">refreshServer</span>)&#123; <span class="comment">// 是否重写标识</span></span><br><span class="line">                <span class="keyword">const</span> refresh = (<span class="keyword">await</span> inquirer.<span class="title function_">prompt</span>([&#123;</span><br><span class="line">                    <span class="attr">type</span>:<span class="string">&#x27;confirm&#x27;</span>,</span><br><span class="line">                    <span class="attr">name</span>:<span class="string">&#x27;ifContinue&#x27;</span>,</span><br><span class="line">                    <span class="attr">default</span>:<span class="literal">false</span>,</span><br><span class="line">                    <span class="attr">message</span>:<span class="string">&#x27;当前.git-server目录已存在，是否要重写选择托管平台？&#x27;</span></span><br><span class="line">                &#125;])).<span class="property">ifContinue</span></span><br><span class="line">                <span class="keyword">if</span>(refresh)&#123;</span><br><span class="line">                    gitServer = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">choiceServer</span>(gitServerPath)</span><br><span class="line">                    log.<span class="title function_">success</span>(<span class="string">&#x27;git server 重写成功&#x27;</span>,<span class="string">`<span class="subst">$&#123;gitServer&#125;</span> -&gt; <span class="subst">$&#123;gitServerPath&#125;</span>`</span>)</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    log.<span class="title function_">success</span>(<span class="string">&#x27;git server 获取成功 &#x27;</span>, gitServer)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123; <span class="comment">//不重写，直接读取</span></span><br><span class="line">                log.<span class="title function_">success</span>(<span class="string">&#x27;git server 获取成功 &#x27;</span>, gitServer)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">gitServer</span> = <span class="variable language_">this</span>.<span class="title function_">createServer</span>(gitServer)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">choiceServer</span>(<span class="params">gitServerPath</span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> gitServer = (<span class="keyword">await</span> inquirer.<span class="title function_">prompt</span>(&#123;</span><br><span class="line">            <span class="attr">type</span>:<span class="string">&#x27;list&#x27;</span>,</span><br><span class="line">            <span class="attr">name</span>:<span class="string">&#x27;server&#x27;</span>,</span><br><span class="line">            <span class="attr">message</span>:<span class="string">&#x27;请选择你想要托管的Git平台&#x27;</span>,</span><br><span class="line">            <span class="attr">default</span>: <span class="variable constant_">GITHUB</span>,</span><br><span class="line">            <span class="attr">choices</span>:<span class="variable constant_">GIT_SERVER_TYPE</span></span><br><span class="line">        &#125;)).<span class="property">server</span>;</span><br><span class="line">        <span class="title function_">writeFile</span>(gitServerPath,gitServer)</span><br><span class="line">        <span class="keyword">return</span> gitServer</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">createPath</span>(<span class="params">file</span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> rootDir = path.<span class="title function_">resolve</span>(<span class="variable language_">this</span>.<span class="property">homePath</span>,<span class="variable constant_">GIT_ROOT_DIR</span>)</span><br><span class="line">        <span class="keyword">const</span> serverDir = path.<span class="title function_">resolve</span>(rootDir,file)</span><br><span class="line">        fse.<span class="title function_">ensureDirSync</span>(rootDir)</span><br><span class="line">        <span class="keyword">return</span> serverDir</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>@cloudscope-cli/utils 下的readFile和writeFile方法实现为使用node自带的fs.readFileSync(path)和fs.writeFileSync(path)方法</p></blockquote><p><strong>3-4 创建GitServer类</strong></p><blockquote><p>本节主要创建了一个GitServer类，并新建Github类和Gitee类分别继承GitServer。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">error</span>(<span class="params">methodName</span>) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`<span class="subst">$&#123;methodName&#125;</span> must be implemented!`</span> )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GitServer</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">type,token</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">type</span>= type</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">token</span> = token</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">setToken</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">error</span>(<span class="string">&#x27;setToken&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">createRepo</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">error</span>(<span class="string">&#x27;createRepo&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">createOrgRepo</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">error</span>(<span class="string">&#x27;createOrgRepo&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getRemote</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">error</span>(<span class="string">&#x27;getRemote&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">getuser</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">error</span>(<span class="string">&#x27;getuser&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">getOrg</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">error</span>(<span class="string">&#x27;getOrg&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">GitServer</span></span><br></pre></td></tr></table></figure><p><strong>3-5 生成远程仓库Token逻辑开发</strong></p><blockquote><p>本节课的主要内容为生成远程仓库Token。</p><ul><li>首先在类Github.js和Gitee.js中分别实现获取帮助文档和相应token的文档方法</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Github.js</span></span><br><span class="line">    <span class="title function_">getSSHKeysUrl</span>(<span class="params"></span>)&#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="string">&#x27;https://gitee.com/profile/sshkeys&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Gitee.js</span></span><br><span class="line"><span class="title function_">getSSHKeysUrl</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;https://gitee.com/profile/sshkeys&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">getTokenHelpUrl</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;https://gitee.com/help/articles/4191&#x27;</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>然后在models/git/index.js中实现获取Giteetoken的方法</p><ul><li>安装了  terminal-link库，且版本号为2.1.1，功能是直接在ternimal中点击跳转链接</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> terminalLink = <span class="built_in">require</span>(<span class="string">&#x27;terminal-link&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">GIT_TOKEN_FILE</span> = <span class="string">&#x27;.git_token&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">checkGitToken</span>(<span class="params"></span>)&#123;</span><br><span class="line">       <span class="keyword">const</span> tokenPath = <span class="variable language_">this</span>.<span class="title function_">createPath</span>(<span class="variable constant_">GIT_TOKEN_FILE</span>)</span><br><span class="line">       <span class="keyword">let</span> token = <span class="title function_">readFile</span>(tokenPath)</span><br><span class="line">       <span class="keyword">if</span>(!token || <span class="variable language_">this</span>.<span class="property">refreshServer</span>)&#123;</span><br><span class="line">           log.<span class="title function_">warn</span>(<span class="variable language_">this</span>.<span class="property">gitServer</span>.<span class="property">type</span> + <span class="string">&#x27; token未生成,请先生成！&#x27;</span> + <span class="variable language_">this</span>.<span class="property">gitServer</span>.<span class="property">type</span> + <span class="string">&#x27; token,&#x27;</span>+<span class="title function_">terminalLink</span>(<span class="string">&#x27;链接&#x27;</span>,<span class="variable language_">this</span>.<span class="property">gitServer</span>.<span class="title function_">getTokenHelpUrl</span>())) ;</span><br><span class="line">           token = (<span class="keyword">await</span> inquirer.<span class="title function_">prompt</span>(&#123;</span><br><span class="line">               <span class="attr">type</span>:<span class="string">&#x27;password&#x27;</span>,</span><br><span class="line">               <span class="attr">name</span>:<span class="string">&#x27;token&#x27;</span>,</span><br><span class="line">               <span class="attr">message</span>:<span class="string">&#x27;请将token复制到这里&#x27;</span>,</span><br><span class="line">               <span class="attr">default</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">           &#125;)).<span class="property">token</span></span><br><span class="line">           <span class="title function_">writeFile</span>(tokenPath,token)</span><br><span class="line">           log.<span class="title function_">success</span>(<span class="string">&#x27;token 写入成功&#x27;</span>,<span class="string">` <span class="subst">$&#123;tokenPath&#125;</span>`</span>)</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           log.<span class="title function_">success</span>(<span class="string">&#x27;token获取成功&#x27;</span>,tokenPath)</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">token</span>  = token</span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">gitServer</span>.<span class="title function_">setToken</span>(token)</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>3-6 Gitee API接入+获取用户组织信息功能开发</strong></p><blockquote><p>本章节主要是Gitee API的接入：获取用户信息和组织信息</p><ul><li>使用第三方库有 axios</li><li>新建的文件有 GitServerRequest.js</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> axios = <span class="built_in">require</span>(<span class="string">&#x27;axios&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">BASE_URL</span> = <span class="string">&#x27;https://gitee.com/api/v5&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GiteeRequest</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">token</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">token</span> = token</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">service</span> = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">            <span class="attr">baseURL</span>:<span class="variable constant_">BASE_URL</span>,</span><br><span class="line">            <span class="attr">timeout</span>:<span class="number">5000</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">service</span>.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">            <span class="function"><span class="params">response</span> =&gt;</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> response.<span class="property">data</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="function"><span class="params">error</span> =&gt;</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(error.<span class="property">response</span> &amp;&amp; error.<span class="property">response</span>.<span class="property">data</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span> error.<span class="property">response</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">get</span>(<span class="params">url,params,headers</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">service</span>(&#123;</span><br><span class="line">            url,</span><br><span class="line">            <span class="attr">params</span>:&#123;</span><br><span class="line">                ...params,</span><br><span class="line">                <span class="attr">access_token</span>:<span class="variable language_">this</span>.<span class="property">token</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">method</span>:<span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">            headers,</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">GiteeRequest</span></span><br></pre></td></tr></table></figure><blockquote><p>index.js主代码主要实现的方法是getUserAndOrgs：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">getUserAndOrgs</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">user</span> = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">gitServer</span>.<span class="title function_">getUser</span>()</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable language_">this</span>.<span class="property">user</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;用户信息获取失败&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">orgs</span> = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">gitServer</span>.<span class="title function_">getOrg</span>(<span class="variable language_">this</span>.<span class="property">user</span>.<span class="property">login</span>)</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable language_">this</span>.<span class="property">orgs</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;组织信息获取失败&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        log.<span class="title function_">success</span>(<span class="variable language_">this</span>.<span class="property">gitServer</span>.<span class="property">type</span> + <span class="string">&#x27; 用户和组织信息获取成功&#x27;</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>3-7 Github API接入开发</strong></p><blockquote><p>本节代码类似于Gitee API，不同点在于，Github API需要在headers中传入token：<em>config</em>.headers[‘Authorization’] =<code>token $&#123;**this**.token&#125;</code><br>然后，基础BASE_URL更换，获取组织URL更换，改动部分代码即可。</p></blockquote><p><strong>3-8 远程仓库类型选择逻辑开发</strong></p><blockquote><p>之前的章节我们选择了Git托管类型，生成了相关托管平台的token，获取到了个人和组织的信息，然后这节我们将要继续选择：确认远程仓库的类型(是个人还是组织)，如果我们拿到的信息只有个人，那么就不显示组织选项。<br>同样，我们要将拿到的个人或者组织登录名(login)以及类型(owner)写入到缓存文件中.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">GIT_OWN_FILE</span> = <span class="string">&#x27;.git_own&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">GIT_LOGIN_FILE</span> = <span class="string">&#x27;.git_login&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">REPO_OWNER_USER</span> = <span class="string">&#x27;user&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">REPO_OWNER_ORG</span> = <span class="string">&#x27;org&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">GIT_OWNER_TYPE</span> = [&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;个人&#x27;</span>,</span><br><span class="line">    <span class="attr">value</span>: <span class="variable constant_">REPO_OWNER_USER</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;组织&#x27;</span>,</span><br><span class="line">    <span class="attr">value</span>: <span class="variable constant_">REPO_OWNER_ORG</span></span><br><span class="line">&#125;]</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">GIT_OWNER_TYPE_ONLY</span> = [&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;个人&#x27;</span>,</span><br><span class="line">    <span class="attr">value</span>: <span class="variable constant_">REPO_OWNER_USER</span></span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line">………………</span><br><span class="line"><span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">checkGitOwner</span>();<span class="comment">//确认远程仓库类型</span></span><br><span class="line">………………</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">checkGitOwner</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> ownerPath =<span class="variable language_">this</span>.<span class="title function_">createPath</span>(<span class="variable constant_">GIT_OWN_FILE</span>) ;</span><br><span class="line">        <span class="keyword">const</span> loginPath =<span class="variable language_">this</span>.<span class="title function_">createPath</span>(<span class="variable constant_">GIT_LOGIN_FILE</span>) ;</span><br><span class="line">        <span class="keyword">let</span> owner = <span class="title function_">readFile</span>(ownerPath)</span><br><span class="line">        <span class="keyword">let</span> login = <span class="title function_">readFile</span>(loginPath)</span><br><span class="line">        <span class="keyword">if</span>(!owner || !login || <span class="variable language_">this</span>.<span class="property">refreshOwner</span>)&#123;</span><br><span class="line">            owner = (<span class="keyword">await</span> inquirer.<span class="title function_">prompt</span>(&#123;</span><br><span class="line">                <span class="attr">type</span>:<span class="string">&#x27;list&#x27;</span>,</span><br><span class="line">                <span class="attr">name</span>:<span class="string">&#x27;owner&#x27;</span>,</span><br><span class="line">                <span class="attr">message</span>:<span class="string">&#x27;请选择远程仓库类型&#x27;</span>,</span><br><span class="line">                <span class="attr">default</span>: <span class="variable constant_">REPO_OWNER_USER</span>,</span><br><span class="line">                <span class="attr">choices</span>:<span class="variable language_">this</span>.<span class="property">orgs</span>.<span class="property">length</span> &gt; <span class="number">0</span> ? <span class="variable constant_">GIT_OWNER_TYPE</span> : <span class="variable constant_">GIT_OWNER_TYPE_ONLY</span></span><br><span class="line">            &#125;)).<span class="property">owner</span></span><br><span class="line">            <span class="keyword">if</span>(owner === <span class="variable constant_">REPO_OWNER_USER</span>)&#123;</span><br><span class="line">                login = <span class="variable language_">this</span>.<span class="property">user</span>.<span class="property">login</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                login = (<span class="keyword">await</span> inquirer.<span class="title function_">prompt</span>(&#123;</span><br><span class="line">                    <span class="attr">type</span>:<span class="string">&#x27;list&#x27;</span>,</span><br><span class="line">                    <span class="attr">name</span>:<span class="string">&#x27;login&#x27;</span>,</span><br><span class="line">                    <span class="attr">message</span>:<span class="string">&#x27;请选择&#x27;</span>,</span><br><span class="line">                    <span class="attr">choices</span>:<span class="variable language_">this</span>.<span class="property">orgs</span>.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span>(&#123;</span><br><span class="line">                        <span class="attr">name</span>:item.<span class="property">login</span>,</span><br><span class="line">                        <span class="attr">value</span>: item.<span class="property">login</span>,</span><br><span class="line">                    &#125;))</span><br><span class="line">                &#125;)).<span class="property">login</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_">writeFile</span>(ownerPath,owner)</span><br><span class="line">            <span class="title function_">writeFile</span>(loginPath,login)</span><br><span class="line">            log.<span class="title function_">success</span>(<span class="string">&#x27;owner 写入成功&#x27;</span>,<span class="string">`<span class="subst">$&#123;owner&#125;</span> -&gt; <span class="subst">$&#123;ownerPath&#125;</span>`</span>)</span><br><span class="line">            log.<span class="title function_">success</span>(<span class="string">&#x27;login 写入成功&#x27;</span>,<span class="string">`<span class="subst">$&#123;login&#125;</span> -&gt; <span class="subst">$&#123;loginPath&#125;</span>`</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            log.<span class="title function_">success</span>(<span class="string">&#x27;owner 读取成功&#x27;</span>,<span class="string">`<span class="subst">$&#123;owner&#125;</span> -&gt; <span class="subst">$&#123;ownerPath&#125;</span>`</span>)</span><br><span class="line">            log.<span class="title function_">success</span>(<span class="string">&#x27;login 读取成功&#x27;</span>,<span class="string">`<span class="subst">$&#123;login&#125;</span> -&gt; <span class="subst">$&#123;loginPath&#125;</span>`</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">owner</span> = owner</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">login</span> = login</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="第四章-GitFlow-初始化流程开发">第四章 GitFlow 初始化流程开发</h2><p><strong>4-1 Gitee获取和创建仓库API接入</strong></p><blockquote><ul><li>这节的代码，出了一个小bug，调试到了天亮,bug方法的实现为下面示例50行：this.handleResponse(response)，课程代码讲到在获取一个仓库的API时没有status参数，经测试是有的。</li><li>本节<strong>主要</strong>完成的功能有：<ul><li>检查并创建远程仓库 **checkRepo **方法实现</li><li>GiteeRequest添加post请求</li><li>Gitee类实现 **createRepo()**和 <strong>getRepo()</strong> 方法</li></ul></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">checkRepo</span>(); <span class="comment">//  检查并创建远程仓库</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//models/git/lib/index.js</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">checkRepo</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">let</span> repo = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">gitServer</span>.<span class="title function_">getRepo</span>(<span class="variable language_">this</span>.<span class="property">login</span>,<span class="variable language_">this</span>.<span class="property">name</span>)</span><br><span class="line">  log.<span class="title function_">verbose</span>(<span class="string">&#x27;repo&#x27;</span>,repo)</span><br><span class="line">  <span class="keyword">if</span>(!repo)&#123; <span class="comment">//如果远程仓库不存在，就去创建</span></span><br><span class="line">    <span class="keyword">let</span> spinner = <span class="title function_">spinnerStart</span>(<span class="string">&#x27;开始创建远程仓库&#x27;</span>)</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">owner</span> === <span class="variable constant_">REPO_OWNER_USER</span>)&#123;</span><br><span class="line">        repo = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">gitServer</span>.<span class="title function_">createRepo</span>(<span class="variable language_">this</span>.<span class="property">name</span>)</span><br><span class="line">        log.<span class="title function_">success</span>(<span class="string">&#x27;用户个人远程仓库创建成功！&#x27;</span>)</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">gitServer</span>.<span class="title function_">createOrgRepo</span>(<span class="variable language_">this</span>.<span class="property">name</span>,<span class="variable language_">this</span>.<span class="property">login</span>)</span><br><span class="line">        log.<span class="title function_">success</span>(<span class="string">&#x27;用户组织远程仓库创建成功1&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      log.<span class="title function_">error</span>(error)</span><br><span class="line">    &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">      spinner.<span class="title function_">stop</span>(<span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!repo)&#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;远程仓库创建失败&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    log.<span class="title function_">success</span>(<span class="string">&#x27;远程仓库已存在且获取成功！&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">repo</span> = repo</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//models/git/lib/GiteeRequest.js</span></span><br><span class="line"> <span class="title function_">post</span>(<span class="params">url,data,headers</span>)&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">service</span>(&#123;</span><br><span class="line">     url,</span><br><span class="line">     <span class="attr">params</span>:&#123;</span><br><span class="line">       <span class="attr">access_token</span>:<span class="variable language_">this</span>.<span class="property">token</span>,</span><br><span class="line">     &#125;,</span><br><span class="line">     data,</span><br><span class="line">     <span class="attr">method</span>:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">     headers</span><br><span class="line">   &#125;)</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//models/git/lib/Gitee.js</span></span><br><span class="line"><span class="title function_">getRepo</span>(<span class="params">login,name</span>)&#123;</span><br><span class="line">  <span class="comment">//GET https://gitee.com/api/v5/repos/&#123;owner&#125;/&#123;repo&#125;</span></span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">request</span></span><br><span class="line">    .<span class="title function_">get</span>(<span class="string">`/repos/<span class="subst">$&#123;login&#125;</span>/<span class="subst">$&#123;name&#125;</span>`</span>)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">handleResponse</span>(response)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">createRepo</span>(<span class="params">name</span>)&#123;</span><br><span class="line">  <span class="comment">// POST https://gitee.com/api/v5/user/repos</span></span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">request</span>.<span class="title function_">post</span>(<span class="string">&#x27;/user/repos&#x27;</span>,&#123;</span><br><span class="line">    name,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4-2 Github获取和创建仓库API接入</strong></p><blockquote><p>与Gitee获取和创建仓库API类似。GithubRequest同样实现了post方法。<br>类Github同样实现了getRepo和createRepo方法。</p></blockquote><p><strong>4-3 Github&amp;Gitee组织仓库创建API接入</strong></p><blockquote><p>本节内容较为简单，实现了远程创建组织仓库API</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">createOrgRepo</span>(<span class="params">name,login</span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">request</span>.<span class="title function_">post</span>(<span class="string">`/orgs/<span class="subst">$&#123;login&#125;</span>/repos`</span>,&#123;</span><br><span class="line">    name</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    <span class="attr">accept</span>:<span class="string">&#x27;application/vnd.github.v3+json&#x27;</span></span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><p><strong>4-4 gitignore文件检查</strong></p><blockquote><p>提交准备工作：有些项目没有默认创建.gitignore,因此会引发提交大量无用或无关代码。<br>因此，我们需要检查并创建.gitignore文件的方法<br>这里需要注意的是安装的.gitignore安装目录为当前执行文件，而不是缓存文件</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">GIT_IGNORE_FILE</span>=<span class="string">&#x27;.gitignore&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">checkGitIgnore</span>();<span class="comment">//检查并创建.gitignore文件</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">checkGitIgnore</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> gitIgnorePath = path.<span class="title function_">resolve</span>(<span class="variable language_">this</span>.<span class="property">dir</span>,<span class="variable constant_">GIT_IGNORE_FILE</span>)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(gitIgnorePath)</span><br><span class="line">        <span class="keyword">if</span>(!fs.<span class="title function_">existsSync</span>(gitIgnorePath))&#123;</span><br><span class="line">            <span class="title function_">writeFile</span>(gitIgnorePath,<span class="string">`.DS_Store</span></span><br><span class="line"><span class="string">node_modules</span></span><br><span class="line"><span class="string">/dist</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># local env files</span></span><br><span class="line"><span class="string">.env.local</span></span><br><span class="line"><span class="string">.env.*.local</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Log files</span></span><br><span class="line"><span class="string">npm-debug.log*</span></span><br><span class="line"><span class="string">yarn-debug.log*</span></span><br><span class="line"><span class="string">yarn-error.log*</span></span><br><span class="line"><span class="string">pnpm-debug.log*</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Editor directories and files</span></span><br><span class="line"><span class="string">.idea</span></span><br><span class="line"><span class="string">.vscode</span></span><br><span class="line"><span class="string">*.suo</span></span><br><span class="line"><span class="string">*.ntvs*</span></span><br><span class="line"><span class="string">*.njsproj</span></span><br><span class="line"><span class="string">*.sln</span></span><br><span class="line"><span class="string">*.sw?</span></span><br><span class="line"><span class="string">`</span>)</span><br><span class="line">            log.<span class="title function_">success</span>(<span class="string">`自动写入<span class="subst">$&#123;GIT_IGNORE_FILE&#125;</span>文件成功！`</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>4-5 git本地仓库初始化和远程仓库绑定</strong></p><blockquote><p>本节主要完成的功能为本地的仓库的初始化：即执行git init方法和git addRemote方法。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">init</span>(); <span class="comment">//完成本地仓库初始化</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">async</span> <span class="title function_">init</span>(<span class="params"></span>)&#123;</span><br><span class="line">   <span class="keyword">if</span>(<span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">getRemote</span>())&#123;</span><br><span class="line">     <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">initAndAddRemote</span>();</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">initAndAddRemote</span>(<span class="params"></span>)&#123;</span><br><span class="line">  log.<span class="title function_">info</span>(<span class="string">&#x27;执行git初始化&#x27;</span>)</span><br><span class="line">  <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">git</span>.<span class="title function_">init</span>(<span class="variable language_">this</span>.<span class="property">dir</span>)</span><br><span class="line">  log.<span class="title function_">info</span>(<span class="string">&#x27;添加git remote&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> remotes = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">git</span>.<span class="title function_">getRemotes</span>();</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;git remotes&#x27;</span>,remotes)</span><br><span class="line">  <span class="keyword">if</span>(!remotes.<span class="title function_">find</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">name</span> === <span class="string">&#x27;origin&#x27;</span>))&#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">git</span>.<span class="title function_">addRemote</span>(<span class="string">&#x27;origin&#x27;</span>,<span class="variable language_">this</span>.<span class="property">remote</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="title function_">getRemote</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> gitPath = path.<span class="title function_">resolve</span>(<span class="variable language_">this</span>.<span class="property">dir</span>,<span class="variable constant_">GIT_ROOT_DIR</span>)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">remote</span> = <span class="variable language_">this</span>.<span class="property">gitServer</span>.<span class="title function_">getRemote</span>(<span class="variable language_">this</span>.<span class="property">login</span>,<span class="variable language_">this</span>.<span class="property">name</span>)</span><br><span class="line">  <span class="keyword">if</span>(fs.<span class="title function_">existsSync</span>(gitPath))&#123;</span><br><span class="line">    log.<span class="title function_">success</span>(<span class="string">&#x27;git已完成初始化&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4-6 git自动化提交功能开发</strong></p><blockquote><p>上一节的流程在本地实现了两个操作</p><ul><li><strong>git init</strong></li><li><strong>git remote add origin ‘git@github.com:${login}/${name}.git’</strong></li></ul></blockquote><p>紧接着这一节按照本地的操作，我们应该实现  git add. / git commit -m’的操作。</p><blockquote><p>本节实现initCommit()方法：</p><ul><li>首先检查是否有代码冲突</li><li>然后检查代码是否有未提交</li><li>然后判断远程分支是否已存在<ul><li>不存在的话直接push代码</li><li>存在的话就需要使用git pull去拉取代码，且使用 ‘–allow-unrelated-histories:all’:null 参数。</li></ul></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">async</span> <span class="title function_">initCommit</span>(<span class="params"></span>)&#123;</span><br><span class="line">   <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">checkConflicted</span>(); <span class="comment">//检查代码冲突</span></span><br><span class="line">   <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">checkNotCommitted</span>();<span class="comment">//检查代码未提交</span></span><br><span class="line">   <span class="keyword">if</span>(<span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">checkRemoteMaster</span>())&#123; <span class="comment">//判断远程仓库master分支是否已存在</span></span><br><span class="line">     <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">pullRemoteRepo</span>(<span class="string">&#x27;master&#x27;</span>,&#123;</span><br><span class="line">       <span class="string">&#x27;--allow-unrelated-histories&#x27;</span>:<span class="literal">null</span></span><br><span class="line">     &#125;)</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">pushRemoteRepo</span>(<span class="string">&#x27;master&#x27;</span>)  <span class="comment">//如果不存在直接push代码</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">async</span> <span class="title function_">checkConflicted</span>(<span class="params"></span>)&#123;</span><br><span class="line">  log.<span class="title function_">info</span>(<span class="string">&#x27;代码冲突检查&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> status = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">git</span>.<span class="title function_">status</span>()</span><br><span class="line">  <span class="keyword">if</span>(status.<span class="property">conflicted</span>.<span class="property">length</span> &gt; <span class="number">0</span> )&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;当然代码存在冲突，请手动处理合并后再试&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  log.<span class="title function_">success</span>(<span class="string">&#x27;代码冲突检查通过&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">checkNotCommitted</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> status = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">git</span>.<span class="title function_">status</span>()</span><br><span class="line">  <span class="keyword">if</span>(status.<span class="property">not_added</span>.<span class="property">length</span> &gt;<span class="number">0</span> || </span><br><span class="line">     status.<span class="property">created</span>.<span class="property">length</span> &gt;<span class="number">0</span> ||</span><br><span class="line">     status.<span class="property">deleted</span>.<span class="property">length</span>&gt;<span class="number">0</span> ||</span><br><span class="line">     status.<span class="property">modified</span>.<span class="property">length</span>&gt;<span class="number">0</span> ||</span><br><span class="line">     status.<span class="property">renamed</span>.<span class="property">length</span>&gt;<span class="number">0</span></span><br><span class="line">    )&#123;</span><br><span class="line">    log.<span class="title function_">verbose</span>(<span class="string">&#x27;status&#x27;</span>,status)</span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">git</span>.<span class="title function_">add</span>(status.<span class="property">not_added</span>)</span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">git</span>.<span class="title function_">add</span>(status.<span class="property">created</span>)</span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">git</span>.<span class="title function_">add</span>(status.<span class="property">deleted</span>)</span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">git</span>.<span class="title function_">add</span>(status.<span class="property">modified</span>)</span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">git</span>.<span class="title function_">add</span>(status.<span class="property">renamed</span>)</span><br><span class="line">    <span class="keyword">let</span> message;</span><br><span class="line">    <span class="keyword">while</span> (!message) &#123;</span><br><span class="line">      message = (<span class="keyword">await</span> inquirer.<span class="title function_">prompt</span>(&#123;</span><br><span class="line">        <span class="attr">type</span>:<span class="string">&#x27;text&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;message&#x27;</span>,</span><br><span class="line">        <span class="attr">message</span>:<span class="string">&#x27;请输入commit信息&#x27;</span></span><br><span class="line">      &#125;)).<span class="property">message</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">git</span>.<span class="title function_">commit</span>(message)</span><br><span class="line">    log.<span class="title function_">success</span>(<span class="string">&#x27;本次commit提交成功！&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="title function_">checkRemoteMaster</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">// git ls-remote</span></span><br><span class="line">  <span class="keyword">return</span> (<span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">git</span>.<span class="title function_">listRemote</span>([<span class="string">&#x27;--refs&#x27;</span>])).<span class="title function_">indexOf</span>(<span class="string">&#x27;refs/heads/master&#x27;</span>) &gt;=<span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="title function_">pushRemoteRepo</span>(<span class="params">branchName</span>)&#123;</span><br><span class="line">  log.<span class="title function_">info</span>(<span class="string">`推送代码至<span class="subst">$&#123;branchName&#125;</span> 分支`</span>)</span><br><span class="line">  <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">git</span>.<span class="title function_">push</span>(<span class="string">&#x27;origin&#x27;</span>,branchName)</span><br><span class="line">  log.<span class="title function_">success</span>(<span class="string">&#x27;推送代码成功！&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="title function_">pullRemoteRepo</span>(<span class="params">branchName,options</span>)&#123;</span><br><span class="line">  log.<span class="title function_">info</span>(<span class="string">`同步远程<span class="subst">$&#123;branchName&#125;</span>分支代码`</span>)</span><br><span class="line">  <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">git</span>.<span class="title function_">pull</span>(<span class="string">&#x27;origin&#x27;</span>,branchName,options)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function"><span class="params">err</span>=&gt;</span>&#123;</span><br><span class="line">    log.<span class="title function_">error</span>(err.<span class="property">message</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第五章-GitFlow本地仓库代码自动提交">第五章 GitFlow本地仓库代码自动提交</h2><p><strong>5-1 自动生成开发分支原理讲解1</strong></p><blockquote><p>第一遍：这节课听的有点懵逼。</p></blockquote><p><a href="https://www.processon.com/embed/610f8ef87d9c082be335ac23">点击查看【processon】</a></p><p><strong>5-2 自动生成开发分支功能开发</strong></p><blockquote><p>本节主要实现为 获取远程发布分支列表(git ls-remote --refs)和获取远程最新发布分支号(通过正则匹配release分支，并排序获取最新分支)，详细代码如下：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> semver = <span class="built_in">require</span>(<span class="string">&#x27;semver&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">VERSION_RELEASE</span> = <span class="string">&#x27;release&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">VERSION_DEVELOP</span> = <span class="string">&#x27;dev&#x27;</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">async</span> <span class="title function_">commit</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="comment">// 1.生成开发分支</span></span><br><span class="line">        <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">getCorrectVersion</span>()</span><br><span class="line">        <span class="comment">// 2.在开发分支上提交代码</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.合并远程开发分支</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.推送开发分支</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">getCorrectVersion</span>(<span class="params">type</span>)&#123;</span><br><span class="line">         <span class="comment">// 1.获取远程发布分支</span></span><br><span class="line">         <span class="comment">// 规范：release/x.y.z ,dev/x.y.z</span></span><br><span class="line">         <span class="comment">// 版本号递增规范：major/minor/patch</span></span><br><span class="line">         log.<span class="title function_">info</span>(<span class="string">&#x27;获取远程仓库代码分支&#x27;</span>)</span><br><span class="line">         <span class="keyword">const</span> remoteBranchList = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">getRemoteBranchList</span>(<span class="variable constant_">VERSION_RELEASE</span>)</span><br><span class="line">         <span class="keyword">let</span> releaseVersion = <span class="literal">null</span>;</span><br><span class="line">         <span class="keyword">if</span>(remoteBranchList &amp;&amp; remoteBranchList.<span class="property">length</span>&gt;<span class="number">0</span>)&#123;</span><br><span class="line">             releaseVersion = remoteBranchList[<span class="number">0</span>]</span><br><span class="line">         &#125;</span><br><span class="line">         log.<span class="title function_">verbose</span>(<span class="string">&#x27;releaseVersion&#x27;</span>,releaseVersion)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">getRemoteBranchList</span>(<span class="params">type</span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> remoteList = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">git</span>.<span class="title function_">listRemote</span>([<span class="string">&#x27;--refs&#x27;</span>])</span><br><span class="line">        <span class="keyword">let</span> reg;</span><br><span class="line">         <span class="keyword">if</span>(type === <span class="variable constant_">VERSION_RELEASE</span> )&#123;</span><br><span class="line">            reg = <span class="regexp">/.+?refs\/tags\/release\/(\d+\.\d+\.\d+)/g</span></span><br><span class="line">         &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">         &#125;</span><br><span class="line">        <span class="keyword">return</span> remoteList.<span class="title function_">split</span>(<span class="string">&#x27;\n&#x27;</span>).<span class="title function_">map</span>(<span class="function"><span class="params">remote</span> =&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">const</span>  match = reg.<span class="title function_">exec</span>(remote)</span><br><span class="line">            reg.<span class="property">lastIndex</span> = <span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span>(match &amp;&amp;semver.<span class="title function_">valid</span>(match[<span class="number">1</span>]) )&#123;</span><br><span class="line">                <span class="keyword">return</span> match[<span class="number">1</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).<span class="title function_">filter</span>(<span class="function"><span class="params">_</span> =&gt;</span> _ ).<span class="title function_">sort</span>(<span class="function">(<span class="params">a,b</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(semver.<span class="title function_">lte</span>(b,a))&#123;</span><br><span class="line">                <span class="keyword">if</span>(a===b) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        &#125;)</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>5-3 高端操作：自动升级版本号功能开发</strong></p><blockquote><p>根据5-1图示，上两节我们完成的部分为：获取远程发布分支号列表、获取远程最新发布分支号，并在上节代码中经过处理，拿到了最新的远程发布的版本号，接下来我们实现</p><ul><li>判断最新发布版本号是否存在<ul><li>不存在：生成本地开发分支</li><li>存在：与本地开发分支版本号通过semver对比<ul><li>本地分支小于远程最新发布分支版本号<ul><li>通过inquirer询问选择本地版本的升级方式</li><li>获取选择升级的版本号</li><li>重新写入到本地package.json中的version中去</li></ul></li><li>本地分支大于远程最新发布分支版本号</li></ul></li></ul></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">  <span class="variable language_">this</span>.<span class="property">branch</span> = <span class="literal">null</span> <span class="comment">//本地开发分支</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//接着上一节的代码，在getCorrectVersion方法中继续：</span></span><br><span class="line"> <span class="comment">//2.生成本地开发分支</span></span><br><span class="line"><span class="keyword">const</span> devVersion = <span class="variable language_">this</span>.<span class="property">version</span></span><br><span class="line"><span class="keyword">if</span>(!releaseVersion)&#123;  <span class="comment">// 不存在远程发布分支</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">branch</span> = <span class="string">`<span class="subst">$&#123;VERSION_DEVELOP&#125;</span>/<span class="subst">$&#123;devVersion&#125;</span>`</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(semver.<span class="title function_">gt</span>(<span class="variable language_">this</span>.<span class="property">version</span>,releaseVersion))&#123; <span class="comment">//本地分支大于远程发布分支</span></span><br><span class="line">  log.<span class="title function_">info</span>(<span class="string">&#x27;当前版本大于线上最新版本&#x27;</span>,<span class="string">`<span class="subst">$&#123;devVersion&#125;</span> &gt;= <span class="subst">$&#123;releaseVersion&#125;</span>`</span>)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">branch</span> = <span class="string">`<span class="subst">$&#123;VERSION_DEVELOP&#125;</span>/<span class="subst">$&#123;devVersion&#125;</span>`</span></span><br><span class="line">&#125;  <span class="keyword">else</span> &#123;</span><br><span class="line">  log.<span class="title function_">info</span>(<span class="string">&#x27;当前线上版本大于本地版本&#x27;</span>,<span class="string">`<span class="subst">$&#123;releaseVersion&#125;</span> &gt; <span class="subst">$&#123;devVersion&#125;</span>`</span>)</span><br><span class="line">  <span class="keyword">const</span> incType = (<span class="keyword">await</span> inquirer.<span class="title function_">prompt</span>(&#123;</span><br><span class="line">    <span class="attr">type</span>:<span class="string">&#x27;list&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;incType&#x27;</span>,</span><br><span class="line">    <span class="attr">message</span>:<span class="string">&#x27;自动升级版本，请选择升级版本&#x27;</span>,</span><br><span class="line">    <span class="attr">default</span>:<span class="string">&#x27;patch&#x27;</span>,</span><br><span class="line">    <span class="attr">choices</span>:[&#123;</span><br><span class="line">      <span class="attr">name</span>:<span class="string">`小版本(<span class="subst">$&#123;releaseVersion&#125;</span> -&gt; <span class="subst">$&#123;semver.inc(releaseVersion,<span class="string">&#x27;patch&#x27;</span>)&#125;</span>)`</span>,</span><br><span class="line">      <span class="attr">value</span>:<span class="string">&#x27;patch&#x27;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">name</span>:<span class="string">`中版本(<span class="subst">$&#123;releaseVersion&#125;</span> -&gt; <span class="subst">$&#123;semver.inc(releaseVersion,<span class="string">&#x27;minor&#x27;</span>)&#125;</span>)`</span>,</span><br><span class="line">      <span class="attr">value</span>:<span class="string">&#x27;minor&#x27;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">name</span>:<span class="string">`大版本(<span class="subst">$&#123;releaseVersion&#125;</span> -&gt; <span class="subst">$&#123;semver.inc(releaseVersion,<span class="string">&#x27;major&#x27;</span>)&#125;</span>)`</span>,</span><br><span class="line">      <span class="attr">value</span>:<span class="string">&#x27;major&#x27;</span></span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;)).<span class="property">incType</span></span><br><span class="line">  <span class="keyword">const</span> incVersion = semver.<span class="title function_">inc</span>(releaseVersion,incType)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">branch</span> = <span class="string">`<span class="subst">$&#123;VERSION_DEVELOP&#125;</span>/<span class="subst">$&#123;incVersion&#125;</span>`</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">version</span> = incVersion</span><br><span class="line">&#125;</span><br><span class="line">log.<span class="title function_">verbose</span>(<span class="string">&#x27;本地开发分支&#x27;</span>,<span class="variable language_">this</span>.<span class="property">branch</span>)</span><br><span class="line"><span class="comment">//3.将version同步到package.json</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">syncVersionToPackageJson</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="title function_">syncVersionToPackageJson</span>(<span class="params"></span>)&#123;</span><br><span class="line">   <span class="keyword">const</span> pkg = fse.<span class="title function_">readJsonSync</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.dir&#125;</span>/package.json`</span>)</span><br><span class="line">   <span class="keyword">if</span>(pkg &amp;&amp; pkg.<span class="property">version</span>!== <span class="variable language_">this</span>.<span class="property">version</span>)&#123;</span><br><span class="line">     pkg.<span class="property">version</span> = <span class="variable language_">this</span>.<span class="property">version</span></span><br><span class="line">     fse.<span class="title function_">writeJsonSync</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.dir&#125;</span>/package.json`</span>,pkg,&#123;<span class="attr">spaces</span>:<span class="number">2</span>&#125;)</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><strong>5-4 GitFlow代码自动提交流程梳理+stash区检查功能开发</strong></p><p><a href="https://www.processon.com/embed/610fe95c6376891eb94d7e38">点击查看【processon】</a></p><blockquote><p>本地执行git status 有未提交的代码时，执行 git stash将未提交的代码缓存在stash区当中。<br>然后通过git status命令发现，没有代码可提交<br>这里温习了git stash的个命令：git stash / git stash list / git stash pop</p></blockquote><p>本节代码实现</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">checkStash</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">//1. 检查stash list</span></span><br><span class="line">  <span class="keyword">const</span> stashList = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">git</span>.<span class="title function_">stashList</span>()</span><br><span class="line">  <span class="keyword">if</span>(stashList.<span class="property">all</span>.<span class="property">length</span> &gt;<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">git</span>.<span class="property">stash</span>[<span class="string">&#x27;pop&#x27;</span>]</span><br><span class="line">    log.<span class="title function_">success</span>(<span class="string">&#x27;stash pop成功&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>5-5 代码冲突处理+Git代码删除后还原方法讲解</strong></p><blockquote><p>本节以及上一节听的有些懵逼，需要第二遍重新学习</p></blockquote><p><strong>5-6 自动切换开发分支+合并远程分支代码+推送代码功能开发</strong></p><blockquote><p>先暂时略过笔记。</p></blockquote><h2 id="第六章-本周加餐：Node编码最佳实践">第六章 本周加餐：Node编码最佳实践</h2><p><strong>6-1 Node最佳实践学习说明</strong></p><blockquote><ul><li>通过<a href="https://github.com/goldbergyoni/nodebestpractices/blob/master/README.chinese.md">https://github.com/goldbergyoni/nodebestpractices/blob/master/README.chinese.md</a>这个库学习。</li><li>需要有node的实践。<br><strong>6-2 Node项目架构最佳实践</strong><br><strong>6-3 Node异常处理最佳实践</strong></li></ul></blockquote><p><strong>代码示例: 捕获 unresolved 和 rejected 的 promise</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">process.<span class="title function_">on</span>(<span class="string">&#x27;unhandledRejection&#x27;</span>, <span class="function">(<span class="params">reason, p</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//我刚刚捕获了一个未处理的promise rejection, 因为我们已经有了对于未处理错误的后备的处理机制（见下面）, 直接抛出，让它来处理</span></span><br><span class="line">  <span class="keyword">throw</span> reason;</span><br><span class="line">&#125;);</span><br><span class="line">process.<span class="title function_">on</span>(<span class="string">&#x27;uncaughtException&#x27;</span>, <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//我刚收到一个从未被处理的错误，现在处理它，并决定是否需要重启应用</span></span><br><span class="line">  errorManagement.<span class="property">handler</span>.<span class="title function_">handleError</span>(error);</span><br><span class="line">  <span class="keyword">if</span> (!errorManagement.<span class="property">handler</span>.<span class="title function_">isTrustedError</span>(error))</span><br><span class="line">    process.<span class="title function_">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>6-4 Node编码规范最佳实践</strong><br><strong>6-5 Node测试+安全最佳实践</strong></p>]]></content>
      
      
      <categories>
          
          <category> Web架构之脚手架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web架构之脚手架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Week28-脚手架发布模块架构设计和核心流程开发</title>
      <link href="/Week28-%E8%84%9A%E6%89%8B%E6%9E%B6%E5%8F%91%E5%B8%83%E6%A8%A1%E5%9D%97%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
      <url>/Week28-%E8%84%9A%E6%89%8B%E6%9E%B6%E5%8F%91%E5%B8%83%E6%A8%A1%E5%9D%97%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章目录排版做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="第一章：周介绍">第一章：周介绍</h2><blockquote><ul><li>掌握脚手架发布模块的整体架构设计和实现原理</li><li>掌握前端发布流程，并了解history和hash两种路由模式的区别</li><li>深入理解vue-router原理</li></ul></blockquote><p><strong>关键词</strong></p><blockquote><ul><li>前端发布</li><li>前端路由</li><li>vue-router</li></ul></blockquote><h2 id="第二章：脚手架发布流程架构设计">第二章：脚手架发布流程架构设计</h2><p><strong>2-1  脚手架发布功能和流程讲解</strong></p><blockquote><ul><li>不依靠后端或服务端人员，使用脚手架快速对更改的内容进行项目发布。</li><li>imooc-cli --packagePath /Users/liumingzhou/Desktop/imooc-cli/packages/publish<ul><li>git配置检查：保证远程仓库存在</li><li>git自动提交(输入commit信息)：避免本地代码提交的繁杂操作</li><li>云构建+云发布：检查build结果、按照依赖、云构建、云发布、云断开</li></ul></li></ul></blockquote><p><a href="https://www.processon.com/embed/60f240e1e401fd4fe0531bef">点击查看【processon】</a></p><p><strong>2-2 绘制项目发布架构设计图</strong><br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/28-1.7b7b0edh7fs0.webp" alt="28-1"></p><h2 id="第三章：imooc-cli脚手架git-flow-自动化架构设计">第三章：imooc-cli脚手架git flow 自动化架构设计</h2><p><strong>3-1 git flow 基础流程讲解</strong></p><blockquote><ul><li>git flow是2010年 Vincent Driessen设计出来的。</li></ul></blockquote><p><a href="https://www.processon.com/embed/60f2487c1efad41bbea86894">点击查看【processon】</a></p><p><strong>3-2 git flow 多人协作流程讲解（详细讲解大厂git flow流程)</strong><br><a href="https://www.processon.com/embed/60f250be0e3e7453927475af">点击查看【processon】</a></p><p><strong>3-3 脚手架git flow prepare阶段架构设计</strong></p><blockquote><p>ProcessOn画图</p></blockquote><p><strong>3-4 脚手架git flow 执行阶段架构设计 -Init</strong></p><blockquote><p>ProcessOn画图</p></blockquote><h2 id="第四章-imooc-cli-脚手架云构建-云发布架构设计">第四章 imooc-cli 脚手架云构建 + 云发布架构设计</h2><p><strong>4-1 云构建+云发布整体流程设计</strong><br><strong>4-2 云构建+云发布详细流程设计1</strong><br><strong>4-3 云构建+云发布详细流程设计2</strong><br><strong>4-4 深入讲解云发布原理</strong><br><a href="https://www.processon.com/embed/60f258a11e085376da5a1525">点击查看【processon】</a></p><h2 id="第五章：imooc-cli脚手架publish模块开发">第五章：imooc-cli脚手架publish模块开发</h2><p><strong>5-1 创建publish模块</strong></p><blockquote><p>本模块在调试的时候出现问题：</p><ul><li>lerna create @cloudscope-cli/publish commands</li><li>publish模块下lib的index中，打印日志：console.log(‘publish’)</li><li>接着使用webstorm调试exec的时候，debug没有进去。</li><li>参数为：<ul><li>Node parameters:<strong>/Users/liumingzhou/Documents/imoocCourse/Web前端架构师/cloudscope-cli/core/cli/bin/index.js  publish  --targetPath /Users/liumingzhou/Documents/imoocCourse/Web前端架构师/cloudscope-cli/commands/publish</strong></li><li>Working directory: <strong>~/Desktop/test</strong></li></ul></li></ul></blockquote><p>查找原因为：</p><blockquote><ul><li>首先将本地连接全部去除 ： 进入到node的modules目录下将相关的脚手架liugezhou的cloudscope的全部删除</li><li>进入到cloudscope-cli/core/cli 下npm install<ul><li>发现在utils下等有一些package2的包，于是去到相关包下，删除重新安装</li></ul></li><li>npm install正确后，npm link，link完毕之后在本地which cloudscole-cli 看到有了包</li><li>然后在webstorm中调试的  Node parameters中重新配置(在publish之前加空格)</li></ul></blockquote><blockquote><p>最后在一个空目录中输入以下命令进行调试：<br>cloudscope-cli publish --targetPath /Users/liumingzhou/Documents/imoocCourse/Web前端架构师/cloudscope-cli/commands/publish<br>打印出：publish</p></blockquote><p><strong>5-2 publish基本流程开发</strong></p><blockquote><p>接下来的重点就是编写业务代码：cloudscope-cli/commands/publish/lib/index.js</p><ul><li>参考init中的代码，extends Command</li><li>必须实现init和exec方法，否则报错</li><li>该文件中用到的log / Command等需要npm install引入</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Command</span> = <span class="built_in">require</span>(<span class="string">&#x27;@cloudscope-cli/command&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> log = <span class="built_in">require</span>(<span class="string">&#x27;@cloudscope-cli/log&#x27;</span>)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PublishCommand</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Command</span> &#123;</span><br><span class="line">    <span class="title function_">init</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="comment">// 处理参数</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;init&#x27;</span>,<span class="variable language_">this</span>.<span class="property">_argv</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">exec</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> startTime = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>()</span><br><span class="line">            <span class="comment">//1. 初始化检查</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">prepare</span>()</span><br><span class="line">            <span class="comment">//2.Git Flow自动化</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//3.云构建 + 云发布</span></span><br><span class="line">            <span class="keyword">const</span> endTime = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>()</span><br><span class="line">            log.<span class="title function_">info</span>(<span class="string">&#x27;本次发布耗时&#x27;</span>,<span class="title class_">Math</span>.<span class="title function_">floor</span>(endTime-startTime)/<span class="number">1000</span>+<span class="string">&#x27;秒&#x27;</span>)</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            log.<span class="title function_">error</span>(e.<span class="property">message</span>)</span><br><span class="line">            <span class="keyword">if</span>(process.<span class="property">env</span>.<span class="property">LOG_LEVEL</span> === <span class="string">&#x27;verbose&#x27;</span>)&#123;</span><br><span class="line">                log.<span class="title function_">error</span>(e.<span class="property">message</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">   <span class="title function_">prepare</span>(<span class="params"></span>)&#123;</span><br><span class="line">    </span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">init</span>(<span class="params">argv</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PublishCommand</span>(argv)</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = init</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>.<span class="property">PublishCommand</span> = <span class="title class_">PublishCommand</span>;</span><br></pre></td></tr></table></figure><p><strong>5-3 项目发布前预检查流程开发</strong></p><blockquote><p>结合上一节代码，本节主要内容为：</p><ul><li>初始化检查prepare<ul><li>确认项目是否npm项目</li><li>确认项目的package.json中是否包含name/version/scripts/scripts.build</li></ul></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">prepare</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">// 1.确认项目是否为npm项目</span></span><br><span class="line">  <span class="keyword">const</span> projectPath =  process.<span class="title function_">cwd</span>()</span><br><span class="line">  <span class="keyword">const</span> pkgPath = path.<span class="title function_">resolve</span>(projectPath,<span class="string">&#x27;package.json&#x27;</span>)</span><br><span class="line">  log.<span class="title function_">verbose</span>(<span class="string">&#x27;package.json&#x27;</span>,pkgPath)</span><br><span class="line">  <span class="keyword">if</span>(!fs.<span class="title function_">existsSync</span>(pkgPath))&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;package.json不存在&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//2. 确认是否包含name\version\build命令</span></span><br><span class="line">  <span class="keyword">const</span> pkg = fse.<span class="title function_">readJsonSync</span>(pkgPath)</span><br><span class="line">  <span class="keyword">const</span> &#123;name,version,scripts&#125; = pkg</span><br><span class="line">  <span class="keyword">if</span>(!name || !version || !scripts || !scripts.<span class="property">build</span> )&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;package.json信息不全，请检查是否存在name、version和scripts(需提供build命令)&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">projectInfo</span> = &#123;name,version,<span class="attr">dir</span>:projectPath&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第六章-本周加餐：前端路由模式原理和-vue-router-源码讲解">第六章 本周加餐：前端路由模式原理和 vue-router 源码讲解</h2><p><strong>本章内容测试代码上传至：</strong><a href="https://github.com/liugezhou/vue-router-demo">https://github.com/liugezhou/vue-router-demo</a></p><p><strong>6-1 vue-router-next完整运行流程解析</strong></p><blockquote><p><strong>vue-router-next源码解析</strong><br>vue-router常见问题：</p><ul><li>history和hash模式的区别是什么（涉及vue-router路由模式和前端发布原理）</li><li>Vue dev模式下为什么不需要配置history fallback(涉及webpack-dev-server配置)</li><li>我们没有定义router-link和router-view，为什么代码里能直接使用(涉及vue-router初始化流程和Vue插件)</li><li>浏览器如何实现URL变化但页面不刷新(涉及vue-router history模式核心实现原理)</li><li>vue-router如何实现路由匹配(涉及 vue-router Matcher 实现原理)</li><li>router-view如何实现组件动态渲染？(涉及Vue动态组件)</li></ul></blockquote><p>通过imooc-cli脚手架安装一个vue3标准模版</p><blockquote><ul><li>npm install -g @imooc-cli/core</li><li>imooc-cli init test</li><li>npm install -S vue-router（package.json中安装的版本为3.5.2，我们需要手动改成4.0.0-0,然后安装）</li><li>新建三个组件  src/pages/Home.vue | src/pages/Order.vue | src/pages/My.vue</li><li>新建src/router.js</li><li>并在main.js中引入，app.use(router)</li><li>在App.vue中使用<router-link/>和<router-view/></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/router.js</span></span><br><span class="line"><span class="keyword">const</span> &#123;createWebHistory,createRouter&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>,</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&#x27;./pages/Home&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">My</span> <span class="keyword">from</span> <span class="string">&#x27;./pages/My&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Order</span> <span class="keyword">from</span> <span class="string">&#x27;./pages/Order&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;root&#x27;</span>,<span class="attr">redirect</span>:<span class="string">&#x27;/home&#x27;</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/home&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;home&#x27;</span>,<span class="attr">component</span>:<span class="title class_">Home</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/my&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;my&#x27;</span>,<span class="attr">component</span>:<span class="title class_">My</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/order&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;order&#x27;</span>,<span class="attr">component</span>:<span class="title class_">Order</span></span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routerHitory = <span class="title function_">createWebHistory</span>()</span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line"><span class="attr">history</span>:routerHitory,</span><br><span class="line">  routes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br><span class="line"></span><br><span class="line"><span class="comment">// App.vue</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue3&quot;</span>&gt;</span>vue3 template<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&#x27;/home&#x27;</span>&gt;</span>Home | <span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&#x27;/order&#x27;</span>&gt;</span>Order | <span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&#x27;/my&#x27;</span>&gt;</span>My | <span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">router-view</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;Vue3&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-id">#vue3</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">height</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>6-2 vue-router路由模式+history路由部署详细教学</strong></p><p><strong>Vue-router路由模式</strong></p><blockquote><ul><li>hash：createWebHashHistory()</li><li>history：createWebHistory()</li></ul></blockquote><p>hash和history模式的区别</p><blockquote><ul><li>语法结构不同 ：hash添加#意味着一个辅助说明，#后面参数发送改变后并不会加载资源，history模式只要路径改变就会重新请求资源，但是如果页面刷新的话 hash和history都是会重新加载资源的。</li><li>部署方式不同(history部署)<ul><li>npm run build</li><li>nginx 静态网站服务器配置文件如下</li><li>localhost:8081访问后，换不同的路由，页面刷新会显示404</li><li>此时根据Vue文档，Fallback，在nginx配置文件需要加入如下一行代码</li><li>try_files: $uri  $uri/ /index.html;</li></ul></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">       listen       <span class="number">8081</span>;</span><br><span class="line">       server_name resource;</span><br><span class="line">       root /<span class="title class_">Users</span>/liumingzhou/<span class="variable constant_">XXXXX</span>/dist;</span><br><span class="line">       autoindex on;</span><br><span class="line">       location / &#123;</span><br><span class="line">         <span class="comment">//跨域设置</span></span><br><span class="line">          add_header  <span class="title class_">Access</span>-<span class="title class_">Control</span>-<span class="title class_">Allow</span>-<span class="title class_">Origin</span> *;</span><br><span class="line">          <span class="attr">try_files</span>: $uri  $uri/ /index.<span class="property">html</span>;</span><br><span class="line">       &#125;</span><br><span class="line">  <span class="comment">// 缓存设置</span></span><br><span class="line">       add_header   <span class="title class_">Cache</span>-<span class="title class_">Control</span> <span class="string">&quot;no-cache, must-revalidate&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>SEO：hash不友好,实际开发应用为history模式。</li><li>history模式跳转，利用的是浏览器对象中的history.pushState/replaceState/back/go/forward</li><li>hash模式跳转，利用的是浏览器对象中的location.href</li></ul></blockquote><p><strong>6-3 vue-cli源码调试+dev模式history fallback原理讲解</strong></p><p><strong>为什么Vue的dev模式下不需要配置history fallback？</strong></p><blockquote><ul><li>说明：我们在dev模式下启动项目：npm run serve,在scripts中serve，实际执行的命令是  vue-cli-service serve,这个时候我们调试源码就在<strong>node_modules/.bin/vue-cli-service</strong>。如果执行全局 vue create，调试该命令的话我们就需要去本地全局安装的vue源码中去调试。</li></ul></blockquote><blockquote><ul><li>这个<strong>node_modules/.bin/vue-cli-service</strong>其实是link文件，我们通过 <strong>ll node_modules/.bin/vue-cli-service</strong> 就可以看出来。=》…/@vue/cli-service/bin/vue-cli-service.js</li><li>在webstorm中新建Node.js调试，Node parameters为：./node_modules/@vue/cli-service/bin/vue-cli-service.js serve</li><li>然后在上面的文件中打断点，开始进入debug调试模式。</li><li>跟着视频课程的调试，核心代码就是webpack的genHistoryApiFallbackRewrites 与try_files一样的作用</li></ul></blockquote><p><strong>6-4 vue-router初始化过程源码分析</strong></p><p><strong>我们并没有定义router-link和router-view，为什么代码里能直接使用？</strong></p><blockquote><ul><li>在vscode的router.js中添加debugger调试，没起作用，因此，该源码的调试是在webstorm中debug的。</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/28-2.20o3twc8o868.webp" alt="28-2"></p><blockquote><ul><li>项目启动之后，打开浏览器，点击刷新，会进入到调试处</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/28-3.5q03uo6szog.webp" alt="28-3"></p><blockquote><ul><li>首先进入到<strong>createWebHistory</strong>方法中去(上图第21行代码)，返回的routerHistory提供了一系列的工具方法(路由跳转、监听的事件方法等)，具体实现源码以及注释如下：</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">createWebHistory</span>(<span class="params">base</span>) &#123;</span><br><span class="line">  <span class="comment">// 传入的base进行处理</span></span><br><span class="line">    base = <span class="title function_">normalizeBase</span>(base);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//historyNavigation提供了一些方法：location/push/replace/state</span></span><br><span class="line">  <span class="comment">// 该方法的实现浏览器URL变化但页面不刷新（push），核心是使用了浏览器对象模型history.pushState()和history.replaceState()方法。</span></span><br><span class="line">    <span class="keyword">const</span> historyNavigation = <span class="title function_">useHistoryStateNavigation</span>(base);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//生成一个listener：destory和listen方法</span></span><br><span class="line">    <span class="keyword">const</span> historyListeners = <span class="title function_">useHistoryListeners</span>(base, historyNavigation.<span class="property">state</span>, historyNavigation.<span class="property">location</span>, historyNavigation.<span class="property">replace</span>);</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">go</span>(<span class="params">delta, triggerListeners = <span class="literal">true</span></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!triggerListeners)</span><br><span class="line">            historyListeners.<span class="title function_">pauseListeners</span>();</span><br><span class="line">        history.<span class="title function_">go</span>(delta);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//将上面的事件拼装到一起，生成一个routerHistory对象返回</span></span><br><span class="line">    <span class="keyword">const</span> routerHistory = <span class="title function_">assign</span>(&#123;</span><br><span class="line">        <span class="comment">// it&#x27;s overridden right after</span></span><br><span class="line">        <span class="attr">location</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        base,</span><br><span class="line">        go,</span><br><span class="line">        <span class="attr">createHref</span>: createHref.<span class="title function_">bind</span>(<span class="literal">null</span>, base),</span><br><span class="line">    &#125;, historyNavigation, historyListeners);</span><br><span class="line">    <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(routerHistory, <span class="string">&#x27;location&#x27;</span>, &#123;</span><br><span class="line">        <span class="attr">enumerable</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">get</span>: <span class="function">() =&gt;</span> historyNavigation.<span class="property">location</span>.<span class="property">value</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(routerHistory, <span class="string">&#x27;state&#x27;</span>, &#123;</span><br><span class="line">        <span class="attr">enumerable</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">get</span>: <span class="function">() =&gt;</span> historyNavigation.<span class="property">state</span>.<span class="property">value</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> routerHistory;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>返回routerHistory对象后，接着进入到<strong>createRouter</strong>方法中，源码以及注释如下：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从调用createRouter处，options中传入的参数为：history和routes</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createRouter</span>(<span class="params">options</span>) &#123;</span><br><span class="line">  <span class="comment">// 第一步生成matcher，matcher的作用是实现路由匹配</span></span><br><span class="line">  <span class="comment">// createRouterMatcher会为每一个简单或复杂的路由生成一个正则表达式</span></span><br><span class="line">    <span class="keyword">const</span> matcher = <span class="title function_">createRouterMatcher</span>(options.<span class="property">routes</span>, options);</span><br><span class="line">    <span class="keyword">let</span> parseQuery$1 = options.<span class="property">parseQuery</span> || parseQuery;</span><br><span class="line">    <span class="keyword">let</span> stringifyQuery$1 = options.<span class="property">stringifyQuery</span> || stringifyQuery;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 拿到history对象，是createWebHistory或者为createWebHashHistory</span></span><br><span class="line">    <span class="keyword">let</span> routerHistory = options.<span class="property">history</span>;</span><br><span class="line">    <span class="keyword">if</span> ((process.<span class="property">env</span>.<span class="property">NODE_ENV</span> !== <span class="string">&#x27;production&#x27;</span>) &amp;&amp; !routerHistory)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Provide the &quot;history&quot; option when calling &quot;createRouter()&quot;:&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27; https://next.router.vuejs.org/api/#history.&#x27;</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//一些路由守卫的初始化、useCallbacks方法返回一个闭包。</span></span><br><span class="line">  <span class="comment">//每一个路由守卫都对应了一个闭包(代码就不贴了，主要返回了三个方法：add,list,reset,主要作用是缓存路由守卫)。</span></span><br><span class="line">    <span class="keyword">const</span> beforeGuards = <span class="title function_">useCallbacks</span>();</span><br><span class="line">    <span class="keyword">const</span> beforeResolveGuards = <span class="title function_">useCallbacks</span>();</span><br><span class="line">    <span class="keyword">const</span> afterGuards = <span class="title function_">useCallbacks</span>();</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 生成默认router</span></span><br><span class="line">    <span class="keyword">const</span> currentRoute = <span class="title function_">shallowRef</span>(<span class="variable constant_">START_LOCATION_NORMALIZED</span>);</span><br><span class="line"></span><br><span class="line">………………</span><br><span class="line"><span class="comment">//  一些初始化操作</span></span><br><span class="line">………………</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 这里的router即为最终的router对象，包含一系列的属性和方法</span></span><br><span class="line">    <span class="keyword">const</span> router = &#123;</span><br><span class="line">        currentRoute,</span><br><span class="line">        addRoute,</span><br><span class="line">        removeRoute,</span><br><span class="line">        hasRoute,</span><br><span class="line">        getRoutes,</span><br><span class="line">        resolve,</span><br><span class="line">        options,</span><br><span class="line">        push,</span><br><span class="line">        replace,</span><br><span class="line">        go,</span><br><span class="line">        <span class="attr">back</span>: <span class="function">() =&gt;</span> <span class="title function_">go</span>(-<span class="number">1</span>),</span><br><span class="line">        <span class="attr">forward</span>: <span class="function">() =&gt;</span> <span class="title function_">go</span>(<span class="number">1</span>),</span><br><span class="line">        <span class="attr">beforeEach</span>: beforeGuards.<span class="property">add</span>,</span><br><span class="line">        <span class="attr">beforeResolve</span>: beforeResolveGuards.<span class="property">add</span>,</span><br><span class="line">        <span class="attr">afterEach</span>: afterGuards.<span class="property">add</span>,</span><br><span class="line">        <span class="attr">onError</span>: errorHandlers.<span class="property">add</span>,</span><br><span class="line">        isReady,</span><br><span class="line">      </span><br><span class="line">      <span class="comment">//此处的install方法是在执行app.user(router)的时候会执行到这里(即当这个router被返回到main.js后，下一步就会执行app.user(router),然后就会进入到这方法中去)</span></span><br><span class="line">        <span class="title function_">install</span>(<span class="params">app</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> router = <span class="variable language_">this</span>;</span><br><span class="line">          </span><br><span class="line">          <span class="comment">//在此处注册了组件RouterLink和RouterView</span></span><br><span class="line">            app.<span class="title function_">component</span>(<span class="string">&#x27;RouterLink&#x27;</span>, <span class="title class_">RouterLink</span>);</span><br><span class="line">            app.<span class="title function_">component</span>(<span class="string">&#x27;RouterView&#x27;</span>, <span class="title class_">RouterView</span>);</span><br><span class="line">          </span><br><span class="line">          <span class="comment">//全局主注册了$router $route</span></span><br><span class="line">            app.<span class="property">config</span>.<span class="property">globalProperties</span>.<span class="property">$router</span> = router;</span><br><span class="line">            <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(app.<span class="property">config</span>.<span class="property">globalProperties</span>, <span class="string">&#x27;$route&#x27;</span>, &#123;</span><br><span class="line">                <span class="attr">enumerable</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">get</span>: <span class="function">() =&gt;</span> <span class="title function_">unref</span>(currentRoute),</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">if</span> (isBrowser &amp;&amp;!started &amp;&amp;</span><br><span class="line">                currentRoute.<span class="property">value</span> === <span class="variable constant_">START_LOCATION_NORMALIZED</span>) &#123;</span><br><span class="line">                started = <span class="literal">true</span>;</span><br><span class="line">              </span><br><span class="line">              <span class="comment">//浏览器中push后，就会进行页面的渲染</span></span><br><span class="line">                <span class="title function_">push</span>(routerHistory.<span class="property">location</span>).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((process.<span class="property">env</span>.<span class="property">NODE_ENV</span> !== <span class="string">&#x27;production&#x27;</span>))</span><br><span class="line">                        <span class="title function_">warn</span>(<span class="string">&#x27;Unexpected error when starting the router:&#x27;</span>, err);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">const</span> reactiveRoute = &#123;&#125;;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> <span class="variable constant_">START_LOCATION_NORMALIZED</span>) &#123;</span><br><span class="line">                reactiveRoute[key] = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> currentRoute.<span class="property">value</span>[key]);</span><br><span class="line">            &#125;</span><br><span class="line">          </span><br><span class="line">          <span class="comment">// 使用app.provide来做组件的传递</span></span><br><span class="line">          <span class="comment">// router-view和router-link中的参数是通过这里传递下去的</span></span><br><span class="line">          <span class="comment">// 关于provide的用法，见本节内容往下</span></span><br><span class="line">            app.<span class="title function_">provide</span>(routerKey, router);</span><br><span class="line">            app.<span class="title function_">provide</span>(routeLocationKey, <span class="title function_">reactive</span>(reactiveRoute));</span><br><span class="line">            app.<span class="title function_">provide</span>(routerViewLocationKey, currentRoute);</span><br><span class="line">            <span class="keyword">let</span> unmountApp = app.<span class="property">unmount</span>;</span><br><span class="line">            installedApps.<span class="title function_">add</span>(app);</span><br><span class="line">            app.<span class="property">unmount</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                installedApps.<span class="title function_">delete</span>(app);</span><br><span class="line">                <span class="keyword">if</span> (installedApps.<span class="property">size</span> &lt; <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="title function_">removeHistoryListener</span>();</span><br><span class="line">                    currentRoute.<span class="property">value</span> = <span class="variable constant_">START_LOCATION_NORMALIZED</span>;</span><br><span class="line">                    started = <span class="literal">false</span>;</span><br><span class="line">                    ready = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="title function_">unmountApp</span>();</span><br><span class="line">            &#125;;</span><br><span class="line">            </span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> router;</span><br></pre></td></tr></table></figure><p><strong>6-5 vue3高级特性：vue插件+provide跨组件通信</strong></p><p><strong>浏览器中如何实现URL变化但页面不刷新</strong></p><blockquote><ul><li>在控制台直接输入  history.pushState(null,null,‘/Order’/),会发现浏览器窗口中地址发生了改变，但页面未刷新。</li><li>onpopState事件主要用来监听路由回退的操作。</li><li>调试源码的步骤是，写一个click方法，点击debuger进行操作</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;button @click=<span class="string">&quot;jump&quot;</span>&gt;<span class="title class_">Jump</span>&lt;/button&gt;</span><br><span class="line">………………</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span>,</span><br><span class="line">  <span class="title function_">setup</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> router = <span class="title function_">useRouter</span>();</span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">      <span class="title function_">jump</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="comment">// eslint-disable-next-line no-debugger</span></span><br><span class="line">        <span class="keyword">debugger</span></span><br><span class="line">        router.<span class="title function_">push</span>(<span class="string">&#x27;/order&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>然后step into到router.push方法中，由此开始调试，进入pushWithRedirect()方法中(如下图)<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/28-4.4fsku45pmnw0.webp" alt="28-4"><br>然后一步一步的，调试源码到最后，最终会通过history.pushState()方法，来改变地址而不发生页面的更新。</p></blockquote><p>在上图的高亮部分resolve(to)是路由匹配的相关实现，下节继续。</p><p><strong>6-7 vue-router路由匹配源码分析</strong></p><blockquote><p>我们输入路由后如何与我们自己定义的 routes中的路由进行匹配，就涉及到vue-router的核心概念 matcher。<br>两个关键点是：createRouter以及上一节提到的resollve方法。<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/28-5.6g8w1s5ubqc0.webp" alt="28-5"></p></blockquote><blockquote><p>本节重点讲解这个resolve方法，我们假定从 /home跳转到/order，代码以及注释如下：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">resolve</span>(<span class="params">rawLocation, currentLocation</span>) &#123;</span><br><span class="line">  <span class="comment">// 第一步是拿到currentLocation，即当前路由相关信息 【/home相关的】</span></span><br><span class="line">        currentLocation = <span class="title function_">assign</span>(&#123;&#125;, currentLocation || currentRoute.<span class="property">value</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 判断传进来的路由‘/order’参数是不是string</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> rawLocation === <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">          </span><br><span class="line">          <span class="comment">//进行一个形式的格式化吧</span></span><br><span class="line">            <span class="keyword">let</span> locationNormalized = <span class="title function_">parseURL</span>(parseQuery$1, rawLocation, currentLocation.<span class="property">path</span>);</span><br><span class="line">          </span><br><span class="line">          <span class="comment">//最关键的一步是调用matcher下的resolve方法，传入两个参数 ‘/order’和‘/home’，到这里我们需要继续step into到这个方法中去调试。关键代码为： matchers.find(m =&gt; m.re.test(path)); </span></span><br><span class="line">            <span class="keyword">let</span> matchedRoute = matcher.<span class="title function_">resolve</span>(&#123; <span class="attr">path</span>: locationNormalized.<span class="property">path</span> &#125;, currentLocation);</span><br><span class="line">            <span class="keyword">let</span> href = routerHistory.<span class="title function_">createHref</span>(locationNormalized.<span class="property">fullPath</span>);</span><br><span class="line">            <span class="keyword">if</span> ((process.<span class="property">env</span>.<span class="property">NODE_ENV</span> !== <span class="string">&#x27;production&#x27;</span>)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (href.<span class="title function_">startsWith</span>(<span class="string">&#x27;//&#x27;</span>))</span><br><span class="line">                    <span class="title function_">warn</span>(<span class="string">`Location &quot;<span class="subst">$&#123;rawLocation&#125;</span>&quot; resolved to &quot;<span class="subst">$&#123;href&#125;</span>&quot;. A resolved location cannot start with multiple slashes.`</span>);</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (!matchedRoute.<span class="property">matched</span>.<span class="property">length</span>) &#123;</span><br><span class="line">                    <span class="title function_">warn</span>(<span class="string">`No match found for location with path &quot;<span class="subst">$&#123;rawLocation&#125;</span>&quot;`</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// locationNormalized is always a new object</span></span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">assign</span>(locationNormalized, matchedRoute, &#123;</span><br><span class="line">                <span class="attr">params</span>: <span class="title function_">decodeParams</span>(matchedRoute.<span class="property">params</span>),</span><br><span class="line">                <span class="attr">hash</span>: <span class="title function_">decode</span>(locationNormalized.<span class="property">hash</span>),</span><br><span class="line">                <span class="attr">redirectedFrom</span>: <span class="literal">undefined</span>,</span><br><span class="line">                href,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        …………………………………………</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>6-8 vue3新特性defineComponent讲解1 &amp;&amp; 6-9 vue3新特性defineComponent讲解2</strong></p><p><strong>router-view如何实现组件动态渲染(涉及Vue动态组件)</strong></p><blockquote><ul><li>本节从router对象的install方法开始，找到 app.component(‘RouterView’,RouterView)。</li><li>2328行定义：const RouterView = RouterViewImpl;</li><li>RouterView就是RouterViewImpl方法，该方法源码如下</li></ul></blockquote><blockquote><ul><li>通过** 6-10 <strong>章节所示源码，我们看到router-view组件是以纯js实现的方式，使用</strong>defineComponent<strong>定义组件，组件的渲染使用了</strong>h**函数。</li><li>在进一步看源码之前，我们先来写个demo看  如何使用纯js方式编写组件。</li><li><em>h 函数包含的三个参数为：dom标签、dom中需要绑定的一些属性、dom当中的children。</em></li><li>下面为代码演示，注释部分为直接使用Home组件的渲染。</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineComponent,h &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="comment">// import  Home from &#x27;../pages/Home&#x27;;</span></span><br><span class="line"> <span class="keyword">const</span> <span class="title class_">TestComponent2</span> = <span class="title function_">defineComponent</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;TestComponent2&#x27;</span>,</span><br><span class="line">    <span class="attr">props</span>:&#123;&#125;,</span><br><span class="line">    <span class="title function_">setup</span>(<span class="params">props, &#123;slots&#125; </span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="function">()=&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">h</span>(<span class="string">&#x27;div&#x27;</span>,&#123;</span><br><span class="line">                <span class="attr">class</span>:<span class="string">&#x27;test-component2&#x27;</span>,</span><br><span class="line">                <span class="title function_">onClick</span>(<span class="params"></span>)&#123;</span><br><span class="line">                    <span class="title function_">alert</span>(<span class="string">&#x27;click&#x27;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,slots.<span class="title function_">default</span>())</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// return () =&gt;&#123;</span></span><br><span class="line">        <span class="comment">//     return h(Home,&#123;</span></span><br><span class="line">        <span class="comment">//         onClick()&#123;</span></span><br><span class="line">        <span class="comment">//             alert(&#x27;You Clicked the Home Component!&#x27;)</span></span><br><span class="line">        <span class="comment">//         &#125;</span></span><br><span class="line">        <span class="comment">//     &#125;)</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line"> &#125;)</span><br><span class="line"></span><br><span class="line"> <span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">TestComponent2</span></span><br></pre></td></tr></table></figure><p><strong>6-10 深入解析router-view源码</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">RouterViewImpl</span> = <span class="comment">/*#__PURE__*/</span> <span class="title function_">defineComponent</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;RouterView&#x27;</span>,</span><br><span class="line">    <span class="attr">inheritAttrs</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">props</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">            <span class="attr">default</span>: <span class="string">&#x27;default&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">route</span>: <span class="title class_">Object</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  <span class="comment">// setup在整个组件初始化的时候只会执行一遍，但下面的render function，也就是40行的return部分会执行多次</span></span><br><span class="line">    <span class="title function_">setup</span>(<span class="params">props, &#123; attrs, slots &#125;</span>) &#123;</span><br><span class="line">        (process.<span class="property">env</span>.<span class="property">NODE_ENV</span> !== <span class="string">&#x27;production&#x27;</span>) &amp;&amp; <span class="title function_">warnDeprecatedUsage</span>();</span><br><span class="line">      <span class="comment">// injectedRoute决定router-view的刷新</span></span><br><span class="line">        <span class="keyword">const</span> injectedRoute = <span class="title function_">inject</span>(routerViewLocationKey);</span><br><span class="line">      <span class="comment">// injectedRoute.value</span></span><br><span class="line">        <span class="keyword">const</span> routeToDisplay = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> props.<span class="property">route</span> || injectedRoute.<span class="property">value</span>);</span><br><span class="line">        <span class="keyword">const</span> depth = <span class="title function_">inject</span>(viewDepthKey, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">const</span> matchedRouteRef = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> routeToDisplay.<span class="property">value</span>.<span class="property">matched</span>[depth]);</span><br><span class="line">        <span class="title function_">provide</span>(viewDepthKey, depth + <span class="number">1</span>);</span><br><span class="line">        <span class="title function_">provide</span>(matchedRouteKey, matchedRouteRef);</span><br><span class="line">        <span class="title function_">provide</span>(routerViewLocationKey, routeToDisplay);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 空的ref用来装载马上要渲染的view-router实例</span></span><br><span class="line">        <span class="keyword">const</span> viewRef = <span class="title function_">ref</span>();</span><br><span class="line">        <span class="title function_">watch</span>(<span class="function">() =&gt;</span> [viewRef.<span class="property">value</span>, matchedRouteRef.<span class="property">value</span>, props.<span class="property">name</span>], <span class="function">(<span class="params">[instance, to, name], [oldInstance, <span class="keyword">from</span>, oldName]</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (to) &#123;</span><br><span class="line">                to.<span class="property">instances</span>[name] = instance;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">from</span> &amp;&amp; <span class="keyword">from</span> !== to &amp;&amp; instance &amp;&amp; instance === oldInstance) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!to.<span class="property">leaveGuards</span>.<span class="property">size</span>) &#123;</span><br><span class="line">                        to.<span class="property">leaveGuards</span> = <span class="keyword">from</span>.<span class="property">leaveGuards</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (!to.<span class="property">updateGuards</span>.<span class="property">size</span>) &#123;</span><br><span class="line">                        to.<span class="property">updateGuards</span> = <span class="keyword">from</span>.<span class="property">updateGuards</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (instance &amp;&amp;</span><br><span class="line">                to &amp;&amp;</span><br><span class="line">                (!<span class="keyword">from</span> || !<span class="title function_">isSameRouteRecord</span>(to, <span class="keyword">from</span>) || !oldInstance)) &#123;</span><br><span class="line">                (to.<span class="property">enterCallbacks</span>[name] || []).<span class="title function_">forEach</span>(<span class="function"><span class="params">callback</span> =&gt;</span> <span class="title function_">callback</span>(instance));</span><br><span class="line">            &#125;</span><br><span class="line">          <span class="comment">// 默认为pre属性，post在页面渲染之后执行 watch 监听</span></span><br><span class="line">        &#125;, &#123; <span class="attr">flush</span>: <span class="string">&#x27;post&#x27;</span> &#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> route = routeToDisplay.<span class="property">value</span>;</span><br><span class="line">            <span class="keyword">const</span> matchedRoute = matchedRouteRef.<span class="property">value</span>;</span><br><span class="line">            <span class="keyword">const</span> <span class="title class_">ViewComponent</span> = matchedRoute &amp;&amp; matchedRoute.<span class="property">components</span>[props.<span class="property">name</span>];</span><br><span class="line">            <span class="keyword">const</span> currentName = props.<span class="property">name</span>;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="title class_">ViewComponent</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_">normalizeSlot</span>(slots.<span class="property">default</span>, &#123; <span class="title class_">Component</span>: <span class="title class_">ViewComponent</span>, route &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">const</span> routePropsOption = matchedRoute.<span class="property">props</span>[props.<span class="property">name</span>];</span><br><span class="line">            <span class="keyword">const</span> routeProps = routePropsOption</span><br><span class="line">                ? routePropsOption === <span class="literal">true</span></span><br><span class="line">                    ? route.<span class="property">params</span></span><br><span class="line">                    : <span class="keyword">typeof</span> routePropsOption === <span class="string">&#x27;function&#x27;</span></span><br><span class="line">                        ? <span class="title function_">routePropsOption</span>(route)</span><br><span class="line">                        : routePropsOption</span><br><span class="line">                : <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">const</span> <span class="title function_">onVnodeUnmounted</span> = vnode =&gt; &#123;</span><br><span class="line">                <span class="comment">// remove the instance reference to prevent leak</span></span><br><span class="line">                <span class="keyword">if</span> (vnode.<span class="property">component</span>.<span class="property">isUnmounted</span>) &#123;</span><br><span class="line">                    matchedRoute.<span class="property">instances</span>[currentName] = <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">const</span> component = <span class="title function_">h</span>(<span class="title class_">ViewComponent</span>, <span class="title function_">assign</span>(&#123;&#125;, routeProps, attrs, &#123;</span><br><span class="line">                onVnodeUnmounted,</span><br><span class="line">                <span class="attr">ref</span>: viewRef,</span><br><span class="line">            &#125;));</span><br><span class="line">            <span class="keyword">return</span> (</span><br><span class="line">            <span class="title function_">normalizeSlot</span>(slots.<span class="property">default</span>, &#123; <span class="title class_">Component</span>: component, route &#125;) ||</span><br><span class="line">                component);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web架构之脚手架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web架构之脚手架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Week17-编辑器服务端调用第三方服务</title>
      <link href="/Week17-%E7%BC%96%E8%BE%91%E5%99%A8%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%B0%83%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E6%9C%8D%E5%8A%A1/"/>
      <url>/Week17-%E7%BC%96%E8%BE%91%E5%99%A8%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%B0%83%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章目录排版做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="第一章-本周导学">第一章 本周导学</h2><blockquote><ul><li>完整的发布流程</li><li>接入短信服务</li><li>上传图片到阿里云OSS</li><li>内容安全检查</li></ul></blockquote><h2 id="第二章-发布功能">第二章 发布功能</h2><p><strong>2-1 介绍</strong></p><blockquote><ul><li>发布功能的设计</li><li>如何强制下线？</li><li>功能开发–完成发布功能相关接口</li></ul></blockquote><p><strong>2-2 发布功能的几个要点</strong></p><blockquote><p>发布，即获取一个url，能外网访问该作品。</p><ul><li>url不能太长，因为要生成二维码</li><li>再次发布，url不能变，渠道不能变</li><li>用户访问url必须带渠道号，否则无法分渠道统计。</li><li>注意数据保密、防爬</li><li>发布安全内容检查</li></ul></blockquote><p><strong>2-3 发布功能-如何防爬</strong></p><blockquote><p>url + uuid</p></blockquote><p><strong>2-4 发布功能-发布过程的设计</strong></p><blockquote><ul><li>多渠道</li><li>发布为模板</li></ul></blockquote><p><strong>2-5 发布功能-强制下线</strong></p>]]></content>
      
      
      <categories>
          
          <category> Web架构之脚手架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web架构之脚手架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS_Docker_Nginx_Node_Jenkins</title>
      <link href="/016-CentOS_Docker_Nginx_Node_Jenkins/"/>
      <url>/016-CentOS_Docker_Nginx_Node_Jenkins/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><blockquote><p>此篇博客总结背景：<br><a href="https://mp.weixin.qq.com/s/Mjh7JU4GhDva2wn7VVbq4Q">https://mp.weixin.qq.com/s/Mjh7JU4GhDva2wn7VVbq4Q</a></p></blockquote><h2 id="CentOs">CentOs</h2><blockquote><ul><li>本地拷贝文件到远程服务器<br>scp output.txt root@xx.xx.xx.xx:/data/<br>scp /Users/liumingzhou/Descktop/demo/*root@xx.xx.xx.xx:/data/</li><li>本地连接远程CentOs服务器<br>ssh -p 22 root@xx.xx.xx.xx</li><li>yum切换为阿里源<br>cd /etc/yum.repo.d/<br>curl -o /etc/yum.repos.d/CentOS-Base.repo <a href="https://mirrors.aliyun.com/repo/Centos-8.repo">https://mirrors.aliyun.com/repo/Centos-8.repo</a><br>yum makecache</li><li>将 test目录下所有文件<strong>复制</strong>到 newtest目录下<br>cp -r /root/test/* /root/newtest</li><li>将 test目录下所有文件<strong>移动</strong>到 newtest目录下<br>mv /root/test/* /root/newtest</li><li>检查端口被哪个进程占用<br>netstat -lnp | grep 8080   kill -9 8080<br>lsof -i:8900 / kill -9 PID</li><li>查看当前Centos操作系统发行版信息<br>cat /etc/redhat-release</li><li>列出该目录下的所有文件路径<br>find .</li></ul></blockquote><h2 id="Nginx">Nginx</h2><blockquote><ul><li>yum安装nginx<br>yum install -y nginx<br>nginx 【启动nginx】</li><li>ngiinx查找本地目录<br>nginx -t</li><li>nginx重启<br>nginx -c /usr/local/etc/nginx/nginx.conf<br>nginx -s reload</li><li>反向代理配置<br>访问路径：/api/getUser<br>如下代码，proxy_pass中带着 <code>/</code>,代理到后端的路径为：<a href="http://127.0.0.1:18081/">http://127.0.0.1:18081/</a>getUser<br>如果，不带 <code>/</code>时，代理到后端的路径为：<a href="http://127.0.0.1:18081/getUser">http://127.0.0.1:18081/api/getUser</a></li></ul></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       <span class="number">80</span>;</span><br><span class="line">    server_name  www.<span class="number">123</span><span class="selector-class">.com</span>;</span><br><span class="line"></span><br><span class="line">    location /api/ &#123;</span><br><span class="line">        proxy_pass http://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">18081</span>/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Centos-Node环境">Centos-Node环境</h2><blockquote><ul><li>nvm查看Node版本列表<br>nvm list-remote</li><li>安装node版本<br>nvm install 14</li><li>查看当前node版本<br>nvm current  || node -v</li><li>npm配置淘宝源<br>npm config set registry <a href="https://registry.npm.taobao.org">https://registry.npm.taobao.org</a></li><li>npm查看当前源<br>npm get registry</li></ul></blockquote><h2 id="Centos-Docker">Centos-Docker</h2><blockquote><ul><li>Centos上安装Docker<ol><li>需要安装 device-mapper-persistent-data [高级存储]和 lvm2 [逻辑磁盘分区]两个依赖<ol><li>yum install -y yum-utils device-mapper-persistent-data lvm2</li></ol></li><li>安装完毕后，将阿里云Docker镜像添加进去，加速Docker安装<ol><li>sudo yum-config-manager --add-repo <a href="http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo">http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</a></li></ol></li><li>启动Docker<ol><li>systemctl start docker</li><li>docker -v --查看Docker安装版本信息</li><li>chkconfig docker on --开机启动</li></ol></li></ol></li><li>Docker常见命令<ol><li>docker version/docker info--查看docker版本</li><li>docker pull <image-name>:<tag>--下载镜像</li><li>docker images--查看本地已经安装好的镜像</li><li>docker rmi <images-id>– 删除本地安装的某镜像</li><li>docker ps -a --显示本地启动的所有容器</li><li>docker start/stop/restart imageID   – 容器的启动/关闭/重启</li><li>docker rm containerID–删除一个容器</li><li>docker instapect <container-id>--查看容器信息</li><li>docker logs <container-id>--查看容器日志</li><li>docker built -t <name>–自定义创建image容器</li><li>docker exec -it <container-id>/bin/sh--进入控制台</li><li>docker run -p 81:80--从image文件生成容器</li><li>docker cp [container-id]:[/Users/liu/Desktop]--文件拷贝</li><li>docker run -it ubuntu:tag /bin/sh--启动ubuntu 镜像</li><li>docker run -p 81/80 -d --name nginx1 nginx</li></ol></li><li>Docker内配置nginx容器</li></ul></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2021/png/358819/1623587645864-c743dce2-55da-427b-b24e-227ec7e91da5.png#clientId=u6e986a30-d22b-4&amp;from=paste&amp;height=516&amp;id=ud7b803a7&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1732&amp;originWidth=1452&amp;originalType=binary&amp;ratio=2&amp;size=430565&amp;status=done&amp;style=none&amp;taskId=u7ae7306b-c74d-4dc3-99e3-643dd093bbd&amp;width=433" alt="image.png"></p><h2 id="Centos–Jenkins">Centos–Jenkins</h2><blockquote><p>因为Jenkins是Java编写的持续构建平台，所以安装Java必不可少。</p><ul><li>使用yum包管理器安装openjdk<br>yum install -y java</li><li>使用国内镜像加速安装Jenkins<ol><li>cd /data</li><li>wget <a href="https://mirrors.tuna.tsinghua.edu.cn/jenkins/redhat-stable/jenkins-2.277.2-1.1.noarch.rpm">https://mirrors.tuna.tsinghua.edu.cn/jenkins/redhat-stable/jenkins-2.277.2-1.1.noarch.rpm</a></li><li>sudo yum install jenkins-2.277.2-1.1.noarch.rpm</li></ol></li><li>启动Jenkins<ol><li>sevice jenkins start  （Jenkins第一次启动时间较长）</li><li>service jenkins restart restart--重启jenkins</li><li>sevice jenkins restart stop--停止Jenkins</li></ol></li><li>解锁Jenkins<ol><li>解锁界面[cat /var/lib/jenkins/secrets/initialAdminPassword     --查看密码]</li><li>下载插件[更换插件源–将/var/lib/jenkins/updates/default.json 内的插件源地址替换成清华大学的源地址，将 google 替换为 baidu 即可]</li></ol></li></ul></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -<span class="selector-tag">i</span> &#x27;s/http:\/\/updates.jenkins-ci.org\/download/https:\/\/mirrors.tuna.tsinghua.edu.cn\/jenkins/g<span class="string">&#x27; /var/lib/jenkins/updates/default.json &amp;&amp; sed -i &#x27;</span>s/http:\/\/www.google.com/https:\/\/www.baidu.com/g<span class="string">&#x27; /var/lib/jenkins/updates/default.json</span></span><br></pre></td></tr></table></figure><blockquote><p>c. 完成安装–注册管理员账户</p><ul><li>测试安装<br>点击 Jenkins 首页 -&gt; 左侧导航 -&gt; 新建任务 -&gt; Freestyle project(构建一个自由风格的软件项目)</li></ul></blockquote><p>后续步骤暂不整理，直接查看文首链接。</p>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis</title>
      <link href="/015-Redis/"/>
      <url>/015-Redis/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><blockquote><ol><li>NoSql = Not Only SQL</li><li>Key - Value 存储：字符串 String｜字符串列表 list｜有序集合 sorted set｜hash｜字符串集合set</li><li>09年开发完成</li><li>C语言开发</li><li>每秒能写8.1万次，能读11万次</li><li>应用场景：缓存、任务队列、网站访问统计、应用排行榜、数据过期处理，分布式集群里的session处理</li><li>CentOs-6.5 安装：<ul><li>下载源码后，对源码进行编译，<em><strong>编译需要一个gcc环境</strong></em>。yum install gcc-c++</li><li>将下载好的源码上传至服务器 /root下</li><li>tar -zxvf redis-x.x.x.tar.gz</li><li>cd  redis-x.x.x</li><li>make</li><li>make PREFIX=/usr/local/redis install</li><li>cd /usr/local/redis/bin --存在一些可执行文件</li><li>cd ~/redis.x.x.x</li><li>cp redis.conf /usr/local/redis</li><li>cd /usr/local/redis/bin</li><li>前端启动：<em><strong>redis-server</strong></em>(窗口不能关闭)</li><li>后端启动：修改配置文件</li><li>vim redis.conf</li><li>修改 daemonize yes</li><li><strong><em>redis-server redis.conf</em></strong></li><li>验证启动：ps -ef | grep redis</li><li>停止启动：kill -9 PID  ||  redis-cli shutdown</li><li>进入命令行交互：<strong>_redis-cli _</strong></li></ul></li><li>Jedis:Jedis是Redis官方首先的Java客户端开发包</li><li>Key不要过长–不建议超过1024</li><li>存储String：<ul><li>以二进制方式操作</li><li>其value数据长度最多不超过512M</li><li>赋值**_ set_<strong>、取值</strong>_ get_<strong>、删值 <em><strong>del</strong></em>、</strong><em>inc</em><strong>r num、</strong><em>incrby</em>** num 5、<strong><em>append</em></strong> num 5</li></ul></li><li>存储Hash：</li></ol><ul><li>String Key和String Value的map容器</li><li>每一个Hash可以存储4294967268个键值对</li><li>赋值**<em>：hset</em>** myhash username jack</li><li>赋值：<strong><em>hset</em></strong> myhash age 18</li><li><strong>_        hmset_</strong> myhsh username roose age 21</li><li>取值：<strong><em>hget</em></strong> myhash username ==&gt; jack</li><li><strong>_ hmget_</strong> myhash username age</li><li><strong><em>hgetall</em></strong> myhash</li><li>删除一个：<strong><em>hdel</em></strong> myhash username</li><li>删除全部：<strong><em>del</em></strong> myhash</li><li>增加数字： <em><strong>hincrby</strong></em> myhash age  5</li><li>判断属性中的某个值是否存在：<strong><em>hexists</em></strong> myhash username</li><li>获取属性数量 ： <strong><em>hlen</em></strong> myhash == 2</li><li>获取所有属性名称：<strong><em>hkeys</em></strong> myhash</li><li>获取所有值： <strong>hvals</strong> myhash</li></ul><ol start="12"><li>存储list：</li></ol><ul><li>ArrayList使用数组方式：</li><li>LinkedList使用双向链接方式：</li><li>双向链表中增加数据</li><li>双向链表中删除数据</li><li>两端添加：<ul><li>lpush mylist a b c --&gt; c,b,a</li><li>lpush mylist 1 2 3 --&gt; 3 2 1 c b a</li><li>rpush mylist2 a b c</li><li>rpush mylist2 1 2 3</li><li></li></ul></li></ul></blockquote><blockquote><ul><li>查看列表:<ul><li>lrange mylist  (start,end)</li><li>lrange mylist 0 5 --&gt; 3 2 1 c b a</li><li>lrange mylist2 0 -2 a b c 1 2</li></ul></li><li>两端弹出：<ul><li>lpop mylist2 --&gt; 3</li><li>lrange mylish  --&gt;2 1 c b a</li><li>rpop mylist2 --&gt; 3</li><li>lrange mylist2 --&gt; a b  c 1 2</li></ul></li><li>获取列表元素个数:<ul><li>llen mylish  --&gt;返回元素个数</li></ul></li><li>扩展命令<ul><li>lpushx mylist2 (mylist2这个值存在才会在头部插入)</li><li>lrem mylist2 2 3（从头开始删除2个3）</li></ul></li></ul><ol start="13"><li>存储Set：不允许出现重复的元素</li></ol><ul><li>添加元素<ul><li>sadd myset a b c</li><li>sadd myset  1 2 3</li></ul></li><li>删除元素<ul><li>srem myset 1 2</li></ul></li><li>获得集合中的元素<ul><li>smembers myset --&gt; c b a 3</li></ul></li><li>判断元素是否存在<ul><li>sismember myset 3</li></ul></li></ul><ol start="14"><li>keys通用操作</li></ol><ul><li>**keys ***</li><li><strong>keys my?</strong>  ：查看以my开头的key</li><li><strong>del</strong> my1 my2 my3 ：删除这些key</li><li><strong>exists</strong> my1   ：查看my1是否存在</li><li>r<strong>ename</strong> old new ：重命名</li><li><strong>expire</strong> newkey 1000 :过期时间</li><li><strong>type key</strong>:查看某个key的类型</li></ul><ol start="15"><li>redis特性</li></ol><ul><li>多数据库<ul><li>16个数据库 0-15 （客户端默认0）</li><li>select 1  — 选择1号数据库</li><li>move key 2 ---- 将1中的key移动到2</li></ul></li><li>Redis事务<ul><li>multi :开启事务</li><li>exec ：提交事务</li><li>discard：回滚操作</li></ul></li></ul><ol start="16"><li>redis的持久化概述</li></ol><ul><li>RDB持久化：默认支持不需要配置：在指定时间间隔内，将数据写入到磁盘<ul><li>redis.conf: save 900 /save 300 10 /save 60 10000 (默认支持)–可以查看保存的路径在 <strong>dump.rdb</strong></li></ul></li><li>AOF持久化<ul><li>优势：更高的数据安全–每一次变动都会记录到磁盘中。</li><li>劣势：内容文件大、效率低</li><li>需要进行相应配置–redi.conf ==&gt;appendonly yes --&gt;写入到appendonly.aof</li></ul></li><li>无持久化</li><li>同时使用RDB和AOF</li></ul><ol start="17"><li>服务器查看redis路径</li></ol><ul><li>ps -ef | grep redis</li><li>whereis  redis</li></ul><ol start="18"><li>查看本地是否安装redis：brew info redis</li><li>批量删除某个规则的 redisKey：</li><li>[root@node1 src]# ./redis-cli -h 127.0.0.1 -p 6379 keys “java_suisui*” | xargs ./redis-cli -h 127.0.0.1 -p 6379 del</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA 自动生成mapper</title>
      <link href="/014-IDEA%20%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90mapper/"/>
      <url>/014-IDEA%20%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90mapper/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="第一步：">第一步：</h2><blockquote><p>需要两个jar包(aymsp-alipay下备份)：</p><ul><li>mybatis-generator-core-1.4.0.jar</li><li>mysql-connector-java-5.1.31.jar (数据库驱动)</li></ul></blockquote><h2 id="第二步：">第二步：</h2><blockquote><p>配置  generatorConfig.xml文件</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">generatorConfiguration</span></span></span><br><span class="line"><span class="meta">  <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">  <span class="string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="comment">&lt;!--MySQL连接驱动--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">classPathEntry</span> <span class="attr">location</span>=<span class="string">&quot;mysql-connector-java-5.1.31.jar&quot;</span> /&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!--数据库链接URL，用户名、密码 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">&quot;MySQL&quot;</span> <span class="attr">targetRuntime</span>=<span class="string">&quot;MyBatis3&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suppressDate&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span>  </span><br><span class="line">            <span class="comment">&lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suppressAllComments&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span> </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!----------------- 第一个需要修改的地方 -----------------&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">connectionURL</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/aymspdb&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">userId</span>=<span class="string">&quot;root&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">password</span>=<span class="string">&quot;pass&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--是否启用java.math.BigDecimal--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javaTypeResolver</span> &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;forceBigDecimals&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!----------------- 第二个需要修改的地方 -----------------&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 生成模型的包名和位置--&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;org.ayfoundation.api.impl.app.alipay.entity.model&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;output&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;trimStrings&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">     <span class="comment">&lt;!----------------- 第三个需要修改的地方 -----------------&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 生成映射文件的包名和位置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;test.xml&quot;</span>  <span class="attr">targetProject</span>=<span class="string">&quot;output&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">     <span class="comment">&lt;!----------------- 第四个需要修改的地方 -----------------&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 生成DAO的包名和位置--&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">&quot;XMLMAPPER&quot;</span> <span class="attr">targetPackage</span>=<span class="string">&quot;org.ayfoundation.api.impl.app.alipay.entity.dao&quot;</span>  <span class="attr">targetProject</span>=<span class="string">&quot;output&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">     <span class="comment">&lt;!----------------- 第五个需要修改的地方 -----------------&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 要生成的表 tableName是数据库中的表名或视图名 domainObjectName是实体类名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;app_alipay_downloadbill&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;AlipayBillInfo&quot;</span> <span class="attr">enableCountByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableUpdateByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableDeleteByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableSelectByExample</span>=<span class="string">&quot;true&quot;</span> <span class="attr">selectByExampleQueryId</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="第三步：">第三步：</h2><blockquote><p>java -jar mybatis-generator-core-1.3.5.jar -configfile generatorConfig.xml</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Webpack全基础</title>
      <link href="/013-webpack/"/>
      <url>/013-webpack/</url>
      
        <content type="html"><![CDATA[<h2 id="背景">背景</h2><blockquote><ol><li>随着前端项目工程化、越来越复杂，Webpack 出现了。它是用来实现前端项目模块化的一个静态模块打包工具。</li><li>所谓静态指的是开发阶段。</li><li>webpack 的作用一是：编译代码能力、提高效率，解决浏览器兼容问题(ES6-&gt;ES5)</li><li>webpack 的作用二是：模块整合能力，提高性能，解决了浏览器频繁请求文件的问题</li><li>webpack 的作用三是：项目维护性增强了，支持不同种类的前端模块类型。</li></ol></blockquote><h2 id="构建流程简单认识">构建流程简单认识</h2><p><strong>从代码角度看：</strong><br>传统做法(vue2.5 之前没有 vue.config.js 时)是：将 webpack.base.config.js 中各个配置对象拷贝一份(基础配置)。然后根据不同的环境 merge 不同的配置。<br>比如测试环境独有的代理 devServer、sourcemap、热更新 HotModuleReplacementPlugin。<br>比如正式环境独有的 UglifyJsPlugin、extract-text-webpack-plugin、optimize-css-assets-webpack-plugin、html-webpack-plugin 等等。</p><p><strong>base.config.js</strong><br>webpack.base.config.js 文件其实就足足的表达了这个 webpack 的构成到底是有哪些部分组成。<br>由于配置较多，我们这里支只对其中重要的几个配置做简要概述。</p><ul><li>mode: production(代码压缩),development(代码未压缩)</li><li>entry: 打包入口文件，模块构建的起点，一个入口文件最后生成一个 chunk</li><li>output：输出文件，模块构建的终点，可以设置多个输出文件和输出路径</li><li>resolve：文件路径的指向，比如别名配置等，这个配置可以加快打包过程</li><li>modules：这里面主要就是配置的一些 loader</li><li>plugins：这里面主要配置的就是一些基础 plugin</li></ul><h2 id="loader">loader</h2><blockquote><p>我们必须知道的是 webpack 她只认识 js，loader 就是用来将不是 js 的文件经过<strong>函数</strong>处理成 js。<br>然后这个 loader 的配置，如上所示我们通常写在<strong>modules.rules</strong>属性中。<br>最后，需要注意的是 loader 支持链式调用(每个 loader 可以处理之前已经处理过的资源)，到这对于 loader 的掌握已经算快及格了。<br>接着看完 loader 和 plugin 之后，我们就及格了。</p></blockquote><p><strong>常用 loader</strong><br><strong>样式 loader</strong></p><blockquote><ul><li>scss-loader:将 scss 文件转换为 css 文件，在 vue 的模板使用中直接安装 node-sass 和 sass-loader 即可使用，但是需要注意版本的问题，版本过高可能会引起报错</li><li>less-loader：将 less 文件转换为 css 文件,使用时需要安装 less 和 less-loader</li><li>stylus-loader:stylus 样式写法，使用时需要安装 stylus 和 stylus-loader</li><li>css-loader：用来处理文件中的@import 和 url()、require 等引入</li><li>postcss-loader:处理 css3 的前缀等，autoprefixer-loader 已被废弃</li><li>style-loader:创建一个 style 标签将 css 文件嵌入到 html 当中去,通过 dom 操作 css</li></ul></blockquote><p><strong>编译 loader</strong></p><blockquote><ul><li>vue-loader:这个 loader 的作用是将扩展名为.vue 的单文件组件转换成 js 模块</li><li>babel-loader：将 ES6 转换为 ES5 代码</li><li>ts-loader：将 ts 转为 js</li><li>awesome-typescript-loader：将 ts 文件转换为 js，性能优于 ts-loader</li></ul></blockquote><p><strong>文件 loader</strong></p><blockquote><ul><li>raw-loader：可以将文件以字符串的形式返回</li><li>file-loader：分发文件到 output 目录并返回相对路径</li><li>url-loader：与 file-loader 类似，但可以将小于配置 limit 大小的文件转换成内敛 Data Url 的方式，减少请求。</li><li>html-minify-loader:压缩 html</li></ul></blockquote><h2 id="plugin">plugin</h2><blockquote><p>webpack 的 plugin 要比 loader 强大，可以在 webpack 运行到某个时刻的时候，帮你做一些事情 类似与 vue 中的生命周期函数(比如html-webpack-plugin会在打包结束后自动生成html文件)。<br>通过之前的学习，我们也知道需要哪些插件，我们就直接引入，然后以 new 对象的形式传入 plugins 配置对象中去就可以。<br>然后，如果再深入一点点的话，我们看 plugin 的本质：其实就是具有一个<strong>apply</strong>方法的 JS 对象。这个 apply 方法是会被 webpack 的 compiler 调用的。并且在整个编译生命周期都可以访问 compiler 对象。</p></blockquote><p><strong><em>内置插件</em></strong></p><ul><li>uglifyJsPlugin:压缩和混淆代码。</li><li>CommonsChunkPlugin:提高打包效率，将第三方库和业务代码分开打包</li><li>HotModuleReplacementPlugin:热更新</li><li>DefinePlugin:编译时配置全局变量，这对开发模式和发布模式的构建允许不同行为非常有用</li></ul><p><strong>其它插件</strong></p><ul><li>html-webpack-plugin：可以根据模板自动生成 html 代码，并自动引用 css 和 js 文件</li><li>ProvidePlugin：自动加载模块，代替 require 和 import</li><li>extract-text-webpack-plugin:将 js 文件中引用的样式单独抽离成 css 文件</li><li>optimize-css-assets-webpack-plugin:不同组件中重复的 css 可以快速去重</li><li>clean-webpack-plugin:打包生成 dist 目录下的覆盖</li></ul><h2 id="loader-与-plugin-的区别，以及如何自定义">loader 与 plugin 的区别，以及如何自定义</h2><p><strong>区别</strong></p><blockquote><ul><li>loader 本身就只是一个函数，在该函数中对接收到的内容进行转换。它是个翻译官，它在 modules 的 rules 中配置，内部包含 test、loader 和 options 属性。</li><li>Plugin 就是插件，基于事件流。Webpack 在运行当中会去广播一些事件，plugin 去监听这些事件，然后干活。plugin 单独配置，通过构造函数传入参数生效。</li></ul></blockquote><p><strong>自定义 loader</strong></p><blockquote><ul><li>loader 本质上是一个函数</li><li>因为函数中的 this 作为上下文会被 webpack 填充，因此不能将 loader 设为一个箭头函数</li><li>该函数接受一个参数，这个参数是 webpack 传递给 loader 的文件源内容</li></ul></blockquote><p><strong>自定义 Plugin</strong></p><blockquote><ul><li>webpack 编译会创建两个核心对象：compiler 和 compilation</li><li>compiler：包含了 webpack 环境的所有配置消息，包括 options、loader 和 plugin，以及 webpack 整个生命周期相关的钩子</li><li>compilation：作为 Plugin 内置事件回调函数的参数，包含了当前的模块资源、编译生成资源、变化的文件以及被跟踪依赖的状态信息。当检测到一个文件变化，一次新的 compilation 将被创建。</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导出一个函数，其中source为webpack传递给loader的输入参数--文件源内容</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">function</span> (<span class="params">source</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> content = <span class="title function_">doSomething2JsString</span>(source)</span><br><span class="line">  <span class="comment">// 如果loader配置了options对象，那么this.query将指向options</span></span><br><span class="line">  <span class="keyword">const</span> options = <span class="variable language_">this</span>.<span class="property">query</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">fallback</span>(<span class="literal">null</span>, content) <span class="comment">//异步</span></span><br><span class="line">  <span class="keyword">return</span> content <span class="comment">//同步</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自定义 Plugin，需要遵循的规范是：</p><blockquote><ul><li>插件必须是一个函数或是包含 apply 方法的对象，这样才能访问 compiler 实例</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyPlugin</span> &#123;</span><br><span class="line">  <span class="comment">//Webpack会调用MyPlugin实例的apply方法给插件实例传入compiler对象</span></span><br><span class="line">  <span class="title function_">apply</span>(<span class="params">compiler</span>) &#123;</span><br><span class="line">    <span class="comment">// 找到合适的事件钩子，实现自己的插件</span></span><br><span class="line">    compiler.<span class="property">hooks</span>.<span class="property">emit</span>.<span class="title function_">tap</span>(<span class="string">&#x27;MyPlugin&#x27;</span>, <span class="function">(<span class="params">compilation</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">//do something</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="热更新">热更新</h2><p>webpack 的热更新又称为热替换(Hot Module Replacement) – HMR:这个机制可以做到不用刷新浏览器而将变更的模块替换掉。</p><p>HMR 的核心就是：客户端从服务端拉去更新后的文件(他们直接维护了一个<strong>websocket</strong>)，当本地资源发生变更后，客户端进行资源对比，然后增量更新。<br>开启 HMR，要在 webpack 配置文件的 devServer 中设置 hot 为 true 即可。</p><h2 id="SourceMap-设置">SourceMap 设置</h2><ul><li>项目打包后，如果关闭 sourceMap 的配置，在浏览器打开项目后，看到的 js 代码为打包后的代码，不利于查找代码错误。</li><li>sourceMap 是一个映射关系，他可以知道在 dist 打包后的 main.js 错误的代码对应在未经打包的代码的位置。</li></ul><p>配置项为：</p><ul><li>devtool:‘source-map’—会在 dist 目录下生成一个.map 的映射文件。<ul><li>如果为’inline-source-map’，则不会生成.map 文件，直接在原 main.js 文见中添加注释以映射(位置在底部)。</li><li>如果为’cheap-inline-source-map’ :与 inline 不同，只告诉是哪行代码出错，效率会高一些。</li><li>如果为&quot;cheap-module-source-map’:不管是业务代码，但是依赖的第三方模块，都会显示出出错的地方。</li><li>eval 是打包效率最高的方式。</li></ul></li><li>如果是开发环境，建议使用<code>cheap-module-eval-source-map</code>这种方式。</li><li>如果是生产环境，一般不用设置 devtool 的配置。如果要配置，推荐使用<code>cheap-module-source-map</code>。</li></ul><h2 id="代理">代理</h2><p><strong>配置</strong></p><blockquote><p>webpack 中提供服务器的工具为 webpack-dev-server，只适用与开发阶段<br>配置核心为：devServer -&gt; proxy</p></blockquote><p><strong>原理</strong></p><blockquote><p>Proxy 工作原理实际上利用<strong>http-proxy-middleware</strong>这个 http 中间件，实现请求转发给其他服务器。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> proxy = <span class="built_in">require</span>(<span class="string">&#x27;http-proxy-middleware&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title function_">express</span>()</span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/api&#x27;</span>,<span class="title function_">proxy</span>(&#123;<span class="attr">target</span>:<span class="string">&#x27;http://liugezhou.online&#x27;</span>&#125;,<span class="attr">changeOrigin</span>:<span class="literal">true</span>))</span><br><span class="line"><span class="comment">// http://localhost:3000/api/foo/bar -&gt;http://liugezhou.online/aoi/foo/bar</span></span><br></pre></td></tr></table></figure><p><strong>跨域</strong></p><blockquote><p>过程：</p><ul><li>webpack-dev-server 在本地开发时启动了一个服务器，我们开发的应用运行在这个服务器上</li><li>后端服务运行在另一个服务上</li><li>这个时候由于<strong>浏览器的同源策略</strong>，访问后端服务就会出现跨域现象</li><li>然后使用 devServer-proxy 配置，相当于开了一个代理服务器</li><li>于是交互变成：本地发生请求、代理服务器接受请求、代理服务器将请求发生给目标服务器，然后再倒叙顺序返回</li><li>由于服务器与服务器直接请求数据不会发生跨域行文，所以上面的流程就跑通了(跨域行为是浏览器的同源策略导致的)</li></ul></blockquote><h2 id="TreeShaking">TreeShaking</h2><p><strong>要解决的问题</strong><br>在 math.js 这个模块中有两个方法 add 和 minus，在 index 中只调用 add 方法，去打包的时候，会将 math 中的两个方法均打包，这样做是没有必要，且会使得打包文件变大，Tree Shaking 就是为了解决这个问题的。</p><ul><li>开发环境下：默认没有TreeShaking功能。</li><li>生成环境下：默认配置好，但是仍然需要对 package.json 中的 sideEffects 进行配置。</li></ul><h2 id="Code-Splitting">Code Splitting</h2><p>Webpack的代码分割与webpack无关，只是对代码进行分割，提高代码的执行效率和性能。<br>比如引入了第三方包lodash，在entry中设置将业务代码和引入的包分别单独打包。</p><h2 id="Chunk指什么">Chunk指什么</h2><p>chunk 指的是整个项目完成打包后，dist 下面有几个 js 文件就是指几个 chunk。</p><h2 id="借助-webpack-优化性能">借助 webpack 优化性能</h2><blockquote><ul><li>JS 代码压缩 -&gt; uglifyJsPlugin/terserPlugin</li><li>CSS 代码压缩 -&gt;optimize-assets-css-webpack-plugin/css-minimizer-webpack-plugin</li><li>HTML 文件代码压缩 -&gt;htmlwebpackplugin 设置 minify 属性进行优化</li><li>文件大小压缩 -&gt; compression-webpack-plugin</li><li>图片压缩 -&gt; url-loader/</li><li>Tree Shaking -&gt;</li><li>代码分离 -&gt; splitChunkPlugin</li><li>内联 chunk -&gt;</li></ul></blockquote><h2 id="提搞-webpack-的构建速度">提搞 webpack 的构建速度</h2><p><strong>优化 loader 配置</strong></p><blockquote><p>使用 loader 时，可以通过配置 include、exclude、test 等属性来匹配文件</p></blockquote><p><strong>合理使用 resolve.extensions</strong><br><strong>优化 resolve.modules</strong></p><blockquote><p>项目构建时，可以通过指明存放第三模块的绝对路径来减少寻找的时间</p></blockquote><p><strong>优化 resolve.alias</strong></p><blockquote><p>别名使用</p></blockquote><h2 id="除了-webpack，其他模块管理工具">除了 webpack，其他模块管理工具</h2><p><strong>rollup</strong></p><blockquote><p>相比 webpack，rollup 要小巧很多，当下的 vue、react、three.js 都是使用 rollup 打包</p></blockquote><p><strong>vite</strong></p><blockquote><ul><li>快速冷启动</li><li>即时热更新</li><li>真正的按需编译</li></ul></blockquote><p><strong>parcel</strong></p>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript数组</title>
      <link href="/012-JS%E6%95%B0%E7%BB%84/"/>
      <url>/012-JS%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="构造函数Array">构造函数Array</h2><ul><li>Array是JavaScript的原生对象，同时也是一个构造函数，可以用它生产新的数组，但由于Array作为构造函数的行为不一致，因此不建议使用。</li><li>new Array等同于 Array，加不加new一点影响都没有。</li><li>Array.of()返回由所有参数值组成的数组</li><li>Array.from()将具有iterator接口的对象转为数组</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">3</span>);</span><br><span class="line"><span class="keyword">let</span> a_b = <span class="title class_">Array</span>(<span class="number">3</span>)</span><br><span class="line"><span class="keyword">let</span> b = [<span class="literal">undefined</span>, <span class="literal">undefined</span>, <span class="literal">undefined</span>];</span><br><span class="line"></span><br><span class="line">a[<span class="number">0</span>] === <span class="literal">undefined</span></span><br><span class="line">b[<span class="number">0</span>] === <span class="literal">undefined</span></span><br><span class="line"><span class="number">0</span> <span class="keyword">in</span> a <span class="comment">// false</span></span><br><span class="line"><span class="number">0</span> <span class="keyword">in</span> b <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> c = <span class="title class_">Array</span>.<span class="title function_">of</span>(<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>)  <span class="comment">// [6,6,6]</span></span><br></pre></td></tr></table></figure><h2 id="静态方法">静态方法</h2><blockquote><ul><li><strong>Array.isArray()</strong></li></ul></blockquote><p>该方法返回一个布尔值，表示参数是否为数组，以来弥补typeof的不足。</p><h2 id="实例方法">实例方法</h2><h3 id="valueOf-toString">valueOf()  toString()</h3><blockquote><ul><li>首先这个valueOf()是所有对象都拥有的方法，表示对该对象求值。然后，这个数组的valueOf方法返回数组本身。</li></ul></blockquote><p>let arr = [1,2,3];</p><blockquote><p>arr.valueOf() //[1,2,3]</p><ul><li>这个toString()方法也是对象的通用方法，数组的toString()方法返回数组的字符串形式。</li></ul></blockquote><p>arr.toString()  // 1,2,3</p><h3 id="push-pop">push()   pop()</h3><blockquote><ul><li>push()方法在数组末尾添加一个或多个元素，返回添加元素后数组的长度，会改变原数组。</li><li>pop()方法 删除数组的最后一个元素，返回删除的元素，会改变原数组。</li></ul></blockquote><h3 id="shift-unshift">shift()  unshift()</h3><blockquote><ul><li>shift()方法 删除数组的第一个元素，返回删除的元素，会改变原数组。</li><li>unshift()方法 在数组的开头添加一个或多个元素，返回添加元素后的数组长度，会改变原数组。</li></ul></blockquote><h3 id="join">join()</h3><blockquote><ul><li>join()方法以指定的参数作为分隔符，将所有数组成员连接为一个字符串返回，不提供参数，默认以逗号连接。</li><li>字符串：Array.prototype.join.call(‘hello’,‘-’)  =&gt;  h-e-l-l-o</li></ul></blockquote><h3 id="concat">concat()</h3><blockquote><p>concat()方法用于多数组的合并，将新数组的成员，添加到原数组成员的后部，返回一个新数组，原数组成员不变。<br>除了数组作为参数，也可以接受其它类型的值作为参数。如果参数为对象，那么为浅拷贝：原对象发生改变，新生成的数组对象的值跟着发生改变。</p></blockquote><h3 id="reverse">reverse()</h3><blockquote><p>reverse 用于颠倒排列数组元素，返回改变后的数组，该方法将改变原数组。</p></blockquote><h3 id="slice">slice()</h3><blockquote><ul><li>slice方法可从已有的数组中返回选定的元素–<strong>返回一个新的数组</strong>，且<strong>原数组不会发生改变</strong>。</li><li>语法：arrayObject.slice(start,end)</li><li>start: 必填字段，规定从何处开始(索引0)选择。如果为负数，则是从数据尾部开始算起的位置。</li><li>end：可选字段，不包含该元素,如果包含该参数，则结果不包含该索引处的值。</li><li>重要应用是将一个类数组的对象转化为真正的数组：Array.prototype.slice.call({ 0: ‘a’, 1: ‘b’, length: 2 })</li><li></li></ul></blockquote><blockquote><ul><li>“web/entry-runtime.js”.slice(3)  -&gt; “entry-runtime.js”</li></ul></blockquote><h3 id="splice">splice()</h3><blockquote><ul><li>splice方法用于删除原数组的一部分成员，并可以在删除的位置添加新的数组成员，<strong>返回值</strong>是被删除的元素，该方法会改变原数组。</li><li>参数说明：第一个参数为删除的<strong>开始位置</strong>，第二个参数为删除的<strong>参数个数</strong>，如果后面还有参数，表示要被插入数组的新元素。起始位置如果是负数，表示从倒数位置开始删除。</li></ul></blockquote><h3 id="sort">sort()</h3><blockquote><ul><li>sort方法对数组成员进行排序，默认按照<strong>字典顺序</strong>排序。排序后，原数组发生改变。</li><li>按照自定义方式排序，可传入函数作为参数</li></ul></blockquote><h3 id="map">map()</h3><blockquote><ul><li>map()方法将数组的所有成员依次传入参数函数，然后把每一次的执行结果组成一个新数组返回，注意数组数组中的值是原始数据类型，确实不会改变原数组，但是如果值为引用数据类型，那么会对原数组进行更改。</li><li>map<strong>接受一个函数作为参数</strong>，参数依次为：<strong>当前成员、当前位置、数组本身</strong>。</li><li>map还可以接受第二个参数，用来绑定回调函数内部的this变量。</li></ul></blockquote><h3 id="forEach">forEach()</h3><blockquote><ul><li>forEach()与map()方法很相似，也是对数组的所有成员依次执行参数函数。包含参数、第二个参数等与map完全一致，只是forEach不返回值，<strong>只是用来操作数据。</strong></li></ul></blockquote><h3 id="filter">filter()</h3><blockquote><ul><li>filter用于过滤数组成员，满足条件的成员组成一个新数组返回。</li><li>**接受一个函数作为参数，**参数依次为：<strong>当前成员、当前位置、数组本身</strong>。</li><li>数组的所有成员执行该函数，返回结果为<strong>true</strong>的成员组成一个新数组返回。该方法不会改变原数组。</li></ul></blockquote><h3 id="find">find()</h3><p>数组实例的find()方法，用于找出第一个符合条件的数组成员。它的参数是一个回调函数，所有数组成员依次执行该回调函数，直到找出第一个返回值为true的成员，然后返回该成员。如果没有符合条件的成员，则返回undefined。</p><h3 id="includes">includes()</h3><p>判断一个数组中是否包含某个选项 [1, 2, 3].includes(2)</p><h3 id="flat-flatMap">flat()  flatMap()</h3><p>数组的成员有时还是数组，Array.prototype.flat()用于将嵌套的数组“拉平”，变成一维的数组。该方法返回一个新数组，对原数据没有影响。<br>以将flat(n)方法的参数写成一个整数，表示想要拉平的层数，默认为1。如果不管有多少层嵌套，都要转成一维数组，可以用Infinity关键字作为参数。</p><p>flatMap()方法对原数组的每个成员执行一个函数（相当于执行Array.prototype.map()），然后对返回值组成的数组执行flat()方法。该方法返回一个新数组，不改变原数组。</p><h3 id="some-every">some()  every()</h3><blockquote><ul><li>与map、forEach、filter一样接受一个函数作为参数，且函数内参数一致。</li><li>some为只要一个成员的返回值是true，则整个some方法就返回true。</li><li>every为所有成员的返回值是true，则整个every方法就返回true。</li></ul></blockquote><h3 id="reduce-reduceRight">reduce()  reduceRight</h3><blockquote><ul><li>reduce和reduceRight方法依次处理数组的每个成员，最终累计为一个值。</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>].<span class="title function_">reduce</span>(<span class="keyword">function</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> a + b</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// reduce方法求出数组所有成员的和。</span></span><br></pre></td></tr></table></figure><blockquote><p>reduce方法和reduceRight方法的第一个参数都是一个函数，该函数接受以下四个参数</p><ul><li>累积变量 – 默认为数组的第一个成员   必选</li><li>当前变量 – 默认为数组的第二个成员   必选</li><li>当前位置 – 从0开始 可选</li><li>原数组 可选</li></ul></blockquote><h3 id="indexOf-lastIndexOf">indexOf   lastIndexOf()</h3><blockquote><ul><li>indexOf方法返回给定元素在数组中第一次出现的位置，如果没有则为-1.</li><li>indexOf还可以接收第二个参数，表示搜索的开始位置。</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Week16-编辑器服务端API开发</title>
      <link href="/Week16-%E7%BC%96%E8%BE%91%E5%99%A8%E6%9C%8D%E5%8A%A1%E7%AB%AFAPI%E5%BC%80%E5%8F%91/"/>
      <url>/Week16-%E7%BC%96%E8%BE%91%E5%99%A8%E6%9C%8D%E5%8A%A1%E7%AB%AFAPI%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章目录排版做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="第一章：周介绍">第一章：周介绍</h2><p><strong>1-1 介绍</strong></p><blockquote><ul><li>需求指导设计，设计指导开发。无设计不开发。</li><li>服务端技术方案设计的方法</li><li>B端和编辑器基本功能API</li><li>技术方案设计文档</li></ul></blockquote><h2 id="第二章：技术方案设计">第二章：技术方案设计</h2><p><strong>2-1 技术方案设计-章介绍</strong></p><blockquote><p><strong>领导技术方案设计、评审技术方案设计。</strong><br>主要产出：server端技术方案设计<br>主要内容：</p><ul><li>接口设计</li><li>选择Restful,而不是<strong>GraphQL</strong></li><li>数据库设计</li><li>sever端整体设计</li></ul><p><strong>注意</strong>：正视技术方案设计，设计会节约时间。</p></blockquote><p><strong>2-2 接口设计-整理所有接口</strong></p><blockquote><ul><li>接口设计应该是在需求后的第一设计，接口设计好之后，前后端可以并行开发，互不影响。</li><li>接口设计是和需求对接最亲密的部分。</li><li>功能范围确认–根据功能设计接口</li></ul></blockquote><p>统一的输出格式：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">erron</span>:<span class="number">0</span>,</span><br><span class="line">  <span class="attr">data</span>:&#123;.....&#125;,</span><br><span class="line">  <span class="attr">message</span>:<span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2-3 接口设计-关于预览和数据统计</strong></p><blockquote><ul><li>作品统计/预览作品  单独独立</li><li>发布–标识位</li></ul></blockquote><p><strong>2-4 介绍GraphQL的使用和特点</strong></p><blockquote><p>为什么选择Restful API，而没有选择GraphQL</p><ul><li>GraphQL(Graph Query Language) 图查询语言。</li><li>意思是擅长处理&quot;图&quot;数据结构的查询，即多个数据对象，各个之间还有关联关系。</li><li>核心概念：schema  rootValue</li></ul></blockquote><p><strong>2-5 选择Restful API 而非 GraphQL</strong></p><blockquote><p>应用场景</p><ul><li>数据关系比较复杂</li><li>前端查询需求多变</li><li>有一个独立的数据提供方，对接很多使用方，不能一一定制开发</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/16-1.1sb04ia0rla8.webp" alt="16-1"></p><p><strong>2-6 数据库设计-数据表结构</strong></p><blockquote><p>注意，使用sequelize和mongoose，会自动创建id/createAt和updateAt,无需再自己手动创建。</p><ul><li>用户表 --讲了一下用户表的表结构</li><li>作品/模版–讲了一下作品表的表结构</li><li>渠道 – 同上</li></ul></blockquote><p><strong>2-7 数据库设计-代码演示</strong></p><blockquote><p>src/models下的model设计</p></blockquote><p><strong>2-8 server端架构设计</strong><br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/16-2.6ulmnnc0qfk0.webp" alt="16-2"><br><strong>2-9 技术方案设计-章总结</strong></p><blockquote><p>领导技术方案设、评审技术方案设计</p></blockquote><h2 id="第三章：基础功能开发">第三章：基础功能开发</h2><p><strong>3-1 章介绍</strong></p><blockquote><ul><li>登录功能设计</li><li>用户信息接口</li><li>作品接口</li><li>模板接口</li></ul></blockquote><p><strong>3-2 登录功能设计-获取验证码</strong></p><blockquote><ul><li>初次获取验证码</li><li>再次获取验证码</li><li>登录验证</li></ul></blockquote><p><strong>3-3 登录功能设计-划重点</strong></p><blockquote><ul><li>缓存 – 禁止频繁发送</li><li>短信服务的提示和报警</li><li>短信发送失败，不会缓存，可立即重新生成验证码</li><li>短信服务挂掉，报警</li></ul></blockquote><p><strong>3-4 制定开发规范</strong></p><blockquote><ul><li>拉新分支 feature-xxx / fix-xxx/ hotfix-xxx</li><li>commit：参考cz-config,js</li><li>往dev分之提交 pr Pull Requerst</li></ul></blockquote><p><strong>3-5 用户信息接口-获取登录验证码</strong><br><strong>接口</strong></p><blockquote><ul><li>获取手机短信验证码</li><li>登录(包含注册)</li><li>获取用户信息</li><li>修改用户信息</li></ul></blockquote><p><strong>代码演示</strong></p><blockquote><ul><li>routers/users.js</li><li>controller/users/</li><li>service/users.js</li><li>chache/users</li><li><strong>test</strong>/apis/users,js</li></ul></blockquote><p><strong>3</strong>-6 用户信息接口-登录</p><blockquote><p>本节课读代码</p></blockquote><p><strong>3-7 用户信息接口-接口测试</strong></p><blockquote><p>讲的个鸡毛-依然是读代码</p></blockquote><p><strong>3-8 作品接口-创建作品</strong><br><strong>接口</strong></p><blockquote><ul><li>创建空白作品</li><li>复制作品(通过模版创建)</li><li>删除作品</li><li>恢复作品</li><li>转增作品</li><li>我的作品列表(搜索 分页)</li><li>我的回收列表(搜索 分页)</li><li>查询单个作品信息</li><li>保存作品</li></ul></blockquote><p><strong>代码演示</strong></p><blockquote><ul><li>routes/works.js</li><li>controller/works.js</li><li>service/works.js</li><li><strong>test</strong>/api/works.js</li></ul></blockquote><p><strong>3-9 作品接口-查询、更新和复制</strong></p><blockquote><p>同上代码演示</p></blockquote><p><strong>3-10 作品接口-接口测试</strong></p><blockquote><p>这个课程讲的真是垃圾。<br>你以为讲源码吗？或者课程代码是多难，拿着代码讲一遍，怎么想的？</p></blockquote><p><strong>3-11 模版接口</strong></p>]]></content>
      
      
      <categories>
          
          <category> Web架构之脚手架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web架构之脚手架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Week15-服务端 CI_CD：Github 自动化</title>
      <link href="/Week15-%E6%9C%8D%E5%8A%A1%E7%AB%AF%20CI_CD%EF%BC%9AGithub%20%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
      <url>/Week15-%E6%9C%8D%E5%8A%A1%E7%AB%AF%20CI_CD%EF%BC%9AGithub%20%E8%87%AA%E5%8A%A8%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章目录排版做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="第一章：周介绍">第一章：周介绍</h2><p><strong>1-1 介绍</strong></p><p>服务端 CI/CD流程–让 github 自动化为我们服务</p><blockquote><p>CI:    Continuous Integration  持续集成<br>CD:   Continuous Delivery     持续交付<br>合理全面的 CI/CD，自动化研发流程，提高研发效率，增加系统稳定性</p></blockquote><p><strong>收获</strong></p><blockquote><ul><li>使用 Github actions 进行 CI/CD</li><li>学会 Docker 在 nodejs 中的应用</li><li>搭建测试环境</li></ul></blockquote><p>关键词</p><blockquote><ul><li>CI/CD</li><li>Github actions：实现 CI/CD 的一个工具</li><li>Docker Docker-compose</li></ul></blockquote><p>链接：<a href="https://www.redhat.com/zh/topics/devops/what-is-ci-cd">CI/CD 介绍</a></p><h2 id="第二章-Github-actions">第二章 Github actions</h2><blockquote><p>这一章双越讲的真的不知道讲了个啥，自己课下补吧，真是一塌糊涂。<br>github actions 的学习确实很有必要啊，回头等学习完毕再来吐槽。<br>学习阮一峰大哥的这节文档：<a href="http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html">http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html</a></p></blockquote><p><strong>第二遍视频笔记记录如下</strong><br><strong>2-1 章介绍</strong></p><blockquote><ul><li>Github actions 是github 官方发布的一个产品 。</li><li>使用 Github actions 自动化构建和测试</li><li>认识 Github actions</li><li>注意：接口测试会依赖于测试机搭建。</li><li>二八法则。</li><li>疑问：为了主流程跑通，不让边角东西打扰我们主流程，难道不注释掉那些代码就不能演示吗？后面再接上，这里的我要搞明白为什么在讲课代码演示的时候，是否为了讲师自己方便注释划水讲课。</li><li>疑问二：既然不是讲 Github actions 和 Docker 的一门课，又为什么抽出一周的时间来划水(老师的答案可能是后面确实是用到这个知识了，有必要了解一下，那我的疑问又来了，既然用到了，又讲到了，那肯定默认这部分内容是很重要的，作为一门架构课，是不是应该认真对待每一周每一节课的录制，即使不那么深入，起码基础的内容得讲明白，这是必须的吧)</li><li>疑问三：课程是以业务为导向，不可能把全部细节都讲出来，这个无可厚非，没有毛病，那你好歹把基础的大路边的内容，起码普及个差不多吧。</li><li>疑问四：这节章介绍内容，你讲解那么多二八法则是干嘛？讲解什么边际效应，是为了后续课程划水先找借口吗？</li></ul></blockquote><p><strong>2-2 认识 Github actions</strong></p><blockquote><ul><li>00:00-01:00：由于中美时差造成的 Github 不稳定问题。</li><li>01:00-01:50：讲解了githu被微软收购，变得更好些，有了私有化个人项目，对中小企业越来越友好</li><li>01:50-02:10:讲解了课程为什么代码不公开的原因是一些数据的线上原因，此事说过好几遍，<ul><li>(疑问:有敏感数据，代码公开直接将重要数据脱敏这个方案是否可行？又是否因为写代码的课程录制繁琐而不公开仓库)</li></ul></li><li>02:10-04:15: 链接一介绍：进入一个项目，讲解如何查找 actions，以及 actions 下面的页面展示，得出的结论：帮助你在项目根目录下新建.github/workflow/xxx.yml 文件。</li><li>04:16-06:20:链接二介绍，官方翻译版本，挑选了 node.js 发布中的命令 npm install,npm publish，以及 secrets 的点名。</li><li>06:20-07：00 :拿出代码，介绍有这个文件，然后我们介绍这个文件前，先去看应用场景。</li><li>07:00-08:50:应用场景、范围介绍，打开开源的项目，介绍有三个文件名 yml，test.yml 对应master 分支，自动化测试，dev 分支即deploy-dev.yml–自动部署到测试机，v.x.x.x格式的 tag，自动上线–deploy-pro.yml</li><li>08:50- 17:13 :代码演示<ul><li>08:50-09:10: 讲解注释，去掉注释，添加注释</li><li>09:10-10:15: 中心思想为讲解 name 的命名要语义化<ul><li>(补充：name 可以省略，省略的话，默认以文件名命名，还有一点演示过程中，yml 文件名称改为 demo，yml 文件内容也更改为demo，会让人误以为这个 name 的命名必须以文件名字命名，其实不是，文件的命令与文件内容中 name 的命名没有关联)</li></ul></li><li>10:15-12:24: on/push/branches/paths的讲解，其中 paths 讲解可以简练点，讲的啰嗦了<ul><li>(补充：on字段可以是事件数组比如 on:[push,pull_request]]),branches可以限定分支或<strong>标签</strong>）</li></ul></li><li>12:24-17:13:jobs 讲解。<ul><li>（补充：runs-on 没什么特殊情况下直接使用 ubuntu-latest,还有可以设置的比如windows-latest，macOS-latest，steps 中 uses 中的 actions/checkout@v2,<a href="http://xn--github-9o7i01d8z2d6cw903bj46bexyb.com/actions/checkout">实际上代表的是github.com/actions/checkout</a> 这个仓库，actions/xxx 中的东西，都是仓库中的内容，GitHub 官方的 actions 都放在 <a href="https://github.com/actions">github.com/actions</a> 里面）</li></ul></li></ul></li></ul></blockquote><p><strong>2-3 Github actions 功能演示</strong></p><blockquote><ul><li>00:00-00:50：run为自定义命令。如果为多个命令，则格式为 run: | 。</li><li>00:50-02:00：演示 run 命令 touch、echo、cat。</li><li>03:00-03:50：代码提交–将branch 改为本地代码分支，演示本地分支提交触发流程，其中关于 .docker-volumes/加到 ignore，具体干啥的留个问号。还有 commit 规范这块前面<strong>貌似</strong>没讲是如何控制规范的「ci 工具」？</li><li>03:50-10:00:来到代码仓库-Actions，讲解 workflows。讲解内容为成功失败执行过程的状态以及 job 在 Github 上Actions 中的执行结果，结论：遇到错误看日志 。</li><li>10:00-10:56 :总结回顾步骤 steps 的四种形式 (我的理解是并不是四种形式，是属于一种：steps 下面的 name属性可省略；uses 是是否有使用第三方 actions的需求，可选；run：执行脚本，可选)</li><li>11:00-12:57:本章小结<ul><li>认识 Github Actions</li><li>应用场景</li><li>yml语法格式</li></ul></li></ul></blockquote><p><strong>2-4 Github actions 做自动化测试</strong><br>新建 yml 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name</span>: test</span><br><span class="line"></span><br><span class="line"><span class="attr">on</span>:</span><br><span class="line">    <span class="attr">push</span>:</span><br><span class="line">        <span class="attr">branches</span>:</span><br><span class="line">            - master</span><br><span class="line">        <span class="attr">paths</span>:</span><br><span class="line">            - <span class="string">&#x27;.github/workflows/**&#x27;</span></span><br><span class="line">            - <span class="string">&#x27;__test__/**&#x27;</span></span><br><span class="line">            - <span class="string">&#x27;src/**&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs</span>:</span><br><span class="line">    <span class="attr">test</span>:</span><br><span class="line">        runs-<span class="attr">on</span>: ubuntu-latest</span><br><span class="line"></span><br><span class="line">        <span class="attr">steps</span>:</span><br><span class="line">            - <span class="attr">uses</span>: actions/checkout@v2</span><br><span class="line">            - <span class="attr">name</span>: <span class="title class_">Use</span> <span class="title class_">Node</span>.<span class="property">js</span></span><br><span class="line">              <span class="attr">uses</span>: actions/setup-node@v1</span><br><span class="line">              <span class="attr">with</span>:</span><br><span class="line">                  node-<span class="attr">version</span>: <span class="number">14</span></span><br><span class="line">            - <span class="attr">name</span>: lint and test</span><br><span class="line">              <span class="attr">run</span>: |</span><br><span class="line">                  npm i</span><br><span class="line">                  npm run lint</span><br><span class="line">                  npm run <span class="attr">test</span>:remote</span><br></pre></td></tr></table></figure><blockquote><p>本节讲 Github actions 做自动测试</p><ul><li>00:00-- 03:00   test.yml 代码讲解</li></ul></blockquote><p>主要自动测试命令为 npm run lint 和 npm run test:remote(补充：checkout 与setup-node 是 actions 仓库比较常用的两个 actions，分别表示下载代码和安装 node)</p><blockquote><ul><li>03:00-- 04:30   本地与远程接口测试</li></ul></blockquote><p>pre-commit 执行本地接口测试(我的遗留问题：<strong>关于 pre-commit 部分</strong>)</p><blockquote><p>master push 远程接口测试</p><ul><li>04:30 – 04:50</li></ul></blockquote><p>测试 「测试部署机」部署完毕</p><blockquote><ul><li>04:45 –  05:30  branches 讲解</li></ul></blockquote><p>关于 branches 分支的一些注意说明</p><blockquote><ul><li>05:30 --09:50  分支提交actions 讲解<ul><li>这里由于直接下载的代码为开源版本，与课程内容代码出入非常大，因此需要对开源的代码进行操作</li><li>如果将 test.yml 分支改为 main，push到我们自己仓库的时候, actions日志中会发现 lin and test 出现大量错误</li><li>课程给出的开源代码一团，我们为了修正这个错误，我们要去修改、甚至删除那些相应的代码，这里非常不得劲</li></ul></li></ul></blockquote><p><strong>还是那个疑问，为什么不整个与课程同步的代码仓库？这个对学员来说究竟是不是必要的？</strong></p><blockquote><p>经过笨拙的尝试，终于成功。</p></blockquote><p><strong>2-5 Github actions 章总结</strong></p><blockquote><p>没说什么新的内容</p></blockquote><h2 id="第三章-Docker">第三章 Docker</h2><p><strong>3-1 Docker 章介绍</strong><br>Docker</p><blockquote><p>基于 Docker，我们可以把开发、测试环境，一键部署到任何一台机器上。只要该机器安装了 Docker。<br>有了 Docker，就有了一切。</p></blockquote><p>主要产出</p><blockquote><p>使用 Docker 构建 nodejs 项目</p></blockquote><p>主要内容</p><blockquote><p>认识 Dcoker<br>Dockerfile</p></blockquote><p>注意事项</p><blockquote><p>专业的运维工程师对 Docker还有更全面的应用：弹性扩展、微服务等。</p></blockquote><p><strong>3-2 认识 Docker</strong><br>介绍</p><blockquote><p>Docker 就是一种虚拟机技术，比传统虚拟机(VMware、virtualBox)更加简单、轻量</p><ul><li>启动快</li><li>资源占用少</li><li>体积小</li></ul></blockquote><p>查找 docker 安装镜像</p><blockquote><p><a href="https://hub.docker.com/">https://hub.docker.com/</a></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/15-1.5y49r0icxak0.webp" alt="15-1"></p><p><strong>3-3 启动一个Docker容器</strong></p><p><strong>image镜像</strong></p><blockquote><ul><li>下载镜像 docker pull <image-name>:<tag></li><li>查看所有镜像： docker images</li><li>删除镜像：    docker rmi <images-id></li><li>上传镜像：    docker push <username>/<password>:<tags></li><li>如果出现REPOSITORY为 null 的情况时，使用docker image prune删除</li></ul></blockquote><p><strong>container</strong></p><blockquote><ul><li>启动容器：<strong>docker run -p xxxx:xxx -v=hostpath:containerPath -d --name <container-name> <image-name></strong><ul><li>-p 端口映射</li><li>-v 数据卷，文件映射</li><li>-d 后台运行</li><li>–name 定义容器名称</li></ul></li><li>查看所有容器 docker ps, 加 -a 显示隐藏的容器</li><li>停止容器 docker stop <container-id></li><li>删除容器 docker rm <contaier-id>,加-f 是强制删除</li><li>查看容器信息，如 IP 地址 docker inspect <container-id></li><li>查看容器日志 docker logs <container-id></li><li>进入容器控制台 docker exec -it <container-id> /bin/sh</li></ul></blockquote><p><strong>3-4 Docker容器的进一步演示</strong><br><strong>功能演示</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">docker run -p <span class="number">81</span>:<span class="number">80</span> -d --name nginx1 nginx</span><br><span class="line">docker ps</span><br><span class="line"></span><br><span class="line"># 访问 <span class="attr">localhost</span>:<span class="number">81</span> ，并查看 log</span><br><span class="line"></span><br><span class="line">docker exec -it &lt;container-id&gt; <span class="regexp">/bin/</span>sh</span><br><span class="line">cd /usr/share/nginx/html</span><br><span class="line">echo hello docker world index.<span class="property">html</span></span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line"># 重新访问 <span class="attr">localhost</span>:<span class="number">81</span> ，强制刷新</span><br><span class="line"></span><br><span class="line">docker stop &lt;container-id&gt;</span><br><span class="line">docker rm &lt;container-id&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># <span class="number">1.</span> 新建 /<span class="title class_">Users</span>/wfp/html/index.<span class="property">html</span> ，内容自定义即可</span><br><span class="line"></span><br><span class="line"># <span class="number">2.</span> 运行</span><br><span class="line">docker run -p <span class="number">81</span>:<span class="number">80</span> -v=<span class="regexp">/Users/</span>wfp/<span class="attr">html</span>:<span class="regexp">/usr/</span>share/nginx/html  -d --name nginx1 nginx</span><br><span class="line"></span><br><span class="line"># <span class="number">3.</span> 访问 重新访问 <span class="attr">localhost</span>:<span class="number">81</span> ，看是否你创建的页面？</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>3-5 介绍 Dockerfile 语法</strong></p><blockquote><p>一个简单的配置文件，描述如何构建一个新的 image 镜像<br>注意：必须是 Dockerfile 这个文件名，必须在项目的根目录</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># <span class="title class_">Dockerfile</span></span><br><span class="line"></span><br><span class="line"><span class="variable constant_">FROM</span> <span class="attr">node</span>:latest</span><br><span class="line"><span class="variable constant_">WORKDIR</span> /app</span><br><span class="line"><span class="variable constant_">COPY</span> . /app</span><br><span class="line"></span><br><span class="line"># 设置时区</span><br><span class="line"><span class="variable constant_">RUN</span> ln -sf /usr/share/zoneinfo/<span class="title class_">Asia</span>/<span class="title class_">Shanghai</span> /etc/localtime &amp;&amp; echo <span class="string">&#x27;Asia/Shanghai&#x27;</span> &gt;<span class="regexp">/etc/</span>timezone</span><br><span class="line">#安装</span><br><span class="line"><span class="variable constant_">RUN</span> npm set registry <span class="attr">https</span>:<span class="comment">//registry.npm.taobao.org</span></span><br><span class="line"><span class="variable constant_">RUN</span> npm install</span><br><span class="line">#启动</span><br><span class="line"><span class="variable constant_">CMD</span> echo #<span class="variable constant_">SERVER_NAME</span> &amp;&amp;echo &amp;<span class="variable constant_">AUTHOR_NAME</span> &amp;&amp; npm run dev &amp;&amp; npx pm2 log</span><br><span class="line"></span><br><span class="line">#环境变量</span><br><span class="line"></span><br><span class="line"><span class="variable constant_">ENV</span> <span class="variable constant_">SERVER_NAME</span> =<span class="string">&quot;test&quot;</span></span><br><span class="line"><span class="variable constant_">ENV</span> <span class="variable constant_">AUTHOR_NAME</span> =<span class="string">&quot;liugezhou&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>3-6 用 Dockerfile 构建镜像</strong><br><strong>构建</strong></p><blockquote><p>docker build -t <name> .  #最后的’.'指 Dockerfile 在当前目录下。    <br>docker images</p></blockquote><p><strong>课程修改代码为(去掉routes/index.js的数据库连接以及bin/www中的数据库同步)：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># <span class="title class_">Dockerfile</span></span><br><span class="line"><span class="variable constant_">FROM</span> <span class="attr">node</span>:<span class="number">14</span></span><br><span class="line"><span class="variable constant_">WORKDIR</span> /app</span><br><span class="line"><span class="variable constant_">COPY</span> . /app</span><br><span class="line"></span><br><span class="line"># 设置时区</span><br><span class="line"><span class="variable constant_">RUN</span> ln -sf /usr/share/zoneinfo/<span class="title class_">Asia</span>/<span class="title class_">Beijing</span> /etc/localtime &amp;&amp; echo <span class="string">&#x27;Asia/Beijing&#x27;</span> &gt;<span class="regexp">/etc/</span>timezone</span><br><span class="line"></span><br><span class="line">#安装</span><br><span class="line"><span class="variable constant_">RUN</span>  npm set registry <span class="attr">https</span>:<span class="comment">//registry.npm.taobao.org</span></span><br><span class="line"><span class="variable constant_">RUN</span> npm install</span><br><span class="line"></span><br><span class="line">#启动</span><br><span class="line"><span class="variable constant_">CMD</span> echo $SERVER_NAME &amp;&amp; echo $AUTHOR_NAME &amp;&amp; npm run dev &amp;&amp; npx pm2 log</span><br><span class="line"></span><br><span class="line">#环境变量</span><br><span class="line"><span class="variable constant_">ENV</span> <span class="variable constant_">SERVER_NAME</span>=<span class="string">&quot;lego-node-server&quot;</span></span><br><span class="line"><span class="variable constant_">ENV</span> <span class="variable constant_">AUTHOR_NAME</span>=<span class="string">&quot;liugezhou&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 步骤一：构建</span></span><br><span class="line">docker build -t liugezhou-server .  # name为将要构建镜像的名字，. 为当前目录</span><br><span class="line"><span class="comment">// 步骤二：查看</span></span><br><span class="line">docker images</span><br><span class="line"><span class="comment">//步骤三：启动</span></span><br><span class="line">docker run -p <span class="number">8081</span>:<span class="number">3000</span> -d --name server1 liugezhou-server  # 创建容器，注意端口映射</span><br><span class="line"><span class="comment">//步骤四：查看启动状态</span></span><br><span class="line">docker ps</span><br><span class="line"><span class="comment">// 步骤五 查看容器日志</span></span><br><span class="line">docker logs &lt;container-id&gt;  # 需等待构建完成</span><br><span class="line"></span><br><span class="line"># 访问 <span class="attr">localhost</span>:<span class="number">8081</span>/api/db-check ，查看 docker logs</span><br><span class="line"></span><br><span class="line">docker stop &lt;container-id&gt;</span><br><span class="line">docker rm &lt;container-id&gt;</span><br><span class="line">docker rmi &lt;image-id&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="第四章-Docker-compose">第四章 Docker-compose</h2><p><strong>4-1 docker-compose 章开始</strong></p><blockquote><p>用的来说就是 Docker-compse就是一种组合，这章学到的内容就是这个英文单词的翻译。</p></blockquote><p><strong>4-2 docker-compose 配置文件</strong></p><blockquote><ul><li>文件名称必须为 <strong>docker-compose.yml</strong></li><li>代码演示：多个service，代表多个docker镜像</li><li>**image:redis **   表示引用官网的redis 镜像</li><li>container-name    镜像名称</li><li>ports    端口映射</li><li>enviroment    环境变量 - TZ</li><li>build：    docker build -t  <image-name>  .<ul><li>context .  ：「当前目录」</li><li>dockerfile：Dockerfile   ： 「基于Dockerfile构建」</li></ul></li></ul></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version</span>: <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services</span>:</span><br><span class="line">    editor-<span class="attr">server</span>:  # service name</span><br><span class="line">        <span class="attr">build</span>:</span><br><span class="line">            <span class="attr">context</span>: .  # 当前目录</span><br><span class="line">            <span class="attr">dockerfile</span>: <span class="title class_">Dockerfile</span>  # 基于 <span class="title class_">Dockerfile</span> 构建</span><br><span class="line">        <span class="attr">image</span>: editor-server # 依赖于当前 <span class="title class_">Dockerfile</span> 创建出来的镜像</span><br><span class="line">        <span class="attr">container_name</span>: editor-server</span><br><span class="line">        <span class="attr">ports</span>:</span><br><span class="line">            - <span class="number">8081</span>:<span class="number">3000</span> # 宿主机通过 <span class="number">8081</span> 访问</span><br><span class="line">    editor-<span class="attr">redis</span>:  # service name，重要！</span><br><span class="line">        <span class="attr">image</span>: redis  # 引用官网 redis 镜像</span><br><span class="line">        <span class="attr">container_name</span>: editor-redis</span><br><span class="line">        <span class="attr">ports</span>:</span><br><span class="line"> # 宿主机，可以用 <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6378</span> 即可连接容器中的数据库 <span class="string">`redis-cli -h 127.0.0.1 -p 6378`</span></span><br><span class="line"> # 但是，其他 docker 容器不能，因为此时 <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> 是 docker 容器本身，而不是宿主机</span><br><span class="line">            - <span class="number">6378</span>:<span class="number">6379</span></span><br><span class="line">        <span class="attr">environment</span>:</span><br><span class="line">            - <span class="variable constant_">TZ</span>=<span class="title class_">Asia</span>/<span class="title class_">Shanghai</span> # 设置时区</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>4-3 docker-compose 命令演示</strong></p><blockquote><ul><li>00：00    –    02：55    <strong>命令</strong><ul><li>docker-compose build <service-name></li><li>启动所有服务器：docker-compose up -d (后台启动)</li><li>停止所有服务：    docker-compose down</li><li>查看服务：    docker-compose ps</li><li>docker 与docker-compose的命令执行范围</li></ul></li><li>02：55    –    05：10    <strong>安装pm2</strong><ul><li>本地安装pm2  npm i pm2 --S,或者Dockerfile中全局安装pm2</li><li>再次强调 「阻塞控制台的命令」</li></ul></li><li>05：10    –    06 :30    <strong>代码修改</strong><ul><li>新建 docker-compose.yml</li><li>新建 config/envs/prd-dev.js</li></ul></li><li>06：30    –    08：16    <strong>prd-dev.js文件</strong><ul><li>内容为修改redis连接配置，讲解</li></ul></li><li>08：19    –    10：00    画图？<ul><li>罗里吧嗦</li></ul></li><li>10：01    –    10：48    代码修改<ul><li>wtf，也不知道是出于什么原因，如此设计课程，观看视频体验 ：一颗星</li></ul></li><li>10：49    –    13：17    <strong>build</strong><ul><li>docker-compose build  editor-server</li></ul></li><li>13：18    –    15：12    <strong>演示</strong><ul><li>docker images     查看build是否成功</li><li>docker-compose -d</li><li>docker-compose ps</li><li>docker ps</li><li>访问：localhost:8081/api/db-check</li></ul></li><li>15：12    –    17：17    <strong>redis-cli</strong><ul><li>终端输入：<strong>redis-cli</strong>，进入到本地redis服务,查看本地 keys *。<ul><li>「执行redis-cli，我本地显示：Could not connect to Redis at 127.0.0.1:6379: Connection refused；这是因为我本地没启redis服务，于是：redis-server启动，redis-cli进入redis控制台」</li></ul></li><li><strong>redis-cli -h 127.0.0.1 -p 6378</strong>    进入到docker容器中的redis</li></ul></li><li>17：18    –    18：25    <strong>查看日志、down</strong><ul><li>docker logs <container-id></li><li>docker-compose down</li></ul></li></ul></blockquote><p><strong>4-4 数据持久化</strong><br><strong>连接mysql和mongodb</strong></p><blockquote><p><strong>区别:</strong></p><ul><li>redis无数据库，mysql与mongodb需要连接数据库</li><li>redis是缓存，无需数据持久化，mysql与mongodb需要**。**</li></ul></blockquote><blockquote><p>volumes:</p><ul><li>‘.docker-volumes/mongo/data:/data/db’ # 数据持久化</li></ul></blockquote><p><strong>4-5 配置 mysql</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version</span>: <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services</span>:</span><br><span class="line">    editor-<span class="attr">server</span>:</span><br><span class="line">        <span class="attr">build</span>:</span><br><span class="line">            <span class="attr">context</span>: .</span><br><span class="line">            <span class="attr">dockerfile</span>: <span class="title class_">Dockerfile</span></span><br><span class="line">        <span class="attr">image</span>: editor-server # 依赖于当前 <span class="title class_">Dockerfile</span> 创建镜像</span><br><span class="line">        <span class="attr">container_name</span>: editor-server</span><br><span class="line">        <span class="attr">ports</span>:</span><br><span class="line">            - <span class="number">8081</span>:<span class="number">3000</span> # 宿主机通过 <span class="number">8081</span> 访问</span><br><span class="line">    editor-<span class="attr">redis</span>:</span><br><span class="line">        <span class="attr">image</span>: redis # 引用官网 redis 镜像</span><br><span class="line">        <span class="attr">container_name</span>: editor-redis</span><br><span class="line">        <span class="attr">ports</span>:</span><br><span class="line">            - <span class="number">6378</span>:<span class="number">6379</span> # 宿主机可以用 <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6378</span> 即可连接容器中的数据库</span><br><span class="line">        <span class="attr">environment</span>:</span><br><span class="line">            - <span class="variable constant_">TZ</span>=<span class="title class_">Asia</span>/<span class="title class_">Beijing</span> # 设置时区</span><br><span class="line">    editor-<span class="attr">mysql</span>:</span><br><span class="line">        <span class="attr">image</span>: mysql # 引用官网 mysql 镜像</span><br><span class="line">        <span class="attr">container_name</span>: editor-mysql</span><br><span class="line">        <span class="attr">restart</span>: always</span><br><span class="line">        <span class="attr">privileged</span>: <span class="literal">true</span> # 高权限，执行下面的 mysql/init</span><br><span class="line">        <span class="attr">command</span>: --<span class="keyword">default</span>-authentication-plugin=mysql_native_password # 解决无法远程访问的问题</span><br><span class="line">        <span class="attr">ports</span>:</span><br><span class="line">            - <span class="number">3305</span>:<span class="number">3306</span> # 宿主机可以用 <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">3305</span> 即可连接容器中的数据库</span><br><span class="line">        <span class="attr">volumes</span>:</span><br><span class="line">            - .<span class="property">docker</span>-volumes/mysql/<span class="attr">log</span>:<span class="regexp">/var/</span>log/mysql # 数据持久化</span><br><span class="line">            - .<span class="property">docker</span>-volumes/mysql/<span class="attr">data</span>:<span class="regexp">/var/</span>lib/mysql</span><br><span class="line">            - ./mysql/<span class="attr">init</span>:<span class="regexp">/docker-entrypoint-initdb.d/</span> # 初始化 sql</span><br><span class="line">        <span class="attr">environment</span>:</span><br><span class="line">            - <span class="variable constant_">MYSQL_DATABASE</span>=imooc_lego_course # 初始化容器时创建数据库</span><br><span class="line">            - <span class="variable constant_">MYSQL_ROOT_PASSWORD</span>=liugezhou1205</span><br><span class="line">            # - <span class="variable constant_">MYSQL_USER</span>=shuangyue #创建 test 用户</span><br><span class="line">            # - <span class="variable constant_">MYSQL_PASSWORD</span>=shuangyue #设置 test 用户的密码</span><br><span class="line">            - <span class="variable constant_">TZ</span>=<span class="title class_">Asia</span>/<span class="title class_">Beijing</span> # 设置时区</span><br><span class="line">    editor-<span class="attr">mongo</span>:</span><br><span class="line">        <span class="attr">image</span>: mongo # 引用官网 mongo 镜像</span><br><span class="line">        <span class="attr">container_name</span>: editor-mongo</span><br><span class="line">        <span class="attr">restart</span>: always #出错则重启</span><br><span class="line">        <span class="attr">volumes</span>:</span><br><span class="line">            - <span class="string">&#x27;.docker-volumes/mongo/data:/data/db&#x27;</span> # 数据持久化</span><br><span class="line">        <span class="attr">environment</span>:</span><br><span class="line">            - <span class="variable constant_">MONGO_INITDB_DATABASE</span>=imooc_lego_course</span><br><span class="line">            # - <span class="variable constant_">MONGO_INITDB_ROOT_USERNAME</span>=root</span><br><span class="line">            # - <span class="variable constant_">MONGO_INITDB_ROOT_PASSWORD</span>=<span class="number">123456</span></span><br><span class="line">            - <span class="variable constant_">TZ</span>=<span class="title class_">Asia</span>/<span class="title class_">Beijing</span> # 设置时区</span><br><span class="line">        <span class="attr">ports</span>:</span><br><span class="line">            - <span class="string">&#x27;27016:27017&#x27;</span> # 宿主机可以用 <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">27016</span> 即可连接容器中的数据库</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="第五章-发布到测试机">第五章 发布到测试机</h2><p><strong>5-2  配置测试机</strong><br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/15-2.5so88ss1y340.webp" alt="15-2"></p><p><strong>5-3 自动发布到测试机-讲解配置</strong><br><strong>5-4 自动发布到测试机-功能演示</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"># <span class="title class_">This</span> workflow will <span class="keyword">do</span> a clean install <span class="keyword">of</span> node dependencies, build the source code and run tests across different versions <span class="keyword">of</span> node</span><br><span class="line"># <span class="title class_">For</span> more information <span class="attr">see</span>: <span class="attr">https</span>:<span class="comment">//help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions</span></span><br><span class="line"># github actions 中文文档 <span class="attr">https</span>:<span class="comment">//docs.github.com/cn/actions/getting-started-with-github-actions</span></span><br><span class="line"></span><br><span class="line"><span class="attr">name</span>: deploy <span class="keyword">for</span> dev</span><br><span class="line"></span><br><span class="line"><span class="attr">on</span>:</span><br><span class="line"><span class="attr">push</span>:</span><br><span class="line"><span class="attr">branches</span>:</span><br><span class="line">- <span class="string">&#x27;dev&#x27;</span> # 只针对 dev 分支</span><br><span class="line"><span class="attr">paths</span>:</span><br><span class="line">- <span class="string">&#x27;.github/workflows/*&#x27;</span></span><br><span class="line"># - <span class="string">&#x27;__test__/**&#x27;</span> # dev 不需要立即测试</span><br><span class="line">  - <span class="string">&#x27;src/**&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;Dockerfile&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;docker-compose.yml&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;bin/*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs</span>:</span><br><span class="line">  deploy-<span class="attr">dev</span>:</span><br><span class="line">  runs-<span class="attr">on</span>: ubuntu-latest</span><br><span class="line"></span><br><span class="line">    <span class="attr">steps</span>:</span><br><span class="line">    - <span class="attr">uses</span>: actions/checkout<span class="meta">@v2</span></span><br><span class="line">      - <span class="attr">name</span>: set ssh key # 临时设置 ssh key</span><br><span class="line">      <span class="attr">run</span>: |</span><br><span class="line">        mkdir -p ~<span class="regexp">/.ssh/</span></span><br><span class="line">    echo <span class="string">&quot;$&#123;&#123;secrets.WFP_ID_RSA&#125;&#125;&quot;</span> &gt; ~<span class="regexp">/.ssh/i</span>d_rsa</span><br><span class="line">    # secret 在这里配置 <span class="attr">https</span>:<span class="comment">//github.com/imooc-lego/biz-editor-server/settings/secrets</span></span><br><span class="line">    chmod <span class="number">600</span> ~<span class="regexp">/.ssh/i</span>d_rsa</span><br><span class="line">    ssh-keyscan <span class="string">&quot;182.92.xxx.xxx&quot;</span> &gt;&gt; ~<span class="regexp">/.ssh/</span>known_hosts</span><br><span class="line">      - <span class="attr">name</span>: deploy # 部署</span><br><span class="line">      <span class="attr">run</span>: |</span><br><span class="line">        ssh work@<span class="number">182.92</span>.<span class="property">xxx</span>.<span class="property">xxx</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string"># 【注意】用 work 账号登录，手动创建 /home/work/imooc-lego 目录</span></span><br><span class="line"><span class="string"># 然后 git clone https://username:password@github.com/imooc-lego/biz-editor-server.git -b dev （私有仓库，使用 github 用户名和密码）</span></span><br><span class="line"><span class="string">    # 记得删除 origin ，否则会暴露 github 密码</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    cd /home/work/imooc-lego/biz-editor-server;</span></span><br><span class="line"><span class="string">    git remote add origin https://wangfupeng1988:$&#123;&#123;secrets.WFP_PASSWORD&#125;&#125;@github.com/imooc-lego/biz-editor-server.git;</span></span><br><span class="line"><span class="string">    git checkout dev;</span></span><br><span class="line"><span class="string">    git pull origin dev; # 重新下载最新代码</span></span><br><span class="line"><span class="string">    git remote remove origin; # 删除 origin ，否则会暴露 github 密码</span></span><br><span class="line"><span class="string">    # 启动 docker</span></span><br><span class="line"><span class="string">    docker-compose build editor-server; # 和 docker-compose.yml service 名字一致</span></span><br><span class="line"><span class="string">    docker-compose up -d;</span></span><br><span class="line"><span class="string">    &quot;</span></span><br><span class="line">      - <span class="attr">name</span>: <span class="keyword">delete</span> ssh key # 删除 ssh key</span><br><span class="line">      <span class="attr">run</span>: rm -rf ~<span class="regexp">/.ssh/i</span>d_rsa</span><br></pre></td></tr></table></figure><p><strong>5-5 自动发布到测试机–章总结</strong></p><blockquote><p>😔</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web架构之脚手架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web架构之脚手架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongoose官方文档总结</title>
      <link href="/mongoose%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E6%80%BB%E7%BB%93/"/>
      <url>/mongoose%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章目录排版做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="一、mongoose">一、mongoose</h2><blockquote><ul><li>安装：npm install  mongoose</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1，引入mongoose</span></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&#x27;mongoose&#x27;</span>)</span><br><span class="line"><span class="comment">// 2. 连接本地数据库</span></span><br><span class="line"><span class="keyword">let</span> db = mongoose.<span class="title function_">connect</span>(<span class="string">&#x27;mongodb://localhost/test&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> db = mongoose.<span class="property">connection</span>;</span><br><span class="line">db.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="variable language_">console</span>.<span class="property">error</span>.<span class="title function_">bind</span>(<span class="variable language_">console</span>, <span class="string">&#x27;connection error:&#x27;</span>));</span><br><span class="line">db.<span class="title function_">once</span>(<span class="string">&#x27;open&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// we&#x27;re connected!</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>mongoose里，一切始于Schema：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> tomSchema = mongoose.<span class="title class_">Schema</span>(&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="title class_">String</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//接着，把这个Schema编译成一个Model</span></span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Tom</span> = mongoose.<span class="title function_">model</span>(<span class="string">&#x27;Tom&#x27;</span>,tomSchema)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 给这个model加一个code方法</span></span><br><span class="line"><span class="title class_">Tom</span>.<span class="property">methods</span>.<span class="property">code</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">let</span> nickname = <span class="variable language_">this</span>.<span class="property">name</span> ? <span class="string">&quot;The programmar name is :&quot;</span> + <span class="variable language_">this</span>.<span class="property">name</span>:<span class="string">&#x27;I don&#x27;</span>t have name<span class="string">&#x27;</span></span><br><span class="line"><span class="string">  console.log(nickname)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//model是我们构造document的class，每个document都是一个Tom对象</span></span><br><span class="line"><span class="string">let Tomliu = new Tom(&#123;name:&#x27;</span>liugezhou<span class="string">&#x27;&#125;)</span></span><br><span class="line"><span class="string">Tomliu.code() //The programmar name is :liugezhou</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// save</span></span><br><span class="line"><span class="string">Tomliu.save(function(err,item)&#123;</span></span><br><span class="line"><span class="string">if (err) return console.error(err);</span></span><br><span class="line"><span class="string">   item.speak();</span></span><br><span class="line"><span class="string">&#125;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 获取所有的Tom</span></span><br><span class="line"><span class="string">Tom.find(function(err,tomlius)&#123;</span></span><br><span class="line"><span class="string">if(err) return console.error(err);</span></span><br><span class="line"><span class="string">  console.log(tomlius)</span></span><br><span class="line"><span class="string">&#125;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//获取特定数据</span></span><br><span class="line"><span class="string">Tom.find(&#123;name:/^liugezhou/&#125;,callback)</span></span><br></pre></td></tr></table></figure><h2 id="二、Schema-模式">二、Schema-模式</h2><blockquote><ul><li>每个Schema都会映射到MongoDB 的collection，并定义这个collection里的文档构成</li></ul></blockquote><p>语法：</p><blockquote><ul><li>const shcema = mongoose.Schema({})</li></ul></blockquote><p>允许使用的Schematypes有：</p><blockquote><ul><li>String</li><li>Boolean</li><li>Date</li><li>Number</li><li>Array</li><li>Buffer</li><li>Mixed</li><li>ObjectId</li></ul></blockquote><p>除了映射collection外，还可以定义</p><blockquote><ul><li>document的instance methods</li><li>model的static Model methods</li><li>复合索引</li><li>文档的生命周期钩子，也成为中间件</li></ul></blockquote><p><strong>model</strong></p><blockquote><p>我们要把一个Schema转化为一个model，要使用</p><ul><li>let model = mongoose.model(modelName,schema)  函数</li></ul></blockquote><p><strong>collection和document</strong></p><blockquote><ul><li>collection相当于关系型数据库中的表</li><li>document相当于一条数据，在这里有特别需要注意的一点是：</li><li>collection不要求文档有相同的结构，在一个collection文档中不必具有相同的fileds，对于单个field在一个collection中的不同文档中可以是不同的数据类型</li></ul></blockquote><p><strong>实例方法methods</strong></p><blockquote><ul><li>documents是model的实例,document有自带的实例方法，当然也可以自定义我们自己的方法。</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> animalSchema = mongoose.<span class="title class_">Schema</span>(&#123;<span class="attr">type</span>:<span class="title class_">String</span>,<span class="attr">name</span>:<span class="title class_">String</span>&#125;)</span><br><span class="line"></span><br><span class="line">animalSchema.<span class="property">methods</span>.<span class="property">findSameType</span> = <span class="keyword">function</span> (<span class="params">cb</span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">model</span>(<span class="string">&#x27;Animal&#x27;</span>).<span class="title function_">find</span>(<span class="attr">type</span>:<span class="variable language_">this</span>.<span class="property">type</span>,cb)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Animal</span> = mongoose.<span class="title function_">model</span>(<span class="string">&#x27;Animal&#x27;</span>,animalSchema)</span><br><span class="line"><span class="keyword">const</span> dog = <span class="keyword">new</span> <span class="title class_">Animal</span>(&#123;<span class="attr">type</span>:<span class="string">&#x27;dog&#x27;</span>&#125;)</span><br><span class="line"></span><br><span class="line">dog.<span class="title function_">findSameType</span>(<span class="keyword">function</span>(<span class="params">err,dogs</span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(dogs)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>静态方法</strong></p><blockquote><ul><li>静态方法与实例方法的区别是，实例方法是在每个model的实例中可以访问，而静态方法是每个model直接访问</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">animalSchema.<span class="property">statics</span>.<span class="property">findByName</span> = <span class="keyword">function</span>(<span class="params">name,cb</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">find</span>(&#123;<span class="attr">name</span>:<span class="keyword">new</span> <span class="title class_">RegExp</span>(name,<span class="string">&#x27;i&#x27;</span>)&#125;,cb)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Animal</span> = mongoose.<span class="title function_">model</span>(<span class="string">&#x27;Animal&#x27;</span>,animalSchema)</span><br><span class="line"><span class="title class_">Animal</span>.<span class="title function_">findByName</span>(<span class="string">&#x27;fido&#x27;</span>,<span class="keyword">function</span>(<span class="params">err,animal</span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(animals)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>查询助手</strong></p><blockquote><ul><li>查询助手作用于query实例，方便定义自己的查询扩展</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">animalSchema.<span class="property">query</span>.<span class="property">byName</span> = <span class="keyword">function</span>(<span class="params">name</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">find</span>(&#123; <span class="attr">name</span>: <span class="keyword">new</span> <span class="title class_">RegExp</span>(name, <span class="string">&#x27;i&#x27;</span>) &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">Animal</span> = mongoose.<span class="title function_">model</span>(<span class="string">&#x27;Animal&#x27;</span>, animalSchema);</span><br><span class="line"><span class="title class_">Animal</span>.<span class="title function_">find</span>().<span class="title function_">byName</span>(<span class="string">&#x27;fido&#x27;</span>).<span class="title function_">exec</span>(<span class="keyword">function</span>(<span class="params">err, animals</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(animals);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>索引</strong></p><blockquote><ul><li>Mongodb支持secondary indexes,在mongoose中，我们在Schema中定义索引，索引字段级别和shcema级别</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> animalSchema = <span class="keyword">new</span> <span class="title class_">Schema</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="title class_">String</span>,</span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">  <span class="attr">tags</span>: &#123; <span class="attr">type</span>: [<span class="title class_">String</span>], <span class="attr">index</span>: <span class="literal">true</span> &#125; <span class="comment">// field level</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">animalSchema.<span class="title function_">index</span>(&#123; <span class="attr">name</span>: <span class="number">1</span>, <span class="attr">type</span>: -<span class="number">1</span> &#125;); <span class="comment">// schema level</span></span><br></pre></td></tr></table></figure><p><strong>虚拟值 Virtual</strong></p><blockquote><ul><li>[ ]  Virtual是document的属性，但是不会保存到MongoDB，getter可以用于格式化和组合字段数据，setter可以很方便的分解一个值到多个字段。</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// define a schema</span></span><br><span class="line"><span class="keyword">var</span> personSchema = <span class="keyword">new</span> <span class="title class_">Schema</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: &#123;</span><br><span class="line">    <span class="attr">first</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">last</span>: <span class="title class_">String</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// compile our model</span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">Person</span> = mongoose.<span class="title function_">model</span>(<span class="string">&#x27;Person&#x27;</span>, personSchema);</span><br><span class="line"></span><br><span class="line"><span class="comment">// create a document</span></span><br><span class="line"><span class="keyword">var</span> axl = <span class="keyword">new</span> <span class="title class_">Person</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: &#123; <span class="attr">first</span>: <span class="string">&#x27;Axl&#x27;</span>, <span class="attr">last</span>: <span class="string">&#x27;Rose&#x27;</span> &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><ul><li>如果你要log出全名，可以这么做：</li></ul></blockquote><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.<span class="built_in">log</span>(axl.name.<span class="built_in">first</span> + <span class="string">&#x27; &#x27;</span> + axl.name.last); <span class="comment">// Axl Rose</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>但是每次都这么拼接实在太麻烦了， 推荐你使用<a href="http://www.mongoosejs.net/docs/api.html#virtualtype_VirtualType-get">virtual property getter</a>， 这个方法允许你定义一个 fullName 属性，但不必保存到数据库。</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">personSchema.<span class="title function_">virtual</span>(<span class="string">&#x27;fullName&#x27;</span>).<span class="title function_">get</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">name</span>.<span class="property">first</span> + <span class="string">&#x27; &#x27;</span> + <span class="variable language_">this</span>.<span class="property">name</span>.<span class="property">last</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><ul><li>现在, mongoose 可以调用 getter 函数访问 fullName 属性：</li></ul></blockquote><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.<span class="built_in">log</span>(axl.fullName); <span class="comment">// Axl Rose</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>如果对 document 使用 toJSON() 或 toObject()，默认不包括虚拟值， 你需要额外向 <a href="http://www.mongoosejs.net/docs/api.html#document_Document-toObject">toObject()</a> 或者 toJSON() 传入参数** { virtuals: true }**。</li></ul></blockquote><p>你也可以设定虚拟值的 setter ，下例中，当你赋值到虚拟值时，它可以自动拆分到其他属性：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">personSchema.<span class="title function_">virtual</span>(<span class="string">&#x27;fullName&#x27;</span>).</span><br><span class="line">  <span class="title function_">get</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123; <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">name</span>.<span class="property">first</span> + <span class="string">&#x27; &#x27;</span> + <span class="variable language_">this</span>.<span class="property">name</span>.<span class="property">last</span>; &#125;).</span><br><span class="line">  <span class="title function_">set</span>(<span class="keyword">function</span>(<span class="params">v</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span>.<span class="property">first</span> = v.<span class="title function_">substr</span>(<span class="number">0</span>, v.<span class="title function_">indexOf</span>(<span class="string">&#x27; &#x27;</span>));</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span>.<span class="property">last</span> = v.<span class="title function_">substr</span>(v.<span class="title function_">indexOf</span>(<span class="string">&#x27; &#x27;</span>) + <span class="number">1</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">axl.<span class="property">fullName</span> = <span class="string">&#x27;William Rose&#x27;</span>; <span class="comment">// Now `axl.name.first` is &quot;William&quot;</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>再次强调，虚拟值不能用于查询和字段选择，因为虚拟值不储存于 MongoDB。</li></ul></blockquote><p><strong>选项</strong></p><blockquote><ul><li>Schema有很多可配置选项，你可以在构造时传入或者直接set，选项较多，暂不学习整理。</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Schema</span>(&#123;..&#125;, options);</span><br><span class="line"></span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> schema = <span class="keyword">new</span> <span class="title class_">Schema</span>(&#123;..&#125;);</span><br><span class="line">schema.<span class="title function_">set</span>(option, value);</span><br></pre></td></tr></table></figure><h2 id="三、SchemaTypes-模式类型">三、SchemaTypes-模式类型</h2><p>以下是mongoose的所有合法SchemaTypes：</p><blockquote><ul><li>String</li><li>Boolean</li><li>Number</li><li>Array</li><li>Buffer</li><li>Date</li><li>Schema.Types.ObjectId</li><li>Schema.Types.Mixed</li><li>Schema.Types.Decimal128</li></ul></blockquote><p><strong>SchemeType选项</strong></p><blockquote><ul><li>你可以直接声明schema type为某一种type，或者赋值一个含有type属性的对象</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> schema1 = <span class="keyword">new</span> <span class="title class_">Schema</span>(&#123;</span><br><span class="line">  <span class="attr">test</span>: <span class="title class_">String</span> <span class="comment">// `test` is a path of type String</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> schema2 = <span class="keyword">new</span> <span class="title class_">Schema</span>(&#123;</span><br><span class="line">  <span class="attr">test</span>: &#123; <span class="attr">type</span>: <span class="title class_">String</span> &#125; <span class="comment">// `test` is a path of type string</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><ul><li>除了type属性，还可以对这个字段路径指定其它属性，比如在保存之前全部转换为小写</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> shema2 = <span class="keyword">new</span> <span class="title class_">Schema</span>(&#123;</span><br><span class="line"><span class="attr">test</span>:&#123;</span><br><span class="line">  <span class="attr">type</span>:<span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">lowercase</span>:<span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>全部可用</strong></p><blockquote><ul><li>required:布尔值或者函数 如果值为真，为此属性添加require验证器</li><li>default: 任何值或函数 设置此路径默认值，如果是函数m，函数返回值为默认值</li><li>select: 布尔值 指定query的默认projections</li><li>validate: 函数校验</li><li>get:函数，使用Object.defineProperty()定义自定义getter</li><li>set：同上</li><li>alias：别名</li></ul></blockquote><p><strong>索引相关</strong></p><blockquote><p>可以使用 schema type定义索引相关</p><ul><li>index：布尔值    是否对这个属性创建索引</li><li>unique:布尔值    是否对这个属性创建唯一索引</li><li>sparse:布尔值    是否对这个属性创建稀疏索引</li></ul></blockquote><h2 id="四、Connections-连接">四、Connections-连接</h2><blockquote><ul><li>可以使用 mongoose.connect()连接MongoDB，默认端口27017</li></ul></blockquote><p><strong>操作缓存</strong></p><blockquote><p>就是说不必等待上面的connect连接成功后，就可以使用创建的 Mongoose models<br>禁用缓存，要修改 bufferCommands配置，mongoose.set(‘bufferCommands’,fasle)</p></blockquote><p><strong>选项</strong></p><blockquote><p>connect 方法也接受 options 参数，这些参数会传入底层 MongoDB 驱动。</p></blockquote><p><strong>回调</strong></p><blockquote><p>connect()函数接受回调函数，或返回一个Promise</p></blockquote><p><strong>keepAlive</strong></p><blockquote><p>对于长期运行的后台应用，启用毫秒级 keepAlive 是一个精明的操作。不这么做你可能会经常 收到看似毫无原因的 “connection closed” 错误。<br>mongoose.connect(uri,{keepAlive:120})</p></blockquote><h2 id="五、models-模型">五、models-模型</h2><blockquote><ul><li><a href="http://www.mongoosejs.net/docs/api.html#model-js">Models</a> 是从 <code>Schema</code> 编译来的构造函数。 它们的实例就代表着可以从数据库保存和读取的 <a href="http://www.mongoosejs.net/docs/documents.html">documents</a>。</li><li>从数据库创建和读取 document 的所有操作都是通过 model 进行的。</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> schema = <span class="keyword">new</span> mongoose.<span class="title class_">Schema</span>(&#123; <span class="attr">name</span>: <span class="string">&#x27;string&#x27;</span>, <span class="attr">size</span>: <span class="string">&#x27;string&#x27;</span> &#125;);</span><br><span class="line"><span class="keyword">var</span> <span class="title class_">Tank</span> = mongoose.<span class="title function_">model</span>(<span class="string">&#x27;Tank&#x27;</span>, schema);</span><br></pre></td></tr></table></figure><blockquote><p>上面的参数 Tank是跟model对应的集合(collection)对应的单数形式。<br>Mongoose会自动找到名称是model的名字的复数形式。<br>比如上例，Tank这个model对应数据库中tanks这个collection<br>.model()这个函数是对 schema做了拷贝<br>确保在调用.model()之前把所有需要的东西都加进shema里。</p></blockquote><p><strong>构造documents</strong></p><blockquote><ul><li>documents是model的实例，创建谈并保存到数据库非常简单：</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Tank</span> = mongoose.<span class="title function_">model</span>(<span class="string">&#x27;Tank&#x27;</span>,<span class="title class_">TankSchema</span>)</span><br><span class="line"><span class="keyword">const</span> small = <span class="keyword">new</span> <span class="title class_">Tank</span>(&#123; <span class="attr">size</span>:<span class="string">&#x27; small&#x27;</span>&#125;)</span><br><span class="line">small.<span class="title function_">save</span>(<span class="keyword">function</span>(<span class="params">err</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (err) <span class="keyword">return</span> <span class="title function_">hanldeError</span>(err) </span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"><span class="title class_">Tank</span>.<span class="title function_">create</span>(&#123;<span class="attr">size</span>:<span class="string">&#x27;small&#x27;</span>&#125;,<span class="keyword">function</span>(<span class="params">err,small</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (err) <span class="keyword">return</span> <span class="title function_">handleError</span>(err)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>查询</strong></p><blockquote><ul><li>查询文档可以用model的find、findbyId,findOne，和where这些静态方法。</li></ul></blockquote><p><strong>删除</strong></p><blockquote><ul><li>model的remove方法可以删除所有匹配查询条件(condition)的文档</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Tank</span>.<span class="title function_">remove</span>(&#123;<span class="attr">size</span>:small&#125;,<span class="keyword">function</span>(<span class="params">err</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(err) <span class="keyword">return</span> <span class="title function_">handler</span>(err)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>更新</strong></p><blockquote><ul><li><code>model</code> 的 <code>update</code> 方法可以修改数据库中的文档，不过不会把文档返回给应用层。</li><li>如果想更新单独一条文档并且返回给应用层，可以使用 <a href="http://www.mongoosejs.net/docs/api.html#model_Model.findOneAndUpdate">findOneAndUpdate</a> 方法。</li></ul></blockquote><h2 id="六、文档-Documents">六、文档-Documents</h2><blockquote><ul><li>Mongoose document代表着MongoDB文档的一对一映射。每个document都是他的Model的实例。</li></ul></blockquote><p><strong>更新</strong><br>使用findById:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Tank</span>.<span class="title function_">findById</span>(id,<span class="keyword">function</span>(<span class="params">err,tank</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (err) <span class="keyword">return</span> <span class="title function_">handlerError</span>(err)</span><br><span class="line">  </span><br><span class="line">  tank.<span class="property">size</span> = <span class="string">&#x27;large&#x27;</span>;</span><br><span class="line">  <span class="comment">//tank.set(&#123;size:&#x27;large&#x27;&#125;)</span></span><br><span class="line">  tank.<span class="title function_">save</span>(<span class="keyword">function</span>(<span class="params">err,updateTank</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">return</span> <span class="title function_">handlerError</span>(err)</span><br><span class="line">    res.<span class="title function_">send</span>(updateTank)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>若仅仅需要更新数据,而不需要获取数据再去更新：</li></ul><blockquote><p>Tank.update({_id:id},{$set:{size:‘large’}},callback)</p></blockquote><ul><li>更新后我们还需要返回这个文档：findByIdAndUpdate</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Tank</span>.<span class="title function_">findByIdAndUpdate</span>(id,&#123;<span class="attr">$set</span>:&#123;<span class="attr">size</span>:<span class="string">&#x27;large&#x27;</span>&#125;&#125;,&#123;<span class="attr">new</span>:<span class="literal">true</span>&#125;,<span class="keyword">function</span>(<span class="params">err,tank</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">return</span> <span class="title function_">handlerError</span>(err)</span><br><span class="line">  res.<span class="title function_">send</span>(tank)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="七、子文档-SubDocuments">七、子文档-SubDocuments</h2><blockquote><p>子文档是指嵌套在另一个文档中的文档。<br>在Mongoose中，意味着你可以在里嵌套另一个schema。<br>Mongoose子文档有两种不同的概念：子文档数组和单个嵌套子文档</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> chidlSchema = <span class="keyword">new</span> <span class="title class_">Schema</span>(&#123;<span class="attr">name</span>:<span class="title class_">String</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> parentSchema =  <span class="keyword">new</span> <span class="title class_">Schema</span>(&#123;</span><br><span class="line"><span class="attr">children</span>:[childSchema],</span><br><span class="line">  <span class="attr">child</span>:childSchema</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>子文档与文档的区别是 子文档不能单独保存，他们会在他们的顶级文档保存时保存。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Parent</span> = mongoose.<span class="title function_">model</span>(<span class="string">&#x27;Parent&#x27;</span>,parentSchema)</span><br><span class="line"><span class="keyword">const</span> parent = <span class="keyword">new</span> <span class="title class_">Parent</span>(&#123;<span class="attr">children</span>:[&#123;<span class="attr">name</span>:<span class="string">&#x27;liu&#x27;</span>&#125;,&#123;<span class="attr">name</span>:<span class="string">&#x27;ge&#x27;</span>&#125;,&#123;<span class="attr">name</span>:<span class="string">&#x27;zhou;&#125;]&#125;)</span></span><br><span class="line"><span class="string">parent.children[0].name = &#x27;</span>liu<span class="string">&#x27;       </span></span><br><span class="line"><span class="string">parent.save(callback)         </span></span><br></pre></td></tr></table></figure><h2 id="八、Queries-查询">八、Queries 查询</h2><blockquote><ul><li>Model的多个静态辅助方法都可以查询文档</li><li>Query实例有一个.then()函数，用法类似Promise</li></ul></blockquote><p>我们看一下demo，查询persons表中name中属性last为Ghost值的文档，只查询 name和occupation两个字段</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Person</span> = mpngoose.<span class="title function_">model</span>(<span class="string">&#x27;Pseron&#x27;</span>,<span class="title class_">PersonSchema</span>);</span><br><span class="line"></span><br><span class="line"><span class="title class_">Person</span>.<span class="title function_">findOne</span>(&#123;name.<span class="property">last</span>:<span class="string">&#x27;Ghost&#x27;</span>&#125;,<span class="string">&#x27;name occupation&#x27;</span>,<span class="keyword">function</span>(<span class="params">err,person</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(err) <span class="keyword">return</span> <span class="title function_">handleError</span>(err)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;%s %s is a %s&#x27;</span>,person.<span class="property">name</span>.<span class="property">fisrt</span>,person.<span class="property">name</span>.<span class="property">last</span>,person.<span class="property">occupation</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>查询结果的格式取决于做什么操作：</p><ul><li>findOne()是单个文档</li><li>find() 是文档列表</li><li>count() 是文档数量</li><li>update() 是更新的文档数量</li></ul></blockquote><h2 id="九-中间件–Middleware">九 中间件–Middleware</h2><blockquote><ol><li>中间件(pre 和 post 钩子)是在异步函数执行时函数传入的控制函数。</li><li>Middleware is specified on the shema.</li><li>Mongoose4.x有四种中间件：<strong>doucument</strong>中间件、<strong>model</strong>中间件、<strong>aggregate</strong>中间件、<strong>quer</strong>y中间件。</li><li>document 中间件支持以下document操作：<ol><li><strong>init</strong></li><li><strong>validate</strong></li><li><strong>save</strong></li><li><strong>remove</strong></li></ol></li><li>query 中间件支持以下 Model 和 Query 操作<ol><li>count</li><li>find</li><li>findOne</li><li>findOneAndUpdate</li><li>findOneAndRemove</li><li>updade</li></ol></li><li>aggregate 中间件作用于MyModel.aggregate()，他会在你对 aggregate 对象调用 exec()时执行<ol><li>aggregate</li></ol></li><li>Model中间件支持以下操作：<ol><li>insertMany</li></ol></li><li>所有中间件支持 pre 和 post 钩子。</li><li>Query 没有 remove()钩子，只有 docuemnt 有，如果设定了remove钩子，他将会在你调用 myDoc.remove()触发，而不是 myModel.remove(),另外，create()函数会触发 save()钩子。</li></ol></blockquote><p><strong>pre</strong></p><blockquote><p>pre钩子分为『串行』和『并行』两种</p></blockquote><ul><li><strong>串行：</strong></li></ul><blockquote><p>串行中间件一个接一个的执行。具体来说，上一个中间件调用 next 的时候下一个执行</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> schema = <span class="keyword">new</span> <span class="title class_">Schema</span>(..);</span><br><span class="line">schema.<span class="title function_">pre</span>(<span class="string">&#x27;save&#x27;</span>,<span class="keyword">function</span>(<span class="params">next</span>)&#123;</span><br><span class="line"><span class="comment">// to stuff</span></span><br><span class="line">  <span class="title function_">next</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>在 mongoose5.x 中，除了手动调用 next 函数，还可以返回一个 Promise，甚至是 async/await。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">schema.<span class="title function_">pre</span>(<span class="string">&#x27;save&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_">doStuff</span>().</span><br><span class="line"><span class="title function_">then</span>(<span class="function">()=&gt;</span> <span class="title function_">doMoreStuff</span>())</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"></span><br><span class="line">shcema.<span class="title function_">pre</span>(<span class="string">&#x27;save&#x27;</span>,<span class="keyword">async</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">await</span> <span class="title function_">doStuff</span>();</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">doMoreStuff</span>();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>并行</strong></li></ul><blockquote><p>并行中间件提供细粒度流控制。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> schema = <span class="keyword">new</span> <span class="title class_">Schema</span>(..)</span><br><span class="line"></span><br><span class="line">shcema.<span class="title function_">pre</span>(<span class="string">&#x27;save&#x27;</span>,<span class="literal">true</span>,<span class="keyword">function</span>(<span class="params">next,done</span>)&#123;</span><br><span class="line"><span class="title function_">next</span>()</span><br><span class="line">  <span class="built_in">setTimeout</span>(done,<span class="number">100</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>在这个例子中，save 方法将在所有中间件都调用了 done 方法的时候才会执行。<br>使用场景:</p><ul><li>复杂的数据校验</li><li>删除依赖文档(删除用户后删除他的所有文档)</li><li>asynchronous defaults</li><li>asynchronous tasks that a certain action triggers</li></ul></blockquote><p><strong>Post</strong></p><blockquote><p>Post中间件在方法执行之后调用，这个时候每个 pre 中间件都已完成</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">schema.<span class="title function_">post</span>(<span class="string">&#x27;init&#x27;</span>,<span class="keyword">function</span>(<span class="params">doc</span>)&#123;</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;%s has been initialized from the db&#x27;</span>, doc.<span class="property">_id</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">schema.<span class="title function_">post</span>(<span class="string">&#x27;validate&#x27;</span>,<span class="keyword">function</span>(<span class="params">doc</span>)&#123;</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;%s has been validated (but not saved yet)&#x27;</span>, doc.<span class="property">_id</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">schema.<span class="title function_">post</span>(<span class="string">&#x27;save&#x27;</span>,<span class="keyword">function</span>(<span class="params">doc</span>)&#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;%s has been saved&#x27;</span>, doc.<span class="property">_id</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">schema.<span class="title function_">post</span>(<span class="string">&#x27;remove&#x27;</span>,<span class="keyword">function</span>(<span class="params">doc</span>)&#123;</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;%s has been removed&#x27;</span>, doc.<span class="property">_id</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>异步 Post 钩子</strong></li></ul><blockquote><p>如果你给 post 钩子的回调函数传入两个参数，mongoose 会认为第二个参数是 next()函数，可以通过 next 触发下一个中间件</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">schema.<span class="title function_">post</span>(<span class="string">&#x27;save&#x27;</span>,<span class="keyword">function</span>(<span class="params">doc,next</span>)&#123;</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;pot1&#x27;</span>)</span><br><span class="line">    <span class="title function_">next</span>()</span><br><span class="line">  &#125;,<span class="number">100</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">schema.<span class="title function_">post</span>(<span class="string">&#x27;save&#x27;</span>, <span class="keyword">function</span>(<span class="params">doc, next</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;post2&#x27;</span>);</span><br><span class="line">  <span class="title function_">next</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>Save/Validate钩子</strong></li></ul><blockquote><p>save()函数触发 validate()钩子，mongoose validate()钩子其实就是 pre(‘save’)钩子，这意味着所有pre(‘validate’)和 post(‘validate’)钩子都会在 pre(‘save’)之前调用。</p></blockquote><ul><li><strong>findAndUpdate() 和 Query 中间件使用注意</strong></li></ul><blockquote><p>pre 和 post save()钩子都不执行于 update()、 findOneAndUpdate()等情况<br>mongoose4.x为这些函数制定了新钩子</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">schema.<span class="title function_">pre</span>(<span class="string">&#x27;find&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">conosle.<span class="title function_">log</span>(<span class="variable language_">this</span> <span class="keyword">instanceof</span> mongoose.<span class="property">query</span>) <span class="comment">//true</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">start</span> = <span class="title class_">Date</span>.<span class="title function_">now</span>()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">schema.<span class="title function_">post</span>(<span class="string">&#x27;find&#x27;</span>,<span class="keyword">function</span>(<span class="params">result</span>)&#123;</span><br><span class="line">conosle.<span class="title function_">log</span>(<span class="variable language_">this</span> <span class="keyword">instanceof</span> mongoose.<span class="property">query</span>) <span class="comment">//true</span></span><br><span class="line">  <span class="comment">// prints returned documents</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;find() returned &#x27;</span> + <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(result));</span><br><span class="line">  <span class="comment">// prints number of milliseconds the query took</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;find() took &#x27;</span> + (<span class="title class_">Date</span>.<span class="title function_">now</span>() - <span class="variable language_">this</span>.<span class="property">start</span>) + <span class="string">&#x27; millis&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>错误处理中间件</strong></p><blockquote><p><code>next()</code> 执行错误时，中间件执行立即停止。但是我们有特殊的 post 中间件技巧处理这个问题 —— 错误处理中渐渐，它可以在出错后执行你指定的代码。<br>错误处理中间件比普通中间件多一个 <code>error</code> 参数，并且 <code>err</code> 作为第一个参数传入。 而后错误处理中间件可以让你自由地做错误的后续处理</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> schema = <span class="keyword">new</span> <span class="title class_">Schema</span>(&#123;</span><br><span class="line"><span class="attr">name</span>:&#123;</span><br><span class="line">  <span class="attr">type</span>:<span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">unique</span>:<span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">schema.<span class="title function_">post</span>(<span class="string">&#x27;save&#x27;</span>,<span class="keyword">function</span>(<span class="params">err,doc,next</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span> (error.<span class="property">name</span> === <span class="string">&#x27;MongoError&#x27;</span> &amp;&amp; error.<span class="property">code</span> === <span class="number">11000</span>) &#123;</span><br><span class="line">    <span class="title function_">next</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;There was a duplicate key error&#x27;</span>));</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title class_">Person</span>.<span class="title function_">create</span>([&#123;<span class="attr">name</span>:<span class="string">&#x27;liu&#x27;</span>&#125;,&#123;<span class="attr">name</span>:<span class="string">&#x27;Gezhou&#x27;</span>&#125;]);</span><br></pre></td></tr></table></figure><h2 id="十、填充–Populate">十、填充–Populate</h2><p><strong>demo</strong><br>MongoDb 在 3.2之后，也有像 sql 中的 join 聚合操作，那就死$lookup,而 mongoose 拥有更强大的 populate，可以让你在别的 collection 中引用 document。<br>Populate 可以自动替换 document 中的指定字段，替换内容从其他 collection 获取，我们填充(populate)单个或者多个 document、单个或者多个对象，甚至是 query 返回的一切对象：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&#x27;mongoose&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Schema</span> = mongoose.<span class="property">Schema</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> personSchema = <span class="title class_">Schema</span>(&#123;</span><br><span class="line"><span class="attr">_id</span>:<span class="title class_">Schema</span>.<span class="property">types</span>.<span class="property">ObjectId</span>,</span><br><span class="line">  <span class="attr">name</span>:<span class="title class_">String</span>,</span><br><span class="line">  <span class="attr">age</span>:<span class="title class_">Number</span>,</span><br><span class="line">  <span class="attr">stories</span>:[&#123;<span class="attr">type</span>:<span class="title class_">Schema</span>.<span class="property">types</span>.<span class="property">ObjectId</span>,<span class="attr">ref</span>:<span class="string">&#x27;Story&#x27;</span>&#125;]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> storySchema = <span class="title class_">Schema</span>(&#123;</span><br><span class="line"><span class="attr">author</span>:&#123;<span class="attr">type</span>:<span class="title class_">Schema</span>.<span class="property">types</span>.<span class="property">ObjectId</span>,<span class="attr">ref</span>:<span class="string">&#x27;Person&#x27;</span>&#125;,</span><br><span class="line">  <span class="attr">title</span>:<span class="title class_">String</span>,</span><br><span class="line">  <span class="attr">fans</span>:[&#123;<span class="attr">type</span>:<span class="title class_">Schema</span>.<span class="property">types</span>.<span class="property">ObjectId</span>,<span class="attr">ref</span>:<span class="string">&#x27;Person&#x27;</span>&#125;]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Story</span> = mongose.<span class="title function_">model</span>(<span class="string">&#x27;Story&#x27;</span>,storySchema)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Person</span> = mongose.<span class="title function_">model</span>(<span class="string">&#x27;Person&#x27;</span>,personSchema)</span><br></pre></td></tr></table></figure><blockquote><p>我们创建了两个model，Person model中的 stories 字段为 ObjectID 数组，ref 选项告诉mongoose 在填充的时候使用哪个 model，上面的例子就是指 Story 的 model。所有储存在此的_id 都必须是 Story model 中的 document 的 _id</p></blockquote><p><strong>保存 refs</strong><br>保存 refs 与保存普通属性一样，把_id的值赋给他就好了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> author = <span class="keyword">new</span> <span class="title class_">Person</span>(&#123;</span><br><span class="line"><span class="attr">_id</span>:<span class="keyword">new</span> mongoose.<span class="property">Types</span>.<span class="title function_">objectId</span>(),</span><br><span class="line">  <span class="attr">name</span>:<span class="string">&#x27;liugezhou&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>:<span class="number">18</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">author.<span class="title function_">save</span>(<span class="keyword">function</span>(<span class="params">err</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (err) <span class="keyword">return</span> <span class="title function_">handleError</span>(err);</span><br><span class="line">  <span class="keyword">const</span> story1 = <span class="keyword">new</span> <span class="title class_">Story</span>(&#123;</span><br><span class="line">  <span class="attr">title</span>:<span class="string">&#x27;my book&#x27;</span>,</span><br><span class="line">    <span class="attr">author</span>:author.<span class="property">_id</span></span><br><span class="line">  &#125;)</span><br><span class="line">  story1.<span class="title function_">save</span>(<span class="keyword">function</span>(<span class="params">err</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">return</span> <span class="title function_">handleError</span>(err);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>Population</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Story</span>.</span><br><span class="line"><span class="title function_">findOne</span>(&#123;<span class="attr">title</span>:<span class="string">&#x27;my book&#x27;</span>&#125;).</span><br><span class="line"><span class="title function_">populate</span>(<span class="string">&#x27;author&#x27;</span>).</span><br><span class="line"><span class="title function_">exec</span>(<span class="keyword">function</span>(<span class="params">err,story</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (err) <span class="keyword">return</span> <span class="title function_">handleError</span>(err);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;The author is %s&#x27;</span>, story.<span class="property">author</span>.<span class="property">name</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>设置被填充字段</strong><br>mongoose4.0之后，你可以手动填写一个字段</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Story</span>.<span class="title function_">findOne</span>(&#123;<span class="attr">title</span>:<span class="string">&#x27;my book&#x27;</span>&#125;,<span class="keyword">function</span>(<span class="params">err,story</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (err) <span class="keyword">return</span> <span class="title function_">handleError</span>(err);</span><br><span class="line">  </span><br><span class="line">  story.<span class="property">author</span> = author</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(story.<span class="property">author</span>.<span class="property">name</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="十一、鉴别器–Discriminator">十一、鉴别器–Discriminator</h2><p>Discriminator是一种 schema 继承机制。它允许你在相同的底层MongoDb collection上使用部分重叠的 schema 建立多个 model。</p>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Week14-服务端选型：磨刀不如砍柴功</title>
      <link href="/Week14-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E9%80%89%E5%9E%8B%EF%BC%9A%E7%A3%A8%E5%88%80%E4%B8%8D%E5%A6%82%E7%A0%8D%E6%9F%B4%E5%8A%9F/"/>
      <url>/Week14-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E9%80%89%E5%9E%8B%EF%BC%9A%E7%A3%A8%E5%88%80%E4%B8%8D%E5%A6%82%E7%A0%8D%E6%9F%B4%E5%8A%9F/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章目录排版做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="第一章-周介绍">第一章 周介绍</h2><p><strong>1-1 本周介绍</strong></p><blockquote><ul><li>服务端选型：所有技术为业务服务</li><li>nodejs框架选型：Koa2</li><li>数据库：Mysql  Mongodb Redis</li><li>登录校验：JWT</li><li>单元测试与接口测试：Jest</li><li>线上服务：PM2 + nginx</li></ul></blockquote><h2 id="第二章-选择nodejs框架">第二章 选择nodejs框架</h2><p><strong>2-1 nodejs框架选型-开始</strong></p><blockquote><ul><li>所用常见的nodejs框架中，Koa2是最简单、最小的</li><li>目的扩充广度，让你了解有这门技术</li><li>Koa2和Express</li><li>eggs.js</li><li>Nest.js</li></ul></blockquote><p><strong>2-2 介绍koa2和express</strong></p><blockquote><ul><li><a href="https://koa.bootcss.com/">koa2</a>:  基于Node.js平台的下一代web框架</li><li><a href="https://expressjs.com/zh-cn/starter/generator.html">express</a>:node平台web框架，koa2基于express。</li></ul></blockquote><p><strong>2-3 介绍egg.js</strong></p><blockquote><p><a href="https://eggjs.org/zh-cn/">egg.js</a>:阿里开源，基于Koa2封装。</p></blockquote><p><strong>2-4 介绍nest.js</strong></p><blockquote><p><a href="https://docs.nestjs.cn/">nest.js</a>：也是一个框架，默认基于express封装，比较小众。<br>使用ts语法，大量使用装饰品，学习成本高。</p></blockquote><h2 id="第三章-数据库使用-Mysql-Mongodb-和-Redis">第三章 数据库使用 Mysql Mongodb 和 Redis</h2><p><strong>3-1 章开始</strong></p><blockquote><p>这一章会介绍：<br>Mysql和Sequelize<br>Mongodb和Mongogoose<br>Mysql和Mongodb的区别<br>Redis。</p></blockquote><p><strong>3-2 回顾数据结构设计</strong></p><blockquote><p>对第一周内容做了个简单回顾</p></blockquote><p><strong>3-3 Mysql 和 Sequelize 1</strong><br>学习这节之前，先将代码clone到本地，代码地址：<a href="https://github.com/liugezhou/lego_node_server">https://github.com/liugezhou/lego_node_server</a></p><blockquote><ol><li>mysql是Web应用中最常见的关系型数据库</li><li>本地安装mysql：Navicate Premium</li><li>本地新建数据库 imooc_lego_course,使用mysql2测试数据库连接。新建路由 /api/db-check，用于展示结果。</li></ol></blockquote><p>a.修改src/conf/envs/dev.js中的mysqlConf为本地</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">mysqlConf : &#123;</span><br><span class="line">  <span class="attr">host</span>: <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">    <span class="attr">user</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    <span class="attr">password</span>: <span class="string">&#x27;liugezhou1205&#x27;</span>,</span><br><span class="line">    <span class="attr">port</span>: <span class="string">&#x27;3306&#x27;</span>,</span><br><span class="line">    <span class="attr">database</span>: <span class="string">&#x27;imooc_lego_course&#x27;</span>,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>b. 测试：node src/db/mysql2.js</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;mysql2/promise&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; mysqlConf &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../config/dev&#x27;</span>)   <span class="comment">//这里加载dev</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">testMysqlConn</span> () &#123;</span><br><span class="line"><span class="keyword">const</span> conn = <span class="keyword">await</span> mysql.<span class="title function_">createConnection</span>(mysqlConf)</span><br><span class="line">  <span class="keyword">const</span> [rows] = <span class="keyword">await</span> conn.<span class="title function_">execute</span>(<span class="string">&#x27;select now()&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> rows</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">testMysqlConn</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br></pre></td></tr></table></figure><p><strong>3-4 Mysql 和 Sequelize 2</strong></p><blockquote><p>Sequelize:最常用的ORM框架，它让开发者不用写繁琐的SQL语句，通过API即可操作数据库。</p><ol><li>npm i -S sequelize  require-all  simple-git</li><li>数据库连接测试文件：</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/db/seq/utils/conn-test.js</span></span><br><span class="line"><span class="keyword">const</span> seq = <span class="built_in">require</span>(<span class="string">&#x27;../seq&#x27;</span>)</span><br><span class="line"></span><br><span class="line">seq.<span class="title function_">authenticate</span>()</span><br><span class="line">.<span class="title function_">then</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">.<span class="title function_">catch</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;fail&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">.<span class="title function_">finally</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">process.<span class="title function_">exit</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/db/seq/seq.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Sequelize</span> = <span class="built_in">require</span>(<span class="string">&#x27;sequelize&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123;mysqlConf &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../config/dev&#x27;</span>) </span><br><span class="line"><span class="keyword">const</span> &#123; isPrd, isTest &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../../utils/env&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//连接配置</span></span><br><span class="line"><span class="keyword">const</span> &#123; database, user, password, host, port &#125; = mysqlConf</span><br><span class="line"><span class="keyword">const</span> conf = &#123;</span><br><span class="line">host,</span><br><span class="line">  port,</span><br><span class="line">  <span class="attr">dialect</span>:<span class="string">&#x27;mysql&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试环境不打印日志</span></span><br><span class="line"><span class="keyword">if</span>(isTest)&#123;</span><br><span class="line"> conf.<span class="property">logging</span> = <span class="function">() =&gt;</span> &#123;&#125; <span class="comment">// 默认是 console.log</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 线上环境用 链接池</span></span><br><span class="line"><span class="keyword">if</span> (isPrd) &#123;</span><br><span class="line">    conf.<span class="property">pool</span> = &#123;</span><br><span class="line">        <span class="attr">max</span>: <span class="number">5</span>, <span class="comment">// 连接池中最大连接数量</span></span><br><span class="line">        <span class="attr">min</span>: <span class="number">0</span>, <span class="comment">// 连接池中最小连接数量</span></span><br><span class="line">        <span class="attr">idle</span>: <span class="number">10000</span>, <span class="comment">// 如果一个线程 10 秒钟内没有被使用过的话，那么就释放线程</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建连接</span></span><br><span class="line"><span class="keyword">const</span> seq = <span class="keyword">new</span> <span class="title class_">Sequelize</span>(database, user, password, conf)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = seq</span><br></pre></td></tr></table></figure><blockquote><ol start="3"><li>数据库模型：models</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// userModel</span></span><br><span class="line"><span class="comment">// src/models/UserModel.js</span></span><br><span class="line"><span class="keyword">const</span> seq = <span class="built_in">require</span>(<span class="string">&#x27;../db/seq/seq&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="variable constant_">STRING</span>, <span class="variable constant_">DATE</span>, <span class="variable constant_">BOOLEAN</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../db/seq/types&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">User</span> = seq.<span class="title function_">define</span>(<span class="string">&#x27;user&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">username</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="variable constant_">STRING</span>,</span><br><span class="line">        <span class="attr">allowNull</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">unique</span>: <span class="string">&#x27;username&#x27;</span>, <span class="comment">// 不要用 unique: true, </span></span><br><span class="line">        <span class="attr">comment</span>: <span class="string">&#x27;用户名，唯一&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">password</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="variable constant_">STRING</span>,</span><br><span class="line">        <span class="attr">allowNull</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">comment</span>: <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">User</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><ol start="4"><li>模型和数据表的同步</li></ol></blockquote><p>该代码逻辑在  bin/www中，通过www代码我们直到，数据表同步功能在sync-alter中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env node</span></span><br><span class="line"></span><br><span class="line">………………</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> syncDb = <span class="built_in">require</span>(<span class="string">&#x27;../src/db/seq/utils/sync-alter&#x27;</span>)</span><br><span class="line"></span><br><span class="line">………………</span><br><span class="line"></span><br><span class="line"><span class="comment">// 先同步 mysql 数据表</span></span><br><span class="line"><span class="title function_">syncDb</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 再启动服务</span></span><br><span class="line">    server.<span class="title function_">listen</span>(port)</span><br><span class="line">    ………………</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>src/db/seq/utils/sync-alter</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> simpleGit = <span class="built_in">require</span>(<span class="string">&#x27;simple-git&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> seq = <span class="built_in">require</span>(<span class="string">&#x27;../seq&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; isDev &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../../../utils/env&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取所有 seq model</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;require-all&#x27;</span>)(&#123;</span><br><span class="line">    <span class="attr">dirname</span>: path.<span class="title function_">resolve</span>(<span class="string">&#x27;src&#x27;</span>, <span class="string">&#x27;models&#x27;</span>), <span class="comment">// src/models 中可能会有 mongoose 的 model ，不过这里获取了也没关系</span></span><br><span class="line">    <span class="attr">filter</span>: <span class="regexp">/\.js$/</span>,</span><br><span class="line">    <span class="attr">excludeDirs</span>: <span class="regexp">/^\.(git|svn)$/</span>,</span><br><span class="line">    <span class="attr">recursive</span>: <span class="literal">true</span>, <span class="comment">// 递归</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 同步数据表</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">syncDb</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> needToSyncDb = <span class="literal">true</span></span><br><span class="line">    <span class="comment">// 只适用于开发环境！！！</span></span><br><span class="line">    <span class="keyword">if</span> (isDev) &#123;</span><br><span class="line">      ………………</span><br><span class="line">        <span class="keyword">if</span> (fileChanged.<span class="property">length</span>) &#123;</span><br><span class="line">          …………</span><br><span class="line">            <span class="keyword">if</span> (!changedDbFiles) needToSyncDb = <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (needToSyncDb) &#123;</span><br><span class="line">        <span class="keyword">await</span> seq.<span class="title function_">sync</span>(&#123; <span class="attr">alter</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = syncDb</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>上面代码的一些逻辑总结为一句话：seq.sync({ alter: true })</p></blockquote><p><strong>3-5 Mongodb和Mongoose</strong></p><blockquote><ul><li>Mongodb是Web应用中最常见的NoSQL应用。</li><li>本地在mongodb数据库中新建imooc_lego_course数据库，以及集合work。</li><li>然后，修改代码配置</li><li>接着，连接测试</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/config/envs/dev.js</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mongodbConf</span>: &#123;</span><br><span class="line">  <span class="attr">host</span>: <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">  <span class="attr">port</span>: <span class="string">&#x27;27017&#x27;</span>,</span><br><span class="line">  <span class="attr">dbName</span>: <span class="string">&#x27;imooc_lego_course&#x27;</span>,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&#x27;mongoose&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; mongodbConf &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../config/index&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; host, port, dbName, user, password &#125; = mongodbConf</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拼接连接字符串</span></span><br><span class="line"><span class="keyword">let</span> url = <span class="string">`mongodb://<span class="subst">$&#123;host&#125;</span>:<span class="subst">$&#123;port&#125;</span>`</span> <span class="comment">// dev 环境</span></span><br><span class="line"><span class="keyword">if</span> (user &amp;&amp; password) &#123;</span><br><span class="line">    url = <span class="string">`mongodb://<span class="subst">$&#123;user&#125;</span>:<span class="subst">$&#123;password&#125;</span>@<span class="subst">$&#123;host&#125;</span>:<span class="subst">$&#123;port&#125;</span>`</span> <span class="comment">// prd 环境</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mongoose.<span class="title function_">set</span>(<span class="string">&#x27;useCreateIndex&#x27;</span>, <span class="literal">true</span>)</span><br><span class="line">mongoose.<span class="title function_">set</span>(<span class="string">&#x27;useFindAndModify&#x27;</span>, <span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开始连接（ 使用用户名和密码时，需要 `?authSource=admin` ）</span></span><br><span class="line">mongoose.<span class="title function_">connect</span>(<span class="string">`<span class="subst">$&#123;url&#125;</span>/<span class="subst">$&#123;dbName&#125;</span>?authSource=admin`</span>, &#123;</span><br><span class="line">    <span class="attr">useNewUrlParser</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">useUnifiedTopology</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接对象</span></span><br><span class="line"><span class="keyword">const</span> db = mongoose.<span class="property">connection</span></span><br><span class="line"></span><br><span class="line">db.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;mongoose connect error&#x27;</span>, err)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 演示注释掉即可</span></span><br><span class="line"> db.<span class="title function_">once</span>(<span class="string">&#x27;open&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">     <span class="comment">// 用以测试数据库连接是否成功</span></span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;mongoose connect success&#x27;</span>)</span><br><span class="line"> &#125;)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>再接着，新建数据库模型model— work，[通过Schema生成一个model]</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 作品内容 Model ，存储到 Mongodb</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> <span class="variable">liugezhou</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&#x27;../db/mongoose&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 两个 model 公用一个 schema</span></span><br><span class="line"><span class="keyword">const</span> contentSchema = mongoose.<span class="title class_">Schema</span>(</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 页面的组件列表</span></span><br><span class="line">        <span class="attr">components</span>: [<span class="title class_">Object</span>],</span><br><span class="line">        <span class="comment">// 页面的属性，如页面背景图片</span></span><br><span class="line">        <span class="attr">props</span>: <span class="title class_">Object</span>,</span><br><span class="line">        <span class="comment">// 配置信息，如微信分享配置</span></span><br><span class="line">        <span class="attr">setting</span>: <span class="title class_">Object</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123; <span class="attr">timestamps</span>: <span class="literal">true</span> &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 未发布的内容</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">WorkContentModel</span> = mongoose.<span class="title function_">model</span>(<span class="string">&#x27;workContent&#x27;</span>, contentSchema)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发布的内容</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">WorkPublishContentModel</span> = mongoose.<span class="title function_">model</span>(<span class="string">&#x27;workPublishContent&#x27;</span>, contentSchema)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="title class_">WorkContentModel</span>,</span><br><span class="line">    <span class="title class_">WorkPublishContentModel</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>最后，我们在进行mysql与mongoose的测试的时候，在routes/index.js中将有关redis的内容暂时注释，<br>然后执行：npm run start，出现下面则测试成功!<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/14-1.4dfeo10krko0.webp" alt="14-1"><br>这里，讲师再次推荐了自己的一个课程，鉴于此次购买课程自己不是很满意，这里，我觉得自己补充mongoose的基础知识就够了，总结至：<a href="https://www.yuque.com/liugezhou/gofftg/zanx0w">https://www.yuque.com/liugezhou/gofftg/zanx0w</a></p></blockquote><p><strong>3-6 Date 和时区</strong></p><blockquote><p>new Date()直接打印，会显示世界标准时间，和北京差8个时区，要想获得当前时间，只需要toString()即可。</p></blockquote><blockquote><p>在Docker虚拟机里，默认没有时区，需要在Dockerfile里面进行配置</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># <span class="title class_">Dockerfile</span></span><br><span class="line"><span class="variable constant_">FROM</span> <span class="attr">node</span>:<span class="number">14</span></span><br><span class="line"><span class="variable constant_">WORKDIR</span> /app</span><br><span class="line"><span class="variable constant_">COPY</span> . /app</span><br><span class="line"></span><br><span class="line"># 设置时区</span><br><span class="line"><span class="variable constant_">RUN</span> ln -sf /usr/share/zoneinfo/<span class="title class_">Asia</span>/<span class="title class_">Shanghai</span> /etc/localtime &amp;&amp; echo <span class="string">&#x27;Asia/Shanghai&#x27;</span> &gt;<span class="regexp">/etc/</span>timezone</span><br><span class="line"></span><br><span class="line"><span class="variable constant_">CMD</span> npm i &amp;&amp; npm run prd-dev &amp;&amp; npx pm2 log</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>3-7 Mysql和Mongodb的区别</strong></p><blockquote><p>Mysql:关系型数据库，用于存储表格形式，格式规整的数据<br>Mongodb：文件数据库，用于存储文件，格式零散的数据。</p></blockquote><p><strong>3-8 介绍Redis</strong></p><blockquote><p>在项目中：npm i -S redis<br>然后根据前面Mysql以及Mongodb的调试方法，调试出本地的redis显示。</p></blockquote><blockquote><p>课程中关于redis的其它内容依旧是给出实战课让自己去学习，其它的什么也没说，而我本地也是安装过redis的，但是不记得如何启动了，于是我的步骤是这么展开的：</p><ul><li>第一步：首先看本地的redis是否已删除，即查找本地安装redis证据<ul><li>brew info redis:本地显示not install</li><li>接着查看/usr/local/etc/下没有redis.conf文件</li><li>结论：我本地的redis已经被我删除了 [其实，没有删除，后面才清楚]</li></ul></li><li>第二步：安装redis<ul><li>brew install redis</li><li>在/usr/local/etc下多了两个配置文件：redis.conf和redis-sentinel.conf</li><li>启动redis：brew services start redis （这个命令会在后台启动redis服务，并且每一次登录系统，都会自动重启）</li><li>假如不需要后台启动服务，可以配置文件启动：redis-server /usr/local/etc/redis.conf</li></ul></li></ul><p>我这里使用 redis-server /usr/local/etc/redis.conf的方式启动redis，<br>然后出现报错：<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/14-2.1a79q81ytxa8.webp" alt="14-2"><br>接着查找错误，原因为配置错误,没有深究下去。<br>但是尝试了另一个启动命令  redis-server:<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/14-3.50llefpz7j00.webp" alt="14-3"><br>成功了！<br>如图显示这个版本是5.0.8的，也就是说我之前电脑上其实是有redis的，我新安装的这个6.0.9的并没有用上。</p><p>然后，我继续查看目录，发现我之前安装的5.0.8的版本,其实在  /usr/local/redis-5.0.8下面,而且我不是使用的brew安装的</p><p>因此，我又把刚刚安装的redis删除：<br>brew uninstall redis<br>rm -rf /usr/local/etc/redis.conf<br>rm -rf /usr/local/etc/redis-sentinel.conf</p></blockquote><blockquote><p>折腾了这么一趟，其实我开始的时候直接redis-server启动就可以了。<br>此时在第三章3-3 clone的代码基础上，加入了redis配置后，执行npm run dev  发现redis连接成功了！</p></blockquote><p><strong>3-9 章总结</strong></p><blockquote><p>啰里八嗦后一句话：大家自己去学习基础知识，从头开始讲不可能。</p></blockquote><h2 id="第四章-登录校验并使用JWT">第四章 登录校验并使用JWT</h2><p><strong>4-1 开始</strong></p><blockquote><p>选择JWT，放弃Session。</p><ul><li>Cookie和Session</li><li>JWt</li><li>SSO和OAuth2</li></ul></blockquote><p><strong>4-2 介绍 Session 登录</strong><br>Cookie做登录校验的过程</p><blockquote><ul><li>前端传入用户名密码，传给后端</li><li>后端验证成功，返回信息时set-cookie</li><li>接下来所有接口访问，都自动带上cookie</li></ul></blockquote><p>Session</p><blockquote><ul><li>cookie只存储用户userid，不暴露用户信息，session存储用户信息。</li><li>Session原理简单、易于学习</li><li>用户信息存储在服务端，可以快速封禁某个登录的用户</li><li>但是： 占用服务端内存、多进程、多服务、跨域传递cookie</li></ul></blockquote><p><strong>4-3 介绍JWT登录</strong></p><blockquote><p>JWT – Json Web Token</p></blockquote><p>JWT过程</p><blockquote><ul><li>前端输入用户名密码，传给后端。</li><li>后端验证成功，返回一段token字符串----将用户信息加密得到。</li><li>前端获取token之后，存储起来。</li><li>以后访问接口，都在header中带上token。</li></ul></blockquote><p>优缺点</p><blockquote><p>优点：不占用服务器内存、多进程,多服务器,不受影响、不受跨域限制<br>缺点：无法快速封禁登录的用户。</p></blockquote><p>区别</p><blockquote><p>Session用户信息存储在服务端<br>JWT用户信息存储在客户端</p></blockquote><p>代码演示</p><blockquote><p>首先需要第三方库：koa-jwt 和 jsonwebtoken<br>然后，简单对jwt以及loginCheck中间价进行了一个介绍,下面是jwt代码演示，loginCheck不贴了。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 封装 jwt 插件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> <span class="variable">liugezhou</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> jwtKoa = <span class="built_in">require</span>(<span class="string">&#x27;koa-jwt&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="variable constant_">JWT_SECRET</span>, <span class="variable constant_">JWT_IGNORE_PATH</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../config/constant&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">jwtKoa</span>(&#123;</span><br><span class="line">    <span class="attr">secret</span>: <span class="variable constant_">JWT_SECRET</span>,</span><br><span class="line">    <span class="attr">cookie</span>: <span class="string">&#x27;jwt_token&#x27;</span>, <span class="comment">// 使用 cookie 存储 token</span></span><br><span class="line">&#125;).<span class="title function_">unless</span>(&#123;</span><br><span class="line">    <span class="comment">// 定义哪些路由忽略 jwt 验证</span></span><br><span class="line">    <span class="attr">path</span>: <span class="variable constant_">JWT_IGNORE_PATH</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>4-4 SSO和OAuth2</strong></p><blockquote><p>SSO:单点登录<br>OAuth2第三方鉴权的常用方式</p></blockquote><p><strong>使用Cookie实现</strong></p><blockquote><p>简单的，如果业务系统都在同一主域名下，<a href="http://xn--wenku-gv5ij80i.baidu.com">比如wenku.baidu.com</a>  <a href="http://tieba.baidu.com">tieba.baidu.com</a>，就好办了。<br>可以直接把cookie domain设置为主域名 <a href="http://baidu.com">baidu.com</a>。</p></blockquote><p><strong>SSO</strong></p><blockquote><p>复杂一点，滴滴同时拥有 <a href="http://didichuxing.com">didichuxing.com</a> <a href="http://xiaojukeji.com">xiaojukeji.com</a> didiglobal.com等域名<br>各种cookie是完全绕不开的。</p></blockquote><p><strong>OAuth2验证</strong></p><blockquote><p>上述SSO是oauth的实际案例，其他常见的还有微信登录、github登录。即，当涉及到第三方用户登录校验时，都会用到OAuth2.0标准。</p></blockquote><p><strong>4-5 章总结</strong></p><blockquote><p>Cooike/Session/Jwt/OSS/OAuth2</p></blockquote><h2 id="第五章-单元测试选择-Jest">第五章 单元测试选择 Jest</h2><p><strong>5-1 开始</strong></p><blockquote><p>保证软件质量：单元测试和接口测试。</p><ul><li>Jest 和Mocha</li><li>单元测试为何难以落实</li><li>supertest接口测试</li><li>测试驱动开发TDD</li></ul></blockquote><p><strong>5-2 介绍Jest和Mocha</strong></p><blockquote><p>Jest官网：<a href="https://jestjs.io/zh-Hans/docs/getting-started">https://jestjs.io/zh-Hans/docs/getting-started</a><br>Mocha官网：<a href="https://mochajs.cn/#getting-started">https://mochajs.cn/#getting-started</a></p></blockquote><p>代码演示</p><blockquote><ul><li>安装jest:npm i -S jest</li><li>配置package.json</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line"> <span class="string">&quot;test:local&quot;</span>: <span class="string">&quot;cross-env NODE_ENV=test_local jest --runInBand  --passWithNoTests --colors --forceExit&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li><strong>test</strong>/demo.test.js</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">describe</span>(<span class="string">&#x27;test demo&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">test</span>(<span class="string">&#x27;1+1 = 2&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">expect</span>(<span class="number">1</span> + <span class="number">1</span>).<span class="title function_">toBe</span>(<span class="number">2</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>允许命令 npm run test:local<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/14-4.yr753gttyr4.webp" alt="14-4"><br><strong>5-3 为何单元测试难以落实</strong></p><blockquote><p><strong>使用方式不合理</strong>：混淆了单元测试和集成测试，导致单元测试代码中有太多Mock。如果需要服务器启动才能执行的代码，就不是单元测试了。<br>**现状：**研发流程不规范</p></blockquote><p><strong>5-4 supertest接口测试</strong></p><blockquote><p>supertest接口测试的目的是让所有接口稳起来。<br>本地测试： jest + supertest<br>远程测试： jest + axios<br>接口测试和单元测试，代码都放在 __test__下，但两者概念要区分开。</p></blockquote><p>代码演示：</p><blockquote><p>安装 supertest axios<br>package.json中添加 test:remote配置（远程才用到）<br>接口测试目录：<strong>test</strong>/api/</p></blockquote><h2 id="第六章：线上服务使用PM2和nginx">第六章：线上服务使用PM2和nginx</h2><p><strong>6-1 pm2和nginx-章开始</strong></p><blockquote><p>线上服务：稳定和高效</p></blockquote><p><strong>6-2 pm2配置和使用</strong></p><blockquote><p>根据我之前的学习理解：pm2其实就是一个后台服务常驻的一个工具，我们平时在npm run dev后如果按Ctrl + c 停止后，服务就停止了，如果我们使用 pm2来启动，那么即使停止，我们的项目还是能够继续运行。</p><p>另外，我本地正在开发一个vue项目，如果我想后台常驻，那么我可以直接执行：pm2 start npm – run serve<br>我直接这么执行的话，那本地肯定会产生log日志文件，我在/Users/liumingzhou/.pm2目录下找到了日志打印。</p></blockquote><p><strong>特点：</strong></p><blockquote><ul><li>进程守护–稳定</li><li>多进程–高效</li><li>日志记录–问题可追溯</li></ul></blockquote><p><strong>安装</strong></p><blockquote><p>npm i -g pm2</p></blockquote><p><strong>基本使用</strong></p><blockquote><ul><li>pm2 start xxx.js</li><li>pm2 restart &lt;id/name&gt;</li><li>pm2 reload</li><li>pm2 list</li><li>pm2 logs &lt;id/name&gt;</li><li>pm2 stop &lt;id/name&gt;</li><li>pm2 delete &lt;id/name&gt;</li><li>pm2 monit</li></ul></blockquote><p><strong>配置</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> os = <span class="built_in">require</span>(<span class="string">&#x27;os&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> cpuCoreLength = os.<span class="title function_">cpus</span>().<span class="property">length</span> <span class="comment">// CPU 几核</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">apps</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;your-server-name&#x27;</span>,</span><br><span class="line">        <span class="attr">script</span>: <span class="string">&#x27;bin/www&#x27;</span>,</span><br><span class="line">        <span class="comment">// watch: true, // 无特殊情况，不用实时监听文件，否则可能会导致很多 restart</span></span><br><span class="line">        <span class="attr">ignore_watch</span>: [<span class="string">&#x27;node_modules&#x27;</span>, <span class="string">&#x27;__test__&#x27;</span>, <span class="string">&#x27;logs&#x27;</span>],</span><br><span class="line">        <span class="comment">// instances: cpuCoreLength, // 线上环境，多进程</span></span><br><span class="line">        <span class="attr">instances</span>: <span class="number">1</span>, <span class="comment">// 测试环境，一个进程即可</span></span><br><span class="line">        <span class="attr">error_file</span>: <span class="string">&#x27;./logs/err.log&#x27;</span>,</span><br><span class="line">        <span class="attr">out_file</span>: <span class="string">&#x27;./logs/out.log&#x27;</span>,</span><br><span class="line">        <span class="attr">log_date_format</span>: <span class="string">&#x27;YYYY-MM-DD HH:mm:ss Z&#x27;</span>, <span class="comment">// Z 表示使用当前时区的时间格式</span></span><br><span class="line">        <span class="attr">combine_logs</span>: <span class="literal">true</span>, <span class="comment">// 多个实例，合并日志</span></span><br><span class="line">        <span class="attr">max_memory_restart</span>: <span class="string">&#x27;300M&#x27;</span>, <span class="comment">// 内存占用超过 300M ，则重启,可使用 pm2 monit查看初始内存占用，然后根据初始设置</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>package.json配置：<br>“prd-dev”: “cross-env NODE_ENV=dev pm2 start bin/pm2-prd-dev.config.js”<br>运行：npm run prd-dev</p></blockquote><p><strong>6-3 pm2日志拆分</strong></p><blockquote><p>日志拆分的原因为：日志庞大，不利于检索且占用内存太大。<br>日志拆分的方式有按天拆分或者小时等。</p><p>我们这里日志拆分使用的是：<strong>pm2-logrotate</strong><br>安装：pm2 install pm2-logrotate -g<br>运行 pm2 list 即可看到 pm2-logrotate的进程</p></blockquote><p><strong>默认配置如下：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pm2 <span class="built_in">set</span> pm2-logrotate:max_size 10M <span class="comment"># 日志文件最大 10M</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pm2 <span class="built_in">set</span> pm2-logrotate:retain 30 <span class="comment"># 保留 30 个文件，多了就自动删掉</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pm2 <span class="built_in">set</span> pm2-logrotate:compress <span class="literal">false</span> <span class="comment"># gzip 压缩文件</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pm2 <span class="built_in">set</span> pm2-logrotate:dateFormat YYYY-MM-DD_HH-mm-ss</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pm2 <span class="built_in">set</span> pm2-logrotate:workerInterval 30 <span class="comment"># 单位 s ，日志检查的时间间隔</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pm2 <span class="built_in">set</span> pm2-logrotate:rotateInterval 0 0 * *_ _ * <span class="comment"># 定时规则</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pm2 <span class="built_in">set</span> pm2-logrotate:rotateModule <span class="literal">true</span> <span class="comment"># 分割 pm2 模块的日志</span></span></span><br></pre></td></tr></table></figure><p>可修改配置 pm2 set pm2-logrotate: <key><value><br><strong>rotateInterval规则[crontab]：</strong><br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/14-5.c6yvkmaj06o.webp" alt="14-5"></p><p><strong>6-4 nginx配置和日志拆分</strong></p><blockquote><ul><li>静态服务</li><li>反向代理</li><li>负载均衡</li><li>access log</li></ul></blockquote><p>常用命令</p><blockquote><p>nginx<br>nginx -s reload<br>nginx -s stop<br>nginx -t<br>nginx -c xxx.conf</p></blockquote><h2 id="第七章-周总结">第七章 周总结</h2><p><strong>开发环境配置</strong></p><blockquote><ul><li>eslint premitter</li><li>pre-commit</li><li>commit规范</li><li>validator</li><li>cors</li></ul></blockquote><h2 id="第八章-nodejs框架：express">第八章 nodejs框架：express</h2><p><strong>8-1 安装</strong></p><blockquote><p>通过脚手架安装：express-generator</p><ul><li>npm i express-generator -g</li><li>express express-test</li><li>cd express-test</li><li>npm i</li><li>npm run start</li><li>为了方便改代码后不用重启，我们使用  npm i nodemon cross-env --save-dev</li></ul></blockquote><p><strong>8-2 ｜8-3 介绍app-js</strong></p><blockquote><ul><li><p>各个插件的作用</p><ul><li>http-errors:错误页处理</li><li>express</li><li>cookie-parse：只要经过这个中间件处理，我们纠结可以非常轻松的使用req.cookie()去访问所有cookie</li><li>morgan:记录access log</li><li>app.use(express.json()):post请求传入的数据直接在route中使用req.body获取</li><li>app.use(express.urlencoded({ extended: false }));：请求参数为application/x-www-form-urlencoded</li></ul></li><li><p>处理get和post请求</p><ul><li>res.json()</li></ul></li></ul></blockquote><p><strong>8-4 使用中间件</strong></p><blockquote><p>app.use()<br>next参数作用。</p></blockquote><h2 id="第九章：nodejs框架：koa2">第九章：nodejs框架：koa2</h2><p><strong>9-1 介绍koa2</strong></p><blockquote><ul><li>npm install koa-generator -g</li><li>koa2 koa2-test</li><li>npm install &amp;&amp; npm run dev</li></ul></blockquote><h2 id="第十章-mysql和Sequelize">第十章 mysql和Sequelize</h2><blockquote><p>关于表的外键：表关联，有一些外键的设置，我发现之前的后端表中都没有对外键盘做一个级联操作，于是在回头查看一些表结构的时候，就不容易看出来一些表的关联关系，如果我们在新建表的时候就去设置外键表的关联，首先表结构一目了然，且在新增(外键关联的主键没有值得时候)会有错误提示，删除主键表的时候，关联的主键内容也会删掉。</p></blockquote><blockquote><p>select * from blogs inner join users on <a href="http://users.id">users.id</a> =blogs.userid<br>select blogs.*,users.username,users.nickname from blogs inner join users on <a href="http://users.id">users.id</a> =blogs.userid</p></blockquote><blockquote><p>sequelize:mysql链接：const seq = new  Sequeslize(‘koa2_weibo_db’,‘root’,‘liugezhou1205’,{host:‘localhost’,dislect:‘mysql’})<br>建模：</p><p>数据库建表字段长度为255，varchar为可变长度，并不是会占用这么多的空间，数据库会自动计算缩短空间</p></blockquote><h2 id="第十一章-mongodb基础学习">第十一章 mongodb基础学习</h2><p><strong>11-1 mongodb是文档数据库</strong></p><blockquote><ul><li>Mongodb是一个文档数据库</li><li>Mongodb和Mysql Redis的对比</li><li>如何选择？举例说明</li></ul></blockquote><p><strong>文档数据库</strong></p><blockquote><ul><li>Mysql 以表格形式存储数据</li><li>Redis以 key-value形式存储数据</li><li>Mongodb是以文档形式存储数据，格式像JSON</li></ul></blockquote><p><strong>对比</strong></p><table><thead><tr><th>Mysql</th><th>关系型    ｜表格存储               ｜ SQL操作 ｜ 硬盘</th></tr></thead><tbody><tr><td>Redis</td><td>非关系型 ｜ key-value形式存储 ｜ NoSQL   ｜ 内存</td></tr><tr><td>Mongodb</td><td>非关系型 ｜文档存储               ｜ NoSQL   ｜ 硬盘</td></tr></tbody></table><p><strong>11-2 安装mongodb–介绍</strong></p><blockquote><ul><li>安装mongodb服务端</li><li>安装mongodb客户端</li><li>启动和连接</li></ul></blockquote><p><strong>11-3 安装mongodb-mac-安装homebrew</strong></p><blockquote><ul><li>安装 homebrew</li><li>用homebrew安装 mongodb</li><li>安装客户端 compass</li></ul></blockquote><blockquote><ol><li>安装brew官网：</li></ol></blockquote><p>/bin/bash -c “$(curl -fsSL <a href="https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh">https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</a>”)</p><blockquote><ol start="2"><li>验证 brew --version</li><li>切换源：查找资料即可(我本地未切换)</li></ol></blockquote><p><strong>11-4 安装mongodb-mac-安装mongodb</strong></p><blockquote><ul><li>brew install mongodb-community</li><li>启动：brew services start mongodb-community</li><li>验证启动：mongo &gt; 1 + 1 mongo</li><li>停止：brew services start mongodb-community</li></ul></blockquote><p><strong>11-5 安装mongodb-mac-安装compass</strong></p><blockquote><p>mongodb官网下载 composs</p></blockquote><p><strong>11-6 compass操作mongodb</strong></p><blockquote><p>数据库–集合–文档</p></blockquote><p><strong>11-7 用命令行操作mongodb</strong></p><blockquote><ul><li>show dbs</li><li>use myblogs --新建或者使用数据库</li><li>show collections</li><li>db.blogs.insert({“title”:“标题1”,“content”:“内容1”,“author”:“liugezhou”})</li><li>db.blogs.find()</li><li>db.blogs.find({“author”:“liugezhou”})</li><li>db.blogs.update({“title”:“标题1”},{$set:{“author”:“lisi”}})</li><li>db.blogs.find().sort({_id:-1})</li></ul></blockquote><p><strong>11-8 mongodb的几个重要概念</strong></p><blockquote><ul><li>databse:一个应用对应多个数据库服务</li><li>collection</li><li>document</li><li>bson：类JSON格式，Binary JSON  二进制类型的JSON</li><li>NoSQL：无需sql语句查询</li></ul></blockquote><p><strong>11-9 nodejs连接mongodb</strong></p><blockquote><ul><li>mkdir mongodb-test</li><li>cd mongodb-test</li><li>npm init -y</li><li>npm i mongodb --save</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">MongoClient</span> = <span class="built_in">require</span>(<span class="string">&#x27;mongodb&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> url =  <span class="string">&#x27;mongodb://localhost:27017&#x27;</span></span><br><span class="line"><span class="keyword">const</span> dbName = <span class="string">&#x27;myblog&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">MongoClient</span>.<span class="title function_">connect</span>(</span><br><span class="line">    url,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//配置</span></span><br><span class="line">         <span class="attr">useUnifiedTopology</span>: <span class="literal">true</span> </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function">(<span class="params">err,client</span>) =&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;mongodb  connect error&#x27;</span>,err)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 连接成功</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;mongodb connect success&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 切换数据库</span></span><br><span class="line">        <span class="keyword">const</span> db = client.<span class="title function_">db</span>(dbName)</span><br><span class="line">        <span class="comment">//关闭连接</span></span><br><span class="line">        client.<span class="title function_">close</span>()</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>11-10 nodejs操作mongodb</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">MongoClient</span> = <span class="built_in">require</span>(<span class="string">&#x27;mongodb&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> url =  <span class="string">&#x27;mongodb://localhost:27017&#x27;</span></span><br><span class="line"><span class="keyword">const</span> dbName = <span class="string">&#x27;myblog&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">MongoClient</span>.<span class="title function_">connect</span>(</span><br><span class="line">    url,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//配置</span></span><br><span class="line">         <span class="attr">useUnifiedTopology</span>: <span class="literal">true</span> </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function">(<span class="params">err,client</span>) =&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;mongodb  connect error&#x27;</span>,err)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 连接成功</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;mongodb connect success&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 切换数据库</span></span><br><span class="line">        <span class="keyword">const</span> db = client.<span class="title function_">db</span>(dbName)</span><br><span class="line"></span><br><span class="line">        <span class="comment">//集合</span></span><br><span class="line">        <span class="keyword">const</span> userCollection = db.<span class="title function_">collection</span>(<span class="string">&#x27;users&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">//删除</span></span><br><span class="line">        userCollection.<span class="title function_">deleteOne</span>(&#123;</span><br><span class="line">            <span class="attr">username</span>:<span class="string">&#x27;mongodb&#x27;</span></span><br><span class="line">        &#125;,<span class="function">(<span class="params">err,result</span>)=&gt;</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(err)&#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;user delete error&#x27;</span>, err)</span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">                client.<span class="title function_">close</span>()</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">        <span class="comment">//修改</span></span><br><span class="line">        userCollection.<span class="title function_">updateOne</span>(&#123;</span><br><span class="line">            <span class="attr">username</span>:<span class="string">&#x27;mongodb&#x27;</span></span><br><span class="line">        &#125;,&#123;<span class="attr">$set</span>:&#123;<span class="attr">username</span>:<span class="string">&#x27;mongoose&#x27;</span>&#125;&#125;,<span class="function">(<span class="params">err,result</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(err)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;user update error&#x27;</span>, err)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">            client.<span class="title function_">close</span>()</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 新增</span></span><br><span class="line">        userCollection.<span class="title function_">insertOne</span>(&#123;</span><br><span class="line">            <span class="attr">username</span>:<span class="string">&#x27;mongodb&#x27;</span>,</span><br><span class="line">            <span class="attr">password</span>:<span class="string">&#x27;abc&#x27;</span>,</span><br><span class="line">            <span class="attr">nickname</span>:<span class="string">&#x27;mongoose&#x27;</span></span><br><span class="line">        &#125;,<span class="function">(<span class="params">err,result</span>) =&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(err)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;user insert error&#x27;</span>, err)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">            client.<span class="title function_">close</span>()</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">// 文档--查询</span></span><br><span class="line">        userCollection.<span class="title function_">find</span>().<span class="title function_">toArray</span>(<span class="function">(<span class="params">err,result</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(err)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;user find error&#x27;</span>, err)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">              <span class="comment">//关闭连接</span></span><br><span class="line">            client.<span class="title function_">close</span>()</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>11-11 使用mongoose连接mongodb服务</strong></p><blockquote><ul><li>Schema定义数据格式的规范</li><li>以Model规范Collection</li><li>规范数据操作的APi</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&#x27;../db&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用Schema定义数据规范</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">UserSchema</span> = mongoose.<span class="title class_">Schema</span>(&#123;</span><br><span class="line">    <span class="attr">username</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>:<span class="title class_">String</span>,</span><br><span class="line">        <span class="attr">required</span>:<span class="literal">true</span>,</span><br><span class="line">        <span class="attr">unique</span>:<span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">password</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">nickname</span>: <span class="title class_">String</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Model对应 collection</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">User</span> = mongoose.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>,<span class="title class_">UserSchema</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">User</span></span><br></pre></td></tr></table></figure><p><strong>11-12 mongoose操作mongodb</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Blog</span> = <span class="built_in">require</span>(<span class="string">&#x27;../models/Blog&#x27;</span>)</span><br><span class="line"></span><br><span class="line">!(<span class="keyword">async</span>  ()=&gt;&#123;</span><br><span class="line">    <span class="comment">// 创建博客</span></span><br><span class="line">    <span class="comment">// const blog = await Blog.create(&#123;</span></span><br><span class="line">    <span class="comment">//     title:&#x27;liugezhou4&#x27;,</span></span><br><span class="line">    <span class="comment">//     content:&#x27;内容4&#x27;,</span></span><br><span class="line">    <span class="comment">//     author:&#x27;mongoose&#x27;</span></span><br><span class="line">    <span class="comment">// &#125;)</span></span><br><span class="line">    <span class="comment">// console.log(blog)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询</span></span><br><span class="line"><span class="comment">//    const blogList =  await Blog.find(&#123;author:&#x27;mongoose&#x27;&#125;).sort(&#123;_id:-1&#125;)</span></span><br><span class="line"><span class="comment">//    console.log(blogList)</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//修改</span></span><br><span class="line">   <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title class_">Blog</span>.<span class="title function_">findOneAndUpdate</span>(</span><br><span class="line">       &#123; <span class="attr">title</span>:<span class="string">&#x27;liugezhou&#x27;</span>  &#125;,</span><br><span class="line">       &#123;<span class="attr">content</span>:<span class="string">&#x27;new content&#x27;</span>&#125;,</span><br><span class="line">       &#123;<span class="attr">new</span>:<span class="literal">true</span>&#125;    </span><br><span class="line">   )</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><h2 id="第十二章-redis">第十二章 redis</h2><p><strong>12-1 介绍redis基本使用</strong></p><blockquote><ul><li>内存数据库：比硬盘快很多很多。</li><li>公共数据可以使用redis做缓存</li><li>登录信息</li><li>brew install redis</li><li>启动：redis-server</li><li>客户端启动：redis-cli</li><li>set name ‘liugezhou’</li><li>get name</li></ul></blockquote><p><strong>12-2 介绍redis-nodejs操作redis-1</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> redis = <span class="built_in">require</span>(<span class="string">&#x27;redis&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="variable constant_">REDIS_CONF</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../conf/db&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建客户端</span></span><br><span class="line"><span class="keyword">const</span> redisClient = redis.<span class="title function_">createClient</span>(<span class="variable constant_">REDIS_CONF</span>.<span class="property">port</span>,<span class="variable constant_">REDIS_CONF</span>.<span class="property">host</span>)</span><br><span class="line"></span><br><span class="line">redisClient.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function"><span class="params">err</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;redis error&#x27;</span>, err)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>12-3 介绍redis-nodejs操作redis-2</strong></p><blockquote><p>没什么印象深刻的</p></blockquote><ul><li>服务器–如何查看redis安装在哪个目录</li></ul>]]></content>
      
      
      <categories>
          
          <category> Web架构之脚手架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web架构之脚手架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Week6-脚手架项目和组件初始化开发</title>
      <link href="/Week6-%E8%84%9A%E6%89%8B%E6%9E%B6%E9%A1%B9%E7%9B%AE%E5%92%8C%E7%BB%84%E4%BB%B6%E5%88%9D%E5%A7%8B%E5%8C%96%E5%BC%80%E5%8F%91/"/>
      <url>/Week6-%E8%84%9A%E6%89%8B%E6%9E%B6%E9%A1%B9%E7%9B%AE%E5%92%8C%E7%BB%84%E4%BB%B6%E5%88%9D%E5%A7%8B%E5%8C%96%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章目录排版做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="第一章：本周导学">第一章：本周导学</h2><p><strong>1-1 本周整体内容介绍和学习方法</strong></p><blockquote><ul><li>重点：脚手架安装 项目/组件  功能开发。</li><li>技术栈：ejs模版渲染(项目模板安装)和glob文件筛选。</li><li>加餐：ejs源码解析、require源码解析。</li></ul></blockquote><h2 id="第二章：脚手架安装模版功能架构设计">第二章：脚手架安装模版功能架构设计</h2><p><strong>2-1 脚手架安装项目模板架构设计</strong><br>installTemplate</p><p><strong>2-2 脚手架组件初始化架构设计</strong></p><blockquote><p>与项目大体过程没有改变。<br>tiny change：</p><ul><li>文本提示名称</li><li>项目名称format</li><li>组件需要填写描述信息</li></ul></blockquote><h2 id="第三章-脚手架模板安装核心实现：ejs-库功能详解">第三章 脚手架模板安装核心实现：ejs 库功能详解</h2><p><strong>3-1 ejs模板引擎的三种基本用法</strong></p><blockquote><p>ejs主要用于模版渲染的。jsp、php是之前模版渲染的代表。ejs的实现与jsp非常类似。</p><ul><li>ejs.compile(html,options)(data)</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ejs = <span class="built_in">require</span>(<span class="string">&#x27;ejs&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="comment">//第一种方法</span></span><br><span class="line"><span class="keyword">const</span> html =<span class="string">&#x27;&lt;div&gt;&lt;%= user.name%&gt;&lt;/div&gt;&#x27;</span></span><br><span class="line"><span class="keyword">const</span> options = &#123;&#125;</span><br><span class="line"><span class="keyword">const</span> data =&#123;</span><br><span class="line">    <span class="attr">user</span>:&#123;</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;liugezhou&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> template = ejs.<span class="title function_">compile</span>(html,options) <span class="comment">//// 返回一个用于解析html中模板的 function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> compileTemplate = <span class="title function_">template</span>(data)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(compileTemplate)   <span class="comment">//&lt;div&gt;liugezhou&lt;/div&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第二种用法</span></span><br><span class="line"><span class="keyword">const</span> renderTemplate = ejs.<span class="title function_">render</span>(html,data,options)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(renderTemplate)</span><br><span class="line"></span><br><span class="line"><span class="comment">//第三种用法</span></span><br><span class="line"><span class="keyword">const</span> renderFile = ejs.<span class="title function_">renderFile</span>(path.<span class="title function_">resolve</span>(__dirname,<span class="string">&#x27;template.html&#x27;</span>),data,options)</span><br><span class="line">renderFile.<span class="title function_">then</span>(<span class="function"><span class="params">file</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(file))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>3-2 ejs模板不同标签用法详解</strong></p><blockquote><ul><li>&lt;%   : ‘脚本’标签，用于流程控制，无输出。</li><li>&lt;%= : 输出数据到模版(输出是转义Html标签)</li><li>&lt;%- : 输出非转义的数据到模版 :如果数据是<div>liugehou</div>,那么输出的就是这样的格式。</li><li>&lt;%# : 注释标签，不执行、不输出内容，但是会占空间。</li><li>&lt;%_ : 删除前面空格空符</li><li>-%&gt;: 删除紧随其后的换行符</li><li>_%&gt;: 删除后面空格字符</li></ul></blockquote><p><strong>3-3 ejs模板几种特殊用法</strong></p><blockquote><p>本节主要介绍ejs另外比较常用的三个辅助功能</p><ul><li>包含: include</li><li>自定义分隔符: 我们上面默认使用的是%，我们只需要在options参数中定义 delimiter这个参数即可</li><li>自定义文件加载器: 在使用ejs.renderFile读取文件之前，可以使用ejs.fileLoader做一些操作</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ejs.<span class="property">fileLoader</span> = <span class="keyword">function</span>(<span class="params">filePath</span>)&#123;</span><br><span class="line"><span class="keyword">const</span> content = fs.<span class="title function_">readFileSync</span>(filePath)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;&lt;div&gt;&lt;%= user.copyright %&gt;&lt;/div&gt;&#x27;</span> + content</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3-4 glob用法小结</strong></p><blockquote><p>glob最早是出现在类Unix系统的命令中的，用来匹配文件路径。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> glob = <span class="built_in">require</span>(<span class="string">&#x27;glob&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="title function_">glob</span>(<span class="string">&#x27;**/*.js&#x27;</span>,&#123;<span class="attr">ignore</span>:[<span class="string">&#x27;node_modules/**&#x27;</span>,<span class="string">&#x27;webpack.config.js&#x27;</span>]&#125;,<span class="keyword">function</span>(<span class="params">err,file</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(file)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="第四章：脚手架项目模板安装功能开发">第四章：脚手架项目模板安装功能开发</h2><p><strong>4-1 引入项目模板类型和标准安装逻辑开发</strong></p><blockquote><p>本节代码较少，主要是梳理流程，上一大周写到了下载模版到本地缓存，本节接着上周进度：<br>接着便需要安装模版，新建了安装模版 installTemplate()方法，并对拿到模版的type进行判断，<br>若为normal，则执行安装标准模版方法：installNormalTemplate()<br>若为custom，则执行安装自定义模版方法：installCustomTemplate()</p></blockquote><p><strong>4-2 拷贝项目模板功能开发</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">installNormalTemplate</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">//拷贝模板代码至当前目录</span></span><br><span class="line">  <span class="keyword">const</span> spinner = <span class="title function_">spinnerStart</span>(<span class="string">&#x27;正在安装模板...&#x27;</span>)</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">sleep</span>()</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 去缓存目录中拿template下的文件路径</span></span><br><span class="line">    <span class="keyword">const</span> templatePath = path.<span class="title function_">resolve</span>(<span class="variable language_">this</span>.<span class="property">templateNpm</span>.<span class="property">cacheFilePath</span>,<span class="string">&#x27;template&#x27;</span>)</span><br><span class="line">    <span class="comment">//当前执行脚手架目录</span></span><br><span class="line">    <span class="keyword">const</span> targetPath = process.<span class="title function_">cwd</span>()</span><br><span class="line">    fse.<span class="title function_">ensureDirSync</span>(templatePath)<span class="comment">//确保使用前缓存生成目录存在，若不存在则创建</span></span><br><span class="line">    fse.<span class="title function_">ensureDirSync</span>(targetPath)   <span class="comment">//确保当前脚手架安装目录存在，若不存在则创建</span></span><br><span class="line">    fse.<span class="title function_">copySync</span>(templatePath,targetPath) <span class="comment">//将缓存目录下文件copy至当前目录</span></span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="keyword">throw</span> error</span><br><span class="line">  &#125; <span class="keyword">finally</span>&#123; </span><br><span class="line">    spinner.<span class="title function_">stop</span>(<span class="literal">true</span>)</span><br><span class="line">    log.<span class="title function_">success</span>(<span class="string">&#x27;模板安装成功&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4-3 项目模板安装依赖和启动命令 | <strong>4-4 白名单命令检测功能开发</strong></strong></p><p>在上一节，模板copy成功之后，紧接着：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//依赖安装</span></span><br><span class="line"><span class="keyword">const</span> &#123; installCommand,startCommand &#125; = <span class="variable language_">this</span>.<span class="property">templateInfo</span></span><br><span class="line"><span class="comment">//依赖安装</span></span><br><span class="line"><span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">execCommand</span>(installCommand,<span class="string">&#x27;依赖过程安装失败！&#x27;</span>)</span><br><span class="line"><span class="comment">//启动命令执行</span></span><br><span class="line"><span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">execCommand</span>(startCommand,<span class="string">&#x27;启动命令执行失败失败！&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">WHITE_COMMAND</span> =[<span class="string">&#x27;npm&#x27;</span>, <span class="string">&#x27;cnpm&#x27;</span>] </span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">execCommand</span>(<span class="params">command,errMsg</span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> ret </span><br><span class="line">        <span class="keyword">if</span>(command)&#123;</span><br><span class="line">            <span class="keyword">const</span> cmdArray=command.<span class="title function_">split</span>(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">            <span class="keyword">const</span> cmd = <span class="variable language_">this</span>.<span class="title function_">checkCommand</span>(cmdArray[<span class="number">0</span>])</span><br><span class="line">            <span class="keyword">if</span>(!cmd)&#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(errMsg)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">const</span> args = cmdArray.<span class="title function_">slice</span>(<span class="number">1</span>)</span><br><span class="line">            ret = <span class="keyword">await</span> <span class="title function_">execAsync</span>(cmd,args,&#123;</span><br><span class="line">                <span class="attr">stdio</span>:<span class="string">&#x27;inherit&#x27;</span>,</span><br><span class="line">                <span class="attr">cwd</span>:process.<span class="title function_">cwd</span>()</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">if</span>(ret !== <span class="number">0</span>)&#123;<span class="comment">//执行成功</span></span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;依赖安装过程失败&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> ret</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">checkCommand</span>(<span class="params">cmd</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable constant_">WHITE_COMMAND</span>.<span class="title function_">includes</span>(cmd))&#123;</span><br><span class="line">            <span class="keyword">return</span> cmd</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>4-5 项目名称自动格式化功能开发</strong></p><blockquote><p>本节使用了kebab-case这个库，将手动填入的项目名称保存在projectInfo中，以供后续package.json中的ejs渲染使用。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//生成className</span></span><br><span class="line"><span class="keyword">if</span>(projectInfo.<span class="property">projectName</span>)&#123;</span><br><span class="line">  projectInfo.<span class="property">name</span> = projectInfo.<span class="property">projectName</span></span><br><span class="line">  projectInfo.<span class="property">className</span> = <span class="built_in">require</span>(<span class="string">&#x27;kebab-case&#x27;</span>)(projectInfo.<span class="property">projectName</span>).<span class="title function_">replace</span>(<span class="regexp">/^-/</span>,<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(projectInfo.<span class="property">projectVersion</span>)&#123;</span><br><span class="line">  projectInfo.<span class="property">version</span> = projectInfo.<span class="property">projectVersion</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4-6 本章核心：ejs动态渲染项目模板</strong></p><blockquote><ul><li>首先将vue2模版中package.json文件中的name以及version使用&lt;%= className%&gt;和&lt;%= version%&gt;替代，并发布新的版本至npm。</li><li>commands/init模块安装 ejs和glob库。</li><li>核心代码如下(在4-4节中依赖安装前，ejs动态渲染)</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">ejsRender</span>(<span class="params">options</span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> dir = process.<span class="title function_">cwd</span>()</span><br><span class="line">  <span class="keyword">const</span> projectInfo = <span class="variable language_">this</span>.<span class="property">projectInfo</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="title function_">glob</span>(<span class="string">&#x27;**&#x27;</span>,&#123;</span><br><span class="line">      <span class="attr">cwd</span>:dir,</span><br><span class="line">      <span class="attr">ignore</span>:options.<span class="property">ignore</span> || <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="attr">nodir</span>:<span class="literal">true</span>   <span class="comment">//不输出文件夹，只输出文件</span></span><br><span class="line">    &#125;,<span class="function">(<span class="params">err,files</span>) =&gt;</span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(err)&#123;</span><br><span class="line">        <span class="title function_">reject</span>(err)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="title class_">Promise</span>.<span class="title function_">all</span>(files.<span class="title function_">map</span>(<span class="function"><span class="params">file</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">const</span> filePath = path.<span class="title function_">join</span>(dir,file)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>( <span class="function">(<span class="params">resolve1,reject1</span>) =&gt;</span> &#123;</span><br><span class="line">          ejs.<span class="title function_">renderFile</span>( filePath,projectInfo,&#123;&#125;,<span class="function">(<span class="params">err,result</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(err)&#123;</span><br><span class="line">              <span class="title function_">reject1</span>(err)</span><br><span class="line">            &#125;</span><br><span class="line">            fse.<span class="title function_">writeFileSync</span>(filePath,result)</span><br><span class="line">            <span class="title function_">resolve1</span>(result)</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)).<span class="title function_">then</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">        <span class="title function_">resolve</span>()</span><br><span class="line">      &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="title function_">reject</span>(err)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4-7 init命令直接传入项目名称功能支持</strong></p><blockquote><p>本节完成的是  对命令行中传入项目名称的一个支持<br>通过判断脚手架命令是否传入项目名称，对inquirer中的prompt进行动态push。</p></blockquote><h2 id="第五章-组件模板开发及脚手架组件初始化功能支持">第五章 组件模板开发及脚手架组件初始化功能支持</h2><p><strong>5-1 慕课乐高组件库模板开发</strong></p><blockquote><p>维护组件库发布至npm，然后在mongodb数据库中进行配置。</p></blockquote><p><strong>5-2 项目和组件模板数据隔离+动态配置ejs ignore</strong></p><p>这部分完整代码如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//1.选取创建项目或组件</span></span><br><span class="line"><span class="keyword">const</span> &#123; type &#125; = <span class="keyword">await</span> inquirer.<span class="title function_">prompt</span>(&#123;</span><br><span class="line">  <span class="attr">type</span>:<span class="string">&#x27;list&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>:<span class="string">&#x27;type&#x27;</span>,</span><br><span class="line">  <span class="attr">message</span>:<span class="string">&#x27;请选择初始化类型&#x27;</span>, </span><br><span class="line">  <span class="attr">default</span>:<span class="variable constant_">TYPE_PROJECT</span>,</span><br><span class="line">  <span class="attr">choices</span>: [&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;项目&#x27;</span>,</span><br><span class="line">    <span class="attr">value</span>: <span class="variable constant_">TYPE_PROJECT</span>,</span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;组件&#x27;</span>,</span><br><span class="line">    <span class="attr">value</span>: <span class="variable constant_">TYPE_COMPONENT</span>,</span><br><span class="line">  &#125;]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数据隔离核心代码</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">template</span> = <span class="variable language_">this</span>.<span class="property">template</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">template</span> =&gt;</span>template.<span class="property">tag</span> &amp;&amp; template.<span class="property">tag</span>.<span class="title function_">includes</span>(type))</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> title =  type === <span class="variable constant_">TYPE_PROJECT</span> ? <span class="string">&#x27;项目&#x27;</span>:<span class="string">&#x27;组件&#x27;</span></span><br><span class="line"><span class="keyword">const</span> projectNamePrompt = &#123;</span><br><span class="line">  <span class="attr">type</span>:<span class="string">&#x27;input&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>:<span class="string">&#x27;projectName&#x27;</span>,</span><br><span class="line">  <span class="attr">message</span>:<span class="string">`请输入<span class="subst">$&#123;title&#125;</span>的名称`</span>,</span><br><span class="line">  <span class="attr">default</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">validate</span>:<span class="keyword">function</span>(<span class="params">v</span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> done = <span class="variable language_">this</span>.<span class="title function_">async</span>()</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(!<span class="title function_">isValidName</span>(v))&#123;</span><br><span class="line">        <span class="title function_">done</span>(<span class="string">`请输入合法的<span class="subst">$&#123;title&#125;</span>名称`</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="title function_">done</span>(<span class="literal">null</span>,<span class="literal">true</span>)</span><br><span class="line">    &#125;, <span class="number">0</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">filter</span>:<span class="keyword">function</span>(<span class="params">v</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> v</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> projectPrompt = []</span><br><span class="line"><span class="keyword">if</span> (!isProjectNameValid) &#123;</span><br><span class="line">  projectPrompt.<span class="title function_">push</span>(projectNamePrompt);</span><br><span class="line">&#125;</span><br><span class="line">projectPrompt.<span class="title function_">push</span>(&#123;</span><br><span class="line">  <span class="attr">type</span>:<span class="string">&#x27;input&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>:<span class="string">&#x27;projectVersion&#x27;</span>,</span><br><span class="line">  <span class="attr">default</span>:<span class="string">&#x27;1.0.0&#x27;</span>,</span><br><span class="line">  <span class="attr">message</span>:<span class="string">`请输入<span class="subst">$&#123;title&#125;</span>版本号`</span>,</span><br><span class="line">  <span class="attr">validate</span>:<span class="keyword">function</span>(<span class="params">v</span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> done = <span class="variable language_">this</span>.<span class="title function_">async</span>();</span><br><span class="line">    <span class="comment">// Do async stuff</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!(!!semver.<span class="title function_">valid</span>(v))) &#123;</span><br><span class="line">        <span class="title function_">done</span>(<span class="string">`请输入合法的<span class="subst">$&#123;title&#125;</span>版本号`</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="title function_">done</span>(<span class="literal">null</span>, <span class="literal">true</span>);</span><br><span class="line">    &#125;, <span class="number">0</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">filter</span>:<span class="keyword">function</span>(<span class="params">v</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(semver.<span class="title function_">valid</span>(v))&#123;</span><br><span class="line">      <span class="keyword">return</span> semver.<span class="title function_">valid</span>(v)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> v</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;,&#123;</span><br><span class="line">  <span class="attr">type</span>:<span class="string">&#x27;list&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>:<span class="string">&#x27;projectTemplate&#x27;</span>,</span><br><span class="line">  <span class="attr">message</span>:<span class="string">`请选择<span class="subst">$&#123;title&#125;</span>模板`</span>,</span><br><span class="line">  <span class="attr">choices</span>: <span class="variable language_">this</span>.<span class="title function_">createTemplateChoice</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>5-3 获取组件信息功能开发</strong></p><p>完整核心代码如下,添加了 descriptionPrompt</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (type === <span class="variable constant_">TYPE_COMPONENT</span>)&#123;</span><br><span class="line">  <span class="comment">// 获取组件的基本信息</span></span><br><span class="line">  <span class="keyword">const</span> descriptionPrompt = &#123;</span><br><span class="line">    <span class="attr">type</span>:<span class="string">&#x27;input&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;componentDescription&#x27;</span>,</span><br><span class="line">    <span class="attr">message</span>:<span class="string">&#x27;请输入组件描述信息&#x27;</span>,</span><br><span class="line">    <span class="attr">default</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">validate</span>:<span class="keyword">function</span>(<span class="params">v</span>)&#123;</span><br><span class="line">      <span class="keyword">const</span> done = <span class="variable language_">this</span>.<span class="title function_">async</span>()</span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(!v)&#123;</span><br><span class="line">          <span class="title function_">done</span>(<span class="string">&#x27;请输入组件描述信息&#x27;</span>)</span><br><span class="line">          <span class="keyword">return</span> </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">done</span>(<span class="literal">null</span>,<span class="literal">true</span>)</span><br><span class="line">      &#125;, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  projectPrompt.<span class="title function_">push</span>(descriptionPrompt)</span><br><span class="line">  <span class="keyword">const</span> component = <span class="keyword">await</span> inquirer.<span class="title function_">prompt</span>(projectPrompt)</span><br><span class="line">  projectInfo = &#123;</span><br><span class="line">    ...projectInfo,</span><br><span class="line">    type,</span><br><span class="line">    ...component</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">……</span><br><span class="line"><span class="keyword">if</span>(projectInfo.<span class="property">componentDescription</span>)&#123;</span><br><span class="line">  projectInfo.<span class="property">description</span> = projectInfo.<span class="property">componentDescription</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>5-4 解决组件库初始化过程中各种工程问题</strong></p><blockquote><p>慕课乐高组件库，在发布到npm包时，安装出现问题，问题原因是 package.json中，需要将<br>“files”:[‘dist’]  这行代码去除，这是因为files这里限定了上传发布到npm后只有dist这个目录。</p></blockquote><h2 id="第六章-脚手架自定义初始化项目模板功能开发">第六章 脚手架自定义初始化项目模板功能开发</h2><p><strong>6-1 自定义项目模板开发</strong></p><blockquote><ul><li>发布自定义模版 <a href="https://www.npmjs.com/package/liugezhou-cli-dev-template-custom-vue2">liugezhou-cli-dev-template-custom-vue2</a></li><li>mongodb中配置自定义模版数据。</li></ul></blockquote><p><strong>6-2 自定义模板执行逻辑开发</strong><br><strong>6-3 自定义模板上线</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">installCustomTemplate</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="comment">//查询自定义模版的入口文件</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">templateNpm</span>.<span class="title function_">exists</span>())&#123;</span><br><span class="line">    <span class="keyword">const</span> rootFile = <span class="variable language_">this</span>.<span class="property">templateNpm</span>.<span class="title function_">getRootFilePath</span>()</span><br><span class="line">    <span class="keyword">if</span>(fs.<span class="title function_">existsSync</span>(rootFile))&#123;</span><br><span class="line">      log.<span class="title function_">verbose</span>(<span class="string">&#x27;开始执行自定义模板&#x27;</span>)</span><br><span class="line">      <span class="keyword">const</span> templatePath = path.<span class="title function_">resolve</span>(<span class="variable language_">this</span>.<span class="property">templateNpm</span>.<span class="property">cacheFilePath</span>, <span class="string">&#x27;template&#x27;</span>);</span><br><span class="line">      <span class="keyword">const</span> options = &#123;</span><br><span class="line">        <span class="attr">templateInfo</span>: <span class="variable language_">this</span>.<span class="property">templateInfo</span>,</span><br><span class="line">        <span class="attr">projectInfo</span>: <span class="variable language_">this</span>.<span class="property">projectInfo</span>,</span><br><span class="line">        <span class="attr">sourcePath</span>: templatePath,</span><br><span class="line">        <span class="attr">targetPath</span>: process.<span class="title function_">cwd</span>(),</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="keyword">const</span> code = <span class="string">`require(&#x27;<span class="subst">$&#123;rootFile&#125;</span>&#x27;)(<span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(options)&#125;</span>)`</span></span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">execAsync</span>(<span class="string">&#x27;node&#x27;</span>,  [<span class="string">&#x27;-e&#x27;</span>, code], &#123;<span class="attr">stdio</span>:<span class="string">&#x27;inherit&#x27;</span>,<span class="attr">cwd</span>: process.<span class="title function_">cwd</span>()&#125;)</span><br><span class="line">      log.<span class="title function_">success</span>(<span class="string">&#x27;自定义模版安装成功&#x27;</span>)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;自定义模板入口文件不存在&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第七章-本周加餐：ejs-库源码解析-——-彻底搞懂模板动态渲染原理">第七章 本周加餐：ejs 库源码解析 —— 彻底搞懂模板动态渲染原理</h2><p><strong>7-1 ejs.compile执行流程分析</strong></p><blockquote><p>ejs模版渲染的思路值得我们学习，于是我们就开始了了ejs的源码的学习。</p></blockquote><p><a href="https://www.processon.com/view/link/6041c047e401fd641ae13fc6">点击查看【processon】</a></p><blockquote><p>本节内容较简单，我们打开webstore，从下面的代码开始调试（11行 打断点）</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ejs = <span class="built_in">require</span>(<span class="string">&#x27;ejs&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> html = <span class="string">&#x27;&lt;div&gt;&lt;%= user.name %&gt;&lt;/div&gt;&#x27;</span></span><br><span class="line"><span class="keyword">const</span> options = &#123;&#125;</span><br><span class="line"><span class="keyword">const</span> data = &#123;</span><br><span class="line"><span class="attr">user</span>:&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;liugezhou&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> template = ejs.<span class="title function_">compile</span>(html,options)</span><br><span class="line"><span class="keyword">const</span> compiletemplate = <span class="title function_">template</span>(data)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ejs.js</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">compile</span> = <span class="keyword">function</span> <span class="title function_">compile</span>(<span class="params">template, opts</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> templ;</span><br><span class="line">  <span class="keyword">if</span> (opts &amp;&amp; opts.<span class="property">scope</span>) &#123;   <span class="comment">//我们的opts传进来的参数为空，暂不看此判断逻辑</span></span><br><span class="line">    ……</span><br><span class="line">  &#125;</span><br><span class="line">  templ = <span class="keyword">new</span> <span class="title class_">Template</span>(template, opts);</span><br><span class="line">  <span class="keyword">return</span> templ.<span class="title function_">compile</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>templ = new Template(template,opts)   我们继续进去源码，重要的有两点</p><ul><li>this.templateText = text</li><li>this.regex = this.createRegex()</li></ul><p>下节开始 templ.compile()</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Template</span>(<span class="params">text, opts</span>) &#123;</span><br><span class="line">  opts = opts || &#123;&#125;;</span><br><span class="line">  <span class="keyword">var</span> options = &#123;&#125;;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">templateText</span> = text;    <span class="comment">//⭐️⭐️⭐️</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">mode</span> = <span class="literal">null</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">truncate</span> = <span class="literal">false</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">currentLine</span> = <span class="number">1</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">source</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  options.<span class="property">client</span> = opts.<span class="property">client</span> || <span class="literal">false</span>;</span><br><span class="line">  options.<span class="property">escapeFunction</span> = opts.<span class="property">escape</span> || opts.<span class="property">escapeFunction</span> || utils.<span class="property">escapeXML</span>;</span><br><span class="line">  options.<span class="property">compileDebug</span> = opts.<span class="property">compileDebug</span> !== <span class="literal">false</span>;</span><br><span class="line">  options.<span class="property">debug</span> = !!opts.<span class="property">debug</span>;</span><br><span class="line">  options.<span class="property">filename</span> = opts.<span class="property">filename</span>;</span><br><span class="line">  options.<span class="property">openDelimiter</span> = opts.<span class="property">openDelimiter</span> || <span class="built_in">exports</span>.<span class="property">openDelimiter</span> || _DEFAULT_OPEN_DELIMITER;</span><br><span class="line">  options.<span class="property">closeDelimiter</span> = opts.<span class="property">closeDelimiter</span> || <span class="built_in">exports</span>.<span class="property">closeDelimiter</span> || _DEFAULT_CLOSE_DELIMITER;</span><br><span class="line">  options.<span class="property">delimiter</span> = opts.<span class="property">delimiter</span> || <span class="built_in">exports</span>.<span class="property">delimiter</span> || _DEFAULT_DELIMITER;</span><br><span class="line">  options.<span class="property">strict</span> = opts.<span class="property">strict</span> || <span class="literal">false</span>;</span><br><span class="line">  options.<span class="property">context</span> = opts.<span class="property">context</span>;</span><br><span class="line">  options.<span class="property">cache</span> = opts.<span class="property">cache</span> || <span class="literal">false</span>;</span><br><span class="line">  options.<span class="property">rmWhitespace</span> = opts.<span class="property">rmWhitespace</span>;</span><br><span class="line">  options.<span class="property">root</span> = opts.<span class="property">root</span>;</span><br><span class="line">  options.<span class="property">includer</span> = opts.<span class="property">includer</span>;</span><br><span class="line">  options.<span class="property">outputFunctionName</span> = opts.<span class="property">outputFunctionName</span>;</span><br><span class="line">  options.<span class="property">localsName</span> = opts.<span class="property">localsName</span> || <span class="built_in">exports</span>.<span class="property">localsName</span> || _DEFAULT_LOCALS_NAME;</span><br><span class="line">  options.<span class="property">views</span> = opts.<span class="property">views</span>;</span><br><span class="line">  options.<span class="property">async</span> = opts.<span class="property">async</span>;</span><br><span class="line">  options.<span class="property">destructuredLocals</span> = opts.<span class="property">destructuredLocals</span>;</span><br><span class="line">  options.<span class="property">legacyInclude</span> = <span class="keyword">typeof</span> opts.<span class="property">legacyInclude</span> != <span class="string">&#x27;undefined&#x27;</span> ? !!opts.<span class="property">legacyInclude</span> : <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (options.<span class="property">strict</span>) &#123;</span><br><span class="line">    options.<span class="property">_with</span> = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    options.<span class="property">_with</span> = <span class="keyword">typeof</span> opts.<span class="property">_with</span> != <span class="string">&#x27;undefined&#x27;</span> ? opts.<span class="property">_with</span> : <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">opts</span> = options;</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">regex</span> = <span class="variable language_">this</span>.<span class="title function_">createRegex</span>();  <span class="comment">// ⭐️⭐️⭐️：该方法是对ejs标识符号%与开始结尾符号&lt;&gt;，进行定制化操作</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>7-2 深入讲解ejs编译原理</strong></p><blockquote><p>上一节我们看到了 return templet.compile()处，源代码如下</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">compile</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">var</span> src;</span><br><span class="line">  <span class="keyword">var</span> fn;</span><br><span class="line">  <span class="keyword">var</span> opts = <span class="variable language_">this</span>.<span class="property">opts</span>;</span><br><span class="line">  <span class="keyword">var</span> prepended = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">var</span> appended = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">var</span> escapeFn = opts.<span class="property">escapeFunction</span>;</span><br><span class="line">  <span class="keyword">var</span> ctor;</span><br><span class="line">  <span class="keyword">var</span> sanitizedFilename = opts.<span class="property">filename</span> ? <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(opts.<span class="property">filename</span>) : <span class="string">&#x27;undefined&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">source</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">generateSource</span>();   <span class="comment">//⭐️⭐️⭐️⭐️⭐️</span></span><br><span class="line">    prepended +=</span><br><span class="line">      <span class="string">&#x27;  var __output = &quot;&quot;;\n&#x27;</span> +</span><br><span class="line">      <span class="string">&#x27;  function __append(s) &#123; if (s !== undefined &amp;&amp; s !== null) __output += s &#125;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (opts.<span class="property">outputFunctionName</span>) &#123;</span><br><span class="line">      prepended += <span class="string">&#x27;  var &#x27;</span> + opts.<span class="property">outputFunctionName</span> + <span class="string">&#x27; = __append;&#x27;</span> + <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (opts.<span class="property">destructuredLocals</span> &amp;&amp; opts.<span class="property">destructuredLocals</span>.<span class="property">length</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> destructuring = <span class="string">&#x27;  var __locals = (&#x27;</span> + opts.<span class="property">localsName</span> + <span class="string">&#x27; || &#123;&#125;),\n&#x27;</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; opts.<span class="property">destructuredLocals</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> name = opts.<span class="property">destructuredLocals</span>[i];</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">          destructuring += <span class="string">&#x27;,\n  &#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        destructuring += name + <span class="string">&#x27; = __locals.&#x27;</span> + name;</span><br><span class="line">      &#125;</span><br><span class="line">      prepended += destructuring + <span class="string">&#x27;;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (opts.<span class="property">_with</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">      prepended +=  <span class="string">&#x27;  with (&#x27;</span> + opts.<span class="property">localsName</span> + <span class="string">&#x27; || &#123;&#125;) &#123;&#x27;</span> + <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">      appended += <span class="string">&#x27;  &#125;&#x27;</span> + <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    appended += <span class="string">&#x27;  return __output;&#x27;</span> + <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">source</span> = prepended + <span class="variable language_">this</span>.<span class="property">source</span> + appended;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (opts.<span class="property">compileDebug</span>) &#123;</span><br><span class="line">    src = <span class="string">&#x27;var __line = 1&#x27;</span> + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">      + <span class="string">&#x27;  , __lines = &#x27;</span> + <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="variable language_">this</span>.<span class="property">templateText</span>) + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">      + <span class="string">&#x27;  , __filename = &#x27;</span> + sanitizedFilename + <span class="string">&#x27;;&#x27;</span> + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">      + <span class="string">&#x27;try &#123;&#x27;</span> + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">      + <span class="variable language_">this</span>.<span class="property">source</span></span><br><span class="line">      + <span class="string">&#x27;&#125; catch (e) &#123;&#x27;</span> + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">      + <span class="string">&#x27;  rethrow(e, __lines, __filename, __line, escapeFn);&#x27;</span> + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">      + <span class="string">&#x27;&#125;&#x27;</span> + <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    src = <span class="variable language_">this</span>.<span class="property">source</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (opts.<span class="property">client</span>) &#123;</span><br><span class="line">    src = <span class="string">&#x27;escapeFn = escapeFn || &#x27;</span> + escapeFn.<span class="title function_">toString</span>() + <span class="string">&#x27;;&#x27;</span> + <span class="string">&#x27;\n&#x27;</span> + src;</span><br><span class="line">    <span class="keyword">if</span> (opts.<span class="property">compileDebug</span>) &#123;</span><br><span class="line">      src = <span class="string">&#x27;rethrow = rethrow || &#x27;</span> + rethrow.<span class="title function_">toString</span>() + <span class="string">&#x27;;&#x27;</span> + <span class="string">&#x27;\n&#x27;</span> + src;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (opts.<span class="property">strict</span>) &#123;</span><br><span class="line">    src = <span class="string">&#x27;&quot;use strict&quot;;\n&#x27;</span> + src;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (opts.<span class="property">debug</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(src);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (opts.<span class="property">compileDebug</span> &amp;&amp; opts.<span class="property">filename</span>) &#123;</span><br><span class="line">    src = src + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">      + <span class="string">&#x27;//# sourceURL=&#x27;</span> + sanitizedFilename + <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (opts.<span class="property">async</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        ctor = (<span class="keyword">new</span> <span class="title class_">Function</span>(<span class="string">&#x27;return (async function()&#123;&#125;).constructor;&#x27;</span>))();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> <span class="title class_">SyntaxError</span>) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;This environment does not support async/await&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">throw</span> e;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      ctor = <span class="title class_">Function</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    fn = <span class="keyword">new</span> <span class="title function_">ctor</span>(opts.<span class="property">localsName</span> + <span class="string">&#x27;, escapeFn, include, rethrow&#x27;</span>, src);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">    <span class="comment">// istanbul ignore else</span></span><br><span class="line">    <span class="keyword">if</span> (e <span class="keyword">instanceof</span> <span class="title class_">SyntaxError</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (opts.<span class="property">filename</span>) &#123;</span><br><span class="line">        e.<span class="property">message</span> += <span class="string">&#x27; in &#x27;</span> + opts.<span class="property">filename</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      e.<span class="property">message</span> += <span class="string">&#x27; while compiling ejs\n\n&#x27;</span>;</span><br><span class="line">      e.<span class="property">message</span> += <span class="string">&#x27;If the above error is not helpful, you may want to try EJS-Lint:\n&#x27;</span>;</span><br><span class="line">      e.<span class="property">message</span> += <span class="string">&#x27;https://github.com/RyanZim/EJS-Lint&#x27;</span>;</span><br><span class="line">      <span class="keyword">if</span> (!opts.<span class="property">async</span>) &#123;</span><br><span class="line">        e.<span class="property">message</span> += <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        e.<span class="property">message</span> += <span class="string">&#x27;Or, if you meant to create an async function, pass `async: true` as an option.&#x27;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">throw</span> e;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> returnedFn = opts.<span class="property">client</span> ? fn : <span class="keyword">function</span> <span class="title function_">anonymous</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> include = <span class="keyword">function</span> (<span class="params">path, includeData</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> d = utils.<span class="title function_">shallowCopy</span>(&#123;&#125;, data);</span><br><span class="line">      <span class="keyword">if</span> (includeData) &#123;</span><br><span class="line">        d = utils.<span class="title function_">shallowCopy</span>(d, includeData);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">includeFile</span>(path, opts)(d);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> fn.<span class="title function_">apply</span>(opts.<span class="property">context</span>, [data || &#123;&#125;, escapeFn, include, rethrow]);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">if</span> (opts.<span class="property">filename</span> &amp;&amp; <span class="keyword">typeof</span> <span class="title class_">Object</span>.<span class="property">defineProperty</span> === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> filename = opts.<span class="property">filename</span>;</span><br><span class="line">    <span class="keyword">var</span> basename = path.<span class="title function_">basename</span>(filename, path.<span class="title function_">extname</span>(filename));</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(returnedFn, <span class="string">&#x27;name&#x27;</span>, &#123;</span><br><span class="line">        <span class="attr">value</span>: basename,</span><br><span class="line">        <span class="attr">writable</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">enumerable</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">configurable</span>: <span class="literal">true</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;<span class="comment">/* ignore */</span>&#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> returnedFn;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>generateSource：（最终拿到结果this.source）</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">generateSource</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">   <span class="keyword">var</span> opts = <span class="variable language_">this</span>.<span class="property">opts</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">// Slurp spaces and tabs before &lt;%_ and after _%&gt;</span></span><br><span class="line">   <span class="variable language_">this</span>.<span class="property">templateText</span> =</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">templateText</span>.<span class="title function_">replace</span>(<span class="regexp">/[ \t]*&lt;%_/gm</span>, <span class="string">&#x27;&lt;%_&#x27;</span>).<span class="title function_">replace</span>(<span class="regexp">/_%&gt;[ \t]*/gm</span>, <span class="string">&#x27;_%&gt;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> self = <span class="variable language_">this</span>;</span><br><span class="line">   <span class="keyword">var</span> matches = <span class="variable language_">this</span>.<span class="title function_">parseTemplateText</span>();    <span class="comment">//⭐️⭐️⭐️⭐️⭐️</span></span><br><span class="line">   <span class="keyword">var</span> d = <span class="variable language_">this</span>.<span class="property">opts</span>.<span class="property">delimiter</span>;</span><br><span class="line">   <span class="keyword">var</span> o = <span class="variable language_">this</span>.<span class="property">opts</span>.<span class="property">openDelimiter</span>;</span><br><span class="line">   <span class="keyword">var</span> c = <span class="variable language_">this</span>.<span class="property">opts</span>.<span class="property">closeDelimiter</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (matches &amp;&amp; matches.<span class="property">length</span>) &#123;</span><br><span class="line">     matches.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">line, index</span>) &#123;   <span class="comment">//⭐️⭐️⭐️⭐️⭐️</span></span><br><span class="line">       <span class="keyword">var</span> closing;</span><br><span class="line">       <span class="keyword">if</span> ( line.<span class="title function_">indexOf</span>(o + d) === <span class="number">0</span>        <span class="comment">// If it is a tag</span></span><br><span class="line">         &amp;&amp; line.<span class="title function_">indexOf</span>(o + d + d) !== <span class="number">0</span>) &#123; <span class="comment">// and is not escaped</span></span><br><span class="line">         closing = matches[index + <span class="number">2</span>];</span><br><span class="line">         <span class="keyword">if</span> (!(closing == d + c || closing == <span class="string">&#x27;-&#x27;</span> + d + c || closing == <span class="string">&#x27;_&#x27;</span> + d + c)) &#123;</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Could not find matching close tag for &quot;&#x27;</span> + line + <span class="string">&#x27;&quot;.&#x27;</span>);</span><br><span class="line">         &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       self.<span class="title function_">scanLine</span>(line); <span class="comment">////⭐️⭐️⭐️⭐️⭐️</span></span><br><span class="line">     &#125;);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"> &#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>7-3 动态生成Function+with用法讲解</strong></p><blockquote><p>上一节代码没有继续追踪，根据自己的源码一步一步调试，生一节调试到的代码为：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ejs.js  line662</span></span><br><span class="line">fn = <span class="keyword">new</span> <span class="title function_">ctor</span>(opts.<span class="property">localsName</span> + <span class="string">&#x27;, escapeFn, include, rethrow&#x27;</span>, src);</span><br></pre></td></tr></table></figure><blockquote><p>代码讲解：<br>const ctor = Function;<br>const fn = new ctor(‘a,b’,‘console.log(a,b)’)<br>fn(1,2)</p></blockquote><blockquote><p>我们回到7-1节中基础代码，在optons加入参数debug为true，控制台输出内容为：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> __line = <span class="number">1</span></span><br><span class="line">  , __lines = <span class="string">&quot;&lt;div&gt;&lt;%= user.name%&gt;&lt;/div&gt;&quot;</span></span><br><span class="line">  , __filename = <span class="literal">undefined</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> __output = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">__append</span>(<span class="params">s</span>) &#123; <span class="keyword">if</span> (s !== <span class="literal">undefined</span> &amp;&amp; s !== <span class="literal">null</span>) __output += s &#125;</span><br><span class="line">  <span class="keyword">with</span> (locals || &#123;&#125;) &#123;</span><br><span class="line">    ; <span class="title function_">__append</span>(<span class="string">&quot;&lt;div&gt;&quot;</span>)</span><br><span class="line">    ; <span class="title function_">__append</span>(escapeFn( user.<span class="property">name</span>))</span><br><span class="line">    ; <span class="title function_">__append</span>(<span class="string">&quot;&lt;/div&gt;&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> __output;</span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">  <span class="title function_">rethrow</span>(e, __lines, __filename, __line, escapeFn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>通过代码，我们看到了‘with’，现在前端with的使用已经很不常见且不推荐使用了，这里简单了解下：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ctx = &#123;</span><br><span class="line"><span class="attr">user</span>:&#123;</span><br><span class="line">  <span class="attr">name</span>:<span class="string">&#x27;liugezhou&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="title function_">with</span>(<span class="params">ctx</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(user.<span class="property">name</span>)   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>7-4 ejs compile函数执行流程分析</strong></p><blockquote><p>apply简要解释</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">a,b,c</span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a,b,c)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">a</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">test</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>) <span class="comment">//通常调用   // 1 2 3</span></span><br><span class="line"></span><br><span class="line">test.<span class="title function_">apply</span>(&#123;<span class="attr">a</span>:<span class="string">&#x27;applt&#x27;</span>&#125;,[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]) <span class="comment">// 2 3 4 </span></span><br><span class="line">test.<span class="title function_">call</span>(&#123;<span class="attr">a</span>:<span class="string">&#x27;call&#x27;</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)    <span class="comment">// 2 3 4</span></span><br></pre></td></tr></table></figure><p><strong>7-5 ejs.render和renderFile原理讲解</strong></p><p>ejs.render的代码执行流程为：</p><blockquote><ul><li>const renderTemplate = ejs.render(html,data,options)</li><li>exports.render ==&gt; handleCache(opts, template)</li><li>handleCache ==&gt;  return  exports.compile(template, options);</li><li>handleCache(opts, template)(data)</li></ul></blockquote><p>renderFile的原理讲解</p><blockquote><ol><li>const renderFile = ejs.renderFile(<strong>path</strong>.resolve(__dirname,‘template.html’),data,options)</li><li>exports.renderFile</li><li>tryHandleCache(opts, data, cb)</li><li>handleCache(options)(data)</li></ol></blockquote><h2 id="第八章-加餐：require源码解析，彻底搞懂-npm-模块加载原理">第八章 加餐：require源码解析，彻底搞懂 npm 模块加载原理</h2><p><strong>8-1 require源码执行流程分析</strong></p><ul><li><strong>require使用场景</strong></li></ul><p>**</p><blockquote><ul><li>加载模块类型<ul><li>加载内置模块： require(‘fs’)</li><li>加载node_modules模块：require(‘ejs’)</li><li>加载本地模块：require(‘./utils’)</li></ul></li><li>支持加载文件<ul><li>js</li><li>json</li><li>node</li><li>mjs</li><li>加载其它类型</li></ul></li></ul></blockquote><ul><li><strong>require执行流程</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/6-1.2gu4krgoga40.webp" alt="6-1"></p><blockquote><p>我们在调试这行代码的时候，在执行栈中可以看到，之前也执行了很多代码，这里的流程以及上面分析的使用场景，我们可以先引出一些思考：</p><ul><li>CommonJS模块的加载流程</li><li>require如何加载内置模块？   loadNativeModule</li><li>require如何加载node_modules模块？</li><li>require为什么会将非js/json/node文件视为js进行加载</li></ul></blockquote><ul><li>require源码</li></ul><blockquote><ol><li>我们从  require(‘./ejs’)  这行代码在webStorm中开始调试。（点击step into ）</li><li>打开 Scripts --&gt; no domain --&gt; internal --&gt; modules --&gt; cjs --&gt;  helpers.js</li><li>return mod.require(path);   ----&gt; line of 77 [helpers.js]</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/6-2.ai0pdvjiq4o.webp" alt="6-2"></p><blockquote><ol><li><p>这里的mod就是指Module对象，调试后每个字段含义为：</p><ol><li>id：源码文件路径</li><li>path:源码文件对应的文件夹,通过path.dirname(id)生成</li><li>exports：模块输出的内容，默认为{}</li><li>parent：父模块信息</li><li>filename:源码文件路径</li><li>loaded：是否已经加载完毕</li><li>children：子模块对象集合</li><li>paths：模块查询范围</li></ol></li><li><p>继续step into到下一步，进去Module对象的require方法</p></li><li><p>代码如下:   (校验参数为 string类型且不为空)</p></li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Module</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">require</span> = <span class="keyword">function</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="title function_">validateString</span>(id, <span class="string">&#x27;id&#x27;</span>);</span><br><span class="line">  <span class="keyword">if</span> (id === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_">ERR_INVALID_ARG_VALUE</span>(<span class="string">&#x27;id&#x27;</span>, id,</span><br><span class="line">                                    <span class="string">&#x27;must be a non-empty string&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  requireDepth++;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Module</span>.<span class="title function_">_load</span>(id, <span class="variable language_">this</span>, <span class="comment">/* isMain */</span> <span class="literal">false</span>);</span><br><span class="line">  &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    requireDepth--;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><ol start="5"><li>Module._load(id,this,false) :</li></ol><ul><li>id：传入的字符串</li><li>this：Module对象</li><li>isMain:flase表示加载的不是一个主模块</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Module</span>.<span class="property">_load</span> = <span class="keyword">function</span>(<span class="params">request, parent, isMain</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> relResolveCacheIdentifier;</span><br><span class="line">  <span class="keyword">if</span> (parent) &#123;</span><br><span class="line">    <span class="title function_">debug</span>(<span class="string">&#x27;Module._load REQUEST %s parent: %s&#x27;</span>, request, parent.<span class="property">id</span>);</span><br><span class="line">    relResolveCacheIdentifier = <span class="string">`<span class="subst">$&#123;parent.path&#125;</span>\x00<span class="subst">$&#123;request&#125;</span>`</span>;</span><br><span class="line">    <span class="keyword">const</span> filename = relativeResolveCache[relResolveCacheIdentifier];</span><br><span class="line">    <span class="keyword">if</span> (filename !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> cachedModule = <span class="title class_">Module</span>.<span class="property">_cache</span>[filename];</span><br><span class="line">      <span class="keyword">if</span> (cachedModule !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">        <span class="title function_">updateChildren</span>(parent, cachedModule, <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> cachedModule.<span class="property">exports</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">delete</span> relativeResolveCache[relResolveCacheIdentifier];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ✨✨✨ </span></span><br><span class="line">  <span class="comment">// Module._resolveFilename是require.resolve()的核心实现，在lerna源码讲解时学过--&gt; Module._resolveLookupPaths()</span></span><br><span class="line">  <span class="keyword">const</span> filename = <span class="title class_">Module</span>.<span class="title function_">_resolveFilename</span>(request, parent, isMain);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> cachedModule = <span class="title class_">Module</span>.<span class="property">_cache</span>[filename];</span><br><span class="line">  <span class="keyword">if</span> (cachedModule !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">    <span class="title function_">updateChildren</span>(parent, cachedModule, <span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">return</span> cachedModule.<span class="property">exports</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//✨✨✨</span></span><br><span class="line">  <span class="comment">// loadNativeModule 中 加载内置模块，进入该源码:通过NativeModule.map我们可以看到所有的内置模块</span></span><br><span class="line">  <span class="keyword">const</span> mod = <span class="title function_">loadNativeModule</span>(filename, request, experimentalModules);</span><br><span class="line">  <span class="keyword">if</span> (mod &amp;&amp; mod.<span class="property">canBeRequiredByUsers</span>) <span class="keyword">return</span> mod.<span class="property">exports</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 不是内置模块，new Module，其中children在new的时候完成</span></span><br><span class="line">  <span class="keyword">const</span> <span class="variable language_">module</span> = <span class="keyword">new</span> <span class="title class_">Module</span>(filename, parent);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (isMain) &#123;</span><br><span class="line">    process.<span class="property">mainModule</span> = <span class="variable language_">module</span>;</span><br><span class="line">    <span class="variable language_">module</span>.<span class="property">id</span> = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title class_">Module</span>.<span class="property">_cache</span>[filename] = <span class="variable language_">module</span>;</span><br><span class="line">  <span class="keyword">if</span> (parent !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">    relativeResolveCache[relResolveCacheIdentifier] = filename;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> threw = <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (enableSourceMaps) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable language_">module</span>.<span class="title function_">load</span>(filename);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="title function_">rekeySourceMap</span>(<span class="title class_">Module</span>.<span class="property">_cache</span>[filename], err);</span><br><span class="line">        <span class="keyword">throw</span> err; <span class="comment">/* node-do-not-add-exception-line */</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 🌟🌟🌟：模块加载</span></span><br><span class="line">      <span class="variable language_">module</span>.<span class="title function_">load</span>(filename);</span><br><span class="line">    &#125;</span><br><span class="line">    threw = <span class="literal">false</span>;</span><br><span class="line">  &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (threw) &#123;</span><br><span class="line">      <span class="keyword">delete</span> <span class="title class_">Module</span>.<span class="property">_cache</span>[filename];</span><br><span class="line">      <span class="keyword">if</span> (parent !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">        <span class="keyword">delete</span> relativeResolveCache[relResolveCacheIdentifier];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">module</span>.<span class="property">exports</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>8-2 require加载模块原理详解</strong></p><blockquote><p>上一节我们走到了Module._load(filename)</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Module</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">load</span> = <span class="keyword">function</span>(<span class="params">filename</span>) &#123;</span><br><span class="line">  <span class="title function_">debug</span>(<span class="string">&#x27;load %j for module %j&#x27;</span>, filename, <span class="variable language_">this</span>.<span class="property">id</span>);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">assert</span>(!<span class="variable language_">this</span>.<span class="property">loaded</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// this.filename为上一节new的时候定义的filename</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">filename</span> = filename;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 从这个文件的文件目录开始查到，拿到所有的可能有node_modules的路径</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">paths</span> = <span class="title class_">Module</span>.<span class="title function_">_nodeModulePaths</span>(path.<span class="title function_">dirname</span>(filename));</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 拿到该文件名的后缀：进入该方法可以看到定义的加载的后缀名有四种：js json node mjs</span></span><br><span class="line">  <span class="keyword">const</span> extension = <span class="title function_">findLongestRegisteredExtension</span>(filename);</span><br><span class="line">  <span class="comment">// allow .mjs to be overridden</span></span><br><span class="line">  <span class="keyword">if</span> (filename.<span class="title function_">endsWith</span>(<span class="string">&#x27;.mjs&#x27;</span>) &amp;&amp; !<span class="title class_">Module</span>.<span class="property">_extensions</span>[<span class="string">&#x27;.mjs&#x27;</span>]) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_">ERR_REQUIRE_ESM</span>(filename);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 这里就是require模块加载的真正逻辑，包含 js node json,源码内容见下</span></span><br><span class="line">  <span class="title class_">Module</span>.<span class="property">_extensions</span>[extension](<span class="variable language_">this</span>, filename);</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">loaded</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (experimentalModules) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title class_">ESMLoader</span> = asyncESM.<span class="property">ESMLoader</span>;</span><br><span class="line">    <span class="keyword">const</span> url = <span class="string">`<span class="subst">$&#123;pathToFileURL(filename)&#125;</span>`</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable language_">module</span> = <span class="title class_">ESMLoader</span>.<span class="property">moduleMap</span>.<span class="title function_">get</span>(url);</span><br><span class="line">    <span class="comment">// Create module entry at load time to snapshot exports correctly</span></span><br><span class="line">    <span class="keyword">const</span> <span class="built_in">exports</span> = <span class="variable language_">this</span>.<span class="property">exports</span>;</span><br><span class="line">    <span class="comment">// Called from cjs translator</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">module</span> !== <span class="literal">undefined</span> &amp;&amp; <span class="variable language_">module</span>.<span class="property">module</span> !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">module</span>.<span class="property">module</span>.<span class="title function_">getStatus</span>() &gt;= kInstantiated)</span><br><span class="line">        <span class="variable language_">module</span>.<span class="property">module</span>.<span class="title function_">setExport</span>(<span class="string">&#x27;default&#x27;</span>, <span class="built_in">exports</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// Preemptively cache</span></span><br><span class="line">      <span class="comment">// We use a function to defer promise creation for async hooks.</span></span><br><span class="line">      <span class="title class_">ESMLoader</span>.<span class="property">moduleMap</span>.<span class="title function_">set</span>(</span><br><span class="line">        url,</span><br><span class="line">        <span class="comment">// Module job creation will start promises.</span></span><br><span class="line">        <span class="comment">// We make it a function to lazily trigger those promises</span></span><br><span class="line">        <span class="comment">// for async hooks compatibility.</span></span><br><span class="line">        <span class="function">() =&gt;</span> <span class="keyword">new</span> <span class="title class_">ModuleJob</span>(<span class="title class_">ESMLoader</span>, url, <span class="function">() =&gt;</span></span><br><span class="line">          <span class="keyword">new</span> <span class="title class_">ModuleWrap</span>(url, <span class="literal">undefined</span>, [<span class="string">&#x27;default&#x27;</span>], <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">setExport</span>(<span class="string">&#x27;default&#x27;</span>, <span class="built_in">exports</span>);</span><br><span class="line">          &#125;)</span><br><span class="line">        , <span class="literal">false</span> <span class="comment">/* isMain */</span>, <span class="literal">false</span> <span class="comment">/* inspectBrk */</span>)</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Module._extensions<a href="this,filename">extension</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Module</span>.<span class="property">_extensions</span>[<span class="string">&#x27;.js&#x27;</span>] = <span class="keyword">function</span>(<span class="params"><span class="variable language_">module</span>, filename</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (filename.<span class="title function_">endsWith</span>(<span class="string">&#x27;.js&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">const</span> pkg = <span class="title function_">readPackageScope</span>(filename);</span><br><span class="line">    <span class="comment">// Function require shouldn&#x27;t be used in ES modules.</span></span><br><span class="line">    <span class="keyword">if</span> (pkg &amp;&amp; pkg.<span class="property">data</span> &amp;&amp; pkg.<span class="property">data</span>.<span class="property">type</span> === <span class="string">&#x27;module&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> parentPath = <span class="variable language_">module</span>.<span class="property">parent</span> &amp;&amp; <span class="variable language_">module</span>.<span class="property">parent</span>.<span class="property">filename</span>;</span><br><span class="line">      <span class="keyword">const</span> packageJsonPath = path.<span class="title function_">resolve</span>(pkg.<span class="property">path</span>, <span class="string">&#x27;package.json&#x27;</span>);</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_">ERR_REQUIRE_ESM</span>(filename, parentPath, packageJsonPath);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//content内容就是我们加载的ejs/index.js问的内容，这里返回一个字符串</span></span><br><span class="line">  <span class="keyword">const</span> content = fs.<span class="title function_">readFileSync</span>(filename, <span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 拿到ejs.index.js中的内容，Module原型链上执行_compile,代码如下：</span></span><br><span class="line">  <span class="variable language_">module</span>.<span class="title function_">_compile</span>(content, filename);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Module</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">_compile</span> = <span class="keyword">function</span>(<span class="params">content, filename</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span>  moduleURL;</span><br><span class="line">  <span class="keyword">let</span> redirects;</span><br><span class="line">  <span class="keyword">if</span> (manifest) &#123;</span><br><span class="line">    moduleURL = <span class="title function_">pathToFileURL</span>(filename);</span><br><span class="line">    redirects = manifest.<span class="title function_">getRedirector</span>(moduleURL);</span><br><span class="line">    manifest.<span class="title function_">assertIntegrity</span>(moduleURL, content);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">maybeCacheSourceMap</span>(filename, content, <span class="variable language_">this</span>);</span><br><span class="line">  <span class="keyword">const</span> compiledWrapper = <span class="title function_">wrapSafe</span>(filename, content, <span class="variable language_">this</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> inspectorWrapper = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title function_">getOptionValue</span>(<span class="string">&#x27;--inspect-brk&#x27;</span>) &amp;&amp; process.<span class="property">_eval</span> == <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!resolvedArgv) &#123;</span><br><span class="line">      <span class="comment">// We enter the repl if we&#x27;re not given a filename argument.</span></span><br><span class="line">      <span class="keyword">if</span> (process.<span class="property">argv</span>[<span class="number">1</span>]) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          resolvedArgv = <span class="title class_">Module</span>.<span class="title function_">_resolveFilename</span>(process.<span class="property">argv</span>[<span class="number">1</span>], <span class="literal">null</span>, <span class="literal">false</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">          <span class="comment">// We only expect this codepath to be reached in the case of a</span></span><br><span class="line">          <span class="comment">// preloaded module (it will fail earlier with the main entry)</span></span><br><span class="line">          <span class="title function_">assert</span>(<span class="title class_">ArrayIsArray</span>(<span class="title function_">getOptionValue</span>(<span class="string">&#x27;--require&#x27;</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        resolvedArgv = <span class="string">&#x27;repl&#x27;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set breakpoint on module start</span></span><br><span class="line">    <span class="keyword">if</span> (resolvedArgv &amp;&amp; !hasPausedEntry &amp;&amp; filename === resolvedArgv) &#123;</span><br><span class="line">      hasPausedEntry = <span class="literal">true</span>;</span><br><span class="line">      inspectorWrapper = <span class="title function_">internalBinding</span>(<span class="string">&#x27;inspector&#x27;</span>).<span class="property">callAndPauseOnStart</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> dirname = path.<span class="title function_">dirname</span>(filename);</span><br><span class="line">  <span class="keyword">const</span> <span class="built_in">require</span> = <span class="title function_">makeRequireFunction</span>(<span class="variable language_">this</span>, redirects);</span><br><span class="line">  <span class="keyword">let</span> result;</span><br><span class="line">  <span class="keyword">const</span> <span class="built_in">exports</span> = <span class="variable language_">this</span>.<span class="property">exports</span>;</span><br><span class="line">  <span class="keyword">const</span> thisValue = <span class="built_in">exports</span>;</span><br><span class="line">  <span class="keyword">const</span> <span class="variable language_">module</span> = <span class="variable language_">this</span>;</span><br><span class="line">  <span class="keyword">if</span> (requireDepth === <span class="number">0</span>) statCache = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">  <span class="keyword">if</span> (inspectorWrapper) &#123;</span><br><span class="line">    result = <span class="title function_">inspectorWrapper</span>(compiledWrapper, thisValue, <span class="built_in">exports</span>,</span><br><span class="line">                              <span class="built_in">require</span>, <span class="variable language_">module</span>, filename, dirname);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    result = compiledWrapper.<span class="title function_">call</span>(thisValue, <span class="built_in">exports</span>, <span class="built_in">require</span>, <span class="variable language_">module</span>,</span><br><span class="line">                                  filename, dirname);</span><br><span class="line">  &#125;</span><br><span class="line">  hasLoadedAnyUserCJSModule = <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">if</span> (requireDepth === <span class="number">0</span>) statCache = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>8-3 require加载内置模块和四种文件类型原理</strong></p><ol><li>加载内置模块：流程到 loadNativeModule结束。</li><li>加载node_modules模块：通过 Module._resolveFilename(request, parent, isMain)找到路径。</li><li>加载不存在模块：Module._resolveFilename中抛出异常。</li><li>加载.js/.json/.node/mjs文件：Module._extensions[‘XXX’ ]</li><li>加载其它文件后缀名：默认按js执行</li></ol><p><strong>8-4 require缓存机制解析和CommonJS加载主模块原理</strong></p><blockquote><p>连续加载两次同一个文件，require是如何处理的？<br>require的缓存机制，使得在第二次加载相同的文件时，不会再次执行源文件，直接从缓存中去拿。</p></blockquote><p>CommonJS加载主模块流程：</p><blockquote><ul><li>require(‘internal/modules/cjs/loader’).Module.runMain(process.argv[1]);</li><li>Module._load(main, null, true);</li><li>module.load(filename);</li><li>Module._extensions[extension](this, filename);</li><li>module._compile(content, filename);</li></ul></blockquote><p>与require的区别为：isMain为true，parent为null</p><p><strong>8-5 require原理总结和回顾</strong></p><blockquote><ul><li><code>relativeResolveCache[relResolveCacheIdentifier] </code>查询缓存路径</li><li><code>Module._cache[filename] </code>查询缓存模块</li><li><code>Module._resolveFilename </code>查询模块的真实路径</li><li><code>Module._resolveFilename </code>查询模块的真实路径</li><li><code>new Module </code>实例化 Module 对象</li><li><code>module.load(filename) </code>加载模块</li><li><code>findLongestRegisteredExtension </code>获取文件后缀</li><li><code>Module._extensions[extension](this, filename) </code>解析模块并执行模块</li><li><code>module._compile </code>编译模块代码</li><li><code>compileFunction </code>将模块代码生成可执行函数</li><li><code>exports, require, module, filename, dirname </code>生成入参</li><li><code>compiledWrapper.call </code>执行模块函数</li><li><code>return module.exports</code> 输出模块返回结果</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web架构之脚手架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web架构之脚手架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Week5-脚手架创建项目流程设计和开发</title>
      <link href="/Week5-%E8%84%9A%E6%89%8B%E6%9E%B6%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE%E6%B5%81%E7%A8%8B%E8%AE%BE%E8%AE%A1%E5%92%8C%E5%BC%80%E5%8F%91/"/>
      <url>/Week5-%E8%84%9A%E6%89%8B%E6%9E%B6%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE%E6%B5%81%E7%A8%8B%E8%AE%BE%E8%AE%A1%E5%92%8C%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章目录排版做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><p>本周代码提交分支至：<a href="https://github.com/liugezhou/cloudscope-cli/tree/lesson05">lesson05</a></p><h2 id="第一章：本周导学">第一章：本周导学</h2><p><strong>1-1本周整体内容介绍和学习方法</strong></p><p>收获</p><blockquote><ul><li>完成脚手架创建项目流程开发</li><li>命令行交互方法</li><li>服务端框架egg.js应用和API开发方法</li><li>egg.js集成mongodb</li></ul></blockquote><h2 id="第二章-脚手架项目创建功能架构设计">第二章 脚手架项目创建功能架构设计</h2><p><strong>2-1 脚手架创建项目功能架构背后的思考</strong><br>架构背后的思考</p><blockquote><ul><li><em>可扩展</em>：能够快速复用到不同团队，适用不同团队的差异。</li><li><em>低成本</em>：在不改动脚手架源码的基础上，新增模版，且新增模板的成本很低。</li><li><em>高性能</em>：控制存储空间，安装时充分利用Node多进程提升安装性能。</li></ul></blockquote><p><strong>2-2 项目创建前准备阶段架构设计</strong></p><p><strong>init</strong><br><strong>2-3 下载项目模板阶段架构设计</strong></p><p><strong>downloadTemplate</strong></p><h2 id="第三章-项目基本信息获取功能开发（详解命令行交互）">第三章 项目基本信息获取功能开发（详解命令行交互）</h2><p><strong>3-1 项目创建准备阶段——判断当前目录是否为空功能开发</strong></p><blockquote><p>本周代码从commands/init/lib/index.js文件中的exec方法开始启动。<br>根据上面的两小节分析，exec方法的代码逻辑为：</p><ul><li>准备阶段 【this.prepare()】</li><li>下载模版</li><li>安装模版(下周实现)</li></ul></blockquote><p>prepare方法的代码逻辑为：</p><blockquote><ol><li><em>判断当前目录是否为空</em></li><li><em>是否强制清空</em></li><li><em>选择创建项目或组件</em></li><li><em>获取项目/组件的基本信息</em></li></ol></blockquote><p>本节主要实现的代码是判断当前目录是否为空</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">prepare</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable language_">this</span>.<span class="title function_">isCwdEmpty</span>())&#123;</span><br><span class="line">    <span class="comment">// 询问是否继续创建</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">isCwdEmpty</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">const</span> localPath = process.<span class="title function_">cwd</span>();</span><br><span class="line"><span class="keyword">let</span> fileList = fs.<span class="title function_">readdirSync</span>(localPath)</span><br><span class="line"><span class="comment">// 文件过滤逻辑</span></span><br><span class="line">fileList = fileList.<span class="title function_">filter</span>(<span class="function">(<span class="params">file</span>)=&gt;</span>&#123;</span><br><span class="line">!file.<span class="title function_">startsWith</span>(<span class="string">&#x27;.&#x27;</span>) &amp;&amp; [<span class="string">&#x27;node_modules&#x27;</span>].<span class="property">indexOf</span> &lt;=<span class="number">0</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本节知识点：</p><blockquote><ul><li>拿到当前目录的方法一：<strong>process.cwd()</strong></li><li>拿到当前目录的方法二:  <strong>path.resolve(‘.’)</strong></li><li>path.resolve(__dirname):拿到的是当前执行代码的目录</li><li>读取当前目录下的文件列表：fs.readdirSync()</li></ul></blockquote><p><strong>3-2 inquirer基本用法和常用属性入门</strong></p><blockquote><p>继续写代码前，首先在<a href="https://github.com/liugezhou/liugezhou-cli-demo">测试项目</a>里体验inquirer</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> inquirer = <span class="built_in">require</span>(<span class="string">&#x27;inquirer&#x27;</span>)</span><br><span class="line">inquirer</span><br><span class="line">  .<span class="title function_">prompt</span>([&#123;</span><br><span class="line">    <span class="attr">type</span>:<span class="string">&#x27;input&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;name&#x27;</span>,</span><br><span class="line">    <span class="attr">message</span>:<span class="string">&#x27;your name:&#x27;</span>,</span><br><span class="line">    <span class="attr">default</span>:<span class="string">&#x27;liugezhou&#x27;</span>,</span><br><span class="line">    <span class="attr">validate</span>:<span class="keyword">function</span>(<span class="params">v</span>)&#123;   <span class="comment">//对输入的参数进行校验，检验通过可进行下一步</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">typeof</span> v === <span class="string">&#x27;string&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">filter</span>:<span class="keyword">function</span>(<span class="params">v</span>)&#123;    <span class="comment">//对用户输入的内容进行优化返回</span></span><br><span class="line">        <span class="keyword">return</span> v+<span class="string">&#x27;!&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">transformer</span>: <span class="keyword">function</span>(<span class="params">v</span>)&#123;<span class="comment">//相当于一个placeholder显示作用</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;name :&#x27;</span>+ v</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;,&#123;</span><br><span class="line">    <span class="attr">type</span>:<span class="string">&#x27;number&#x27;</span>,    <span class="comment">// inquirer可以传入数组</span></span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;age&#x27;</span>,</span><br><span class="line">    <span class="attr">message</span>:<span class="string">&#x27;your age:&#x27;</span>,</span><br><span class="line">    <span class="attr">default</span>:<span class="string">&#x27;18&#x27;</span></span><br><span class="line"> &#125;])</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">answers</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(answers.<span class="property">name</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(answers.<span class="property">age</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(error.<span class="property">isTtyError</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;error&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Something else when wrong</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><p><strong>3-3 inquirer其他交互形式演示</strong></p><blockquote><p>本节主要对list、rawlist、expand、confirm、checkbox等进行了功能与代码测试<br>测试代码提交至 <a href="https://github.com/liugezhou/liugezhou-cli-demo/tree/main/bin/inquirer">inquirer</a></p></blockquote><p><strong>3-4 强制清空当前目录功能开发</strong></p><blockquote><p>本节主要是清空当前目录，进行清空下，使用命令行交互inquirer问询，以及用 force这个参数添加业务逻辑，进行目录的清空判断</p><p>清空目录功能主要是使用了第三方库_<strong>fs-extra</strong>_的**<em>emptyDirSync</em>(localPath)**方法。</p></blockquote><p><strong>3-5 获取项目基本信息功能开发</strong></p><blockquote><p>本节使用inquirer进行了项目或者组件的选择询问、以及版本号控制台输入功能，但未对输入内容进行校验<br>这里调整好代码逻辑即可。</p></blockquote><p><strong>3-6 项目名称和版本号合法性校验</strong></p><blockquote><p>本节的主要内容为合法项目名称的正则校验</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isValidName</span>(<span class="params">v</span>) &#123;</span><br><span class="line">  <span class="comment">// 规则一：输入的首字符为英文字符</span></span><br><span class="line">  <span class="comment">// 规则二：尾字符必须为英文或数字</span></span><br><span class="line">  <span class="comment">// 规则三：字符仅允许-和_两种</span></span><br><span class="line">  <span class="comment">// \w=a-zA_Z0-9_</span></span><br><span class="line">  <span class="keyword">return</span> <span class="regexp">/^[a-zA-Z]+([-][a-zA-Z][a-zA-Z0-9]*|[_][a-zA-Z][a-zA-Z0-9]*|[a-zA-Z0-9])*$/</span>.<span class="title function_">test</span>(v)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>正则表达式规则：<br>首字符：^<br>尾字符：$<br>\w=a-zA-Z0-9_<br>首字符必须为英文字符：/^[a-zA-Z]$/<br>中间可以为英文数字或者-_:/^[a-zA-Z]+[\w-]<em>/<br>尾字符必须为英文或者数字:/^[a-zA-Z]</em>[\w-]*[a-zA-Z]$/.test(v)</p></blockquote><p>以上表达式规则，没有处理当项目名称为一个的时候的问题</p><blockquote><p>给出不合法的命名有：<em>1,a-,a</em>,a_1,a-1_<br><em>/^[a-zA-Z]+([-][a-zA-Z][a-zA-Z0-9]*|[</em>][a-zA-Z][a-zA-Z0-9]*|[a-zA-Z0-9])$/.test(v)_</p></blockquote><blockquote><p>PS:3-6这里关于检验性输错后依旧报错的问题，没有得到解决，先暂缓了！</p></blockquote><h2 id="第四章-预备知识：egg-js-云-mongodb-快速入门">第四章 预备知识：egg.js + 云 mongodb 快速入门</h2><p><strong>4-1 下载项目模板功能实现流程分析+egg.js简介</strong></p><blockquote><p>上一节我们获得了项目信息，这一节通过获得的项目信息进行模板的下载</p><p>通过项目模版API获取项目模版信息</p><ul><li>通过egg.js搭建一套后台系统  (4-2 至 4-5)</li><li>通过npm存储项目模版</li><li>将项目模版信息存储到mongodb数据库中</li><li>通过egg.js获取mongodb中的数据并且通过API将其返回</li></ul></blockquote><blockquote><p>在进行egg.js快速搭建后台系统前，对egg.js + 云mongodb进行一个快速的入门学习。</p><ul><li>egg基于koa2生成的一个企业级框架。</li></ul></blockquote><p><strong>4-2 cloudscope-cli-server后端项目创建</strong><br><strong>快速搭建项目</strong></p><blockquote><ul><li>mkdir cloudscope-cli-server</li><li>cd cloudscope-cli-server</li><li>npm init egg --type=simple</li><li>npm i</li><li>npm run dev</li></ul></blockquote><blockquote><p>这里需要注意的一点是：npm init egg<br>实际执行的是 create-egg这个包。</p></blockquote><p><strong>4-3 通过egg.js框架添加新的API</strong></p><blockquote><p>本节主要多egg脚手架进行了简单演示，将原路由home以及文件删除，新建了project/template路由以及controller。<br>路由在app/router.js中</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Egg.Application</span>&#125; <span class="variable">app</span> - egg application</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function"><span class="params">app</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; router, controller &#125; = app;</span><br><span class="line">  router.<span class="title function_">get</span>(<span class="string">&#x27;/project/template&#x27;</span>, controller.<span class="property">project</span>.<span class="property">getTemplate</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>controller of project</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Controller</span> = <span class="built_in">require</span>(<span class="string">&#x27;egg&#x27;</span>).<span class="property">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ProjectController</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Controller</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">getTemplate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; ctx &#125; = <span class="variable language_">this</span>;</span><br><span class="line">    ctx.<span class="property">body</span> = <span class="string">&#x27;get template&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">ProjectController</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>4-4 云mongodb开通+本地mongodb调试技巧讲解</strong></p><blockquote><p>本地安装mongodb：<a href="https://www.runoob.com/mongodb/mongodb-osx-install.html">https://www.runoob.com/mongodb/mongodb-osx-install.html</a></p><p>启动：</p><ol><li>终端输入：mongod<ol><li>报错，提示找不到/data/db目录</li></ol></li><li>添加dbpath：<ol><li>在本地新建 /Users/liugezhou/data/db目录</li><li>同步启动方式：mongod --dbpath=/Users/liugezhou/data/db</li><li>异步启动：在后面添加 --fork</li></ol></li></ol><p>注：由于我本地之前已经配好了，所以我本地的启动方式为：mongod --config /usr/local/etc/mongod.conf<br>查看mongodb.conf文件，我本地的dbpath路径为：/usr/local/var/mongodb</p><p>安装第三方工具：Robot 3T<br>连接到本地后：</p><ul><li>create database  （liugezhou-cli)</li><li>create collection   (project)</li><li>insert Doucument  (添加数据)</li><li>add user  (cloudscope/cloudscope)</li></ul></blockquote><p><strong>4-5 egg.js接入mongodb方法</strong></p><blockquote><p>本地mongodb数据库创建完成后，开始连接我们的本地数据库。</p><p>回到上节新创建的项目,sam老师安装的第三方依赖为</p><ul><li>app下新建utils/mongo.js</li><li>npm i -S @pick-star/cli-mongodb</li></ul><p>由于@pick-star/cli-mongodb代码较少，我这里选择不安装，本地敲一遍代码：</p><ul><li>cnpm i -S npmlog mpngodb</li><li>在utils目录下新建log.js</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> npmlog = <span class="built_in">require</span>(<span class="string">&#x27;npmlog&#x27;</span>)</span><br><span class="line">log.<span class="property">level</span> = process.<span class="property">env</span>.<span class="property">LOG_LEVEL</span> ? process.<span class="property">env</span>.<span class="property">LOG_LEVEL</span> : <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line">log.<span class="property">headingStyle</span> = &#123; <span class="attr">fg</span>: <span class="string">&#x27;red&#x27;</span>, <span class="attr">bg</span>: <span class="string">&#x27;white&#x27;</span> &#125;;</span><br><span class="line">log.<span class="property">heading</span> = <span class="string">&#x27;liugezhou&#x27;</span>;</span><br><span class="line">log.<span class="title function_">addLevel</span>(<span class="string">&#x27;success&#x27;</span>, <span class="number">2500</span>, &#123; <span class="attr">fg</span>: <span class="string">&#x27;green&#x27;</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = log;</span><br></pre></td></tr></table></figure><ul><li>在utils目录下新建mongodb.js(@pick-star/cli-mongodb源码)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MongoClient</span> = <span class="built_in">require</span>(<span class="string">&#x27;mongodb&#x27;</span>).<span class="property">MongoClient</span>;</span><br><span class="line"><span class="keyword">const</span> logger = <span class="built_in">require</span>(<span class="string">&#x27;./log&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mongo</span> &#123;</span><br><span class="line"> <span class="title function_">constructor</span>(<span class="params">url</span>) &#123;</span><br><span class="line">   <span class="variable language_">this</span>.<span class="property">url</span> = url;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="title function_">connect</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">     <span class="title class_">MongoClient</span>.<span class="title function_">connect</span>(</span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">url</span>,</span><br><span class="line">       &#123;</span><br><span class="line">         <span class="attr">useNewUrlParser</span>: <span class="literal">true</span>,</span><br><span class="line">         <span class="attr">useUnifiedTopology</span>: <span class="literal">true</span>,</span><br><span class="line">       &#125;,</span><br><span class="line">       <span class="function">(<span class="params">err, client</span>) =&gt;</span> &#123;</span><br><span class="line">         <span class="keyword">if</span> (err) &#123;</span><br><span class="line">           <span class="title function_">reject</span>(err);</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="keyword">const</span> db = client.<span class="title function_">db</span>();</span><br><span class="line">           <span class="title function_">resolve</span>(&#123; db, client &#125;);</span><br><span class="line">         &#125;</span><br><span class="line">       &#125;);</span><br><span class="line">   &#125;);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="title function_">connectAction</span>(<span class="params">docName, action</span>) &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">async</span> (resolve, reject) =&gt; &#123;</span><br><span class="line">     <span class="keyword">const</span> &#123; db, client &#125; = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">connect</span>();</span><br><span class="line">     <span class="keyword">try</span> &#123;</span><br><span class="line">       <span class="keyword">const</span> collection = db.<span class="title function_">collection</span>(docName);</span><br><span class="line">       <span class="title function_">action</span>(collection, <span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">         <span class="variable language_">this</span>.<span class="title function_">close</span>(client);</span><br><span class="line">         logger.<span class="title function_">verbose</span>(<span class="string">&#x27;result&#x27;</span>, result);</span><br><span class="line">         <span class="title function_">resolve</span>(result);</span><br><span class="line">       &#125;, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">         <span class="variable language_">this</span>.<span class="title function_">close</span>(client);</span><br><span class="line">         logger.<span class="title function_">error</span>(err.<span class="title function_">toString</span>());</span><br><span class="line">         <span class="title function_">reject</span>(err);</span><br><span class="line">       &#125;);</span><br><span class="line">     &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">       <span class="variable language_">this</span>.<span class="title function_">close</span>(client);</span><br><span class="line">       logger.<span class="title function_">error</span>(err.<span class="title function_">toString</span>());</span><br><span class="line">       <span class="title function_">reject</span>(err);</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="title function_">query</span>(<span class="params">docName</span>) &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">connectAction</span>(docName, <span class="function">(<span class="params">collection, onSuccess, onError</span>) =&gt;</span> &#123;</span><br><span class="line">     collection.<span class="title function_">find</span>(&#123;&#125;, &#123; <span class="attr">projection</span>: &#123; <span class="attr">_id</span>: <span class="number">0</span> &#125; &#125;).<span class="title function_">toArray</span>(<span class="function">(<span class="params">err, docs</span>) =&gt;</span> &#123;</span><br><span class="line">       <span class="keyword">if</span> (err) &#123;</span><br><span class="line">         <span class="title function_">onError</span>(err);</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="title function_">onSuccess</span>(docs);</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;);</span><br><span class="line">   &#125;);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="title function_">insert</span>(<span class="params">docName, data</span>) &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">connectAction</span>(docName, <span class="function">(<span class="params">collection, onSuccess, onError</span>) =&gt;</span> &#123;</span><br><span class="line">     collection.<span class="title function_">insertMany</span>(data, <span class="function">(<span class="params">err, result</span>) =&gt;</span> &#123;</span><br><span class="line">       <span class="keyword">if</span> (err) &#123;</span><br><span class="line">         <span class="title function_">onError</span>(err);</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="title function_">onSuccess</span>(result);</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;);</span><br><span class="line">   &#125;);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="title function_">remove</span>(<span class="params">docName, data</span>) &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">connectAction</span>(docName, <span class="function">(<span class="params">collection, onSuccess, onError</span>) =&gt;</span> &#123;</span><br><span class="line">     collection.<span class="title function_">deleteOne</span>(data, <span class="function">(<span class="params">err, result</span>) =&gt;</span> &#123;</span><br><span class="line">       <span class="keyword">if</span> (err) &#123;</span><br><span class="line">         <span class="title function_">onError</span>(err);</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="title function_">onSuccess</span>(result);</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;);</span><br><span class="line">   &#125;);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="title function_">close</span>(<span class="params">client</span>) &#123;</span><br><span class="line">   client &amp;&amp; client.<span class="title function_">close</span>();</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">Mongo</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><blockquote><p>utils/mongo.js 代码修改：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Mongodb</span> = <span class="built_in">require</span>(<span class="string">&#x27;./mongodb&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; mongoDbName &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../../config/db&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">mongo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Mongodb</span>(mongodbUrl);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = mongo;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>接着，在mongo.js暴露出去</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;use stirct&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Mongodb</span> = <span class="built_in">require</span>(<span class="string">&#x27;./mongodb&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; mongoDbUrl,mongodbName&#125; = <span class="built_in">require</span>(<span class="string">&#x27;../../config/db&#x27;</span>) <span class="comment">// 配置这两个参数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">mongo</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Mongodb</span>(mongoDbUrl,mongodbName)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// config/db.js</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Mondodb</span></span><br><span class="line"><span class="keyword">const</span> mongodbUrl = <span class="string">`mongodb://<span class="subst">$&#123;user&#125;</span>:<span class="subst">$&#123;pass&#125;</span>@liugezhou.com:27017/<span class="subst">$&#123;database&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  mongodbUrl,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后，在Controller的project中访问：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongo = <span class="built_in">require</span>(<span class="string">&#x27;./mongo.js&#x27;</span>)</span><br><span class="line"> <span class="keyword">async</span> <span class="title function_">getTemplate</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; ctx &#125; = <span class="variable language_">this</span>;</span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> <span class="title function_">mongo</span>().<span class="title function_">query</span>(<span class="string">&#x27;project&#x27;</span>);</span><br><span class="line">    ctx.<span class="property">body</span> = data;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="第五章-项目模板开发-获取项目模板-API-开发">第五章 项目模板开发 + 获取项目模板 API 开发</h2><p><strong>5-1 脚手架初始化项目模版开发</strong></p><blockquote><p>模版项目代码提交至：<a href="https://github.com/liugezhou/liugezhou-cli-dev-template">liugezhou-cli-dev-template</a></p></blockquote><blockquote><p>项目模板建好后，npm publish发布至npm。</p></blockquote><p><strong>5-2 脚手架请求项目模板API开发</strong><br><strong>回到脚手架项目</strong></p><blockquote><ul><li>在utils下创建包： lerna create @cloudscope-cli/request</li><li>cd utils</li><li>npm i -S axios</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// utils/request/lib.index</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> axios = <span class="built_in">require</span>(<span class="string">&#x27;axios&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> baseURL = process.<span class="property">env</span>.<span class="property">CLI_URL</span>?process.<span class="property">env</span>.<span class="property">CLI_URL</span>:<span class="string">&#x27;https://liugezhou.com:7001&#x27;</span></span><br><span class="line"><span class="keyword">const</span> request = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">baseURL,</span><br><span class="line">  <span class="attr">timeout</span>:<span class="number">5000</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">request.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(&#123;</span><br><span class="line"> <span class="function"><span class="params">response</span> =&gt;</span>&#123;</span><br><span class="line"><span class="keyword">return</span> response.<span class="property">data</span></span><br><span class="line">&#125;,</span><br><span class="line"> <span class="function"><span class="params">error</span> =&gt;</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = request</span><br></pre></td></tr></table></figure><blockquote><p>commands/init引入@cloudsope-cli/request包<br>新建 lib/getProjectTemplate</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> request = <span class="built_in">require</span>(<span class="string">&#x27;@cloudscope-cli/request&#x27;</span>)</span><br><span class="line"></span><br><span class="line">modules.<span class="property">exports</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">return</span><span class="title function_">request</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>:<span class="string">&#x27;/project/template&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// commands/init/lib/index.js</span></span><br><span class="line"><span class="keyword">const</span> getProjectTemplate = <span class="built_in">require</span>(<span class="string">&#x27;./getProjectTemplate&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> template = <span class="title function_">getProjectTemplate</span>()</span><br></pre></td></tr></table></figure><blockquote><p>最后在测试项目下测试，打印template，成功。</p></blockquote><p><strong>5-3 通过环境变量配置默认URL+选择项目模板功能开发</strong></p><blockquote><p>本章内容回顾了process.env的配置，以及inquirer新添加询问需要选择的项目模版是什么。</p></blockquote><p><strong>5-4 基于vue-element-admin开发通用的中后台项目模板</strong></p><blockquote><p>5-1 中已将项目模版更新至git仓库，且已发布到npm中。<br>只需要在mongodb数据库将后台模版name、npmName、version添加后即可。</p></blockquote><h2 id="第六章-脚手架项目模板下载功能开发">第六章 脚手架项目模板下载功能开发</h2><p><strong>6-1 脚手架下载项目模板功能开发</strong></p><p>本节的主要内容为项目模版的安装</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// commands/init/lib/index.js</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">downloadTemplate</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;projectTemplate&#125; = <span class="variable language_">this</span>.<span class="property">projectInfo</span></span><br><span class="line">  <span class="keyword">const</span> templateInfo = <span class="variable language_">this</span>.<span class="property">template</span>.<span class="title function_">find</span>(<span class="function"><span class="params">item</span>=&gt;</span> item.<span class="property">npmName</span> === projectTemplate)</span><br><span class="line">  <span class="keyword">const</span> targetPath = path.<span class="title function_">resolve</span>(userHome,<span class="string">&#x27;.cloudscope-cli&#x27;</span>,<span class="string">&#x27;template&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> storeDir = path.<span class="title function_">resolve</span>(userHome,<span class="string">&#x27;.cloudscope-cli&#x27;</span>,<span class="string">&#x27;template&#x27;</span>,<span class="string">&#x27;node_modules&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> &#123;npmName,version&#125; = templateInfo</span><br><span class="line">  <span class="keyword">const</span> templatePkg = <span class="keyword">new</span> <span class="title class_">Package</span>(&#123;</span><br><span class="line">    targetPath,</span><br><span class="line">    storeDir,</span><br><span class="line">    <span class="attr">packageName</span>:npmName,</span><br><span class="line">    <span class="attr">packageVersion</span>:version</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">await</span> templatePkg.<span class="title function_">exists</span>())&#123;</span><br><span class="line">    <span class="comment">// 更新package</span></span><br><span class="line">    log.<span class="title function_">verbose</span>(<span class="string">&#x27;更新template&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> templatePkg.<span class="title function_">update</span>();</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">// 安装package</span></span><br><span class="line">    log.<span class="title function_">verbose</span>(<span class="string">&#x27;安装template&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> templatePkg.<span class="title function_">install</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>6-2 通过spinner实现命令行loading效果</strong></p><blockquote><p>首先在utils/utils中添加spinnerStart和sleep方法</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// utils/utils/lib/index.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">spinnerStart</span>(<span class="params">msg,spinnerString =<span class="string">&#x27;|\-\\&#x27;</span></span>)&#123;</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Spinner</span> = <span class="built_in">require</span>(<span class="string">&#x27;cli-spinner&#x27;</span>).<span class="property">Spinner</span></span><br><span class="line">  <span class="keyword">const</span> spinner = <span class="keyword">new</span> <span class="title class_">Spinner</span>(<span class="string">`<span class="subst">$&#123;msg&#125;</span> %s`</span>)</span><br><span class="line">  spinner.<span class="title function_">setSpinnerString</span>(spinnerString)</span><br><span class="line">  spinner.<span class="title function_">start</span>()</span><br><span class="line">  <span class="keyword">return</span> spinner</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sleep</span>(<span class="params">timeout = <span class="number">1000</span></span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve,timeout))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>然后在commands/init/lib/index.js中将spinner引入使用、测试。</p></blockquote><p><strong>6-3 项目模板更新功能调试</strong></p><blockquote><p>本节主要是安装功能的测试，以及第一次安装模版不存在时，关于spinner.stop的finnal处理。</p></blockquote><p>PS:在本节完成之后，发布至npm，本地全局安装的时候，出现错误，还未找到原因。<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/5-1.43dqyvyh5i00.webp" alt="5-1"></p><h2 id="第七章：本周加餐：inquirer源码解析：彻底搞懂命令行交互原理">第七章：本周加餐：inquirer源码解析：彻底搞懂命令行交互原理</h2><p><strong>7-1 本章学习路径和目标</strong></p><blockquote><ul><li>掌握 readline/events/stream/ansi-escapes/rxjs</li><li>掌握命令行交互的实现原理，并实现一个可交互的列表</li><li>分析inquirer源码掌握其中的关键实现</li></ul></blockquote><p><strong>7-2 readline的使用方法和实现原理</strong></p><blockquote><p>readline是Node.js中的一个内置库，主要是用来管理输入流的</p></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> readline = <span class="built_in">require</span>(<span class="string">&#x27;readline&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> rl = readline.<span class="title function_">createInterface</span>(&#123;</span><br><span class="line">    <span class="attr">input</span>:process.<span class="property">stdin</span>,</span><br><span class="line">    <span class="attr">output</span>:process.<span class="property">stdout</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">rl.<span class="title function_">question</span>(<span class="string">&#x27;your name:&#x27;</span>,(<span class="function"><span class="params">answer</span> =&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;your name is:&#x27;</span>+answer)</span><br><span class="line">    rl.<span class="title function_">close</span>()</span><br><span class="line">&#125;))</span><br></pre></td></tr></table></figure><p>源码分析：</p><blockquote><ul><li>强制将函数转为构建函数</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Interface</span>(<span class="params">input, output, completer, terminal</span>) &#123;</span><br><span class="line"> <span class="keyword">if</span> (!(<span class="variable language_">this</span> <span class="keyword">instanceof</span> <span class="title class_">Interface</span>)) &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Interface</span>(input, output, completer, terminal);</span><br><span class="line"> &#125;</span><br><span class="line">………… </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>获得事件驱动能力：EventEmitter.call(this);</li><li>监听键盘事件：</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">emitKeypressEvents</span>(input, <span class="variable language_">this</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// `input` usually refers to stdin</span></span><br><span class="line">input.<span class="title function_">on</span>(<span class="string">&#x27;keypress&#x27;</span>, onkeypress);</span><br><span class="line">input.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>, ontermend);</span><br></pre></td></tr></table></figure></blockquote><p><strong>7-3 高能：深入讲解readline键盘输入监听实现原理</strong></p><blockquote><p>略</p></blockquote><p><strong>7-4 秀操作：手写readline核心实现</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">setpread</span>(<span class="params">callback</span>)&#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">onkeypress</span>(<span class="params">s</span>)&#123;</span><br><span class="line">        output.<span class="title function_">write</span>(s);</span><br><span class="line">        line += s</span><br><span class="line">        <span class="keyword">switch</span> (s) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;\r&#x27;</span>:</span><br><span class="line">                input.<span class="title function_">pause</span>();</span><br><span class="line">                <span class="title function_">callback</span>(line)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        </span><br><span class="line">            <span class="attr">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> input = process.<span class="property">stdin</span>;</span><br><span class="line">    <span class="keyword">const</span> output = process.<span class="property">stdout</span>;</span><br><span class="line">    <span class="keyword">let</span> line =<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="title function_">emitKeypressEvents</span>(input)</span><br><span class="line">    input.<span class="title function_">on</span>(<span class="string">&#x27;keypress&#x27;</span>,onkeypress)</span><br><span class="line"></span><br><span class="line">    input.<span class="title function_">setRawMode</span>(<span class="literal">true</span>)  <span class="comment">//进入原生模式</span></span><br><span class="line">    input.<span class="title function_">resume</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">emitKeypressEvents</span>(<span class="params">stream</span>)&#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">onData</span>(<span class="params">chunk</span>)&#123;</span><br><span class="line">        g.<span class="title function_">next</span>(chunk.<span class="title function_">toString</span>())</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> g = <span class="title function_">emitKeys</span>(stream)</span><br><span class="line">    g.<span class="title function_">next</span>()</span><br><span class="line">    stream.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>,onData)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span>* <span class="title function_">emitKeys</span>(<span class="params">stream</span>)&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> ch = <span class="keyword">yield</span>;</span><br><span class="line">        stream.<span class="title function_">emit</span>(<span class="string">&#x27;keypress&#x27;</span>,ch)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">setpread</span>(<span class="keyword">function</span>(<span class="params">s</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;answer:&#x27;</span>,s)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>7-5 命令行样式修改的核心原理：ansi转义序列讲解</strong></p><blockquote><p>ansi-escape-code:ansi转义序列<br>定义的一个规范，终端通过转义字符实现特殊操作。<br>通过这里查询：<a href="https://handwiki.org/wiki/ANSI_escape_code">https://handwiki.org/wiki/ANSI_escape_code</a></p></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 固定格式为：(  \x1B[  ) +  (&#x27;通过上面网站查询出来的参数&#x27;)</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;\x1B[31m\x1B[4m%s&#x27;</span>,<span class="string">&#x27;your name:&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;\x1B[20G%s&#x27;</span>,<span class="string">&#x27;test&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>7-6 讨论readline</strong></p><p><strong>7-7 响应式库rxjs快速入门</strong></p><blockquote><p>rxjs是一个异步的库，和我们的Promise是非常相似的。readline源码大量使用了这个库。</p></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// npm install rxjs</span></span><br><span class="line"><span class="keyword">const</span> range  = <span class="built_in">require</span>(<span class="string">&#x27;rxjs&#x27;</span>).<span class="property">range</span>;</span><br><span class="line"><span class="keyword">const</span> &#123; map, filter &#125;   = <span class="built_in">require</span>(<span class="string">&#x27;rxjs/operators&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> pipe = <span class="title function_">range</span>(<span class="number">1</span>, <span class="number">200</span>)</span><br><span class="line">  .<span class="title function_">pipe</span>(</span><br><span class="line">    <span class="title function_">filter</span>(<span class="function"><span class="params">x</span> =&gt;</span> x % <span class="number">2</span> === <span class="number">1</span>),</span><br><span class="line">    <span class="title function_">map</span>(<span class="function"><span class="params">x</span> =&gt;</span> x + x),</span><br><span class="line">    <span class="title function_">filter</span>(<span class="function"><span class="params">x</span> =&gt;</span> x%<span class="number">3</span> === <span class="number">0</span>),</span><br><span class="line">    <span class="title function_">filter</span>(<span class="function"><span class="params">x</span> =&gt;</span> x%<span class="number">5</span> === <span class="number">0</span>)</span><br><span class="line">  )</span><br><span class="line">  pipe.<span class="title function_">subscribe</span>(<span class="function"><span class="params">x</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(x));</span><br></pre></td></tr></table></figure><p><strong>7-8&amp; 7-9 放大招：手写命令行交互式列表组件</strong></p><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/5-2.2du7kwyz7a3o.webp" alt="5-2"></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">EventEmitter</span> = <span class="built_in">require</span>(<span class="string">&#x27;events&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> readline = <span class="built_in">require</span>(<span class="string">&#x27;readline&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MuteStream</span> = <span class="built_in">require</span>(<span class="string">&#x27;mute-stream&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; fromEvent &#125; = <span class="built_in">require</span>(<span class="string">&#x27;rxjs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> ansiEscapes = <span class="built_in">require</span>(<span class="string">&#x27;ansi-escapes&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> option = &#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="string">&#x27;list&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;name&#x27;</span>,</span><br><span class="line">  <span class="attr">message</span>: <span class="string">&#x27;select your name:&#x27;</span>,</span><br><span class="line">  <span class="attr">choices</span>: [&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;sam&#x27;</span>, <span class="attr">value</span>: <span class="string">&#x27;sam&#x27;</span>,</span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;shuangyue&#x27;</span>, <span class="attr">value</span>: <span class="string">&#x27;sy&#x27;</span>,</span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;zhangxuan&#x27;</span>, <span class="attr">value</span>: <span class="string">&#x27;zx&#x27;</span>,</span><br><span class="line">  &#125;],</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Prompt</span>(<span class="params">option</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> list = <span class="keyword">new</span> <span class="title class_">List</span>(option);</span><br><span class="line">      list.<span class="title function_">render</span>();</span><br><span class="line">      list.<span class="title function_">on</span>(<span class="string">&#x27;exit&#x27;</span>, <span class="keyword">function</span>(<span class="params">answers</span>) &#123;</span><br><span class="line">        <span class="title function_">resolve</span>(answers);</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      <span class="title function_">reject</span>(e);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">List</span> <span class="keyword">extends</span> <span class="title class_ inherited__">EventEmitter</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">option</span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = option.<span class="property">name</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">message</span> = option.<span class="property">message</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">choices</span> = option.<span class="property">choices</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">input</span> = process.<span class="property">stdin</span>;</span><br><span class="line">    <span class="keyword">const</span> ms = <span class="keyword">new</span> <span class="title class_">MuteStream</span>();</span><br><span class="line">    ms.<span class="title function_">pipe</span>(process.<span class="property">stdout</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">output</span> = ms;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">rl</span> = readline.<span class="title function_">createInterface</span>(&#123;</span><br><span class="line">      <span class="attr">input</span>: <span class="variable language_">this</span>.<span class="property">input</span>,</span><br><span class="line">      <span class="attr">output</span>: <span class="variable language_">this</span>.<span class="property">output</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">selected</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">height</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">keypress</span> = <span class="title function_">fromEvent</span>(<span class="variable language_">this</span>.<span class="property">rl</span>.<span class="property">input</span>, <span class="string">&#x27;keypress&#x27;</span>)</span><br><span class="line">      .<span class="title function_">forEach</span>(<span class="variable language_">this</span>.<span class="property">onkeypress</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">haveSelected</span> = <span class="literal">false</span>; <span class="comment">// 是否已经选择完毕</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  onkeypress = <span class="function">(<span class="params">keymap</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> key = keymap[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (key.<span class="property">name</span> === <span class="string">&#x27;down&#x27;</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">selected</span>++;</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">selected</span> &gt; <span class="variable language_">this</span>.<span class="property">choices</span>.<span class="property">length</span> - <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">selected</span> = <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">render</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key.<span class="property">name</span> === <span class="string">&#x27;up&#x27;</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">selected</span>--;</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">selected</span> &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">selected</span> = <span class="variable language_">this</span>.<span class="property">choices</span>.<span class="property">length</span> - <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">render</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key.<span class="property">name</span> === <span class="string">&#x27;return&#x27;</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">haveSelected</span> = <span class="literal">true</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">render</span>();</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">close</span>();</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">emit</span>(<span class="string">&#x27;exit&#x27;</span>, <span class="variable language_">this</span>.<span class="property">choices</span>[<span class="variable language_">this</span>.<span class="property">selected</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">output</span>.<span class="title function_">unmute</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">clean</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">output</span>.<span class="title function_">write</span>(<span class="variable language_">this</span>.<span class="title function_">getContent</span>());</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">output</span>.<span class="title function_">mute</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  getContent = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">haveSelected</span>) &#123;</span><br><span class="line">      <span class="keyword">let</span> title = <span class="string">&#x27;\x1B[32m?\x1B[39m \x1B[1m&#x27;</span> + <span class="variable language_">this</span>.<span class="property">message</span> + <span class="string">&#x27;\x1B[22m\x1B[0m \x1B[0m\x1B[2m(Use arrow keys)\x1B[22m\n&#x27;</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">choices</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">choice, index</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (index === <span class="variable language_">this</span>.<span class="property">selected</span>) &#123;</span><br><span class="line">          <span class="comment">// 判断是否为最后一个元素，如果是，则不加\n</span></span><br><span class="line">          <span class="keyword">if</span> (index === <span class="variable language_">this</span>.<span class="property">choices</span>.<span class="property">length</span> - <span class="number">1</span>) &#123;</span><br><span class="line">            title += <span class="string">&#x27;\x1B[36m❯ &#x27;</span> + choice.<span class="property">name</span> + <span class="string">&#x27;\x1B[39m &#x27;</span>;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            title += <span class="string">&#x27;\x1B[36m❯ &#x27;</span> + choice.<span class="property">name</span> + <span class="string">&#x27;\x1B[39m \n&#x27;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (index === <span class="variable language_">this</span>.<span class="property">choices</span>.<span class="property">length</span> - <span class="number">1</span>) &#123;</span><br><span class="line">            title += <span class="string">&#x27;  &#x27;</span> + choice.<span class="property">name</span>;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            title += <span class="string">&#x27;  &#x27;</span> + choice.<span class="property">name</span> + <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">height</span> = <span class="variable language_">this</span>.<span class="property">choices</span>.<span class="property">length</span> + <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">return</span> title;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 输入结束后的逻辑</span></span><br><span class="line">      <span class="keyword">const</span> name = <span class="variable language_">this</span>.<span class="property">choices</span>[<span class="variable language_">this</span>.<span class="property">selected</span>].<span class="property">name</span>;</span><br><span class="line">      <span class="keyword">let</span> title = <span class="string">&#x27;\x1B[32m?\x1B[39m \x1B[1m&#x27;</span> + <span class="variable language_">this</span>.<span class="property">message</span> + <span class="string">&#x27;\x1B[22m\x1B[0m \x1B[36m&#x27;</span> + name + <span class="string">&#x27;\x1B[39m\x1B[0m \n&#x27;</span>;</span><br><span class="line">      <span class="keyword">return</span> title;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">clean</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> emptyLines = ansiEscapes.<span class="title function_">eraseLines</span>(<span class="variable language_">this</span>.<span class="property">height</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">output</span>.<span class="title function_">write</span>(emptyLines);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">close</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">output</span>.<span class="title function_">unmute</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">rl</span>.<span class="property">output</span>.<span class="title function_">end</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">rl</span>.<span class="title function_">pause</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">rl</span>.<span class="title function_">close</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Prompt</span>(option).<span class="title function_">then</span>(<span class="function"><span class="params">answers</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;answers:&#x27;</span>, answers);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>7-10 inquirer源码执行流程分析</strong></p><p>略</p>]]></content>
      
      
      <categories>
          
          <category> Web架构之脚手架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web架构之脚手架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Week4-脚手架命令注册和执行过程开发</title>
      <link href="/Week4-%E8%84%9A%E6%89%8B%E6%9E%B6%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%86%8C%E5%92%8C%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
      <url>/Week4-%E8%84%9A%E6%89%8B%E6%9E%B6%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%86%8C%E5%92%8C%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章目录排版做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><p>本Week代码提交支：<a href="https://github.com/liugezhou/cloudscope-cli/tree/lesson04">lesson04</a></p><h2 id="第一章：本周导学">第一章：本周导学</h2><p><strong>1-1 本周整体内容介绍和学习方法</strong></p><p>标题</p><blockquote><ul><li>基于Commander完成脚手架命令注册和命令执行过程开发</li></ul></blockquote><p>收获</p><blockquote><ul><li>如何设计高性能脚手架</li><li>Node多线程开发</li><li>javascript面向对象编程的实战技巧</li></ul></blockquote><p>内容</p><blockquote><ul><li>图解高性能脚手架架构设计方法</li><li>封装通用的Package和Command类</li><li>基于缓存 + Node 多进程 实现动态命令加载和执行</li><li>将业务逻辑和脚手架逻辑彻底解耦</li></ul></blockquote><p>加餐</p><blockquote><p>Node多进程开发进阶–child_process源码解析</p><ul><li>深入Node源码看清spawn/exec/execFile/fork的本质区别，彻底搞懂Node多进程原理。</li></ul></blockquote><h2 id="第二章：imooc-cli脚手架命令注册">第二章：imooc-cli脚手架命令注册</h2><p><strong>2-1 imooc-cli脚手架初始化+全局参数注册</strong><br>(本节有代码编写)</p><p>本节的主要内容为使用commander这个库在全局添加注册命令</p><blockquote><ul><li>cd core/cli</li><li>npm i -S commander</li></ul></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// core/cli/lib/index  添加全局注册命令方法</span></span><br><span class="line"><span class="comment">//命令注册</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">registerCommand</span>(<span class="params"></span>)&#123;</span><br><span class="line">    program</span><br><span class="line">        .<span class="title function_">name</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(pkg.<span class="property">bin</span>)[<span class="number">0</span>])</span><br><span class="line">        .<span class="title function_">usage</span>(<span class="string">&#x27;&lt;command&gt; [options]&#x27;</span>)</span><br><span class="line">        .<span class="title function_">version</span>(pkg.<span class="property">version</span>)</span><br><span class="line">        .<span class="title function_">option</span>(<span class="string">&#x27;-d, --debug&#x27;</span>, <span class="string">&#x27;是否开启调试模式&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">     <span class="comment">// 开启debug模式</span></span><br><span class="line">     program.<span class="title function_">on</span>(<span class="string">&#x27;option:debug&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(program.<span class="title function_">opts</span>().<span class="property">debug</span>)&#123;</span><br><span class="line">            process.<span class="property">env</span>.<span class="property">LOG_LEVEL</span>=<span class="string">&#x27;verbose&#x27;</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            process.<span class="property">env</span>.<span class="property">LOG_LEVEL</span>=<span class="string">&#x27;info&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        log.<span class="property">level</span> = process.<span class="property">env</span>.<span class="property">LOG_LEVEL</span></span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 对未知命令监听</span></span><br><span class="line">    program.<span class="title function_">on</span>(<span class="string">&#x27;command:*&#x27;</span>,<span class="keyword">function</span>(<span class="params">obj</span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> availableCommands = program.<span class="property">commands</span>.<span class="title function_">map</span>(<span class="function"><span class="params">cmd</span> =&gt;</span> cmd.<span class="title function_">name</span>())</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(colors.<span class="title function_">red</span>(<span class="string">&#x27;未知的命令：&#x27;</span>+obj[<span class="number">0</span>]))</span><br><span class="line">        <span class="keyword">if</span>(availableCommands.<span class="property">length</span> &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(colors.<span class="title function_">red</span>(<span class="string">&#x27;可用命令为：&#x27;</span>+availableCommands.<span class="title function_">join</span>(<span class="string">&#x27;,&#x27;</span>)))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    program.<span class="title function_">parse</span>(program.<span class="property">argv</span>)</span><br><span class="line">    <span class="keyword">if</span>(program.<span class="property">args</span> &amp;&amp; program.<span class="property">args</span>.<span class="property">length</span> &lt; <span class="number">1</span>) &#123;</span><br><span class="line">        program.<span class="title function_">outputHelp</span>();</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2-2 imooc-cli脚手架命令注册</strong></p><p>(本节有代码编写)</p><p>本节的主要内容为添加第一个comman操作：‘<strong>init</strong>’,并在commands文件夹下创建新的init包</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// core/cli/lib/index</span></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> init = <span class="built_in">require</span>(<span class="string">&#x27;@cloudscope-cli/init&#x27;</span>)</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">program</span><br><span class="line">  .<span class="title function_">command</span>(<span class="string">&#x27;init [projectName]&#x27;</span>)</span><br><span class="line">.<span class="title function_">option</span>(<span class="string">&#x27;-f,--force&#x27;</span>,<span class="string">&#x27;是否强制更新项目&#x27;</span>)</span><br><span class="line">.<span class="title function_">action</span>(init)</span><br><span class="line"></span><br><span class="line">......</span><br></pre></td></tr></table></figure><h2 id="第三章：高性能脚手架架构设计和缓存结构设计">第三章：高性能脚手架架构设计和缓存结构设计</h2><p><strong>3-1 当前imooc-cli脚手架架构痛点分析</strong><br>(本节无代码编写)</p><p>当前的代码架构如图：<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/4-1.1i06rp47u534.webp" alt="4-1"><br><strong>3-2 高性能脚手架架构设计</strong></p><p>(本节无代码编写)</p><p>对以上架构(之前代码编写)的主要优化点有以下三个方面</p><blockquote><ul><li>将init命令做成了一个动态加载的形式</li><li>动态加载的脚手架通过缓存形式进行存储：执行哪个命令下载哪个命令</li><li>动态加载的时候，通过node多进程进行执行：深挖cpu性能</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/4-2.5444cg85tuk0.webp" alt="4-2"><br><strong>3-3 脚手架命令动态加载功能架构设计</strong><br>(本节无代码编写)<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/4-3.3epstrvnolk0.webp" alt="4-3"></p><blockquote><p>上图架构初看有些难度，在代码编写之后再去回顾，会有更深理解。</p><p>本节简单讲述了两点：</p><ol><li>require加载文件的用法:</li></ol><ul><li>require(‘/xxx/yyy/index.js’) ---- 加载绝对路径</li><li>require(‘./index.js’)----加载相对路径</li><li>require(‘fs’)    ----  加载内置模块</li><li>require(‘npmlog’) ---- 加载第三方包</li></ul><ol start="2"><li>node执行模块两种方式</li></ol><ul><li>node 执行文件: ** node core/cli/bin/index.js**</li><li>node -e ‘字符串’：<strong>node  -e  “require(./core/cli/bin/index.js)”</strong></li></ul></blockquote><h2 id="第四章-通用-npm-模块类-Package-封装">第四章 通用 npm 模块类 Package 封装</h2><p><strong>4-1 脚手架命令本地调试功能支持</strong></p><p>(本节有代码编写)</p><blockquote><p>通过前面画图了解，我们要实现的第一步是initCommand的动态命令加载,即<strong>3-3</strong>章节所示图。<br>是否执行本地代码，我们通过一个属性来进行标识：<strong>targetPath</strong></p></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//core/cli/lib/index.js</span></span><br><span class="line"></span><br><span class="line">program.</span><br><span class="line">.<span class="title function_">option</span>(<span class="string">&#x27;-tp, --targetPath &lt;targetPath&gt;&#x27;</span>,<span class="string">&#x27;是否指定本地调试文件路径&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"> <span class="comment">//指定targetPath</span></span><br><span class="line">program.<span class="title function_">on</span>(<span class="string">&#x27;option:targetPath&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  process.<span class="property">env</span>.<span class="property">CLI_TARGET_PATH</span> = program.<span class="title function_">opts</span>().<span class="property">targetPath</span> </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// commands/init/lib/index.js</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">init</span>(<span class="params">projectName,options,command</span>)  &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;init&#x27;</span>,projectName,command.<span class="title function_">opts</span>().<span class="property">force</span>,process.<span class="property">env</span>.<span class="property">CLI_TARGET_PATH</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = init;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>本节需要注意的一点是如果commander版本低于7.0.0，那么 program.action()中传入的参数为两个。<br>7.0.0版本以上的传入的参数为三个(name.options,cmd)</p><p>另外，访问targetPath这个参数的时候，需要program.opts().targetPath访问。</p></blockquote><p><strong>4-2 动态执行库exec模块创建</strong></p><p>(本节有代码编写)</p><blockquote><p>core下新建包文件： lerna create @cloudscope-cli/exec  core/<br>然后在core/cli/lib/index.js文件中将exec包引入，将action(init)此处改为action(exec)</p></blockquote><p><strong>4-3 创建npm模块通用类Package</strong></p><p>(本节有代码编写)</p><blockquote><p>首先讲解了exec模块逻辑</p><ol><li>targetPath -&gt; modulePath</li><li>modulePath -&gt; Package(npm模块)</li><li>Package.getRootFile(获取入口文件)</li><li>Package.update / Package.install</li></ol></blockquote><p>代码实现：</p><blockquote><ul><li>在model文件下创建新的模块Package：lerna create @cloudscope-cli/package</li><li>在core/exec/lib/index.js文件中引入：const Package =  require(‘@cloudscope-cli/package’)</li></ul></blockquote><p><strong>4-4 Package类的属性、方法定义及构造函数逻辑开发</strong></p><p>(本节有代码编写)</p><blockquote><p>本节主要有三处代码讲解</p><ul><li>core/exec中创建一个Package对象</li><li>model/package中Package类的构造方法</li><li>utils/utils中添加isObject方法：判断一个属性是否为对象<br>代码分别如下：</li></ul></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// core/exec/lib/index.js</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Package</span> = <span class="built_in">require</span>(<span class="string">&#x27;@cloudscope-cli/package&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> log = <span class="built_in">require</span>(<span class="string">&#x27;@cloudscope-cli/log&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">SETTINGS</span> = &#123;</span><br><span class="line">    <span class="attr">init</span>: <span class="string">&#x27;@cloudscope-cli/init&#x27;</span></span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">exec</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 1. targetPath -&gt; modulePath</span></span><br><span class="line">   <span class="comment">// 2. modulePath -&gt; Package(npm模块)</span></span><br><span class="line">   <span class="comment">// 3. Package.getRootFile(获取入口文件)</span></span><br><span class="line">   <span class="comment">// 4. Package.update / Package.install&#x27;</span></span><br><span class="line">    <span class="keyword">let</span> targetPath = process.<span class="property">env</span>.<span class="property">CLI_TARGET_PATH</span></span><br><span class="line">    <span class="keyword">const</span> homePath = process.<span class="property">env</span>.<span class="property">CLI_HOME_PATH</span></span><br><span class="line">    <span class="keyword">let</span> storeDir =<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">let</span> pkg;</span><br><span class="line">    log.<span class="title function_">verbose</span>(<span class="string">&#x27;targetPath&#x27;</span>, targetPath);</span><br><span class="line">    log.<span class="title function_">verbose</span>(<span class="string">&#x27;homePath&#x27;</span>, homePath);</span><br><span class="line">    <span class="keyword">const</span> cmdObj = <span class="variable language_">arguments</span>[<span class="variable language_">arguments</span>.<span class="property">length</span> - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">const</span> cmdName = cmdObj.<span class="title function_">name</span>(); </span><br><span class="line">    <span class="keyword">const</span> packageName = <span class="variable constant_">SETTINGS</span>[cmdName];</span><br><span class="line">    <span class="keyword">const</span> packageVersion = <span class="string">&#x27;latest&#x27;</span>;</span><br><span class="line">     pkg = <span class="keyword">new</span> <span class="title class_">Package</span>(&#123;</span><br><span class="line">        targetPath,</span><br><span class="line">        storeDir,</span><br><span class="line">        packageName,</span><br><span class="line">        packageVersion</span><br><span class="line">     &#125;)</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(pkg)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = exec;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//models/package/lib/index.js</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> &#123; isObject &#125;  = <span class="built_in">require</span>(<span class="string">&#x27;@liugezhou-cli-dev/utils&#x27;</span>);</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Package</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">options</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>( !options)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Package类的options参数不能为空！&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>( !<span class="title function_">isObject</span>(options) )&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Package类的options参数必须为对象！&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// package路径</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">targetPath</span> = options.<span class="property">targetPath</span></span><br><span class="line">        <span class="comment">// package的存储路径</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">storeDir</span> = options.<span class="property">storeDir</span></span><br><span class="line">        <span class="comment">// package的name</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">packageName</span> = options.<span class="property">packageName</span></span><br><span class="line">        <span class="comment">// package的version</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">packageVersion</span> = options.<span class="property">packageVersion</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断当前Package是否存在</span></span><br><span class="line">    <span class="title function_">exists</span>(<span class="params"></span>)&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 安装Package</span></span><br><span class="line">    <span class="title function_">install</span>(<span class="params"></span>)&#123;&#125;</span><br><span class="line">    <span class="comment">//更新Package</span></span><br><span class="line">    <span class="title function_">update</span>(<span class="params"></span>)&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取入口文件路径</span></span><br><span class="line">    <span class="title function_">getRootFilePath</span>(<span class="params"></span>)&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">Package</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//utils/utils/lib/index.js</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">isObject</span>(<span class="params">obj</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(obj).<span class="title function_">slice</span>(<span class="number">8</span>,-<span class="number">1</span>) === <span class="string">&#x27;Object&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line"> isObject </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4-5 Package类获取入口文件路径功能开发（pkg-dir应用+解决不同操作系统路径兼容问题）</strong><br>(本节有代码编写)<br>本节主要实现models/package/lib/index.js中获取入口文件路径的方法实现getRootfile()</p><blockquote><p>思路：</p><ol><li>获取package.json的所在目录–通过安装pkg-dir库</li><li>读取package.json</li><li>寻找main/lib</li><li>路径的兼容macOS/windows --新建包：utils/format-path，且新建路径兼容方法</li></ol></blockquote><p>核心代码为</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//core/exec/lib/index.js</span></span><br><span class="line">…………</span><br><span class="line"><span class="comment">// 1. 获取package.json所在目录</span></span><br><span class="line"><span class="keyword">const</span> dir = <span class="title function_">pkgDir</span>(targetPath);</span><br><span class="line"><span class="keyword">if</span> (dir) &#123;</span><br><span class="line">  <span class="comment">// 2. 读取package.json</span></span><br><span class="line">  <span class="keyword">const</span> pkgFile = <span class="built_in">require</span>(path.<span class="title function_">resolve</span>(dir, <span class="string">&#x27;package.json&#x27;</span>));</span><br><span class="line">  <span class="comment">// 3. 寻找main/lib</span></span><br><span class="line">  <span class="keyword">if</span> (pkgFile &amp;&amp; pkgFile.<span class="property">main</span>) &#123;</span><br><span class="line">    <span class="comment">// 4. 路径的兼容(macOS/windows)</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">formatPath</span>(path.<span class="title function_">resolve</span>(dir, pkgFile.<span class="property">main</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">…………</span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">formatPath</span>(<span class="params">p</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> sep = path.<span class="property">sep</span>;</span><br><span class="line">    <span class="keyword">if</span>(p &amp;&amp; <span class="keyword">typeof</span> p === <span class="string">&#x27;string&#x27;</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(sep !==<span class="string">&#x27;/&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> p.<span class="title function_">replace</span>(<span class="regexp">/\\/g</span>,<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = formatPath;</span><br></pre></td></tr></table></figure><p><strong>4-6 利用npminstall库安装npm模块</strong></p><p>(本节有代码编写)<br>本节实现的内容为exec中的install方法,通过npminstall这个库。</p><blockquote><p>使用之前现在测试项目下使用之：<a href="https://github.com/liugezhou/liugezhou-yargs-demo/blob/main/bin/npminstall.js">测试代码</a>。</p></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> npminstall = <span class="built_in">require</span>(<span class="string">&#x27;npminstall&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> userHome = <span class="built_in">require</span>(<span class="string">&#x27;user-home&#x27;</span>)</span><br><span class="line"><span class="title function_">npminstall</span>(&#123;</span><br><span class="line">    <span class="attr">root</span>: path.<span class="title function_">resolve</span>(userHome,<span class="string">&#x27;.cli-test&#x27;</span>), <span class="comment">//模块路径</span></span><br><span class="line">    <span class="attr">storeDir</span>: path.<span class="title function_">resolve</span>(userHome,<span class="string">&#x27;.cli-test&#x27;</span>,<span class="string">&#x27;node_modules&#x27;</span>) ,</span><br><span class="line">    <span class="attr">registry</span>:<span class="string">&#x27;https://registry.npmjs.org&#x27;</span>,</span><br><span class="line">    <span class="attr">pkgs</span>:[</span><br><span class="line">        &#123;<span class="attr">name</span>:<span class="string">&#x27;foo&#x27;</span>,<span class="attr">version</span>:<span class="string">&#x27;~1.0.0&#x27;</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><ol><li>首先，我们的项目在开发过程中可能会有错误，有的需要去看执行栈，有的不需要，因此我们在core/cli/lib/index中的core方法中，catch语句中加入如下代码(debug模式下显示执行栈错误)</li></ol></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(program.<span class="title function_">opts</span>().<span class="property">debug</span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>2.在core/exec/lib/index.js文件中，我们修改代码如下(主要加入了如果不存在targetPath的逻辑梳理)：</p></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)   <span class="comment">//新添加</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Package</span> = <span class="built_in">require</span>(<span class="string">&#x27;@cloudscope-cli/package&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> log = <span class="built_in">require</span>(<span class="string">&#x27;@cloudscope-cli/log&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">SETTINGS</span> = &#123;      <span class="comment">//新添加</span></span><br><span class="line">    <span class="attr">init</span>: <span class="string">&#x27;@imooc-cli/init&#x27;</span></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">CATCH_DIR</span> = <span class="string">&#x27;dependencies&#x27;</span>  <span class="comment">//新添加</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">exec</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> targetPath = process.<span class="property">env</span>.<span class="property">CLI_TARGET_PATH</span></span><br><span class="line">    <span class="keyword">const</span> homePath = process.<span class="property">env</span>.<span class="property">CLI_HOME_PATH</span></span><br><span class="line">    <span class="keyword">let</span> storeDir =<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">let</span> pkg;</span><br><span class="line">    log.<span class="title function_">verbose</span>(<span class="string">&#x27;targetPath&#x27;</span>, targetPath);</span><br><span class="line">    log.<span class="title function_">verbose</span>(<span class="string">&#x27;homePath&#x27;</span>, homePath);</span><br><span class="line">    <span class="keyword">const</span> cmdObj = <span class="variable language_">arguments</span>[<span class="variable language_">arguments</span>.<span class="property">length</span> - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">const</span> cmdName = cmdObj.<span class="title function_">name</span>(); </span><br><span class="line">    <span class="keyword">const</span> packageName = <span class="variable constant_">SETTINGS</span>[cmdName];</span><br><span class="line">    <span class="keyword">const</span> packageVersion = <span class="string">&#x27;latest&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(!targetPath)&#123;</span><br><span class="line">       <span class="comment">//生成缓存路径</span></span><br><span class="line">       targetPath = path.<span class="title function_">resolve</span>(homePath,<span class="variable constant_">CATCH_DIR</span>);  <span class="comment">//新添加</span></span><br><span class="line">       storeDir = path.<span class="title function_">resolve</span>(targetPath,<span class="string">&#x27;node_modules&#x27;</span>)  <span class="comment">//新添加</span></span><br><span class="line">       log.<span class="title function_">verbose</span>(<span class="string">&#x27;targetPath:&#x27;</span>,targetPath)  <span class="comment">//新添加</span></span><br><span class="line">       log.<span class="title function_">verbose</span>(<span class="string">&#x27;storeDir:&#x27;</span>,storeDir)      <span class="comment">//新添加</span></span><br><span class="line">       pkg = <span class="keyword">new</span> <span class="title class_">Package</span>(&#123;     <span class="comment">//新添加</span></span><br><span class="line">         targetPath,</span><br><span class="line">         storeDir,</span><br><span class="line">         packageName,</span><br><span class="line">         packageVersion</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">if</span>(<span class="keyword">await</span> pkg.<span class="title function_">exists</span>())&#123;    <span class="comment">//新添加</span></span><br><span class="line">         <span class="comment">// 更新package</span></span><br><span class="line">         log.<span class="title function_">verbose</span>(<span class="string">&#x27;更新package&#x27;</span>)</span><br><span class="line">         <span class="keyword">await</span> pkg.<span class="title function_">update</span>();</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">         <span class="comment">// 安装package</span></span><br><span class="line">         <span class="keyword">await</span> pkg.<span class="title function_">install</span>();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      pkg = <span class="keyword">new</span> <span class="title class_">Package</span>(&#123;</span><br><span class="line">         targetPath,</span><br><span class="line">         packageName,</span><br><span class="line">         packageVersion</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">const</span> rootFile = pkg.<span class="title function_">getRootFilePath</span>();</span><br><span class="line">      <span class="keyword">if</span>(rootFile)&#123;    <span class="comment">//新添加</span></span><br><span class="line">         <span class="built_in">require</span>(rootFile).<span class="title function_">apply</span>(<span class="literal">null</span>,<span class="variable language_">arguments</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = exec;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><ol start="3"><li>model/package包中文件主要加入了安装package这个方法,使用了npminstall这个库。</li></ol></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//models/package/lib/ibdex.js</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">async</span> <span class="title function_">install</span>(<span class="params"></span>)&#123;</span><br><span class="line">   <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">prepare</span>()</span><br><span class="line">   <span class="keyword">return</span> <span class="title function_">npminstall</span>(&#123;</span><br><span class="line">     <span class="attr">root</span>: <span class="variable language_">this</span>.<span class="property">targetPath</span>,</span><br><span class="line">     <span class="attr">storeDir</span>: <span class="variable language_">this</span>.<span class="property">storeDir</span>,</span><br><span class="line">     <span class="attr">registry</span>:<span class="title function_">getDefaultRegistry</span>(),</span><br><span class="line">     <span class="attr">pkg</span>:&#123;</span><br><span class="line">       <span class="attr">name</span>:<span class="variable language_">this</span>.<span class="property">packageName</span>,</span><br><span class="line">       <span class="attr">version</span>:<span class="variable language_">this</span>.<span class="property">packageVersion</span></span><br><span class="line">     &#125;</span><br><span class="line">   &#125;)</span><br><span class="line"> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>4-7 Package类判断模块是否存在方法开发</strong><br>(本节有代码编写)<br>本节的主要内容是实现package/lib/index.js中的exists方法，代码实现如下：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">…………</span><br><span class="line"></span><br><span class="line"> <span class="comment">// package的缓存目录前缀</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cacheFilePathPrefix</span> = <span class="variable language_">this</span>.<span class="property">packageName</span>.<span class="title function_">replace</span>(<span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;_&#x27;</span>)</span><br><span class="line"></span><br><span class="line">…………</span><br><span class="line"><span class="keyword">get</span> <span class="title function_">cacheFilePath</span>() &#123;</span><br><span class="line">  <span class="keyword">return</span> path.<span class="title function_">resolve</span>(<span class="variable language_">this</span>.<span class="property">storeDir</span>,<span class="string">`_<span class="subst">$&#123;<span class="variable language_">this</span>.cacheFilePathPrefix&#125;</span>@<span class="subst">$&#123;<span class="variable language_">this</span>.packageVersion&#125;</span>@<span class="subst">$&#123;<span class="variable language_">this</span>.packageName&#125;</span>`</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">prepare</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">storeDir</span> &amp;&amp; !<span class="title function_">pathExists</span>(<span class="variable language_">this</span>.<span class="property">storeDir</span>))&#123;</span><br><span class="line">    fse.<span class="title function_">mkdirpSync</span>(<span class="variable language_">this</span>.<span class="property">storeDir</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">packageVersion</span> === <span class="string">&#x27;latest&#x27;</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">packageVersion</span> = <span class="keyword">await</span> <span class="title function_">getNpmLatestVersion</span>(<span class="variable language_">this</span>.<span class="property">packageName</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">exists</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">storeDir</span>)&#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">prepare</span>() </span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">pathExists</span>(<span class="variable language_">this</span>.<span class="property">cacheFilePath</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">pathExists</span>(<span class="variable language_">this</span>.<span class="property">targetPath</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4-8 Package类更新模块逻辑开发</strong></p><p>(本节有代码编写)<br>本节内容主要为如果Package包有升级，那么需要去更新，主要实现代码为：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// models/package/lib/index.js</span></span><br><span class="line"></span><br><span class="line">…………</span><br><span class="line"><span class="title function_">getSpecificCacheFilePath</span>(<span class="params">packageVersion</span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> path.<span class="title function_">resolve</span>(<span class="variable language_">this</span>.<span class="property">storeDir</span>,<span class="string">`_<span class="subst">$&#123;<span class="variable language_">this</span>.cacheFilePathPrefix&#125;</span>@<span class="subst">$&#123;packageVersion&#125;</span>@<span class="subst">$&#123;<span class="variable language_">this</span>.packageName&#125;</span>`</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新Package</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">update</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">//获取最新的npm模块版本号</span></span><br><span class="line">  <span class="keyword">const</span> latestPackageVersion = <span class="keyword">await</span> <span class="title function_">getNpmLatestVersion</span>(<span class="variable language_">this</span>.<span class="property">packageName</span>);</span><br><span class="line">  <span class="comment">// 查询最新版本号对应的路径是否存在</span></span><br><span class="line">  <span class="keyword">const</span> latestFilePath = <span class="variable language_">this</span>.<span class="title function_">getSpecificCacheFilePath</span>(latestPackageVersion)</span><br><span class="line">  <span class="comment">// 如果不存在，则直接安装最新版本</span></span><br><span class="line">  <span class="keyword">if</span>(!<span class="title function_">pathExists</span>(latestFilePath))&#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">npminstall</span>(&#123;</span><br><span class="line">      <span class="attr">root</span>:<span class="variable language_">this</span>.<span class="property">targetPath</span>,</span><br><span class="line">      <span class="attr">storeDir</span>:<span class="variable language_">this</span>.<span class="property">storeDir</span>,</span><br><span class="line">      <span class="attr">registry</span>:<span class="title function_">getDefaultRegistry</span>(),</span><br><span class="line">      <span class="attr">pkgs</span>:[&#123;</span><br><span class="line">        <span class="attr">name</span>:<span class="variable language_">this</span>.<span class="property">packageName</span>,</span><br><span class="line">        <span class="attr">version</span>:latestPackageVersion</span><br><span class="line">      &#125;</span><br><span class="line">           ]</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">packageVersion</span> = latestPackageVersion</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">packageVersion</span> = latestPackageVersion</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> latestFilePath;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4-9 Package类获取缓存模块入口文件功能改造</strong></p><p>(本节有代码编写)</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取入口文件路径</span></span><br><span class="line">    <span class="title function_">getRootFilePath</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">_getRootFile</span>(<span class="params">targetPath</span>) &#123;</span><br><span class="line">            <span class="comment">// 1. 获取package.json所在目录</span></span><br><span class="line">            <span class="keyword">const</span> dir = <span class="title function_">pkgDir</span>(targetPath);</span><br><span class="line">            <span class="keyword">if</span> (dir) &#123;</span><br><span class="line">              <span class="comment">// 2. 读取package.json</span></span><br><span class="line">              <span class="keyword">const</span> pkgFile = <span class="built_in">require</span>(path.<span class="title function_">resolve</span>(dir, <span class="string">&#x27;package.json&#x27;</span>));</span><br><span class="line">              <span class="comment">// 3. 寻找main/lib</span></span><br><span class="line">              <span class="keyword">if</span> (pkgFile &amp;&amp; pkgFile.<span class="property">main</span>) &#123;</span><br><span class="line">                <span class="comment">// 4. 路径的兼容(macOS/windows)</span></span><br><span class="line">                <span class="keyword">return</span> <span class="title function_">formatPath</span>(path.<span class="title function_">resolve</span>(dir, pkgFile.<span class="property">main</span>));</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">storeDir</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">_getRootFile</span>(<span class="variable language_">this</span>.<span class="property">cacheFilePath</span>);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">_getRootFile</span>(<span class="variable language_">this</span>.<span class="property">targetPath</span>);</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>ps：关于项目的代码以上就结束了，代码提交至：<a href="https://github.com/liugezhou/cloudscope-cli/tree/lesson04">lesson04</a></p><h2 id="第五章：预备知识：Node-多进程开发入门">第五章：预备知识：Node 多进程开发入门</h2><p><strong>5-1 进程的基本概念(讲解在操作系统中如何查看进程的嵌套关系)</strong></p><blockquote><p>官方文档中文版： <a href="http://nodejs.cn/api/child_process.html">http://nodejs.cn/api/child_process.html</a></p><p>进程：进程(Process)是计算机中的程序关于某数据集合上的一次运行活动，是系统进行资源分配和调度的基本单元，是操作系统结构的基础。<br>概念主要两点：</p><ul><li>第一，进程是一个实体。每一个进程都有它自己的地址空间。</li><li>第二，进程是一个“执行中的程序”，存在嵌套关系</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/4-4.4uu4pjciaww0.webp" alt="4-4"></p><blockquote><p>Node进程存在的感知：<br>终端中输入：ps -ef | grep node 命令。</p><ul><li>UID是当前用户获取权限的ID</li><li>PID是当前进程ID</li><li>PPID是当前进程ID的父ID</li></ul></blockquote><blockquote><p>使用webstorm调试一个node程序的图示如下：</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/4-5.1th8sx2izpb4.webp" alt="4-5"></p><p><strong>5-2 child_process异步方法使用教程（exec&amp;execFile）</strong><br>child_process用法:</p><blockquote><p>异步用法</p><ul><li>exec</li><li>execFile</li><li>fork</li><li>spawn</li></ul></blockquote><p>同步用法</p><blockquote><ul><li>execSync</li><li>execFileSync</li><li>spawnSync</li></ul></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//exec使用方法demo</span></span><br><span class="line"><span class="keyword">const</span> cp = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cp.<span class="title function_">exec</span>(<span class="string">&#x27;ls -al&#x27;</span>,<span class="keyword">function</span>(<span class="params">err,stdout,stderr</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(stdout)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(stderr)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//execFile使用方法demo</span></span><br><span class="line">cp.<span class="title function_">execFile</span>(<span class="string">&#x27;ls&#x27;</span>,[<span class="string">&#x27;-al&#x27;</span>],<span class="keyword">function</span>(<span class="params">err,stdout,stderr</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(stdout)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(stderr)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>小结：exec和execFile在输出上看不出来区别。</p><blockquote><ul><li>exec主要用来执行一个shell命令，本质是execFile，只是参数不同，不支持传入arguments参数。</li><li>execFile只能执行一个文件，且加入一些命令，不能使用管道符。</li></ul></blockquote><p><strong>5-3 child_process spawn用法以及与exec&amp;execFile的区别</strong></p><blockquote><p>exec、execFile、fork底层都是使用的spawn。<br>spawn使用的时候，没有回调，需要监听获取结果。    <br>新建一个test.shell文件的时候，如果要读取这个文件，那么需要添加权限：chmod +x test.shell</p></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cp = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> child = cp.<span class="title function_">spawn</span>(path.<span class="title function_">resolve</span>(__dirname,<span class="string">&#x27;test.shell&#x27;</span>),[<span class="string">&#x27;-al&#x27;</span>,<span class="string">&#x27;-bl&#x27;</span>],&#123;</span><br><span class="line">    <span class="attr">cwd</span>:path.<span class="title function_">resolve</span>(<span class="string">&#x27;..&#x27;</span>)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(child.pid,process.pid)</span></span><br><span class="line">child.<span class="property">stdout</span>.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>,<span class="keyword">function</span>(<span class="params">chunk</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;stdout&#x27;</span>,chunk.<span class="title function_">toString</span>())</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">child.<span class="property">stderr</span>.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>,<span class="keyword">function</span>(<span class="params">chunk</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;stderr&#x27;</span>,chunk.<span class="title function_">toString</span>())</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>spawn:耗时任务(比如 npm install)：    不断打印日志<br>exec/execFile:耗时、开销比较小的任务:    一次性返回结果。<br>fork：多进程、多线程的下载。</p></blockquote><p><strong>5-4 child_process fork用法及父子进程通信机制讲解</strong></p><blockquote><p>fork主要是使用node来执行我们的命令。<br>fork会执行两个进程 主进程与子进程。<br>fork的本质也是调用spawn。</p></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">const</span> cp = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> child = cp.<span class="title function_">fork</span>(path.<span class="title function_">resolve</span>(__dirname,<span class="string">&#x27;child.js&#x27;</span>))</span><br><span class="line">child.<span class="title function_">send</span>(<span class="string">&#x27;hello child process！&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// child.disconnect()</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;main pid:&#x27;</span>,process.<span class="property">pid</span>)</span><br><span class="line"></span><br><span class="line">child.<span class="title function_">on</span>(<span class="string">&#x27;message&#x27;</span>,<span class="function"><span class="params">msg</span> =&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(msg)</span><br><span class="line">    child.<span class="title function_">disconnect</span>()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//child.js</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;child pid：&#x27;</span>,process.<span class="property">pid</span>)</span><br><span class="line"></span><br><span class="line">process.<span class="title function_">on</span>(<span class="string">&#x27;message&#x27;</span>, <span class="function">(<span class="params">msg</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(msg)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">process.<span class="title function_">send</span>(<span class="string">&#x27;hello main process!&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>5-5 child_process同步方法使用教程</strong></p><blockquote><ul><li>execSync</li><li>execFileSync</li><li>spawnSync</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cp = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//execSync</span></span><br><span class="line"><span class="keyword">const</span> ret = cp.<span class="title function_">execSync</span>(<span class="string">&#x27;ls -al | grep index.js&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ret.<span class="title function_">toString</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">//execFileSync</span></span><br><span class="line"><span class="keyword">const</span> ret2 = cp.<span class="title function_">execFileSync</span>(<span class="string">&#x27;ls&#x27;</span>, [<span class="string">&#x27;-al&#x27;</span>])</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ret2.<span class="title function_">toString</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">//spawnSync</span></span><br><span class="line"><span class="keyword">const</span> ret3 = cp.<span class="title function_">spawnSync</span>(<span class="string">&#x27;ls&#x27;</span>,[<span class="string">&#x27;-al&#x27;</span>])</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ret3.<span class="property">stdout</span>.<span class="title function_">toString</span>())</span><br></pre></td></tr></table></figure><h2 id="第六章-基于-Node-多进程构建高性能脚手架">第六章 基于 Node 多进程构建高性能脚手架</h2><p><strong>6-1 通过脚手架命令Command类封装</strong></p><p>(本节有代码编写)</p><blockquote><ul><li>在 model文件夹下安装Command包：lerna create @cloudscope-cli/command</li><li>在commands/init 的package.json中引入上面新创建的包command，继承它作为它的子类。</li></ul></blockquote><blockquote><p>然后我们来到新建的command包的lib/index文件中,添加如下代码(同时删除core/cli/lib/index.js中关于checNodeVersion方法的代码)：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> semver = <span class="built_in">require</span>(<span class="string">&#x27;semver&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> colors = <span class="built_in">require</span>(<span class="string">&#x27;colors/safe&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span>  <span class="variable constant_">LOWEST_NODE_VERSION</span> = <span class="string">&#x27;12.0.0&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Command</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">argv</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_argv</span> = argv</span><br><span class="line">        <span class="keyword">let</span> runner = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> chain = <span class="title class_">Promise</span>.<span class="title function_">resolve</span>()</span><br><span class="line">            chain = chain.<span class="title function_">then</span>(<span class="function">()=&gt;</span> <span class="variable language_">this</span>.<span class="title function_">checkNodeVersion</span>())</span><br><span class="line">            chain.<span class="title function_">catch</span>(<span class="function"><span class="params">e</span> =&gt;</span>&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">message</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">     <span class="title function_">checkNodeVersion</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> currentNodeVersion = process.<span class="property">version</span></span><br><span class="line">        <span class="keyword">const</span> lowestNodeVersion = <span class="variable constant_">LOWEST_NODE_VERSION</span></span><br><span class="line">        <span class="keyword">if</span>(semver.<span class="title function_">ltr</span>(currentNodeVersion, lowestNodeVersion)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(colors.<span class="title function_">red</span>(<span class="string">`cloudscope-cli 需要安装 v<span class="subst">$&#123;lowestNodeVersion&#125;</span>以上版本的node.js`</span>))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">init</span>(<span class="params"></span>)&#123;</span><br><span class="line">         <span class="keyword">throw</span> <span class="title class_">Error</span>(<span class="string">&#x27;init必须实现&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">exec</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="title class_">Error</span>(<span class="string">&#x27;exec必须实现&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">Command</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>接着，我们来到commands/init/lib/index.js文件中，进行代码的改写：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Command</span> = <span class="built_in">require</span>(<span class="string">&#x27;@cloudscope-cli/command&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">InitCommand</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Command</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// function init(projectName,options,command)  &#123;</span></span><br><span class="line">    <span class="comment">// console.log(&#x27;init&#x27;,projectName,command.opts().force,process.env.CLI_TARGET_PATH)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">init</span>(<span class="params">argv</span>)  &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">InitCommand</span>(argv)</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = init</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>.<span class="property">InitCommand</span> = <span class="title class_">InitCommand</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里的argv参数传递是从 exec/lib/index.js中的require传递过来的，因此参数传递修改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(rootFile).<span class="title function_">apply</span>(<span class="literal">null</span>,<span class="variable language_">arguments</span>);</span><br><span class="line"><span class="comment">//修改为</span></span><br><span class="line"><span class="built_in">require</span>(rootFile).<span class="title function_">call</span>(<span class="literal">null</span>,<span class="title class_">Array</span>.<span class="title function_">from</span>(<span class="variable language_">arguments</span>));</span><br></pre></td></tr></table></figure><p><strong>6-2 脚手架参数初始化方法开发</strong></p><p>(本节有代码编写)</p><blockquote><ul><li>首先在command包中引入log包，用于chain的catch错误打印(上节代码已更新)</li><li>其次，对于class Comman需要对传入的参数argv进行一个判断，<ul><li>如果为空需要抛出异常，这里需要注意抛出的异常在core/cli/lib/index.js中并没有捕获，需要在core/exec/lib/index.js中require的这个targetPath文件进行try catch捕获。</li><li>对argv这个参数进行是否对数组的判断。</li><li>对argv是否为空数组进行判断</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!argv)&#123;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;argv参数不能为空&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title class_">Array</span>.<span class="title function_">isArray</span>(argv))&#123;</span><br><span class="line"> <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;argv参数必须为数组&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(argv.<span class="property">length</span> &lt; <span class="number">1</span>)&#123;</span><br><span class="line"> <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;参数列表为空&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在chain里面实现initArgs方法：主要用来进行参数的分解，将argv最后一个参数与之前的参数装到两个参数中去。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//chain逻辑</span></span><br><span class="line"><span class="keyword">let</span> chain = <span class="title class_">Promise</span>.<span class="title function_">resolve</span>()</span><br><span class="line"> chain = chain.<span class="title function_">then</span>(<span class="function">()=&gt;</span> <span class="variable language_">this</span>.<span class="title function_">checkNodeVersion</span>())</span><br><span class="line">chain = chain.<span class="title function_">then</span>(<span class="function">()=&gt;</span> <span class="variable language_">this</span>.<span class="title function_">initArgs</span>())</span><br><span class="line">chain = chain.<span class="title function_">then</span>(<span class="function">()=&gt;</span> <span class="variable language_">this</span>.<span class="title function_">init</span>())</span><br><span class="line">chain = chain.<span class="title function_">then</span>(<span class="function">()=&gt;</span> <span class="variable language_">this</span>.<span class="title function_">exec</span>())</span><br><span class="line">chain.<span class="title function_">catch</span>(<span class="function"><span class="params">e</span> =&gt;</span>&#123;</span><br><span class="line"> log.<span class="title function_">error</span>(e.<span class="property">message</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title function_">initArgs</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> len = <span class="variable language_">this</span>.<span class="property">_argv</span>.<span class="property">length</span> - <span class="number">1</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">_cmd</span> = <span class="variable language_">this</span>.<span class="property">_argv</span>[len].<span class="title function_">opts</span>()   <span class="comment">//commander版本号为7.0.0需要加opts()</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">_argv</span> = <span class="variable language_">this</span>.<span class="property">_argv</span>.<span class="title function_">slice</span>(<span class="number">0</span>,len)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>chain中的init方法与exec均抛出异常，需要由子类去实现：即commands/init/lib/index.js.<br><strong>6-3 利用Node多进程动态执行命令（stdio的inherit属性讲解）</strong></p></blockquote><p>(本节有代码编写)</p><blockquote><p>我们回到exec/lib/index.js中，其中之前的那行代码<br>require(rootFile).call(null,Array.from(<strong>arguments</strong>));<br>是在当前进程中调用的，我们需要修改为在node进程中进行调用，这便是本节的重点。</p></blockquote><blockquote><p>我们通过本周第五章的内容，已经知道了如何使用child_process下的同步或者异步方法进行子进程的执行，这里我有两种方法可以使用</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cp = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>)</span><br><span class="line"><span class="comment">// cp.fork()  //这里因为fork没有回调，需要通过通信的方式来获取结果，所以这里不推荐</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//之所以不用spawnSync是因为，我们在执行这里的时候是需要不断的用户交互的，需要不断的收到数据打印结果，不要一次性</span></span><br><span class="line"><span class="keyword">const</span> child = cp.<span class="title function_">spawn</span>(<span class="string">&#x27;node&#x27;</span>,[<span class="string">&#x27;-e&#x27;</span>,code],&#123;</span><br><span class="line"><span class="attr">cwd</span>:process.<span class="title function_">cwd</span>(),</span><br><span class="line">  <span class="attr">stdio</span>:<span class="string">&#x27;inherit&#x27;</span>   <span class="comment">// 加入这行代码，下面的就可以注释掉了</span></span><br><span class="line">&#125;) </span><br><span class="line"><span class="comment">// child.stdout.on(&#x27;data&#x27;,(chunk =&gt;&#123;</span></span><br><span class="line"><span class="comment">// &#125;))</span></span><br><span class="line"><span class="comment">// child.stderr.on(&#x27;data&#x27;,(chunk =&gt;&#123;</span></span><br><span class="line"><span class="comment">// &#125;))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 当然存在错误的情况，我们还是需要添加两个监听事件</span></span><br><span class="line">child.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span>&#123;</span><br><span class="line">  log.<span class="title function_">error</span>(e.<span class="property">message</span>);</span><br><span class="line">  process.<span class="title function_">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;)</span><br><span class="line">child.<span class="title function_">on</span>(<span class="string">&#x27;exit&#x27;</span>, <span class="function"><span class="params">e</span>=&gt;</span>&#123;</span><br><span class="line">  log.<span class="title function_">verbose</span>(<span class="string">&#x27;命令执行成功&#x27;</span> + e);</span><br><span class="line">  process.<span class="title function_">exit</span>(e);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>spawn方法中的参数stdio默认值为’pipe’管道，pipe使得主进程与子进程会产生通信通道，因此需要通过on这种方式去进行监听。<br>stdio还有一个值为’inherit’，它将相应的stdio传给父进程或者从父进程传入。也就是说：直接将process.stdin、process.stdout、process.stderr直接和父进程进行绑定，这样就无须去监听结果，可以直接将结果打印出来。</p></blockquote><p><strong>6-4 生成Node多进程动态执行代码</strong></p><p>(本节有代码编写)</p><blockquote><p>通过上一节的学习，我们通过代码const args = Array.from(<strong>arguments</strong>)<br>const cmd = args[args.length - 1]可以知道，现在需要做的就是拼成上面spawn在执行时所需的code<br>我们之前的代码为  <em>require(rootFile).call(null,Array.from(arguments));</em><br>_<br>也就是兼容 conse code = <code>require(rootFile).call(null,Array.from(arguments));</code><br>rootfile -&gt; ${rootfile},难点是  Array.from(arguments)的传入。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> args = <span class="title class_">Array</span>.<span class="title function_">from</span>(<span class="variable language_">arguments</span>)</span><br><span class="line"><span class="keyword">const</span> cmd = args[args.<span class="property">length</span> - <span class="number">1</span>]   <span class="comment">// 拿到command，且进行瘦身，对不需要的参数进行过滤</span></span><br><span class="line"><span class="keyword">const</span> o = <span class="title class_">Object</span>.<span class="title function_">create</span>(<span class="literal">null</span>)</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">keys</span>(cmd).<span class="title function_">forEach</span>(<span class="function"><span class="params">key</span>=&gt;</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(cmd.<span class="title function_">hasOwnProperty</span>(key) &amp;&amp; !key.<span class="title function_">startsWith</span>(<span class="string">&#x27;_&#x27;</span>)&amp;&amp; key!==<span class="string">&#x27;parent&#x27;</span>)&#123;</span><br><span class="line">     o[key]=cmd[key]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">args[args.<span class="property">length</span>-<span class="number">1</span>] = o</span><br><span class="line"><span class="keyword">const</span> code = <span class="string">`require(&#x27;<span class="subst">$&#123;rootFile&#125;</span>&#x27;).call(null,<span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(args)&#125;</span>)`</span></span><br></pre></td></tr></table></figure><blockquote><p>注：由于我使用的commander是7.0.0的，低于此版本传入的参数为两个，但7.0.0版本传入参数为3个，因此上面的代码，我这里直接写成(不知道后续是否还会有错误)：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> args = <span class="title class_">Array</span>.<span class="title function_">from</span>(<span class="variable language_">arguments</span>).<span class="title function_">splice</span>(<span class="number">0</span>,<span class="number">2</span>)</span><br><span class="line"><span class="keyword">const</span> code = <span class="string">`require(&#x27;<span class="subst">$&#123;rootFile&#125;</span>&#x27;).call(null,<span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(args)&#125;</span>)`</span></span><br></pre></td></tr></table></figure><p>到这里，使用node多进程执行代码的功能就完成了。</p><p><strong>6-5 windows操作系统spawn执行命令兼容</strong></p><p>(本节有代码编写)</p><blockquote><p>windows操作系统与macOS关于spawn的执行是不一样的，本节解决的就是windows操作系统下的兼容<br>将本方法封装在utils/utils包中：通过process.platform来判断操作系统</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">exec</span>(<span class="params">command,args,options</span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> win32 = process.<span class="property">platform</span> === <span class="string">&#x27;win32&#x27;</span>;</span><br><span class="line">  <span class="keyword">const</span> cmd = win32 ? <span class="string">&#x27;cmd&#x27;</span>: command</span><br><span class="line">  <span class="keyword">const</span> cmdArgs = win32  ?  [<span class="string">&#x27;/c&#x27;</span>].<span class="title function_">concat</span>(command,args) : args;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>).<span class="title function_">spawn</span>(cmd, cmdArgs,options || &#123;&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到以上为止，我们完成了动态命令的加载和执行。</p><h2 id="第七章-加餐：Node-进阶：-child-process-源码分析">第七章 加餐：Node 进阶： child_process 源码分析</h2><p><strong>7-1 Node多进程child_process库exec方法源码执行流程分析</strong></p><p>疑问和收获：</p><blockquote><p>exec和execFile到底有什么区别？<br>为什么exec/execFile/fork都是通过spawn实现的，spawn的作用到底是什么？<br>为什么spawn调用后没有回调，而exec和execFile能够回调？<br>为什么spawn调用后需要手动调用child.stdout.on(‘data’,callback),这里的child.stdout/child.stderr到底是什么？<br>为什么有data/error/exit/close这么多种回调，他们的执行顺序到底是怎样的？</p></blockquote><p>exec源码粗略分析<br><a href="https://www.processon.com/embed/6031cf99f346fb2a7e1b93a3">点击查看【processon】</a></p><blockquote><p>在未学习exec源码之前，我们先对上面的拓扑图进行一个简单的学习，看到exec内部的执行流程<br>不难看到exec执行的是execlFile这个方法，且不同的地方就是传入的参数不同，而execFile执行的是spawn这个方法，且spawn这个方法调用的是node内部库的一个child_process方法。</p></blockquote><p>我们在webstorm中打开一个<a href="https://github.com/liugezhou/liugezhou-yargs-demo">项目</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// /bin/process/index.js</span></span><br><span class="line"><span class="keyword">const</span> cp = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cp.<span class="title function_">exec</span>(<span class="string">&#x27;ls -al|grep node_modules &#x27;</span>,<span class="keyword">function</span>(<span class="params">err,stdout,stderr</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(stdout)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(stderr)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第五行代码打断点，配置webstorm调试设置后，执行命令(我这里是liugezhou-test)，进入到exec源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">exec</span>(<span class="params">command, options, callback</span>) &#123;</span><br><span class="line"> <span class="keyword">const</span> opts = <span class="title function_">normalizeExecArgs</span>(command, options, callback);</span><br><span class="line"> <span class="keyword">return</span> <span class="variable language_">module</span>.<span class="property">exports</span>.<span class="title function_">execFile</span>(opts.<span class="property">file</span>,</span><br><span class="line">                                opts.<span class="property">options</span>,</span><br><span class="line">                                opts.<span class="property">callback</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>正如上面拓扑图画的那样，首先执行一个normalLizeExecArgs方法，然后调用execFile这个方法</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">execFile</span>(<span class="params">file <span class="comment">/* , args, options, callback */</span></span>) &#123;</span><br><span class="line"> ………………</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> child = <span class="title function_">spawn</span>(file, args, &#123;</span><br><span class="line">    <span class="attr">cwd</span>: options.<span class="property">cwd</span>,</span><br><span class="line">    <span class="attr">env</span>: options.<span class="property">env</span>,</span><br><span class="line">    <span class="attr">gid</span>: options.<span class="property">gid</span>,</span><br><span class="line">    <span class="attr">uid</span>: options.<span class="property">uid</span>,</span><br><span class="line">    <span class="attr">shell</span>: options.<span class="property">shell</span>,</span><br><span class="line">    <span class="attr">windowsHide</span>: !!options.<span class="property">windowsHide</span>,</span><br><span class="line">    <span class="attr">windowsVerbatimArguments</span>: !!options.<span class="property">windowsVerbatimArguments</span></span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line"> ………………</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">exithandler</span>(<span class="params">code, signal</span>) &#123;</span><br><span class="line">    ………………</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">callback</span>(ex, stdout, stderr);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">errorhandler</span>(<span class="params">e</span>) &#123;</span><br><span class="line">   ………………</span><br><span class="line">    <span class="title function_">exithandler</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (child.<span class="property">stdout</span>) &#123;</span><br><span class="line">    ………………</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (child.<span class="property">stderr</span>) &#123;</span><br><span class="line">    ………………</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  child.<span class="title function_">addListener</span>(<span class="string">&#x27;close&#x27;</span>, exithandler);</span><br><span class="line">  child.<span class="title function_">addListener</span>(<span class="string">&#x27;error&#x27;</span>, errorhandler);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> child;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>上面代码的4行，我们看到调用了spawn方法。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">spawn</span>(<span class="params">file, args, options</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> opts = <span class="title function_">normalizeSpawnArguments</span>(file, args, options);</span><br><span class="line">  <span class="keyword">const</span> child = <span class="keyword">new</span> <span class="title class_">ChildProcess</span>();</span><br><span class="line">……………………</span><br><span class="line"></span><br><span class="line">  child.<span class="title function_">spawn</span>(&#123;</span><br><span class="line">    <span class="attr">file</span>: opts.<span class="property">file</span>,</span><br><span class="line">    <span class="attr">args</span>: opts.<span class="property">args</span>,</span><br><span class="line">    <span class="attr">cwd</span>: options.<span class="property">cwd</span>,</span><br><span class="line">    <span class="attr">windowsHide</span>: !!options.<span class="property">windowsHide</span>,</span><br><span class="line">    <span class="attr">windowsVerbatimArguments</span>: !!options.<span class="property">windowsVerbatimArguments</span>,</span><br><span class="line">    <span class="attr">detached</span>: !!options.<span class="property">detached</span>,</span><br><span class="line">    <span class="attr">envPairs</span>: opts.<span class="property">envPairs</span>,</span><br><span class="line">    <span class="attr">stdio</span>: options.<span class="property">stdio</span>,</span><br><span class="line">    <span class="attr">uid</span>: options.<span class="property">uid</span>,</span><br><span class="line">    <span class="attr">gid</span>: options.<span class="property">gid</span>,</span><br><span class="line">    <span class="attr">serialization</span>: options.<span class="property">serialization</span>,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> child;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>spawn方法的第2行如拓扑图所示，对参数执行了normalizeSpawnArguments方法，这里通过调试查看参数，发现，opts这个对象的file为 ‘bin/sh’，这里涉及到一个重要的知识点:</p></blockquote><p>shell的使用</p><blockquote><ol><li>直接执行shell文件： /bin/sh test.shell</li><li>直接执行shell语句： /bin/sh -c “ls -al|grep node_modules”</li></ol></blockquote><blockquote><p>spawn方法的第3行 const child = new ChildProcess<br>通过分析，我们知道这个ChildProcess调用的是内部库 internal/child_process的this._handler,再进一步如拓扑图所示，调用的是c++文件，不做继续跟踪。<br>继续往后该方法第6行，spwan方法调用的child.spwan如拓扑图所示，真正调用的是internal/child_process中的spawn–&gt;this._hanlde.spawn方法，该方法执行完毕后，子进程便开启了.</p></blockquote><blockquote><p>在spwan最后返回child后，我们再返回到execFile中，发现child.stdout与child.stderr方法的输出，以及回调f<br>unction exithandler和errorhandler</p></blockquote><p>上面就是对exec源码的略读过程。</p><p><strong>7-2 高能：child_process库exec源码精度</strong></p><blockquote><p>上一节我们阅读了exec源码的第一遍，对答题流程有了认识，这节开始阅读第二遍，进行细节的解读。</p></blockquote><blockquote><p>首先进入到exec的normalizeExecArgs方法，逻辑简单。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">normalizeExecArgs</span>(<span class="params">command, options, callback</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> options === <span class="string">&#x27;function&#x27;</span>) &#123;  <span class="comment">//判断options是否为function，这一步是对参数的兼容以及参数左移动</span></span><br><span class="line">    callback = options;</span><br><span class="line">    options = <span class="literal">undefined</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Make a shallow copy so we don&#x27;t clobber the user&#x27;s options object.</span></span><br><span class="line">  options = &#123; ...options &#125;;</span><br><span class="line">  options.<span class="property">shell</span> = <span class="keyword">typeof</span> options.<span class="property">shell</span> === <span class="string">&#x27;string&#x27;</span> ? options.<span class="property">shell</span> : <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">file</span>: command,</span><br><span class="line">    <span class="attr">options</span>: options,</span><br><span class="line">    <span class="attr">callback</span>: callback</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>然后我们进入到execFile中，分析流程写入到下面代码之中：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// liugehou:此方法只接受了一个参数file，后面的参数通过arguments获取</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">execFile</span>(<span class="params">file <span class="comment">/* , args, options, callback */</span></span>) &#123;</span><br><span class="line">  <span class="comment">// liugezhou:参数初始化</span></span><br><span class="line">  <span class="keyword">let</span> args = [];</span><br><span class="line">  <span class="keyword">let</span> callback;</span><br><span class="line">  <span class="keyword">let</span> options;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Parse the optional positional parameters.</span></span><br><span class="line">  <span class="keyword">let</span> pos = <span class="number">1</span>;</span><br><span class="line">  <span class="comment">//liugezhou:意图为拿到arguments的第一个参数，即options，且需满足options为数组时(显然exec进来不满足这个条件)</span></span><br><span class="line">  <span class="keyword">if</span> (pos &lt; <span class="variable language_">arguments</span>.<span class="property">length</span> &amp;&amp; <span class="title class_">ArrayIsArray</span>(<span class="variable language_">arguments</span>[pos])) &#123;</span><br><span class="line">    args = <span class="variable language_">arguments</span>[pos++];</span><br><span class="line">  <span class="comment">//liugezhou:对exec来说arguments[1]传入的为 &#123;shell:true&#125;,即也不满足这个条件  </span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (pos &lt; <span class="variable language_">arguments</span>.<span class="property">length</span> &amp;&amp; <span class="variable language_">arguments</span>[pos] == <span class="literal">null</span>) &#123;</span><br><span class="line">    pos++;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">// liugezhou:如上一注释，这里是满足的，将&#123;shell:true&#125;赋值给optios</span></span><br><span class="line">  <span class="keyword">if</span> (pos &lt; <span class="variable language_">arguments</span>.<span class="property">length</span> &amp;&amp; <span class="keyword">typeof</span> <span class="variable language_">arguments</span>[pos] === <span class="string">&#x27;object&#x27;</span>) &#123;</span><br><span class="line">    options = <span class="variable language_">arguments</span>[pos++];</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (pos &lt; <span class="variable language_">arguments</span>.<span class="property">length</span> &amp;&amp; <span class="variable language_">arguments</span>[pos] == <span class="literal">null</span>) &#123;</span><br><span class="line">    pos++;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//liugezhou:满足</span></span><br><span class="line">  <span class="keyword">if</span> (pos &lt; <span class="variable language_">arguments</span>.<span class="property">length</span> &amp;&amp; <span class="keyword">typeof</span> <span class="variable language_">arguments</span>[pos] === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">    callback = <span class="variable language_">arguments</span>[pos++];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!callback &amp;&amp; pos &lt; <span class="variable language_">arguments</span>.<span class="property">length</span> &amp;&amp; <span class="variable language_">arguments</span>[pos] != <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_">ERR_INVALID_ARG_VALUE</span>(<span class="string">&#x27;args&#x27;</span>, <span class="variable language_">arguments</span>[pos]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  options = &#123;</span><br><span class="line">    <span class="attr">encoding</span>: <span class="string">&#x27;utf8&#x27;</span>,   <span class="comment">//liugezhou:编码格式</span></span><br><span class="line">    <span class="attr">timeout</span>: <span class="number">0</span>,<span class="comment">//liugezhou：超时时间</span></span><br><span class="line">    <span class="attr">maxBuffer</span>: <span class="variable constant_">MAX_BUFFER</span>,<span class="comment">//liugezhou：缓存区输出的字符串最多的容量(stdout的时候会用到)</span></span><br><span class="line">    <span class="attr">killSignal</span>: <span class="string">&#x27;SIGTERM&#x27;</span>,</span><br><span class="line">    <span class="attr">cwd</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">env</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">shell</span>: <span class="literal">false</span>,</span><br><span class="line">    ...options</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Validate the timeout, if present.</span></span><br><span class="line">  <span class="title function_">validateTimeout</span>(options.<span class="property">timeout</span>); <span class="comment">//liugezhou：判断是否为int，如果不是抛出异常</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Validate maxBuffer, if present.</span></span><br><span class="line">  <span class="title function_">validateMaxBuffer</span>(options.<span class="property">maxBuffer</span>); <span class="comment">//liugezhou:判断是否为number，如果不是抛出异常</span></span><br><span class="line"></span><br><span class="line">  options.<span class="property">killSignal</span> = <span class="title function_">sanitizeKillSignal</span>(options.<span class="property">killSignal</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> child = <span class="title function_">spawn</span>(file, args, &#123;</span><br><span class="line">    <span class="attr">cwd</span>: options.<span class="property">cwd</span>,</span><br><span class="line">    <span class="attr">env</span>: options.<span class="property">env</span>,</span><br><span class="line">    <span class="attr">gid</span>: options.<span class="property">gid</span>,</span><br><span class="line">    <span class="attr">uid</span>: options.<span class="property">uid</span>,</span><br><span class="line">    <span class="attr">shell</span>: options.<span class="property">shell</span>,</span><br><span class="line">    <span class="attr">windowsHide</span>: !!options.<span class="property">windowsHide</span>,</span><br><span class="line">    <span class="attr">windowsVerbatimArguments</span>: !!options.<span class="property">windowsVerbatimArguments</span></span><br><span class="line">  &#125;);</span><br><span class="line">………………</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>上面代码走到51行后，进入spawn源码</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">spawn</span>(<span class="params">file, args, options</span>) &#123;</span><br><span class="line">  <span class="comment">// liugezhou：继续对进来的参数进行一个解析，主要就是参数的处理解析</span></span><br><span class="line">  <span class="keyword">const</span> opts = <span class="title function_">normalizeSpawnArguments</span>(file, args, options);</span><br><span class="line">  <span class="comment">//liugezhou：这里进入到internal/child_process文件下，重点执行this.handle = new Process()</span></span><br><span class="line">  <span class="keyword">const</span> child = <span class="keyword">new</span> <span class="title class_">ChildProcess</span>();</span><br><span class="line"></span><br><span class="line">  options = opts.<span class="property">options</span>;</span><br><span class="line">  <span class="title function_">debug</span>(<span class="string">&#x27;spawn&#x27;</span>, opts.<span class="property">args</span>, options);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//liugezhou：又一个重点，这里的源码底层实现，分析在下一节</span></span><br><span class="line">  child.<span class="title function_">spawn</span>(&#123;</span><br><span class="line">    <span class="attr">file</span>: opts.<span class="property">file</span>,</span><br><span class="line">    <span class="attr">args</span>: opts.<span class="property">args</span>,</span><br><span class="line">    <span class="attr">cwd</span>: options.<span class="property">cwd</span>,</span><br><span class="line">    <span class="attr">windowsHide</span>: !!options.<span class="property">windowsHide</span>,</span><br><span class="line">    <span class="attr">windowsVerbatimArguments</span>: !!options.<span class="property">windowsVerbatimArguments</span>,</span><br><span class="line">    <span class="attr">detached</span>: !!options.<span class="property">detached</span>,</span><br><span class="line">    <span class="attr">envPairs</span>: opts.<span class="property">envPairs</span>,</span><br><span class="line">    <span class="attr">stdio</span>: options.<span class="property">stdio</span>,</span><br><span class="line">    <span class="attr">uid</span>: options.<span class="property">uid</span>,</span><br><span class="line">    <span class="attr">gid</span>: options.<span class="property">gid</span>,</span><br><span class="line">    <span class="attr">serialization</span>: options.<span class="property">serialization</span>,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> child;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>7-3 深度分析child_process库spawn底层实现</strong><br>接着上一节代码块中走到了child.spawn：</p><blockquote><ul><li>第一步是通过getValidStdio去生成pipe，创建一个管道实例：第一个是输入，第二个是输出，第三个是error(只是生成了管道，但是还没创建socket的通信)</li><li>第二步对spawn的一些参数进行处理：下面代码未贴</li><li>第三步通过this._handle.spawn 子进程被创建出来</li><li>第四步通过createSocket方法，将之前的pipe和子进程与socket绑定。</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">ChildProcess</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">spawn</span> = <span class="keyword">function</span>(<span class="params">options</span>) &#123;</span><br><span class="line">………………</span><br><span class="line">  <span class="comment">//liugezhou:&#x27;pipe&#x27;管道从这里创建，这里面的代码就不贴了，该代码可以：</span></span><br><span class="line">  <span class="comment">//1. stdio可以传入ignore，静默执行，没有输出</span></span><br><span class="line">  stdio = <span class="title function_">getValidStdio</span>(stdio, <span class="literal">false</span>);</span><br><span class="line">………………</span><br><span class="line"></span><br><span class="line">  <span class="comment">//liugezhou:经过这步后，子进程立即被创建出来</span></span><br><span class="line">  <span class="keyword">const</span> err = <span class="variable language_">this</span>.<span class="property">_handle</span>.<span class="title function_">spawn</span>(options);</span><br><span class="line"></span><br><span class="line">……………</span><br><span class="line">  </span><br><span class="line"><span class="comment">// liugezhou:此循环非常重要，建立起来了父进程与子进程的socket通信</span></span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; stdio.<span class="property">length</span>; i++) &#123;</span><br><span class="line">………………</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (stream.<span class="property">handle</span>) &#123;</span><br><span class="line">      <span class="comment">// When i === 0 - we&#x27;re dealing with stdin</span></span><br><span class="line">      <span class="comment">// (which is the only one writable pipe).</span></span><br><span class="line">      <span class="comment">//liugezhou：createSocket</span></span><br><span class="line">      stream.<span class="property">socket</span> = <span class="title function_">createSocket</span>(<span class="variable language_">this</span>.<span class="property">pid</span> !== <span class="number">0</span> ?</span><br><span class="line">        stream.<span class="property">handle</span> : <span class="literal">null</span>, i &gt; <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//liugezhou:到这里就得到了一个socket事例</span></span><br><span class="line">      <span class="keyword">if</span> (i &gt; <span class="number">0</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">pid</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_closesNeeded</span>++;</span><br><span class="line">        stream.<span class="property">socket</span>.<span class="title function_">on</span>(<span class="string">&#x27;close&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">          <span class="title function_">maybeClose</span>(<span class="variable language_">this</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">………………</span><br><span class="line">  <span class="keyword">return</span> err;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后我们再返回到execFile中，接着往下走：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">execFile</span>(<span class="params">file <span class="comment">/* , args, options, callback */</span></span>) &#123;</span><br><span class="line">………………</span><br><span class="line"><span class="keyword">let</span> encoding;</span><br><span class="line">  <span class="comment">//liugezhou：等待输入输出流全部执行完毕后，最后生成内容的数组，这个_stdout是一次性push给我们的，所以这也是我们前面学习说为什么进行耗时任务的时候，不要使用execFile</span></span><br><span class="line">  <span class="keyword">const</span> _stdout = [];</span><br><span class="line">  <span class="keyword">const</span> _stderr = [];</span><br><span class="line">  <span class="keyword">if</span> (options.<span class="property">encoding</span> !== <span class="string">&#x27;buffer&#x27;</span> &amp;&amp; <span class="title class_">Buffer</span>.<span class="title function_">isEncoding</span>(options.<span class="property">encoding</span>)) &#123;</span><br><span class="line">    encoding = options.<span class="property">encoding</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    encoding = <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//定义了一些变量</span></span><br><span class="line">  ………………</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">exithandler</span>(<span class="params">code, signal</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (exited) <span class="keyword">return</span>;</span><br><span class="line">    exited = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (timeoutId) &#123;</span><br><span class="line">      <span class="built_in">clearTimeout</span>(timeoutId);</span><br><span class="line">      timeoutId = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!callback) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// merge chunks</span></span><br><span class="line">    <span class="keyword">let</span> stdout;</span><br><span class="line">    <span class="keyword">let</span> stderr;</span><br><span class="line">    <span class="keyword">if</span> (encoding ||</span><br><span class="line">      (</span><br><span class="line">        child.<span class="property">stdout</span> &amp;&amp;</span><br><span class="line">        child.<span class="property">stdout</span>.<span class="property">readableEncoding</span></span><br><span class="line">      )) &#123;</span><br><span class="line">      stdout = _stdout.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      stdout = <span class="title class_">Buffer</span>.<span class="title function_">concat</span>(_stdout);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (encoding ||</span><br><span class="line">      (</span><br><span class="line">        child.<span class="property">stderr</span> &amp;&amp;</span><br><span class="line">        child.<span class="property">stderr</span>.<span class="property">readableEncoding</span></span><br><span class="line">      )) &#123;</span><br><span class="line">      stderr = _stderr.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      stderr = <span class="title class_">Buffer</span>.<span class="title function_">concat</span>(_stderr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!ex &amp;&amp; code === <span class="number">0</span> &amp;&amp; signal === <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="title function_">callback</span>(<span class="literal">null</span>, stdout, stderr);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (args.<span class="property">length</span> !== <span class="number">0</span>)</span><br><span class="line">      cmd += <span class="string">` <span class="subst">$&#123;args.join(<span class="string">&#x27; &#x27;</span>)&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!ex) &#123;</span><br><span class="line">      <span class="comment">// eslint-disable-next-line no-restricted-syntax</span></span><br><span class="line">      ex = <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Command failed: &#x27;</span> + cmd + <span class="string">&#x27;\n&#x27;</span> + stderr);</span><br><span class="line">      ex.<span class="property">killed</span> = child.<span class="property">killed</span> || killed;</span><br><span class="line">      ex.<span class="property">code</span> = code &lt; <span class="number">0</span> ? <span class="title function_">getSystemErrorName</span>(code) : code;</span><br><span class="line">      ex.<span class="property">signal</span> = signal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ex.<span class="property">cmd</span> = cmd;</span><br><span class="line">    <span class="title function_">callback</span>(ex, stdout, stderr);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">errorhandler</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    ex = e;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (child.<span class="property">stdout</span>)</span><br><span class="line">      child.<span class="property">stdout</span>.<span class="title function_">destroy</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (child.<span class="property">stderr</span>)</span><br><span class="line">      child.<span class="property">stderr</span>.<span class="title function_">destroy</span>();</span><br><span class="line"></span><br><span class="line">    <span class="title function_">exithandler</span>();</span><br><span class="line">  &#125;</span><br><span class="line">………………</span><br><span class="line"></span><br><span class="line">  <span class="comment">//liugezhou：timeout耗时的操作</span></span><br><span class="line">  <span class="keyword">if</span> (options.<span class="property">timeout</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    ………………</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (child.<span class="property">stdout</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (encoding)</span><br><span class="line">      child.<span class="property">stdout</span>.<span class="title function_">setEncoding</span>(encoding);</span><br><span class="line"></span><br><span class="line">    child.<span class="property">stdout</span>.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, <span class="keyword">function</span> <span class="title function_">onChildStdout</span>(<span class="params">chunk</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> encoding = child.<span class="property">stdout</span>.<span class="property">readableEncoding</span>;</span><br><span class="line">      <span class="keyword">const</span> length = encoding ?</span><br><span class="line">        <span class="title class_">Buffer</span>.<span class="title function_">byteLength</span>(chunk, encoding) :</span><br><span class="line">        chunk.<span class="property">length</span>;</span><br><span class="line">      stdoutLen += length;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (stdoutLen &gt; options.<span class="property">maxBuffer</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> truncatedLen = options.<span class="property">maxBuffer</span> - (stdoutLen - length);</span><br><span class="line">        _stdout.<span class="title function_">push</span>(chunk.<span class="title function_">slice</span>(<span class="number">0</span>, truncatedLen));</span><br><span class="line"></span><br><span class="line">        ex = <span class="keyword">new</span> <span class="title function_">ERR_CHILD_PROCESS_STDIO_MAXBUFFER</span>(<span class="string">&#x27;stdout&#x27;</span>);</span><br><span class="line">        <span class="title function_">kill</span>();</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        _stdout.<span class="title function_">push</span>(chunk);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (child.<span class="property">stderr</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (encoding)</span><br><span class="line">      child.<span class="property">stderr</span>.<span class="title function_">setEncoding</span>(encoding);</span><br><span class="line"></span><br><span class="line">    child.<span class="property">stderr</span>.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, <span class="keyword">function</span> <span class="title function_">onChildStderr</span>(<span class="params">chunk</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> encoding = child.<span class="property">stderr</span>.<span class="property">readableEncoding</span>;</span><br><span class="line">      <span class="keyword">const</span> length = encoding ?</span><br><span class="line">        <span class="title class_">Buffer</span>.<span class="title function_">byteLength</span>(chunk, encoding) :</span><br><span class="line">        chunk.<span class="property">length</span>;</span><br><span class="line">      stderrLen += length;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (stderrLen &gt; options.<span class="property">maxBuffer</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> truncatedLen = options.<span class="property">maxBuffer</span> - (stderrLen - length);</span><br><span class="line">        _stderr.<span class="title function_">push</span>(chunk.<span class="title function_">slice</span>(<span class="number">0</span>, truncatedLen));</span><br><span class="line"></span><br><span class="line">        ex = <span class="keyword">new</span> <span class="title function_">ERR_CHILD_PROCESS_STDIO_MAXBUFFER</span>(<span class="string">&#x27;stderr&#x27;</span>);</span><br><span class="line">        <span class="title function_">kill</span>();</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        _stderr.<span class="title function_">push</span>(chunk);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  child.<span class="title function_">addListener</span>(<span class="string">&#x27;close&#x27;</span>, exithandler);</span><br><span class="line">  child.<span class="title function_">addListener</span>(<span class="string">&#x27;error&#x27;</span>, errorhandler);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> child;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>7-4 child_process事件应用方法详解</strong></p><blockquote><p>本节我们进入到child_process源码的第三轮，彻底搞懂process的回调流程，也是child_process中最复杂的部分。同样，我们通过processOn图对流程进行梳理一遍：</p></blockquote><p><a href="https://www.processon.com/embed/60322abd079129248a48e0ec">点击查看【processon】</a></p><blockquote><p>在分析了上面流程后，我们先写一些测试代码以理解上面的流程。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cp = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> child = cp.<span class="title function_">exec</span>(<span class="string">&#x27;ls -al|grep node_modules&#x27;</span>,<span class="keyword">function</span>(<span class="params">err,stdout,stderr</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;callback--------start&#x27;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(stdout)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;callback--------end&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">child.<span class="property">stdout</span>.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>,<span class="function">(<span class="params">chunk</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;stdout data:&#x27;</span>,chunk)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">child.<span class="property">stderr</span>.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>,<span class="function">(<span class="params">chunk</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;stderr data:&#x27;</span>,chunk)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">child.<span class="property">stderr</span>.<span class="title function_">on</span>(<span class="string">&#x27;close&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;stderr close&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">child.<span class="title function_">on</span>(<span class="string">&#x27;exit&#x27;</span>,<span class="function">(<span class="params">exitCode</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;exit:&#x27;</span>,exitCode)</span><br><span class="line">&#125;)</span><br><span class="line">child.<span class="title function_">on</span>(<span class="string">&#x27;close&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;close!&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>7-5 高难度：深度解析child_process库spawn方法回调原理</strong></p><blockquote><p>这一章完全听的懵逼了。略过。。。。。。。</p></blockquote><p><strong>7-6 child_process库fork执行流程分析</strong></p><blockquote><p>略。。。。。。。</p></blockquote><p><strong>7-7 精化：Node多进程源码总结</strong></p><blockquote><ul><li>exec/execFile/spawn/fork的区别<ul><li>exec: 原理是调用/bin/sh -c 执行我们传入的shell脚本，底层调用略execFile</li><li>execFile：原理是直接执行我们传入的file和args，底层调用spawn创建和执行子进程，并建立略回调，一次性将所有的stdout和stderr结果返回</li><li>spawn:原理是调用略internal/child_process,实例化略ChildProcess子进程对象，再调用child.spawn创建子进程并执行命令，底层是调用了child.)handle.spawn执行process_wrap中的spwan方法，执行过程是异步的，执行完毕后再通过PIPE进行单向数据通信，通信结束后子进程发起onexit回调，同时Socket会执行close回调。</li><li>fork:原理是通过spawn创建子进程和执行命令，采用node执行命令，通过setupchannel创建IPC用于子进程和父进程之间的双向通信。</li></ul></li></ul></blockquote><blockquote><ul><li>data/error/exit/close回调的区别<ul><li>data：用于主进程读取数据过程中通过onStreamRead发起的回调</li><li>error: 命令执行失败后发起的回调</li><li>exit: 子进程关闭完成后发起的回调</li><li>close：子进程所有Socket通信端口全部关闭后发起的回调</li><li>stdout close/stderr close:特定的PIPE读取完成后调用onReadableStreamEnd关闭Socket时发起的回调。</li></ul></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web架构之脚手架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web架构之脚手架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CommonJS、CMD、AMD、ES6 Module</title>
      <link href="/011-CommonJS%E3%80%81AMD_CMD%E3%80%81ES6%20Modules/"/>
      <url>/011-CommonJS%E3%80%81AMD_CMD%E3%80%81ES6%20Modules/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="CommonJS">CommonJS</h2><blockquote><ul><li>CommonJS 一般用于服务端，Nodejs 与 webpack 就是 CommonJS 的主要实践者。</li><li>四个重要的变量为模块化提供支持：module、exports、require、global。</li><li>用 module.exports=value 或者 <a href="http://exports.xxx">exports.xxx</a> = value 来定义当前模块对外输出的接口，使用 require 加载模块。</li><li>在 CommonJS 中，一个文件就是一个模块，每个文件拥有单独的作用域，不会污染全局作用域。</li><li>CommonJS 不适用浏览器是因为：此规范是同步加载模块，对于服务器端来说，所有的模块都是在本地磁盘，等待模块时间就是硬盘读取文件时间，很小，但对浏览器而言，设计到网速、代理等原因，同步加载会造成阻塞，浏览器处于“假死”状态，所以浏览器端出现了 AMD 规范。</li></ul></blockquote><h2 id="AMD-异步模块定义-CMD-通用模块定义">AMD(异步模块定义) &amp; CMD(通用模块定义)</h2><blockquote><ul><li>AMD 和 CMD 都是用来解决浏览器异步加载的问题。</li><li>AMD 是 Asynchronous Module Definition 的缩写，即“异步模块定义”，它采用异步方式加载模块(模块的加载不影响它后面语句的运行),且会提前加载。</li><li>AMD 同 CommonJS 一样也是使用 require 加载模块，不同的是，AMD 要求两个参数 require([Module],callback)</li><li>CMD 与 AMD 最大的不同就是：CMD 推崇依赖就近，延迟执行。可以在代码的任意一行写入依赖：</li></ul></blockquote><h2 id="ES6-Module">ES6 Module</h2><blockquote><p>ES6 在语言标准的层面上，实现了模块功能，而且实现得相当简单，旨在成为浏览器和服务器通用的模块解决方案。其模块功能主要由两个命令构成：export 和 import.<br>export 命令用于规定模块的对外接口，import 命令用于输入其他模块提供的功能。<br>ES6 还提供了 export default 命令，为模块指定默认输出，对应的 import 语句不需要使用大括号.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程概念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Week3-脚手架核心流程开发</title>
      <link href="/Week3-%E8%84%9A%E6%89%8B%E6%9E%B6%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
      <url>/Week3-%E8%84%9A%E6%89%8B%E6%9E%B6%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章目录排版做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="第一章：本周导学">第一章：本周导学</h2><p><strong>本周整体内容介绍和学习方法</strong><br><strong>标题</strong></p><blockquote><p>脚手架需求分析和架构设计，核心流程开发</p></blockquote><p><strong>收获</strong></p><blockquote><ul><li>架构设计和技术方案设计全过程</li><li>脚手架核心流程和commander框架</li><li>如何让Node项目支持ES Module</li></ul></blockquote><p><strong>主要内容</strong></p><blockquote><ul><li>脚手架需求分析和架构设计</li><li>脚手架模块拆分策略和core模块技术方案</li><li>脚手架执行准备过程实现</li><li>脚手架命令注册实现(基于commander)</li></ul></blockquote><p><strong>加餐</strong></p><blockquote><p>Node项目如何支持ES Module</p></blockquote><h2 id="第二章：脚手架整体架构设计">第二章：脚手架整体架构设计</h2><p><strong>2-1 大厂是如何做项目的</strong><br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/3-1.6id7710dpwk0.webp" alt="3-1"></p><p><strong>2-2 前端研发过程中的痛点和需求分析</strong><br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/3-2.6ic0nprs1e00.webp" alt="3-2"></p><p><strong>2-3 加餐：大厂的git操作规范是怎样的？</strong></p><blockquote><ul><li>clone下来的项目 master分支是不做开发的，我们会新建一个dev分支，上线以后会新建一个release分支。</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/3-3.4sujpjgc1p40.webp" alt="3-3"></p><p><strong>2-4 高端操作：脚手架架构设计+绘制架构图 /  2-5 架构设计图绘图技巧分享</strong></p><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/3-4.3xuy7m03daw0.webp" alt="3-4"></p><h2 id="第三章-脚手架模块拆分策略和core模块技术方案">第三章 脚手架模块拆分策略和core模块技术方案</h2><p><strong>3-1 脚手架模块拆分策略</strong></p><ul><li>核心流程：core</li><li>命令：      commands  【初始化、发布、清除缓存】</li><li>模型层：   models       【Command命令 、 Project项目 、 Component组件 、 Npm模块 、 Git仓库】</li><li>支撑模块：utils           【Git操作 、 云构建 、 工具方法 、 API请求、 Git API】</li></ul><p><strong>3-2 core模块技术方案</strong></p><p>准备阶段：<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/3-5.1i5lq7mn8h5s.webp" alt="3-5"></p><h2 id="第四章：脚手架执行准备过程实现">第四章：脚手架执行准备过程实现</h2><p><strong>4-1 脚手架框架代码拆包+import-local应用</strong></p><blockquote><ul><li>mkdir cloudscope-cli</li><li>cd cloudscope-cli</li><li>npm init -y</li><li>添加 .gitignore文件</li><li>lerna init</li><li>lerna create cli &amp; lerna create utils</li><li>mkdir  commands &amp; mkdir models &amp; mkdir core  &amp; mkdir utils</li><li>将packages下core移到外层core、utils移到外层utils,删除packages目录</li><li>修改lerna.json文件：</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;packages&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;core/*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;commands/*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;models/*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;utils/*&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.0.4&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>在cloudscope-cli/core/cli下新建bin/index.js文件</li><li>修改  cloudscope-cli/core/cli下的package.json配置文件，添加如下代码</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">……</span><br><span class="line"> <span class="string">&quot;bin&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;cloudscope-cli&quot;</span>: <span class="string">&quot;bin/index.js&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">    </span><br><span class="line"> ……</span><br><span class="line"> <span class="string">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;@cloudscope-cli/utils&quot;</span>: <span class="string">&quot;file:../../utils/utils&quot;</span>,</span><br><span class="line">    <span class="string">&quot;import-local&quot;</span>: <span class="string">&quot;^3.0.2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;npmlog&quot;</span>: <span class="string">&quot;^4.1.2&quot;</span></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><blockquote><ul><li>cd core/cli</li><li>npm install</li><li>在cloudscope-cli/core/cli/bin/index.js下添加如下代码：</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /usr/bin/env node</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> importLocal = <span class="built_in">require</span>(<span class="string">&#x27;import-local&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(importLocal(__filename))&#123;</span><br><span class="line">  <span class="built_in">require</span>(<span class="string">&#x27;npmlog&#x27;</span>).<span class="title function_">info</span>(<span class="string">&#x27;cli&#x27;</span>,<span class="string">&#x27;正在使用 cloudscope-cli 本地版本&#x27;</span>)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="built_in">require</span>(<span class="string">&#x27;../lib&#x27;</span>)(process.<span class="property">argv</span>.<span class="title function_">slice</span>(<span class="number">2</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>在cloudscope-cli/core/cli/lib/index.js 文件中添加一行日志文件</li><li>npm link</li><li>cloudscope-cli:即可看到输出日志</li></ul></blockquote><p>git代码提交扩展</p><blockquote><p>我将此代码通过分支的形式，对每一次的代码提交，都在一个特殊的分支进行代码提交。<br>本节提交到该分支：<a href="https://github.com/liugezhou/cloudscope-cli/tree/lesson01"> lesson01</a></p><p>下面是分支提交小记录。</p><ul><li><p>git checkout -b lesson01</p></li><li><p>git add . &amp;&amp; git commit -m 'lesson01 for init ’ &amp;&amp; git push origin lesson01</p></li><li><p>git checkout main</p></li><li><p>git merge lesson01</p></li><li><p>git push</p></li><li><p>删除本地分支  git branch -D lesson01</p></li><li><p>如果后面我们想要修改该分支代码并提交到该分支，我们就可以：</p></li><li><p>git checkout -b temp origin/lesson01</p></li></ul></blockquote><p><strong>4-2 检查版本号功能开发（require加载资源类型讲解+npmlog封装)</strong></p><p>从本节开始本地新建分支 lesson02，最后将此分支代码推送至远程仓库<a href="https://github.com/liugezhou/cloudscope-cli">cloudscope-cli</a>。</p><ol><li>本节代码开发过程中在命令行用到的命令：</li></ol><blockquote><ul><li>utils下新建log包： lerna create @cloudscope-cli/log utils</li><li>log下安装npmlog包： lerna add npmjs utils/log</li></ul></blockquote><ol start="2"><li>其它记录的小知识点</li></ol><ul><li>require加载资源的类型：</li></ul><blockquote><ul><li>.js      ： 必须输出一个module.exports || exports.</li><li>.json   :  会通过JSON.parse()对该文件进行解析，并输出一个对象</li><li>.node  ： c++的一个插件，它的实现原理是通过 process.dlopen去打开一个c++插件，通常不使用。</li><li>any     ：会通过.js引擎进行解析</li></ul></blockquote><ol start="3"><li>npmlog源码：</li></ol><blockquote><ul><li>default level:  info，可以通过传入的参数进行level定制。</li><li>源码中存在的 log.addLevel()才可以打印，我们也可以通过这个方法定制自己的打印设置。（可以设置名字、value值大小，字体色、背景色等）</li><li>可以通过 log.heading定制输日志输出的前置。同时可以通过headingStyle做样式修改。</li></ul></blockquote><p><strong>4-3 最低Node版本检查功能开发</strong></p><p>检查Node版本号的原因以及解决办法：</p><blockquote><ul><li>这是因为一些低版本的Node API在低版本是不支持的，因此要设置一个最低的Node版本号。</li><li>拿到本地版本号的方法为：process.version</li><li>版本号比对：第三方库 semver。</li><li>抛出异常颜色输出：第三方库 colors:引用’colors/safe’,使用：colors.red(‘’)</li></ul></blockquote><p><strong>4-4 root账号启动检查和自动降级功能开发</strong></p><p>检查账号权限原因以及解决方法：</p><blockquote><ul><li>如果是使用root权限，一些文件就没有可读或者修改权限，因此需要对用户进行查询与降级处理</li><li>通过process.geteuid() 获取登录用户的ID ,501为普通用户，0 为超级管理员(root)</li><li>检查第三方库：root-check。使用方法引入一下调用即可降级。</li><li>root-check实现原理：调用downgrade-root 库 -&gt; 判断是否为root权限 -&gt; 若是通过process.env.SUDO_UID或者默认 defaultUid() 获取各个操作系统的uid</li></ul></blockquote><p><strong>4-5 用户主目录检查功能开发</strong></p><blockquote><ul><li>user-home:可以实现跨操作系统获取用户主目录的功能。</li><li>path-exists:判断文件目录是否存在</li></ul></blockquote><blockquote><ul><li>user-home实现：调用os-homedir库，再调用os库，若os库有homedir直接返回，若没有直接拿process.env.home(),还是没有就拼接 ‘/Users/'+process.env.USER</li><li>path-exists实现：直接调用fs的accessSync(path)方法。</li></ul></blockquote><p><strong>4-6 入参检查和debug模式开发</strong></p><blockquote><p>这里就进行如参检查，是要判断是否进入调试模式，如果带有 --debug参数，我们要进行log的level设置。</p></blockquote><blockquote><ul><li>实现方式：使用minimist第三方库。</li><li>查看是否包含debug参数，直接：require(‘minimist’)(process.argv.slice(2)).debug即可。</li><li>若上值为true，直接修改log.level即可。</li></ul></blockquote><p><strong>4-7 环境变量检查功能开发</strong></p><blockquote><ul><li>检查环境变量，我们使用第三方库：dotenv。</li><li>用法：require(‘dotenv’).config({ path: ‘’ }) ：若不传参数，我们在当前目录下拿到.env文件中的变量，之后就可以直接在process.env中使用了。支持传入path变量。</li><li>环境变量其实就是一个全局变量,如果我们有很多的环境变量需要使用，可以直接在.env文件宏进行配置</li></ul></blockquote><p><strong>4-8 通用npm API模块封装 | <strong>4-9 npm全局更新功能开发</strong></strong></p><blockquote><p>准备阶段的最后一个功能：检查我们的这个脚手架是否为最新版本</p></blockquote><p>步骤：</p><blockquote><ol><li>获取当前版本号与模块名: pkg.version | <a href="http://pkg.name">pkg.name</a></li><li>调用npm API获取所有模版号：</li></ol></blockquote><p>npm提供了这样一个API: <a href="https://registry.npmjs.org/cloudscope-cli/core">https://registry.npmjs.org/cloudscope-cli/core</a> ,可以获得该包的所有版本号,要从这里拿到所有版本号，我们需要使用第三方库 axios,同时我们也需要添加一个用来url拼接的库：url-join，可以帮助我们进行多参数的拼接，以及我们进行版本对比的第三方库 semver。</p><blockquote><ol start="3"><li>获取所有版本号，比对哪些版本号是大于当前版本号</li><li>获取最新的版本号，提示用户更新到此版本。</li></ol></blockquote><p>将以上代码提交支仓库远程cloudscope-cli的分支 <a href="https://github.com/liugezhou/cloudscope-cli/tree/lesson02">lesson02</a>，并合并至main分支。<br>**</p><h2 id="第五章：脚手架命令注册实现-基于commander）">第五章：脚手架命令注册实现(基于commander）</h2><p><strong>5-1 快速实现一个commander脚手架 ｜ 5-2 commander脚手架全局配置</strong></p><blockquote><p>之前在学习命令注册的时候，使用的是yrags，本节使用另一个库 commander去实现命令注册<br>本节代码提交至：<a href="https://github.com/liugezhou/liugezhou-yargs-demo">liugezhou-yargs-demo</a><br>其中 bin/yargs.js是之前学习yargs的demo代码。<br>bin/commander.js是本节关于commander的代码。</p><p>我们在这个库的基础上，学习commander的简单用法.</p><ul><li>首先，安装npm i -S commander</li><li>然后，在bin/index.js中：</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env node</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> commander = <span class="built_in">require</span>(<span class="string">&#x27;commander&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> pkg = <span class="built_in">require</span>(<span class="string">&quot;../package.json&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取commander的单例</span></span><br><span class="line"><span class="comment">// const &#123;program&#125; = commander</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 手动实例化一个Command示例</span></span><br><span class="line"><span class="keyword">const</span> program = <span class="keyword">new</span> commander.<span class="title class_">Command</span>()</span><br><span class="line"></span><br><span class="line">program</span><br><span class="line">  .<span class="title function_">name</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(pkg.<span class="property">bin</span>)[<span class="number">0</span>])</span><br><span class="line">  .<span class="title function_">usage</span>(<span class="string">&#x27;&lt;command&gt; [options]&#x27;</span>)</span><br><span class="line">  .<span class="title function_">version</span>(pkg.<span class="property">version</span>)</span><br><span class="line">  .<span class="title function_">option</span>(<span class="string">&#x27;-d, --debug&#x27;</span>, <span class="string">&#x27;是否开启调试模式&#x27;</span>, <span class="literal">false</span>)</span><br><span class="line">  .<span class="title function_">option</span>(<span class="string">&#x27;-e, --envName  &lt;envName&gt;&#x27;</span> , <span class="string">&#x27;环境变量&#x27;</span>)</span><br><span class="line">  .<span class="title function_">parse</span>(process.<span class="property">argv</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> options = program.<span class="title function_">opts</span>()</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(options.<span class="property">debug</span>)</span><br><span class="line">  program.<span class="title function_">outputHelp</span>()   <span class="comment">//打印出帮助信息</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>liugezhou-test -V,即可看到输入版本号。</li><li>liugezhou-test -d  // true<br><strong>5-3 commander脚手架命令注册的两种方法</strong></li></ul></blockquote><p>课程所讲内容：commander命令注册有两种方式：</p><blockquote><ol><li>comman API注册命令</li><li>addCommand API 注册命令</li></ol></blockquote><p>现在默认安装commander时，已更新到7.0.0，sam老师写法还是6.X，可参考 <a href="https://github.com/tj/commander.js/blob/HEAD/Readme_zh-CN.md">commader for git</a> 配置。本节内容就是对官方文档更新用法之后的学习笔记：</p><ol><li>Commander.js :</li></ol><blockquote><p>完整的node.js命令行解决方法</p></blockquote><ol start="2"><li>声明commander变量</li></ol><blockquote><p>为简化声明，Commander提供了一个全局对象</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; program &#125; = <span class="built_in">require</span>(<span class="string">&#x27;commander&#x27;</span>)</span><br><span class="line">program.<span class="title function_">version</span>(<span class="string">&#x27;0.0.1&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>若程序较为复杂，用户需要以多种方式来使用Commander，如单元测试等，可采用创建本地Commander对象的方法</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;<span class="title class_">Command</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;commander&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> program = <span class="keyword">new</span> <span class="title class_">Command</span>();</span><br><span class="line">program.<span class="title function_">version</span>(<span class="string">&#x27;0.0.1&#x27;</span>)</span><br></pre></td></tr></table></figure><ol start="3"><li>选项</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">program</span><br><span class="line"><span class="comment">//Commander 使用.option() 方法来定义选项，同时可以附加选项的简介</span></span><br><span class="line">.<span class="title function_">option</span>(<span class="string">&#x27;-d,--debug&#x27;</span>,<span class="string">&#x27;booelan&#x27;</span>) </span><br><span class="line"><span class="comment">//选项可以设置一个默认值。</span></span><br><span class="line">.<span class="title function_">option</span>(<span class="string">&#x27;-c, --cheese &lt;type&gt;&#x27;</span>, <span class="string">&#x27;add the specified type of cheese&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>);</span><br><span class="line"><span class="comment">//必填选项</span></span><br><span class="line">.requiredOption(<span class="string">&#x27;-n, --name &lt;type&gt;&#x27;</span>, <span class="string">&#x27;name must have cheese&#x27;</span>);</span><br><span class="line"><span class="comment">//通过program.parse(arguments)方法处理参数</span></span><br><span class="line">program.<span class="title function_">parse</span>(process.<span class="property">argv</span>)</span><br><span class="line"><span class="keyword">const</span> ret = program.<span class="title function_">opts</span>()</span><br><span class="line"><span class="keyword">const</span> debug = ret.<span class="property">debug</span></span><br></pre></td></tr></table></figure><ol start="4"><li>命令</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">program.</span><br><span class="line"><span class="comment">//参数支持必须&lt;&gt;,可选[]</span></span><br><span class="line"><span class="title function_">command</span>(<span class="string">&#x27;clone &lt;source&gt; [destination]&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//在参数名后加上...来声明可变参数，且只有最后一个参数支持这种用法</span></span><br><span class="line">program</span><br><span class="line">    .<span class="title function_">command</span>(<span class="string">&#x27;rmdir &lt;dirs...&gt;&#x27;</span>)</span><br><span class="line">    .<span class="title function_">action</span>(<span class="keyword">function</span> (<span class="params">dirs</span>) &#123;</span><br><span class="line">      dirs.<span class="title function_">forEach</span>(<span class="function">(<span class="params">dir</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;rmdir %s&#x27;</span>, dir);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p><strong>5-4 commander注册命令的两种高级用法 ｜5-5 再讲3条commander的高级用法</strong></p><blockquote><ol><li>监听所有命令输入 : arguments</li><li>脚手架串行使用</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">program</span><br><span class="line">   .<span class="title function_">command</span>(<span class="string">&#x27;install [name]&#x27;</span>,<span class="string">&#x27;install package&#x27;</span>,&#123;</span><br><span class="line">     <span class="attr">executableFile</span>:<span class="string">&#x27;vue&#x27;</span>，</span><br><span class="line">  <span class="attr">isDefault</span>:<span class="literal">true</span>,</span><br><span class="line">     <span class="attr">hidden</span>:<span class="literal">true</span> <span class="comment">//command的隐藏</span></span><br><span class="line">   &#125;)</span><br><span class="line">   .<span class="title function_">alias</span>(<span class="string">&#x27;i&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><ol start="3"><li>高级定制help信息</li></ol><ul><li>program.<em>outputHelp()</em></li><li>_ program.helpInformation() = function(){}_</li><li><em>program.on(‘–help’),function(){ console.log(‘your help information’}</em></li></ul><ol start="4"><li>高级定制debug模式</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">program.<span class="title function_">on</span>(<span class="string">&#x27;optins:debug&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(program.<span class="property">debug</span>)&#123;</span><br><span class="line">  process.<span class="property">env</span>.<span class="property">LOG_LEVEL</span> = <span class="string">&#x27;verbose&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ol start="5"><li>对未知命令监听二：</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">program.<span class="title function_">on</span>(<span class="string">&#x27;command:*&#x27;</span>,<span class="keyword">function</span>(<span class="params">obj</span>)&#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(obj)</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;未知的命令：&#x27;</span> + obj[<span class="number">0</span>])</span><br><span class="line">      <span class="keyword">const</span> avaliableCommands = program.<span class="property">commands</span>.<span class="title function_">map</span>( <span class="function"><span class="params">cmd</span> =&gt;</span> cmd.<span class="title function_">name</span>())</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;可用命令：&#x27;</span>+ avaliableCommands.<span class="title function_">join</span>(<span class="string">&#x27;,&#x27;</span>))</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><h2 id="第六章-Node项目如何支持ES-Module【加餐】">第六章 Node项目如何支持ES Module【加餐】</h2><p><strong>6-1 通过webpack完成ES Module资源构建</strong><br><strong>模块化</strong></p><blockquote><ul><li>CMD/AMD/require.js</li><li>CommonJS: 加载：require(), 输出：module.exports() || exports.x</li><li>ES Module: 加载： import, 输出 export.default || export function || export const</li></ul></blockquote><p><strong>实现</strong></p><blockquote><ul><li>npm i -D webpack webpack-cli</li><li>touch webpack-config.js</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//webpack-config.js</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">entry</span>: <span class="string">&#x27;./bin/core.js&#x27;</span>,</span><br><span class="line">  <span class="attr">output</span>:&#123;</span><br><span class="line">    <span class="attr">path</span>:path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;/dist&#x27;</span>),</span><br><span class="line">    <span class="attr">filename</span>:<span class="string">&#x27;core.js&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mode</span>:<span class="string">&#x27;development&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line">#! <span class="regexp">/usr/</span>bin/env node</span><br><span class="line"></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;./core&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// core.js</span></span><br><span class="line"><span class="keyword">import</span> utils <span class="keyword">from</span> <span class="string">&#x27;./utils&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">utils</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// utils</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;kskaksk&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>在package.json中添加两个script，分别为 “build”:“webpack&quot;和&quot;dev”:“webpack -w”</li><li>上面代码通过 npm run build 打包后，将上面index.js中的require修改为 require(“…/dist/core.js”)</li><li>执行 liugezhou-test 看到构建成功。</li></ul></blockquote><p><strong>6-2 通过webpack target属性支持Node内置库</strong></p><ul><li>webpack的target使用</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// npm i -S path-exists</span></span><br><span class="line"><span class="comment">// bin/utils.js</span></span><br><span class="line"><span class="keyword">import</span> pathExists <span class="keyword">from</span> <span class="string">&#x27;path-exists&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">exists</span>(<span class="params">p</span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> pathExists.<span class="title function_">sync</span>(p)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// bin/core.js</span></span><br><span class="line"><span class="keyword">import</span> path <span class="keyword">from</span> <span class="string">&#x27;path&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;exists&#125; <span class="keyword">from</span> <span class="string">&#x27;./utils&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">resolve</span>(<span class="string">&#x27;.&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">exists</span>(path.<span class="title function_">resolve</span>(<span class="string">&#x27;.&#x27;</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line">...</span><br><span class="line"><span class="attr">target</span>:<span class="string">&quot;node&quot;</span></span><br></pre></td></tr></table></figure><ul><li>core.js代码添加</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">async</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>( resolve,<span class="number">1000</span>));</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p><strong>6-3 webpack loader配置babel-loader支持低版本node</strong></p><blockquote><p>配置一个最简单babel-loader,需要安装的库<br>npm i -D<br>babel-loader @babel/core  @babel/preset-env  @babel/plugin-transform-runtime  @babel/runtime-corejs3</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">entry</span>:<span class="string">&#x27;./bin/core.js&#x27;</span>,</span><br><span class="line">  <span class="attr">output</span>:&#123;</span><br><span class="line">    <span class="attr">path</span>: path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;/dist&#x27;</span>),</span><br><span class="line">    <span class="attr">filename</span>:<span class="string">&#x27;core.js&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mode</span>:<span class="string">&#x27;development&#x27;</span>, <span class="comment">//开发模式</span></span><br><span class="line">  <span class="comment">// target: &#x27;web&#x27;//默认</span></span><br><span class="line">  <span class="attr">target</span>:<span class="string">&#x27;node&#x27;</span>, <span class="comment">// 识别内置库</span></span><br><span class="line">  <span class="attr">module</span>:&#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.js$/</span>,</span><br><span class="line">        <span class="attr">exclude</span>: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        <span class="attr">use</span>: &#123;</span><br><span class="line">          <span class="attr">loader</span>: <span class="string">&#x27;babel-loader&#x27;</span>,</span><br><span class="line">          <span class="attr">options</span>: &#123;</span><br><span class="line">            <span class="attr">presets</span>:[<span class="string">&#x27;@babel/preset-env&#x27;</span>],</span><br><span class="line">            <span class="attr">plugins</span>: [</span><br><span class="line">              [</span><br><span class="line">                <span class="string">&#x27;@babel/plugin-transform-runtime&#x27;</span>,</span><br><span class="line">                &#123;</span><br><span class="line">                  <span class="attr">corejs</span>:<span class="number">3</span>,</span><br><span class="line">                  <span class="attr">regenerator</span>:<span class="literal">true</span>,</span><br><span class="line">                  <span class="attr">useESModules</span>:<span class="literal">true</span>,</span><br><span class="line">                  <span class="attr">helpers</span>: <span class="literal">true</span></span><br><span class="line">                &#125;</span><br><span class="line">              ]</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>6-4 通过Node原生支持ES Module</strong></p><p>将node版本升级到14.x，代码中将引用的文件，改写后缀名为 .mjs即可。</p>]]></content>
      
      
      <categories>
          
          <category> Web架构之脚手架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web架构之脚手架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Week2-脚手架架构设计和框架搭建</title>
      <link href="/Week2-%E8%84%9A%E6%89%8B%E6%9E%B6%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA/"/>
      <url>/Week2-%E8%84%9A%E6%89%8B%E6%9E%B6%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章目录排版做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="第一章-本周介绍">第一章 本周介绍</h2><p><strong>1-1 确立本周目标</strong></p><blockquote><ul><li>脚手架的实现原理、调试原理</li><li>Lerna的常见用法、源码分析</li><li>架构设计技巧和架构图绘制方法</li><li>Node的module模块分析</li><li>yargs使用方法</li><li>剖析Lerna架构设计</li></ul></blockquote><p><strong>1-2 前端研发脚手架imooc-cli核心功能演示</strong></p><blockquote><ul><li>安装imooc-cli脚手架： <em><strong>npm i -g  @imooc-cli/core</strong></em></li><li>查看脚手架相关内容： <em>** **<strong>imooc-cli</strong></em></li><li>通过脚手架新建项目:   <em>** imooc-cli init**</em></li><li>项目发布到测试环境：  <em><strong>imooc-cli publish</strong></em></li><li>项目发布到正式环境:    <em><strong>imooc-cli publish --prod</strong></em></li></ul></blockquote><p><strong>1-3 脚手架在课程中的定位</strong></p><blockquote><ul><li>本项目中基础项目均由脚手架管理</li><li>技术简历突出</li><li>提高技能</li></ul></blockquote><h2 id="第二章-脚手架开发入门">第二章 脚手架开发入门</h2><p><strong>2-1 本章知识脉络和难点解析</strong></p><blockquote><ul><li>分析开发脚手架的必要性</li><li>从使用角度去理解什么是脚手架</li><li>脚手架的实现原理(与操作系统关联)</li><li>脚手架的开发流程</li></ul></blockquote><p><strong>2-2 站在前端研发的视角，分析开发脚手架的必要性</strong></p><blockquote><ul><li>开发imooc-cli脚手架的核心目标：提升前端研发效能【提炼通用代码、通用流程、构建发布上线】</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/2-1.3vft5c4ms5m0.webp" alt="2-1"></p><blockquote><ul><li>脚手架核心价值：<em>**自动化、标准化、数据化    **</em></li></ul></blockquote><p>和自动化构建工具(jenkins、travia)区别：自动化构建工具在服务端执行，无法覆盖本地操作且定制自动化的构建工具需要用到Java等后端语言，对前端不友好。</p><p><strong>2-3 从使用角度理解什么是脚手架？</strong></p><blockquote><ul><li>脚手架简介：脚手架的本质是一个操作系统的客户端，通过命令行执行。</li><li>脚手架执行原理：</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/2-2.5sd3oxy068s0.webp" alt="2-2"></p><blockquote><ul><li>从应用角度看vue-cli开发脚手架过程：</li></ul><ol><li>首先是个npm项目，项目中有一个bin/vue.js的文件，且这个项目发布到了npm上</li><li>将npm项目安装到了lib/node_modules</li><li>在node的bin目录下配置软链接到lib/node_modules/@vue/cli/bin/vue.js</li></ol></blockquote><p><strong>脚手架执行原理解析：</strong></p><blockquote><p>在终端输入：vue create vue-test-app</p><ol><li>终端解析vue命令【通过_which vue查找vue_】</li><li>根据vue命令链接到实际的vue.js文件</li><li>终端使用node执行vue.js文件</li><li>vue.js文件解析command/options</li><li>vue.js文件执行command</li><li>执行完毕，退出执行</li></ol></blockquote><p><strong>2-4 脚手架原理讲解(上)</strong></p><blockquote><p><strong>问题一：为什么全局安装@vue/cli后,我们执行的命令为 vue呢？</strong></p></blockquote><blockquote><p>答：这是因为通过which vue后我们会看到vue所在目录，而这个vue是一个软链接，指向的是@vue/cli。确定这个vue命令名称的是在<code>node/v12.16.1/lib/node_modules/@vue/cli</code>目录下package.json中的bin的键值。</p></blockquote><blockquote><p><strong>问题二：全局安装@vue/cli时发生了什么？</strong></p></blockquote><blockquote><p>答：执行 npm install -g @vue/cli的时候，首先node会把我们当前包下载到node下的node_modules中去。下载完成后，会在下载好的包中查找package.json中是否有bin，如果有，会通过package.json中的bin中的键去配置软链接。</p><p>上面两个问题其实问题二在前，问题一在后，两个问题说的是一个流程的双向解释，理解了问题二，问题一就清楚了。</p></blockquote><blockquote><p><strong>问题三：执行vue命令时发生了什么？为什么vue指向一个js文件，我们却可以通过vue命令执行它？</strong></p></blockquote><blockquote><p>答：首先执行vue命令，与执行which vue打印出来的地址  效果是等价的(即执行的是which vue的那个软连接:/Users/liumingzhou/.nvm/versions/node/v12.16.1/bin/vue)。<br>而软连接又指向它的实际文件存在路径(…/lib/node_modules/@vue/cli/bin/vue.js)。</p><p>我们知道，一个test.js文件可以通过node执行，但不能单独执行，这是因为它没有可执行权限。<br>我们在/Users/liumingzhou/Desktop目录下新建一个test.js文件，我们可以给这个js文件一个执行权限：chmod 777 test.js  然后在命令行直接输入 ./test.js仍然不可以执行。这是因为js文件需要一个解释器来进行执行，这个node就是一个解释器。(.py文件需要 python解释器执行，.java文件需要java解释器进行执行)。</p><p>那么我们上面的vue.js文件是怎么执行的呢？<br>通过查看vue.js文件源码，我们发现第一行代码是这样的：#!/usr/bin/env node<br>这行代码的意思是：告诉我们的操作系统，直接调用这个文件的时候，到环境变量中查找node命令执行。<br>(/usr/bin/env 是我们的环境变量)</p><p>然后，我们在我们的test.js文件中第一行加入这行代码  #!/usr/bin/env node<br>直接输入 ./test.js 即可执行这个js文件。</p><p>接着，我们不想用 ./test.js这样的方式执行js文件，我们想通过一个命令，比如 liugezhou 这个命令来执行这个test.js文件，我们需要怎么做呢？<br>第一种方式，我们去找环境变量，通过 echo $PATH</p><p>首先，我们创建一个环境变量：<br>cd  /Users/liumingzhou/.nvm/versions/node/v12.16.1/bin<br>创建软连接：ln -s  /Users/liumingzhou/Desktop/test.js  liugezhou<br>创建完毕后，就可以看到一个liugezhou软连接，我们在任何目录执行liugezhou就可以执行test.js文件了。</p></blockquote><p><strong>2-5 脚手架原理讲解（下）</strong></p><p><strong>问题一：为什么说脚手架本质是操作系统的客户端？它和我们在PC上安装的应用/软件有什么区别</strong></p><blockquote><p>脚手架执行起来的本质是靠node这个命令，node是一个操作系统客户端，而test.js 这个文件仅仅是作为一个参数注入到node命令中。node本质上是一个可执行文件(在window操作系统中可以看到node的扩展名为.exe的)。<br>本质来说没有区别。区别仅仅是安装的应用软件会提供一个GUI,而node并没有提供GUI</p></blockquote><p><strong>问题二：如何为node脚手架命令创建别名</strong></p><blockquote><p>方法一：即为上文提到的创建一个软连接。<br>接着，我们希望继续为上文提到的  liugezhou 软连接继续添加一个别名，我们需要这么做<br>在上文的bin目录下，执行命令  ln -s ./liugezhou liugezhou2<br>即 软连接可以嵌套。</p></blockquote><p><strong>问题三：描述脚手架命令执行的全过程</strong></p><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/2-3.79oyc1dprz80.webp" alt="2-3"></p><p><strong>2-6 脚手架开发流程和难点解析</strong></p><p><strong>通过以上分析，我们大致了解一个脚手架的开发流程如下：</strong></p><blockquote><ul><li>创建一个npm项目</li><li>创建脚手架的入口文件，且入口文件需要添加代码：#!/usr/bin/env node</li><li>配置package.json文件，添加bin属性(指定脚手架命令与地址)</li><li>编写脚手架代码</li><li>将脚手架发布到npm</li></ul></blockquote><p><strong>使用流程</strong>：</p><blockquote><ul><li>安装脚手架： npm install - g your-own-cli</li><li>使用脚手架： your-own-cli</li></ul></blockquote><p><strong>脚手架开发难点</strong>：</p><blockquote><ol><li>脚手架开发过程中通常需要将复杂的系统拆分为多个模块_<strong>(分包)</strong>_</li><li>脚手架开发过程中需要注册一系列的命令。如何对命令进行注册是一个重要的环节</li><li>需要对参数进行解析:     [vue command [options] <params>]</li><li>帮助文档：global[主命令]</li></ol></blockquote><p>…………</p><blockquote><p>命令行交互、日志打印、命令行文字变色、网络通信 HTTP/WebSocket、文件处理等。</p></blockquote><p><strong>2-7 快速入门第一个脚手架</strong></p><p>通过上节流程，我们本节快速开发一个liugezhou-test脚手架并发布，流程如下:</p><blockquote><ul><li>cd /Users/liumingzhou/Desktop</li><li>mkdir liugezhou-test</li><li>cd liugezhou-test</li><li>npm init -y</li><li>终端打开liugezhou-test项目：新建lib目录，lib目录下新建index.js文件（index.js文件内容如下）</li><li>修改package.json文件，添加 “bin”:{“liugezhou-test”:“lib/index.js”}</li><li>npm publish 发布npm包</li><li>下载安装：npm i -g liugezhou-test</li><li>测试：liugezhou-test</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env node</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;welcome liugezhou-test&#x27;</span>)</span><br></pre></td></tr></table></figure><p>这里注意一点，在npm publish的时候，如果是在Descktop目录下执行的，那么我们下载liugezhou-test包之后，会看到软链指向的是本地，这是因为npm为了我们本地调试：如果/Desktop目录下有这个包，会指向本地。</p><p><strong>2-8 脚手架本地调试方法</strong></p><blockquote><p>方式一：如上文所说，直接在Desktop目录下执行：npm install -g liugezhou-test,即调试本地包。<br>(移除本地安装的包：<em><strong>npm remove -g liugezhou-test</strong></em>)</p><p>方式二：直接在liugezhou-test文件目录下，执行：<strong><em>npm link</em></strong>,软链指向的node_modules源文件指向本地包。</p></blockquote><p><strong>分包情况下，如何调试本地包？</strong></p><blockquote><p>如果/Desktop/liugezhou-test要使用/Desktop/lilugezhou-test/lib包下的方法，如何做呢？</p><ul><li>在/Desktop/liugezhou-test/lib目录下，npm link</li><li>在/Desktop/liugezhou-test/目录下，npm link liugezhou-test-lib</li></ul></blockquote><p><strong>2-9 脚手架本地调试标准流程总结</strong></p><p><strong>链接本地脚手架</strong></p><blockquote><ul><li>cd your-cli-dir</li><li>npm link</li></ul></blockquote><p><strong>链接本地库文件</strong></p><blockquote><ul><li>cd your-lib-dir</li><li>npm link</li><li>cd your-cli-dir</li><li>npm link your-lib-dir</li></ul></blockquote><p><strong>取消链接本地库文件</strong></p><blockquote><ul><li>cd your-lib-dir</li><li>npm unlink</li><li>cd your-cli-dir</li><li>npm unlink your-lib-dir  #link存在</li><li>rm -rf node_modules     # link不存在</li><li>npm i -S your-lib-dir</li></ul></blockquote><p><strong>理解 npm  link</strong></p><blockquote><ul><li>npm link : 将当前项目链接到node全局node_modules中作为一个库文件，并解析bin配置创建可执行文件。</li><li>npm link your-libr:将当前项目中node_modules下指定的库文件链接到node全局node_modules下的库文件</li></ul></blockquote><p><strong>理解 npm unlink</strong></p><blockquote><ul><li>npm unlink:将当前项目从node全局node_modules中移除</li><li>npm unlink your-lib:将当前项目中的库文件依赖删除。</li></ul></blockquote><p><strong>2-10 脚手架命令注册和参数解析</strong></p><blockquote><p>process是node的内置库<br>我们在index.js中写代码： console.log(require(‘process’))</p><p>通过命令行执行 liugezhou-test init<br>会看到process有许许多多个属性，其中有一个argv属性。<br>通过分析这个argv属性，我们就看到了init这个属性。</p></blockquote><blockquote><p>因此我们可以通过argv来判断是否输入了  init 这个命令。</p></blockquote><p><strong>2-11 脚手架项目发布</strong></p><blockquote><p>老生常谈，npm publish<br>通过判断argv输入的参数，在liugezhou-test-lib中与liugezhou-test中加入相关逻辑<br>实现 liugezhou-test init 与 liugezhou -V的输出显示<br>然后分别发布，remove掉本地链接。</p></blockquote><h2 id="第三章-脚手架框架搭建">第三章 脚手架框架搭建</h2><hr><p><strong>3-1 <strong>本章的收获是什么，难点是什么？</strong></strong></p><p>本节课程非常下饭：</p><blockquote><ul><li>收获一：Lerna简介 [Lerna管理的项目有:babel、create-reat-app、vue-cli]</li></ul></blockquote><pre><code> 通过学习lerna将学会如何管理一个复杂的Javascript项目</code></pre><blockquote><ul><li>收获二：Lerna源码分析：讲解源码结构、执行流程、源码精读</li><li>收获三：基于lerna设计简历。</li></ul></blockquote><p><strong>3-2 原生脚手架开发痛点分析</strong></p><p>lerna设计源于其要解决的问题，首先我们要分析写原生脚手架开发的痛点：</p><blockquote><ol><li>痛点一：重复操作</li></ol><ul><li>多Package本地link</li><li>多Package依赖安装</li><li>多Package单元测试</li><li>多Package代码提交</li><li>多Package代码发布</li></ul><ol start="2"><li>版本一致性</li></ol><ul><li>发布时版本一致性</li><li>发布后相互依赖版本升级</li></ul></blockquote><p><strong>3-3 本章重点：lerna简介及脚手架开发流程</strong></p><p><strong>Lerna简介</strong></p><blockquote><p>Lerna : <strong>A tool for managing JavaScript projects with multiple packages.</strong><br>用于管理具有多个程序包的JavaScript项目的工具。</p><p>Lerna : <strong>Lerna is a tool that optimizes the workflow around managing multi-package repositories with git and npm.</strong><br>Lerna是一个基于 <strong>git+npm <strong>的优化工作流的</strong>多package</strong>项目的管理工具。</p></blockquote><p><strong>优势</strong></p><blockquote><ul><li>大幅减少重复操作</li><li>提升操作的标准化</li></ul></blockquote><p>Lerna 是架构优化的产物，它揭示了一个架构真理：项目复杂度提升后，就需要对项目进行架构优化。架构优化的主要目标往往都是以效能为核心。</p><blockquote><p>lerna官网：<a href="https://lerna.js.org/">https://lerna.js.org/</a></p></blockquote><p><strong>Lerna开发脚手架流程 ⭐️⭐️⭐️</strong><br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/2-4.1fovy6rqci3k.webp" alt="2-4"><br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/2-5.ry7x197y6ow.webp" alt="2-5"></p><p><strong>3-4 基于lerna搭建脚手架框架</strong><br><strong>本节使用命令依次如下</strong></p><blockquote><ul><li><p>mkdir  liugezhou-cli-dev</p></li><li><p>cd liugezhou-cli-dev</p></li><li><p>npm init -y</p></li><li><p>npm i -g lerna【全局安装】</p></li><li><p>npm i -S lerna</p></li><li><p>lerna init</p></li><li><p>lerna create core</p></li><li><p>lerna create utils</p></li></ul></blockquote><p><strong>3-5 Lerna核心操作</strong></p><p>本节使用命令依次如下：</p><blockquote><ul><li><p>lerna add liugezhou-test  (在packages目录下所有包中安装liugezhou-test包)</p></li><li><p>lerna add liugezhou-test packages/core  （在指定包core中添加依赖）</p></li><li><p>lerna clean (清除packages目录下的依赖)</p></li><li><p>lerna bootstrap (将刚清除的所有依赖，重新安装)</p></li><li><p>lerna link (开发的版本互相存在依赖，可用此命令完成)</p></li><li><p>lerna exec – <commands> […args]</p></li></ul></blockquote><p>lerna exec – rm -rf  node_modules   删除packages目录下的所有node_modules文件夹</p><blockquote><p>lerna exec --scope @liugezhou-cli/utils–rm -rf node_modules 删除packages目录下utils的。。。。<br>【上下文为packages目录】</p><ul><li>lerna run test</li><li>lerna run --scope @liugezhou-cli/core test  [执行core包package.json中script标签的test属性]</li></ul></blockquote><p><strong>3-6 Lerna发布流程(lerna使用总结)</strong></p><blockquote><ul><li><code>lerna init </code><br>会自动完成 git 初始化，但不会创建 .gitignore，这个必须要手动添加，否则会将 node_modules 目录都上传到 git</li></ul></blockquote><blockquote><ul><li><code>lerna add:</code><br>第一个参数：添加npm包名<br>第二个参数：本地package的路径（如果不加，则全部安装）<br>可选参数：–dev：将依赖安装到devDependencies,不加时安装到dependencies</li></ul></blockquote><blockquote><ul><li><code>lerna link</code><br>如果未发布上线，需要手动添加到package.json中再执行。</li></ul></blockquote><blockquote><ul><li><code>lerna clean</code><br>只会删除 node_modules,不会删除package.json中的依赖</li></ul></blockquote><blockquote><ul><li><code>lerna exec 和 lerna run</code><br>–scope属性后添加的是包名，不是package的路径，这点和 lerna add 不同</li></ul></blockquote><blockquote><ul><li><code>lerna publish</code></li></ul><ol><li>发布时会自动执行 git add package-lock.json,所以该文件不能加入到.gitignore中去。</li><li>发布时先创建远程仓库，且push代码。</li><li>执行npm publish前完成 npm login</li><li>如果发布的包名为 @xxxx/yyy 的格式，需要现在npmjs.org上注册organization</li><li>发布到npm group时默认为private，package.json中需手动添加配置：</li></ol></blockquote><p><code>&quot;publishConfig&quot;: &#123;  &quot;access&quot;: &quot;public&quot;&#125;</code></p><h2 id="第四章-Lerna源码解析">第四章 Lerna源码解析</h2><p><strong>4-1 赚回学费：武装简历、升职加薪</strong></p><p>为什么要做源码解析：赚回学费、走上人生巅峰</p><blockquote><ul><li>自我成长、提升编码能力和技术深度的需要</li><li>为我所用，应用到实际开发，实际产生效益</li><li>学习借鉴，站在巨人的肩膀上，登高望远</li></ul></blockquote><p>为什么要分析Lerna源码</p><blockquote><ul><li>2W+ star的明星项目</li><li>Lerna是脚手架，对我们开发脚手架有借鉴意义</li><li>Lerna项目中蕴含大量的最佳实践，值得深入研究和学习</li></ul></blockquote><p>学习目标</p><blockquote><ul><li>Lerna源码结构和执行流程分析</li><li>import-local源码深度精读</li></ul></blockquote><p>学习收获</p><blockquote><ul><li>如何将源码分析写进简历</li><li>学习明星项目的架构设计</li><li>获得脚手架执行流程的一种实现思路</li><li>获得脚手架调试本地源码的另一种方式</li><li>Node.js加载node_modules模块的流程 ✨✨✨✨✨</li><li>各种文件操作算法和最佳实践</li></ul></blockquote><p><strong>4-2 lerna源码结构分析和调试技巧</strong></p><blockquote><ol><li>github下载lerna源码到本地且安装依赖！</li><li>使用webstorm打开源码，找到入口文件–package.json中的bin属性。</li><li>webstorm添加调试：Edit Configurations，这里需要在Configuration中添加<code>node parameters</code></li></ol></blockquote><p>这里遇到一个问题，代码调试的时候，Variables窗口内没内容。</p><p><strong>4-3 Node源码调试过程中必会的小技巧</strong></p><blockquote><ul><li>WebStorm -&gt; Preferences… -&gt; 搜索 Node.js and NPM -&gt; 勾选 Coding assistance for Node.js</li></ul></blockquote><p>这个目的是：对当前项目中的一些默认库或内置库做一些高亮,使得node提供的一些库文件可以进行跳转。</p><blockquote><ul><li>搜索 Debugger -&gt; Stepping -&gt; 默认勾选的都取消掉</li></ul></blockquote><p>这个目的是在调试的时候，取消勾选就可以进去一些库文件查看源码</p><p><strong>4-4 lerna初始化过程源码详细分析</strong></p><p>通过前面分析，我们知道，入口文件为：lerna/core/lerna/cli.js文件，从这里开始看源码：</p><blockquote><p>require(“.”)(<strong>process</strong>.argv.slice(2));</p><ul><li>require(‘.’):这里的 <code>.</code> 是相对路径,相当于是 require('./index.js)</li><li>到这行代码后，先加载与该cli.js同级别目录下的index.js文件。</li><li>等文件加载完毕后，将<strong>process</strong>.argv.slice(2)参数， 也就是我们写入的参数，传入到 index.js文件中module.exports出来的方法 main</li></ul></blockquote><p><strong>4-5 【高能知识点】npm项目本地依赖引用方法</strong></p><blockquote><p><strong>本地依赖的最佳实践</strong>：引用本地包的方式可以使用 file的方式，这是因为lerna publish的时候可以在线上环境把fiel的方式改成引用线上包的方式。大概是个这么个意思。这种方式可以去除之前使用 npm link的方式。</p></blockquote><blockquote><p>理解了这里本地依赖的file引用后，回到之前的3-6 lerna-publish发布流程项目，将本地引用的@cloudscope-cli/utils改为file引用，这里需要注意：在@cloudscope-cli/core中使用file方式引用了本地的utils包后，需要npm install一下。</p></blockquote><p><strong>4-6 脚手架框架yargs快速入门</strong></p><p>首先在npmjs官网搜索yargs，看一下基本使用情况,然后开始我们的学习：<br>在某目录下，新建一个空的项目，具体操作如下：</p><blockquote><p>mkdir liugezhou-test<br>npm init -y<br>新建lib/index.js<br>package.json文件添加 “bin”:“lib/index.js”<br>npm install -S yarns<br>npm install -S dedent</p></blockquote><p>然后，开始编辑index.js文件，进行yargs相关用法的学习：<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/2-6.2vup03ac3eg0.webp" alt="2-6"></p><p><strong>4-7 yargs高级用法讲解</strong></p><p>关于yargs的command用法，我们从npmjs官网，看到示例如下：<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/2-7.6vlv3vzsg740.webp" alt="2-7"><br>通过以上代码，我们可以看到定义command的时候，传入了四个参数：</p><blockquote><ul><li>‘serve [port]’: command的格式,port为我们自定义的option，相当于  liugezhou-test  serve</li><li>‘start the serve’:关于此serve  command命令的补充描述</li><li>第三个参数为builder函数：在执行此command具体命令之前做的动作，比如上文为serve这个命令定义了一个参数 port，且给定port的默认值为5000</li><li>第四个参数我们叫做handler：是用来具体执行command的一个行为</li></ul></blockquote><p>在对上面demo有个简单了解后，回到我们上一节的代码中，继续添加command定义：<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/2-8.hrcclk4of0w.webp" alt="2-8"></p><p><strong>4-8 lerna脚手架初始化过程超详细讲解</strong></p><p>通过 4-6、4-7两节内容，分析lerna脚手架的初始化过程讲解。<br><strong>4-9 lerna脚手架Command执行过程详解</strong></p><p>大致流程了解，未画流程图。</p><p><strong>4-10 【关键知识复习】javascript事件循环–EventLoop</strong></p><blockquote><ul><li>EventLoop中存在两种事件：宏任务(MacroTask)和微任务(MicroTask)</li><li>JavaScript脚本中加入到宏任务中去</li><li>当宏任务队列中任务执行完毕后，会将微任务队列中任务清空，清空之后再去执行宏任务队列。这种循环往复的执行流程就称为事件循环–EventLoop。</li><li>然后：我们在宏任务中加入一个setTimeout。</li><li>接着，我们在宏任务队列中加入一个 Promise.then() , Promise.then()中的内容会被加入到微任务队列中去。</li></ul></blockquote><p><strong>4-11 import-local执行流程深度分析</strong></p><blockquote><p>import-local的作用是：当我们的项目当中本地存在一个脚手架命令，同时全局在node当中也存在一个脚手架命令的时候，优先选用本地的node_modules中的版本。</p></blockquote><blockquote><p>在执行一个node代码的时候，默认会向node代码当中注入一些变量：__filename 、 __dirname 、 require 、 module、exports.</p></blockquote><blockquote><p>首先，执行lerna命令的时候，会执行node全局下的lerna，即which  lerna 指向的：<br>软连接：/Users/liumingzhou/.nvm/versions/node/v12.16.1，<br>实际指向：/Users/liumingzhou/.nvm/versions/node/v12.16.1/lib/node_modules/lerna/cli.js<code>[PRATIC]</code></p></blockquote><blockquote><p>然后，在webstorm的debug调试中，Node parameters修改为<code>[PRATIC]</code> 地址。<br>接着，点击调试按钮，我们知道，程序首先进入的文件是<code>[PRATIC]</code></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env node</span></span><br><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="comment">/* eslint-disable import/no-dynamic-require, global-require */</span></span><br><span class="line"><span class="keyword">const</span> importLocal = <span class="built_in">require</span>(<span class="string">&quot;import-local&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (importLocal(__filename)) &#123;</span><br><span class="line">  <span class="built_in">require</span>(<span class="string">&quot;npmlog&quot;</span>).<span class="title function_">info</span>(<span class="string">&quot;cli&quot;</span>, <span class="string">&quot;using local version of lerna&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="built_in">require</span>(<span class="string">&quot;.&quot;</span>)(process.<span class="property">argv</span>.<span class="title function_">slice</span>(<span class="number">2</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过上面分析我们知道了执行流程，现在的重点就是看代码中的 require(‘import-local’)中的源码。<br>我们进入到import-local源码中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> resolveCwd = <span class="built_in">require</span>(<span class="string">&#x27;resolve-cwd&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> pkgDir = <span class="built_in">require</span>(<span class="string">&#x27;pkg-dir&#x27;</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function"><span class="params">filename</span> =&gt;</span> &#123;</span><br><span class="line"> <span class="keyword">const</span> globalDir = pkgDir.<span class="title function_">sync</span>(path.<span class="title function_">dirname</span>(filename));</span><br><span class="line"> <span class="keyword">const</span> relativePath = path.<span class="title function_">relative</span>(globalDir, filename);</span><br><span class="line"> <span class="keyword">const</span> pkg = <span class="built_in">require</span>(path.<span class="title function_">join</span>(globalDir, <span class="string">&#x27;package.json&#x27;</span>));</span><br><span class="line"> <span class="keyword">const</span> localFile = resolveCwd.<span class="title function_">silent</span>(path.<span class="title function_">join</span>(pkg.<span class="property">name</span>, relativePath));</span><br><span class="line"> <span class="keyword">return</span> localFile &amp;&amp; path.<span class="title function_">relative</span>(localFile, filename) !== <span class="string">&#x27;&#x27;</span> ? <span class="built_in">require</span>(localFile) : <span class="literal">null</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p><code>path.dirname(filename)</code>：这句代码的意思是获取到文件filename的上级目录。</p></blockquote><p><strong>4-12 pkg-dir源码解析（一大波优秀的文件操作库)</strong></p><p>本节分析上面代码，对import-local源码细节分析，本节分析代码流程为globalDir是如何获得的：</p><blockquote><p>const pkgDir = require(‘pkg-dir’)<br>pkg-dir:字面意思为，获得package.json文件的上级目录</p><p>进入 pkg-dir源码：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> findUp = <span class="built_in">require</span>(<span class="string">&#x27;find-up&#x27;</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function"><span class="params">cwd</span> =&gt;</span> <span class="title function_">findUp</span>(<span class="string">&#x27;package.json&#x27;</span>, &#123;cwd&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">fp</span> =&gt;</span> fp ? path.<span class="title function_">dirname</span>(fp) : <span class="literal">null</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>.<span class="property">sync</span> = <span class="function"><span class="params">cwd</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> fp = findUp.<span class="title function_">sync</span>(<span class="string">&#x27;package.json&#x27;</span>, &#123;cwd&#125;);</span><br><span class="line"> <span class="keyword">return</span> fp ? path.<span class="title function_">dirname</span>(fp) : <span class="literal">null</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>我们分析pkg-dir代码可知：pkg-dir这个库向我们暴露了两个方法：默认cwd和sync方法，其中sync方法会以同步的方式执行。</p><p>同时，这里又引用find-up这个库</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> locatePath = <span class="built_in">require</span>(<span class="string">&#x27;locate-path&#x27;</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function">(<span class="params">filename, opts = &#123;&#125;</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> startDir = path.<span class="title function_">resolve</span>(opts.<span class="property">cwd</span> || <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"> <span class="keyword">const</span> &#123;root&#125; = path.<span class="title function_">parse</span>(startDir);</span><br><span class="line"> <span class="keyword">const</span> filenames = [].<span class="title function_">concat</span>(filename);</span><br><span class="line"> <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">  (<span class="keyword">function</span> <span class="title function_">find</span>(<span class="params">dir</span>) &#123;</span><br><span class="line">   <span class="title function_">locatePath</span>(filenames, &#123;<span class="attr">cwd</span>: dir&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">file</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (file) &#123;</span><br><span class="line">     <span class="title function_">resolve</span>(path.<span class="title function_">join</span>(dir, file));</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (dir === root) &#123;</span><br><span class="line">     <span class="title function_">resolve</span>(<span class="literal">null</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     <span class="title function_">find</span>(path.<span class="title function_">dirname</span>(dir));</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;);</span><br><span class="line">  &#125;)(startDir);</span><br><span class="line"> &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>.<span class="property">sync</span> = <span class="function">(<span class="params">filename, opts = &#123;&#125;</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">let</span> dir = path.<span class="title function_">resolve</span>(opts.<span class="property">cwd</span> || <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"> <span class="keyword">const</span> &#123;root&#125; = path.<span class="title function_">parse</span>(dir);</span><br><span class="line"> <span class="keyword">const</span> filenames = [].<span class="title function_">concat</span>(filename);</span><br><span class="line"> <span class="comment">// eslint-disable-next-line no-constant-condition</span></span><br><span class="line"> <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> file = locatePath.<span class="title function_">sync</span>(filenames, &#123;<span class="attr">cwd</span>: dir&#125;);</span><br><span class="line">  <span class="keyword">if</span> (file) &#123;</span><br><span class="line">   <span class="keyword">return</span> path.<span class="title function_">join</span>(dir, file);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (dir === root) &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  dir = path.<span class="title function_">dirname</span>(dir);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>同理，find-up这个库也是默认的module.exports方法与同步返回的sync方法。<br>这里我们继续分析find-up这个库的sync方法，一行一行代码解析：</p></blockquote><ol><li>let dir = path.resolve(opts.cwd || ‘’);</li></ol><blockquote><p>path.resolve是我node当中经常使用的方法，它主要作用是把两个相对路径进行结合。<br>path.resolve(‘/Users’,‘/liumingzhou’),返回的路径为 /liumingzhou<br>path.join(‘/Users’,‘/liumingzhou’),返回的路径为 /Users/liumingzhou</p><p>这里有个注意点是path.resolve(‘.’)返回的是当前路径,而path.join(‘.’),返回的就是. 不会帮我们判定当前的 . 与上级路径的关系。</p></blockquote><ol start="2"><li>const {root} = path.parse(dir);</li></ol><blockquote><p>path.parse(“/Users/liumingzhou/Documents/imoocCourse/Web前端架构师/lerna/core”)<br>返回的结果为：</p></blockquote><p>{<br>root:‘/’,<br>dir:‘/Users/liumingzhou/Documents/imoocCourse/Web前端架构师/lerna/core’,<br>base:‘lerna’,<br>ext:‘’,<br>name:‘lerna’<br>}</p><ol start="3"><li>const filenames = [].concat(filename);</li></ol><blockquote><p>通过分析上下文，我们知道这行代码的filename指的是 package.json,于是filenames = [‘package.json’]</p></blockquote><ol start="4"><li>while (true) {}</li></ol><blockquote><p>这里是个无限循环，需要注意的一点是退出条件</p></blockquote><ol start="5"><li>const file = locatePath.sync(filenames, {cwd: dir});</li></ol><blockquote><p>这里又调用了这个locatePath这个库的sync方法，local-path这个库的作用是磁盘中是否存在这个路径，如果存在会把第一个文件返回。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>.<span class="property">sync</span> = <span class="function">(<span class="params">iterable, options</span>) =&gt;</span> &#123;</span><br><span class="line"> options = <span class="title class_">Object</span>.<span class="title function_">assign</span>(&#123;</span><br><span class="line">  <span class="attr">cwd</span>: process.<span class="title function_">cwd</span>()</span><br><span class="line"> &#125;, options);</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">const</span> el <span class="keyword">of</span> iterable) &#123;</span><br><span class="line">  <span class="keyword">if</span> (pathExists.<span class="title function_">sync</span>(path.<span class="title function_">resolve</span>(options.<span class="property">cwd</span>, el))) &#123;</span><br><span class="line">   <span class="keyword">return</span> el;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>通过上面的代码，我们看到上面又用到了一个库：pathExists(通过名字我们显而易见的知道，这个库的作用是判断传入的一个路径是否存在的)，pathExists这个库源码不贴了，主要的一行代码是：fs.accessSync(fp),这行代码就是判断是否能到达一个文件，如果报错就会被try catch捕获返回false</p></blockquote><ol start="6"><li>if (file) {</li></ol><p>return path.join(dir, file);         <br> }</p><blockquote><p>通过前面分析 path.join(dir, file)返回的就是<br>/Users/liumingzhou/Documents/imoocCourse/Web前端架构师/lerna/core/lerna/package.json</p></blockquote><p>最终获得globalDir！</p><p><strong>4-13 resolve-from源码解析（彻底搞懂node_modules模块加载逻辑）</strong></p><p>我们回到import-local源码，继续看<br>const relativePath = path.relative(globalDir, filename);</p><blockquote><p>demo:<br>const relativePath = path.relative(“/a/b/c”, ‘/a/b/c/d.js’);<br>relativePath返回值为  d.js</p></blockquote><p>const pkg = require(path.join(globalDir, ‘package.json’));</p><blockquote><p>这里获得package.json这个文件</p></blockquote><p>import-local最关键的一部分来了：<br>const localFile = resolveCwd.silent(path.join(<a href="http://pkg.name">pkg.name</a>, relativePath));</p><blockquote><p>resolveCwd的含义是给出一个包名和主进入文件名，去本地文件中查找是否存在这样的路径</p></blockquote><p>然后我们就进入resolveCwd这个引用库的源码，查看是如何实现的(传入的参数为 lerna/cli.js)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> resolveFrom = <span class="built_in">require</span>(<span class="string">&#x27;resolve-from&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function"><span class="params">moduleId</span> =&gt;</span> <span class="title function_">resolveFrom</span>(process.<span class="title function_">cwd</span>(), moduleId);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>.<span class="property">silent</span> = <span class="function"><span class="params">moduleId</span> =&gt;</span> resolveFrom.<span class="title function_">silent</span>(process.<span class="title function_">cwd</span>(), moduleId);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里又引用了resolve-from这个库的silent静默方法(源码见下)：<br>这里需要引起注意一点的是resolve-from这个库传入的两个参数分别是上面提到的 lerna/cli.js以及 process.cwd()这个参数，这个process.cwd的传入参数为Working directory：<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/2-9.5jf81z9j35c0.webp" alt="2-9"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Module</span> = <span class="built_in">require</span>(<span class="string">&#x27;module&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">resolveFrom</span> = (<span class="params">fromDir, moduleId, silent</span>) =&gt; &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> fromDir !== <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeError</span>(<span class="string">`Expected \`fromDir\` to be of type \`string\`, got \`<span class="subst">$&#123;<span class="keyword">typeof</span> fromDir&#125;</span>\``</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> moduleId !== <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeError</span>(<span class="string">`Expected \`moduleId\` to be of type \`string\`, got \`<span class="subst">$&#123;<span class="keyword">typeof</span> moduleId&#125;</span>\``</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fromDir = path.<span class="title function_">resolve</span>(fromDir);</span><br><span class="line"><span class="keyword">const</span> fromFile = path.<span class="title function_">join</span>(fromDir, <span class="string">&#x27;noop.js&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">resolveFileName</span> = (<span class="params"></span>) =&gt; <span class="title class_">Module</span>.<span class="title function_">_resolveFilename</span>(moduleId, &#123;</span><br><span class="line"><span class="attr">id</span>: fromFile,</span><br><span class="line"><span class="attr">filename</span>: fromFile,</span><br><span class="line"><span class="attr">paths</span>: <span class="title class_">Module</span>.<span class="title function_">_nodeModulePaths</span>(fromDir)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (silent) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_">resolveFileName</span>();</span><br><span class="line">&#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="title function_">resolveFileName</span>();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function">(<span class="params">fromDir, moduleId</span>) =&gt;</span> <span class="title function_">resolveFrom</span>(fromDir, moduleId);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>.<span class="property">silent</span> = <span class="function">(<span class="params">fromDir, moduleId</span>) =&gt;</span> <span class="title function_">resolveFrom</span>(fromDir, moduleId, <span class="literal">true</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分析上面代码，最关键的代码为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">resolveFileName</span> = (<span class="params"></span>) =&gt; <span class="title class_">Module</span>.<span class="title function_">_resolveFilename</span>(moduleId, &#123;</span><br><span class="line"><span class="attr">id</span>: fromFile,</span><br><span class="line"><span class="attr">filename</span>: fromFile,</span><br><span class="line"><span class="attr">paths</span>: <span class="title class_">Module</span>.<span class="title function_">_nodeModulePaths</span>(fromDir)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>Module：node的内置模块，(通常开发过程中是不需要使用的),Module中的 下划线(_)方法，都称为内置方法<br>_resolveFilename方法，是我们node中  require方法实现的核心方法之一，关于require方法的实现，参考阮一峰老师的这篇文章：<a href="http://www.ruanyifeng.com/blog/2015/05/require.html">require()源码解读</a></p><p>分析上面这段代码，Module._resolveFilename的作用是解析模块的真实路径，这个方法传进去两个参数，其中第一个options我们发现了：<br>Module._nodeModulesPaths(fromDir)这个方法，这个方法的作用是生成node_modules的可能路径。<br>在对这个方法源码进行学习前，我们预先从老师那了解到了这个方法的实现逻辑：</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/2-10.6yvj127gn0w0.webp" alt="2-10"></p><p>然后我们进入到Module._nodeModulesPaths方法中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Module</span>.<span class="property">_nodeModulePaths</span> = <span class="keyword">function</span>(<span class="params"><span class="keyword">from</span></span>) &#123;</span><br><span class="line">    <span class="comment">// Guarantee that &#x27;from&#x27; is absolute.</span></span><br><span class="line">    <span class="keyword">from</span> = path.<span class="title function_">resolve</span>(<span class="keyword">from</span>);</span><br><span class="line">    <span class="comment">// Return early not only to avoid unnecessary work, but to *avoid* returning</span></span><br><span class="line">    <span class="comment">// an array of two items for a root: [ &#x27;//node_modules&#x27;, &#x27;/node_modules&#x27; ]</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">from</span> === <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">      <span class="keyword">return</span> [<span class="string">&#x27;/node_modules&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// note: this approach *only* works when the path is guaranteed</span></span><br><span class="line">    <span class="comment">// to be absolute.  Doing a fully-edge-case-correct path.split</span></span><br><span class="line">    <span class="comment">// that works on both Windows and Posix is non-trivial.</span></span><br><span class="line">    <span class="keyword">const</span> paths = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="keyword">from</span>.<span class="property">length</span> - <span class="number">1</span>, p = <span class="number">0</span>, last = <span class="keyword">from</span>.<span class="property">length</span>; i &gt;= <span class="number">0</span>; --i) &#123;</span><br><span class="line">      <span class="keyword">const</span> code = <span class="keyword">from</span>.<span class="title function_">charCodeAt</span>(i);</span><br><span class="line">      <span class="keyword">if</span> (code === <span class="variable constant_">CHAR_FORWARD_SLASH</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p !== nmLen)</span><br><span class="line">          paths.<span class="title function_">push</span>(<span class="keyword">from</span>.<span class="title function_">slice</span>(<span class="number">0</span>, last) + <span class="string">&#x27;/node_modules&#x27;</span>);</span><br><span class="line">        last = i;</span><br><span class="line">        p = <span class="number">0</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (p !== -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (nmChars[p] === code) &#123;</span><br><span class="line">          ++p;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          p = -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Append /node_modules to handle root paths.</span></span><br><span class="line">    paths.<span class="title function_">push</span>(<span class="string">&#x27;/node_modules&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> paths;</span><br><span class="line">  &#125;;</span><br></pre></td></tr></table></figure><blockquote><p>分析以上代码，这里我们的from是：/Users/liumingzhou/Documents/imoocCourse/Web前端架构师/lerna<br>然后通过上面算法计算，最后得到的结果是：</p><p>[/Users/liumingzhou/Documents/imoocCourse/Web前端架构师/lerna/node_modules,<br>/Users/liumingzhou/Documents/imoocCourse/Web前端架构师/node_modules,<br>/Users/liumingzhou/Documents/imoocCourse/node_modules,<br>/Users/liumingzhou/Documents/node_modules,<br>/Users/liumingzhou/node_modules,<br>/Users/node_modules,<br>/node_modules]</p></blockquote><p>将这个数组返回后，我们继续分析Module._resolveFilename这个方法的源码：<br>同样在对这个方法源码进行学习前，我们也预先从老师那了解到了这个方法的实现逻辑：<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/2-11.666n2zheeec0.webp" alt="2-11"></p><p><strong>4-14 Node模块加载核心方法_resovleFileName源码深入解析</strong></p><p>首先，关于Module._resolveFileName的源码分析要更为复杂，这是因为算法部分较多。</p><p>Module._resolveFilename这个方法的源码为如下(代码逻辑添加注释)：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Module</span>.<span class="property">_resolveFilename</span> = <span class="keyword">function</span>(<span class="params">request, parent, isMain, options</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title class_">NativeModule</span>.<span class="title function_">canBeRequiredByUsers</span>(request)) &#123;  <span class="comment">//判断是否为可加载的内置模块</span></span><br><span class="line">    <span class="keyword">return</span> request;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> paths;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> options === <span class="string">&#x27;object&#x27;</span> &amp;&amp; options !== <span class="literal">null</span>) &#123;   <span class="comment">//我们在这传入的options是   undefined，因此之间跳过到else中---即执行Module._resolveLookupPaths(request, parent);</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">ArrayIsArray</span>(options.<span class="property">paths</span>)) &#123;</span><br><span class="line">      <span class="keyword">const</span> isRelative = request.<span class="title function_">startsWith</span>(<span class="string">&#x27;./&#x27;</span>) ||</span><br><span class="line">          request.<span class="title function_">startsWith</span>(<span class="string">&#x27;../&#x27;</span>) ||</span><br><span class="line">          ((isWindows &amp;&amp; request.<span class="title function_">startsWith</span>(<span class="string">&#x27;.\\&#x27;</span>)) ||</span><br><span class="line">          request.<span class="title function_">startsWith</span>(<span class="string">&#x27;..\\&#x27;</span>));</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (isRelative) &#123;</span><br><span class="line">        paths = options.<span class="property">paths</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> fakeParent = <span class="keyword">new</span> <span class="title class_">Module</span>(<span class="string">&#x27;&#x27;</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        paths = [];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; options.<span class="property">paths</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">          <span class="keyword">const</span> path = options.<span class="property">paths</span>[i];</span><br><span class="line">          fakeParent.<span class="property">paths</span> = <span class="title class_">Module</span>.<span class="title function_">_nodeModulePaths</span>(path);</span><br><span class="line">          <span class="keyword">const</span> lookupPaths = <span class="title class_">Module</span>.<span class="title function_">_resolveLookupPaths</span>(request, fakeParent);</span><br><span class="line"></span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; lookupPaths.<span class="property">length</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!paths.<span class="title function_">includes</span>(lookupPaths[j]))</span><br><span class="line">              paths.<span class="title function_">push</span>(lookupPaths[j]);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (options.<span class="property">paths</span> === <span class="literal">undefined</span>) &#123;</span><br><span class="line">      paths = <span class="title class_">Module</span>.<span class="title function_">_resolveLookupPaths</span>(request, parent);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_">ERR_INVALID_OPT_VALUE</span>(<span class="string">&#x27;options.paths&#x27;</span>, options.<span class="property">paths</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    paths = <span class="title class_">Module</span>.<span class="title function_">_resolveLookupPaths</span>(request, parent);  <span class="comment">// 然后就进入了_resolveLookPaths，进行了paths的一些合并，拿到合并的数组</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (parent &amp;&amp; parent.<span class="property">filename</span>) &#123;      <span class="comment">// 我们这里是有filename的</span></span><br><span class="line">    <span class="keyword">const</span> filename = <span class="title function_">trySelf</span>(parent.<span class="property">filename</span>, isMain, request);</span><br><span class="line">    <span class="keyword">if</span> (filename) &#123;</span><br><span class="line">      <span class="title function_">emitExperimentalWarning</span>(<span class="string">&#x27;Package name self resolution&#x27;</span>);</span><br><span class="line">      <span class="keyword">const</span> cacheKey = request + <span class="string">&#x27;\x00&#x27;</span> +</span><br><span class="line">          (paths.<span class="property">length</span> === <span class="number">1</span> ? paths[<span class="number">0</span>] : paths.<span class="title function_">join</span>(<span class="string">&#x27;\x00&#x27;</span>));</span><br><span class="line">      <span class="title class_">Module</span>.<span class="property">_pathCache</span>[cacheKey] = filename;</span><br><span class="line">      <span class="keyword">return</span> filename;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Look up the filename first, since that&#x27;s the cache key.</span></span><br><span class="line">  <span class="keyword">const</span> filename = <span class="title class_">Module</span>.<span class="title function_">_findPath</span>(request, paths, isMain, <span class="literal">false</span>);  <span class="comment">//另一非常有难度的方法，源代码见下面的下面</span></span><br><span class="line">  <span class="keyword">if</span> (filename) <span class="keyword">return</span> filename;</span><br><span class="line">  <span class="keyword">const</span> requireStack = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> cursor = parent;</span><br><span class="line">    cursor;</span><br><span class="line">    cursor = cursor.<span class="property">parent</span>) &#123;</span><br><span class="line">    requireStack.<span class="title function_">push</span>(cursor.<span class="property">filename</span> || cursor.<span class="property">id</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> message = <span class="string">`Cannot find module &#x27;<span class="subst">$&#123;request&#125;</span>&#x27;`</span>;</span><br><span class="line">  <span class="keyword">if</span> (requireStack.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    message = message + <span class="string">&#x27;\nRequire stack:\n- &#x27;</span> + requireStack.<span class="title function_">join</span>(<span class="string">&#x27;\n- &#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// eslint-disable-next-line no-restricted-syntax</span></span><br><span class="line">  <span class="keyword">const</span> err = <span class="keyword">new</span> <span class="title class_">Error</span>(message);</span><br><span class="line">  err.<span class="property">code</span> = <span class="string">&#x27;MODULE_NOT_FOUND&#x27;</span>;</span><br><span class="line">  err.<span class="property">requireStack</span> = requireStack;</span><br><span class="line">  <span class="keyword">throw</span> err;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Module._resolveLookupPaths这个方法的源码为如下(代码逻辑添加注释)：<br>主要功能就是将paths和环境变量node_modules合并</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Module</span>.<span class="property">_resolveLookupPaths</span> = <span class="keyword">function</span>(<span class="params">request, parent</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title class_">NativeModule</span>.<span class="title function_">canBeRequiredByUsers</span>(request)) &#123;   <span class="comment">// 先判断是否为内置模块</span></span><br><span class="line">    <span class="title function_">debug</span>(<span class="string">&#x27;looking for %j in []&#x27;</span>, request);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Check for node modules paths.</span></span><br><span class="line">  <span class="keyword">if</span> (request.<span class="title function_">charAt</span>(<span class="number">0</span>) !== <span class="string">&#x27;.&#x27;</span> ||</span><br><span class="line">      (request.<span class="property">length</span> &gt; <span class="number">1</span> &amp;&amp;</span><br><span class="line">      request.<span class="title function_">charAt</span>(<span class="number">1</span>) !== <span class="string">&#x27;.&#x27;</span> &amp;&amp;</span><br><span class="line">      request.<span class="title function_">charAt</span>(<span class="number">1</span>) !== <span class="string">&#x27;/&#x27;</span> &amp;&amp;</span><br><span class="line">      (!isWindows || request.<span class="title function_">charAt</span>(<span class="number">1</span>) !== <span class="string">&#x27;\\&#x27;</span>))) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> paths = modulePaths;        <span class="comment">//环境变量中存储的一些node_modules目录</span></span><br><span class="line">    <span class="keyword">if</span> (parent != <span class="literal">null</span> &amp;&amp; parent.<span class="property">paths</span> &amp;&amp; parent.<span class="property">paths</span>.<span class="property">length</span>) &#123;</span><br><span class="line">      paths = parent.<span class="property">paths</span>.<span class="title function_">concat</span>(paths);    <span class="comment">// 与之前传进来的paths进行合并</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">debug</span>(<span class="string">&#x27;looking for %j in %j&#x27;</span>, request, paths);</span><br><span class="line">    <span class="keyword">return</span> paths.<span class="property">length</span> &gt; <span class="number">0</span> ? paths : <span class="literal">null</span>;    <span class="comment">// 将合并的paths返回  </span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// In REPL, parent.filename is null.</span></span><br><span class="line">  <span class="keyword">if</span> (!parent || !parent.<span class="property">id</span> || !parent.<span class="property">filename</span>) &#123;</span><br><span class="line">    <span class="comment">// Make require(&#x27;./path/to/foo&#x27;) work - normally the path is taken</span></span><br><span class="line">    <span class="comment">// from realpath(__filename) but in REPL there is no filename</span></span><br><span class="line">    <span class="keyword">const</span> mainPaths = [<span class="string">&#x27;.&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="title function_">debug</span>(<span class="string">&#x27;looking for %j in %j&#x27;</span>, request, mainPaths);</span><br><span class="line">    <span class="keyword">return</span> mainPaths;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">debug</span>(<span class="string">&#x27;RELATIVE: requested: %s from parent.id %s&#x27;</span>, request, parent.<span class="property">id</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> parentDir = [path.<span class="title function_">dirname</span>(parent.<span class="property">filename</span>)];</span><br><span class="line">  <span class="title function_">debug</span>(<span class="string">&#x27;looking for %j&#x27;</span>, parentDir);</span><br><span class="line">  <span class="keyword">return</span> parentDir;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Module._findPath要解决的问题是在paths中解析模块的真实路径，<br>同样在对这个方法源码进行学习前，我们也预先从老师那了解到了这个方法的实现逻辑：<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/2-12.2oq71qhv97u0.webp" alt="2-12"><br>源码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Module</span>.<span class="property">_findPath</span> = <span class="keyword">function</span>(<span class="params">request, paths, isMain</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> absoluteRequest = path.<span class="title function_">isAbsolute</span>(request);  <span class="comment">//判断是否为绝对路径</span></span><br><span class="line">  <span class="keyword">if</span> (absoluteRequest) &#123;</span><br><span class="line">    paths = [<span class="string">&#x27;&#x27;</span>];</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!paths || paths.<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 通过 \x00 生成一大段的cacheKey</span></span><br><span class="line">  <span class="keyword">const</span> cacheKey = request + <span class="string">&#x27;\x00&#x27;</span> +</span><br><span class="line">                (paths.<span class="property">length</span> === <span class="number">1</span> ? paths[<span class="number">0</span>] : paths.<span class="title function_">join</span>(<span class="string">&#x27;\x00&#x27;</span>));</span><br><span class="line">  <span class="keyword">const</span> entry = <span class="title class_">Module</span>.<span class="property">_pathCache</span>[cacheKey];</span><br><span class="line">  <span class="keyword">if</span> (entry)</span><br><span class="line">    <span class="keyword">return</span> entry;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> exts;</span><br><span class="line">  <span class="comment">// trailingSlash判断request是否已 / 结尾的</span></span><br><span class="line">  <span class="keyword">let</span> trailingSlash = request.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp;</span><br><span class="line">    request.<span class="title function_">charCodeAt</span>(request.<span class="property">length</span> - <span class="number">1</span>) === <span class="variable constant_">CHAR_FORWARD_SLASH</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 若不是以 / 结尾，</span></span><br><span class="line">  <span class="keyword">if</span> (!trailingSlash) &#123;</span><br><span class="line">  <span class="comment">//会以正则进行匹配，这里的正则在下下节专门学习，这里暂时略过，这里的结论：该正则表示的结果为  是否是以“/..、/.、.. 、 . ”结尾</span></span><br><span class="line">    trailingSlash = <span class="regexp">/(?:^|\/)\.?\.$/</span>.<span class="title function_">test</span>(request);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// For each path</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; paths.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="comment">// Don&#x27;t search further if path doesn&#x27;t exist</span></span><br><span class="line">    <span class="comment">//一次拿出paths中存储的值</span></span><br><span class="line">    <span class="keyword">const</span> curPath = paths[i];  </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//stat(curPath)返回结果 1是文件夹，0为文件，我们这里第一个返回的是文件夹 1，因此，不会跳出循环，继续向下执行</span></span><br><span class="line">    <span class="keyword">if</span> (curPath &amp;&amp; <span class="title function_">stat</span>(curPath) &lt; <span class="number">1</span>) <span class="keyword">continue</span>; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//这里的意思就是将我们的curPath与request做一个结合</span></span><br><span class="line">    <span class="keyword">const</span> basePath = <span class="title function_">resolveExports</span>(curPath, request, absoluteRequest);</span><br><span class="line">    <span class="keyword">let</span> filename;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//stat(basePath)看上面合成的文件是否存在，为0说明为文件且文件存在</span></span><br><span class="line">    <span class="keyword">const</span> rc = <span class="title function_">stat</span>(basePath);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 判断结尾是不是一个 /</span></span><br><span class="line">    <span class="keyword">if</span> (!trailingSlash) &#123;</span><br><span class="line">      </span><br><span class="line">     <span class="comment">// 判断当前的basePath是否为一个文件 </span></span><br><span class="line">      <span class="keyword">if</span> (rc === <span class="number">0</span>) &#123;  <span class="comment">// File.</span></span><br><span class="line">        </span><br><span class="line">     <span class="comment">// isMain是否传入   </span></span><br><span class="line">        <span class="keyword">if</span> (!isMain) &#123;</span><br><span class="line">          </span><br><span class="line">          <span class="comment">//是否阻止去做超链接，根据我们的分析，这里不是 preserveSymlinks为false</span></span><br><span class="line">          <span class="keyword">if</span> (preserveSymlinks) &#123;</span><br><span class="line">            filename = path.<span class="title function_">resolve</span>(basePath);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// toRealPath：我们的分析 basePath在这里为软连接，然后通过此方法，找到真实的文件路径。然后，我们进入下一节，看看这个toRealPath是如何实现的</span></span><br><span class="line">            filename = <span class="title function_">toRealPath</span>(basePath);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (preserveSymlinksMain) &#123;</span><br><span class="line">          <span class="comment">// For the main module, we use the preserveSymlinksMain flag instead</span></span><br><span class="line">          <span class="comment">// mainly for backward compatibility, as the preserveSymlinks flag</span></span><br><span class="line">          <span class="comment">// historically has not applied to the main module.  Most likely this</span></span><br><span class="line">          <span class="comment">// was intended to keep .bin/ binaries working, as following those</span></span><br><span class="line">          <span class="comment">// symlinks is usually required for the imports in the corresponding</span></span><br><span class="line">          <span class="comment">// files to resolve; that said, in some use cases following symlinks</span></span><br><span class="line">          <span class="comment">// causes bigger problems which is why the preserveSymlinksMain option</span></span><br><span class="line">          <span class="comment">// is needed.</span></span><br><span class="line">          filename = path.<span class="title function_">resolve</span>(basePath);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          filename = <span class="title function_">toRealPath</span>(basePath);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (!filename) &#123;</span><br><span class="line">        <span class="comment">// Try it with each of the extensions</span></span><br><span class="line">        <span class="keyword">if</span> (exts === <span class="literal">undefined</span>)</span><br><span class="line">          exts = <span class="title class_">ObjectKeys</span>(<span class="title class_">Module</span>.<span class="property">_extensions</span>);</span><br><span class="line">        filename = <span class="title function_">tryExtensions</span>(basePath, exts, isMain);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!filename &amp;&amp; rc === <span class="number">1</span>) &#123;  <span class="comment">// Directory.</span></span><br><span class="line">      <span class="comment">// try it with each of the extensions at &quot;index&quot;</span></span><br><span class="line">      <span class="keyword">if</span> (exts === <span class="literal">undefined</span>)</span><br><span class="line">        exts = <span class="title class_">ObjectKeys</span>(<span class="title class_">Module</span>.<span class="property">_extensions</span>);</span><br><span class="line">      filename = <span class="title function_">tryPackage</span>(basePath, exts, isMain, request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (filename) &#123;</span><br><span class="line">      <span class="title class_">Module</span>.<span class="property">_pathCache</span>[cacheKey] = filename;</span><br><span class="line">      <span class="keyword">return</span> filename;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>4-15 fs模块toRealPath源码深入解析</strong></p><p>我们到toRealPath方法后，webStorm的node调试工具，点击继续 Step Into到该方法中，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 通过代码，我们知道toRealPath的方法实现，正如上面的逻辑图显示的，使用的是 fs.realpathSync这个模块。</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">toRealPath</span>(<span class="params">requestPath</span>) &#123;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 该方法传入两个参数，一个路径地址 requestPath，以及一个options</span></span><br><span class="line">  <span class="comment">// realpathCache为一个chche，表示的是当前已经做过路径判断的所有路径缓存，绝大多数的key值与value值是一样的，并没有软链接，但是也存在少量的有软连接的：key与value值不同</span></span><br><span class="line">  <span class="keyword">return</span> fs.<span class="title function_">realpathSync</span>(requestPath, &#123;</span><br><span class="line">    [internalFS.<span class="property">realpathCacheKey</span>]: realpathCache</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样的，我们在进去toRealPath这个方法，看到fs.realpathSync实现之前，我们先从老师哪里有拿到逻辑图，并根据图进行分析学习该代码里面的逻辑：</p><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/2-13.21kw7t7x45pc.webp" alt="2-13"></p><p>然后我们继续 Step Into到fs.realpathSync这个方法中，源码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// options 为Symbol</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">realpathSync</span>(<span class="params">p, options</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!options)</span><br><span class="line">    options = emptyObj;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    options = <span class="title function_">getOptions</span>(options, emptyObj);</span><br><span class="line">  p = <span class="title function_">toPathIfFileURL</span>(p);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 如果不是string格式的，进行格式转换</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> p !== <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">    p += <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//判断该路径是否为有效路径</span></span><br><span class="line">  <span class="title function_">validatePath</span>(p);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//pathModule 与我们直接引用的path模块没有区别：相对路径转为绝对路径</span></span><br><span class="line">  p = pathModule.<span class="title function_">resolve</span>(p);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// cache为一个map对象</span></span><br><span class="line">  <span class="keyword">const</span> cache = options[realpathCacheKey];</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 查找缓存</span></span><br><span class="line">  <span class="keyword">const</span> maybeCachedResult = cache &amp;&amp; cache.<span class="title function_">get</span>(p);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 是否查到了缓存，如果查到直接返回，如果没有查到，继续向后</span></span><br><span class="line">  <span class="keyword">if</span> (maybeCachedResult) &#123;</span><br><span class="line">    <span class="keyword">return</span> maybeCachedResult;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 定义所有软连接的缓存，ObjectCreate(null)创建的对象没有原型链，好处为它是一个纯粹的对象，节约内存空间</span></span><br><span class="line">  <span class="keyword">const</span> seenLinks = <span class="title class_">ObjectCreate</span>(<span class="literal">null</span>);</span><br><span class="line">  <span class="keyword">const</span> knownHard = <span class="title class_">ObjectCreate</span>(<span class="literal">null</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//将传入的path保存下来，做了一个缓存，这里的p相当于缓存中的key(若是软连接，则为软连接路径)，original相当于value(实际路径)，这么做的原因为：这里的p我们后面可能会发生改变</span></span><br><span class="line">  <span class="keyword">const</span> original = p;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 然后下面代码，进入到上图流程图中的路径是否存在/这个流程</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Current character position in p</span></span><br><span class="line">  <span class="keyword">let</span> pos;</span><br><span class="line">  <span class="comment">// The partial path so far, including a trailing slash if any</span></span><br><span class="line">  <span class="keyword">let</span> current;</span><br><span class="line">  <span class="comment">// The partial path without a trailing slash (except when pointing at a root)</span></span><br><span class="line">  <span class="keyword">let</span> base;</span><br><span class="line">  <span class="comment">// The partial path scanned in the previous round, with slash</span></span><br><span class="line">  <span class="keyword">let</span> previous;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Skip over roots</span></span><br><span class="line">  <span class="comment">// 找到p中的根路径</span></span><br><span class="line">  current = base = <span class="title function_">splitRoot</span>(p);</span><br><span class="line">  pos = current.<span class="property">length</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// On windows, check that the root exists. On unix there is no need.</span></span><br><span class="line">  <span class="comment">// 这里是windows系统的逻辑，我们是mac的，所以可以先跳过</span></span><br><span class="line">  <span class="keyword">if</span> (isWindows &amp;&amp; !knownHard[base]) &#123;</span><br><span class="line">    <span class="keyword">const</span> ctx = &#123; <span class="attr">path</span>: base &#125;;</span><br><span class="line">    binding.<span class="title function_">lstat</span>(pathModule.<span class="title function_">toNamespacedPath</span>(base), <span class="literal">false</span>, <span class="literal">undefined</span>, ctx);</span><br><span class="line">    <span class="title function_">handleErrorFromBinding</span>(ctx);</span><br><span class="line">    knownHard[base] = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Walk down the path, swapping out linked path parts for their real</span></span><br><span class="line">  <span class="comment">// values</span></span><br><span class="line">  <span class="comment">// NB: p.length changes.</span></span><br><span class="line">  <span class="comment">// 然后开始循环 由上文得知，我们的pos长度为1，p的长度为传入的path的长度</span></span><br><span class="line">  <span class="keyword">while</span> (pos &lt; p.<span class="property">length</span>) &#123;</span><br><span class="line">    <span class="comment">// find the next part</span></span><br><span class="line">    <span class="comment">// nextPart这里调用的就是p.indexOf(&#x27;/&#x27;,pos),这个方法举例如下：</span></span><br><span class="line">    <span class="comment">// &quot;/xxx/yyy&quot;.indexOf(&#x27;/&#x27;)  =&gt; 0  这里我们找到的是第一个“/”的位置，如果我们想找第二个“/”位置</span></span><br><span class="line">    <span class="comment">// &quot;/xxx/yyy&quot;.indexOf(&#x27;/&#x27;,1) =&gt; 4,这里的1指的是跳过第一个元素，从第二个元素开始寻找</span></span><br><span class="line">    <span class="keyword">const</span> result = <span class="title function_">nextPart</span>(p, pos);</span><br><span class="line">    previous = current;</span><br><span class="line">    <span class="keyword">if</span> (result === -<span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> last = p.<span class="title function_">slice</span>(pos);</span><br><span class="line">      current += last;</span><br><span class="line">      base = previous + last;</span><br><span class="line">      pos = p.<span class="property">length</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      current += p.<span class="title function_">slice</span>(pos, result + <span class="number">1</span>);</span><br><span class="line">      base = previous + p.<span class="title function_">slice</span>(pos, result);</span><br><span class="line">      pos = result + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 判断一下在cahe中是否存在</span></span><br><span class="line">    <span class="comment">// Continue if not a symlink, break if a pipe/socket</span></span><br><span class="line">    <span class="keyword">if</span> (knownHard[base] || (cache &amp;&amp; cache.<span class="title function_">get</span>(base) === base)) &#123;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 判断是否为一个file</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="title function_">isFileType</span>(statValues, <span class="variable constant_">S_IFIFO</span>) ||</span><br><span class="line">          <span class="title function_">isFileType</span>(statValues, <span class="variable constant_">S_IFSOCK</span>)) &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> resolvedLink;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 判断是不是软链接，从缓存中去拿</span></span><br><span class="line">    <span class="keyword">const</span> maybeCachedResolved = cache &amp;&amp; cache.<span class="title function_">get</span>(base);</span><br><span class="line">    <span class="keyword">if</span> (maybeCachedResolved) &#123;</span><br><span class="line">      resolvedLink = maybeCachedResolved;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// Use stats array directly to avoid creating an fs.Stats instance just</span></span><br><span class="line">      <span class="comment">// for our internal use.</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 没有拿到，然后做处理</span></span><br><span class="line">      <span class="keyword">const</span> baseLong = pathModule.<span class="title function_">toNamespacedPath</span>(base);</span><br><span class="line">      <span class="keyword">const</span> ctx = &#123; <span class="attr">path</span>: base &#125;;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// stats可以打印出 文件在操作系统下的各种信息/ dev_t:文件的设备编号 ino_t:文件在此设备的唯一标识</span></span><br><span class="line">      <span class="keyword">const</span> stats = binding.<span class="title function_">lstat</span>(baseLong, <span class="literal">false</span>, <span class="literal">undefined</span>, ctx);</span><br><span class="line">      <span class="title function_">handleErrorFromBinding</span>(ctx);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 判断是否为一个软连接</span></span><br><span class="line">      <span class="keyword">if</span> (!<span class="title function_">isFileType</span>(stats, <span class="variable constant_">S_IFLNK</span>)) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 如果不是软连接，将判断过的路径放入到 knowHard当中</span></span><br><span class="line">        knownHard[base] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (cache) cache.<span class="title function_">set</span>(base, base);</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 判断到该路径是一个软连接，然后继续执行下面的代码</span></span><br><span class="line">      <span class="comment">// Read the link if it wasn&#x27;t read before</span></span><br><span class="line">      <span class="comment">// dev/ino always return 0 on windows, so skip the check.</span></span><br><span class="line">      <span class="comment">//linkTarget 软连接实际的路径地址</span></span><br><span class="line">      <span class="keyword">let</span> linkTarget = <span class="literal">null</span>;</span><br><span class="line">      <span class="keyword">let</span> id;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 判断是否为window操作系统</span></span><br><span class="line">      <span class="keyword">if</span> (!isWindows) &#123;</span><br><span class="line">        <span class="comment">// 拿到stat的0号元素，即我们上面注释提到的文件设备编号</span></span><br><span class="line">        <span class="keyword">const</span> dev = stats[<span class="number">0</span>].<span class="title function_">toString</span>(<span class="number">32</span>);</span><br><span class="line">        <span class="comment">// 拿到stat的7号元素，即我们上面注释提到的文件唯一标识</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//拿到这两个是想生成一个唯一键：这个文件在当下PC系统下的唯一键</span></span><br><span class="line">        <span class="keyword">const</span> ino = stats[<span class="number">7</span>].<span class="title function_">toString</span>(<span class="number">32</span>);</span><br><span class="line">        id = <span class="string">`<span class="subst">$&#123;dev&#125;</span>:<span class="subst">$&#123;ino&#125;</span>`</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 通过这两个唯一键生成的唯一键作为 seenLinks的唯一键</span></span><br><span class="line">        <span class="comment">// 下面代码为在seenLinks中查找是否有这个id，如果有就直接拿出来</span></span><br><span class="line">        <span class="keyword">if</span> (seenLinks[id]) &#123;</span><br><span class="line">          linkTarget = seenLinks[id];</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 没有这个软连接的实际路径地址</span></span><br><span class="line">      <span class="keyword">if</span> (linkTarget === <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> ctx = &#123; <span class="attr">path</span>: base &#125;;</span><br><span class="line">        binding.<span class="title function_">stat</span>(baseLong, <span class="literal">false</span>, <span class="literal">undefined</span>, ctx);</span><br><span class="line">        <span class="title function_">handleErrorFromBinding</span>(ctx);</span><br><span class="line">        <span class="comment">// 拿到软连接的实际路径</span></span><br><span class="line">        linkTarget = binding.<span class="title function_">readlink</span>(baseLong, <span class="literal">undefined</span>, <span class="literal">undefined</span>, ctx);</span><br><span class="line">        <span class="title function_">handleErrorFromBinding</span>(ctx);</span><br><span class="line">      &#125;</span><br><span class="line">      resolvedLink = pathModule.<span class="title function_">resolve</span>(previous, linkTarget);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (cache) cache.<span class="title function_">set</span>(base, resolvedLink);</span><br><span class="line">      <span class="keyword">if</span> (!isWindows) seenLinks[id] = linkTarget;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Resolve the link, then start over</span></span><br><span class="line">    <span class="comment">// 将path真实路径重新生成</span></span><br><span class="line">    p = pathModule.<span class="title function_">resolve</span>(resolvedLink, p.<span class="title function_">slice</span>(pos));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Skip over roots</span></span><br><span class="line">    current = base = <span class="title function_">splitRoot</span>(p);</span><br><span class="line">    pos = current.<span class="property">length</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// On windows, check that the root exists. On unix there is no need.</span></span><br><span class="line">    <span class="keyword">if</span> (isWindows &amp;&amp; !knownHard[base]) &#123;</span><br><span class="line">      <span class="keyword">const</span> ctx = &#123; <span class="attr">path</span>: base &#125;;</span><br><span class="line">      binding.<span class="title function_">lstat</span>(pathModule.<span class="title function_">toNamespacedPath</span>(base), <span class="literal">false</span>, <span class="literal">undefined</span>, ctx);</span><br><span class="line">      <span class="title function_">handleErrorFromBinding</span>(ctx);</span><br><span class="line">      knownHard[base] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (cache) cache.<span class="title function_">set</span>(original, p);</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">encodeRealpathResult</span>(p, options);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>4-16 讲一个高难度的正则表达式（想挑战的点进来）</strong></p><blockquote><p>trailingSlash = /(?:^|/).?.$/.test(request);</p></blockquote><blockquote><p>console.log(/(?:^|/).?.$/.test(‘a’))    --&gt; false<br>console.log(/(?:^|/).?.$/.test(‘…’))    --&gt; true<br>console.log(/(?:^|/).?.$/.test(‘/…’))    --&gt; true<br>console.log(/(?:^|/).?.$/.test(‘/Users’))    --&gt; false</p></blockquote><blockquote><p>''  转译字符</p><p>在正则表达式中  ‘.‘ 是有含义的，表示匹配任意一个字符：<br>const str = ‘a’;<br>console.log(a.match(/./))  --&gt; [‘a’, index:0, input:‘a’, groups:undefined]</p><p>因此在正则表达式中要匹配 . 的话，需要加一个 反斜杠 ‘\’，因此‘.’ 匹配的就是一个点<br>console.log(a.match(/./))  --&gt; null</p><p>‘?’:表示匹配0个或1个字符<br>‘$’:表示最后的匹配样式<br>():表示需要返回匹配结果，分组<br>(?:  ) 表示非匹配分组,不把()中分组的内容显示出来<br>^:表示非的符号：[!.]表示的是匹配没有. 符号的，需要加[]，但是上文的正则没有[]，上文表示的是匹配一个空格，<br>‘|’ : 或</p></blockquote><p><strong>4-17 大招：如何快速拿到面试“一血”</strong></p><p><strong>简历简介</strong></p><blockquote><p>简历中简介部分至关重要，因为它位于简历的第一屏，是面试官最容易关注的部分，所以我们应该在简介部分充分突出我们的个人特长和优势</p></blockquote><p><strong>认真学完本章内容后应该怎么修改简历？</strong></p><blockquote><ul><li>熟悉yargs脚手架开发框架</li><li>熟悉多Package管理工具lerna的使用方法和使用原理</li><li>深入理解Node.js模块路径解析流程</li></ul></blockquote><p><strong>面试官问起细节后如何回答？</strong></p><ul><li>如何通过yargs开发一个脚手架？</li></ul><blockquote><p>答：比如vue-cli的脚手架为：vue create myProjectName</p></blockquote><ol><li>脚手架的构成一般由三个部分构成：</li></ol><blockquote><p>第一个部分就是： 主命令，也就是bin，它是在packag.json中配置的，通过npm link 进行本地安装<br>第二个部分 ：command：命令<br>第三个部分：options 参数<br>然后需要的一点是主命令bin的配置指向的主文件中，需要在文件顶部加上  #!/usr/bin/env node,就是说在环境变量中找到node命令来执行。</p></blockquote><ol start="2"><li>脚手架的初始化流程</li></ol><blockquote><p>第一步：首先是直接调用Yargs的构造函数，直接去生成一个脚手架</p><p>第二步：会调用一系列的Yargs提供的常用方法，对脚手架功能进行一个增强。<br>比如 yargs.usage(用法)、<br>yargs.options(注册一些脚手架参数熟悉)、<br>可以调用yargs.group(来对脚手架参数熟悉进行分组)、<br>yargs.fail(对脚手架异常进行监听)，<br>还有包括yargs尾部结语的设置yargs.elipogue()、<br>脚手架窗口设置yargs.wrap()<br>以及yargs.decomandrecommed(至少输入一个参数)<br>以及yargs.recommedCommands()推荐命令的提示等</p><p>第三步：需要对脚手架的参数进行一些解析：hideBin(process.argv),其实也就是直接取出从第三个开始的参数.调用的时候直接 yargs.argv<br>还有一种解析方式就是通过yargs.parse(argv,options)的方法</p><p>第四步：当脚手架的参数解析完成之后，我们要进行命令注册<br>命令注册我们使用的是yargs.command()方法。<br>command的注册方式有两种：第一种是一次传参(command,describe,builder,handler),还有一种方式就是传入一个对象，对象属性与第一种方式传入的相同。</p></blockquote><ul><li>熟悉多Package管理工具lerna的使用方法和使用原理</li></ul><blockquote><p>答：首先lerna是基于一个 git + npm的多package，也就是多包的项目管理工具，像一些开源的大型库：vue-vcli/create-react-app/babel等都是基于lerna进行多包管理的。他的作用就是降低包的管理操作成本，提高开发效率。像包的安装、依赖的添加、依赖的解除以及包的发布、打标签等功能。</p><p>实现原理：<br>首先就是通过 import-local这个库优先调用lerna的本地命令，<br>然后通过yargs生成一个脚手架、生成脚手架后生成一些全局参数、然后注册命令，通过yargs.parse方法进行参数解析。<br>需要注意的是lerna的命令注册过程中，需要传入builder以及handler两个方法，builder命令用于注册命令专属的options，而handelr用来处理命令的业务逻辑。<br>有一点非常值得学习的内容就是lerna它是通过配置本地依赖的方式进行开发的，具体写法就是在package.json的依赖当中通过file的格式书写，在lerna publish的时候再将该路径替换。</p></blockquote><ul><li>对Node.js模块路径解析流程的一个理解</li></ul><blockquote><p>第一：首先Node.js模块的路径解析是通过 require.resolve()方法来实现的<br>第二：这个resolve方法就是Module._resolveFileName()方法<br>它的作用就是我们给定一个模块名称的时候，查找处这个模块的真实路径。</p><p>然后，他的核心实现流程有三点：</p><ol><li>在执行流程中判断当前路径是否为内置模块，若是内置模块直接返回</li><li>若不是内置模块，它会继续调用自身的Module._resolveLookupPaths()方法生成node_modules的所有可能路径</li><li>最后再通过Module._findPath()去查询模块的真实路径。</li></ol><p>这里关于Module._findPaths()方法的核心实现流程有四步</p><ol><li>查询缓存(将request[模块名称]和paths[上面返回的所有可生成的node_modules路径]通过\x00合并成cacheKey)</li><li>缓存查不到，就会遍历paths，将每一个path与request结合组成文件路径basePath</li><li>然后判断这个basePath路径是否存在，如果存在会调用 fs.realPathSync()方法获取文件的真实路径，不存在就会继续遍历。</li></ol></blockquote><blockquote><ol start="4"><li>同时，将文件的真实路径缓存到Module._pathcache()中。</li></ol></blockquote><blockquote><p>这里关于fs.realPathsync()方法的核心流程有三点：</p><ol><li>仍然是查询缓存，缓存的key就是我们的path，即basePath，</li><li>如果这个key没有找到，就会将这个key从左到右开始遍历，通过/进行循环遍历，拆分路径，然后判断这个路径是否为软链接，如果是软链接，就去查询它的真实路径，并生成新的path路径，这个新的path路径继续传入这个遍历函数，继续往后遍历，(这里有一个细节需要注意的是：遍历过程中生成的子路径base会缓存在knowHard和ache中，避免重复查询)。</li><li>遍历完成后，就会得到模块的真实路径，并且将原始路径，也就是我们说的软连接路径作为key值，将真实值作为值，保存在缓存中</li></ol></blockquote><blockquote><p>在require中还有一个方法是 require.resolve.paths()方法，这个方法的作用是用于获取所有node_modules可能存在的路径，他的核心内容就是Module._resolveLookupPaths()</p></blockquote><blockquote><p>Module._resolveLookupPaths()的实现原理有两点<br>第一点，如果是 /路径，就在后面加入 node_modules<br>第二点，将路径从后往前遍历，如果查询到 / ，就拆分路径，在后面加上node_modules,一直遍历到查找不到 /路径，就会返回这个paths数组。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web架构之脚手架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web架构之脚手架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Week1-需求分析与架构设计</title>
      <link href="/Week1-%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E4%B8%8E%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/"/>
      <url>/Week1-%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E4%B8%8E%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章目录排版做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="第一章-课程导学">第一章 课程导学</h2><h3 id="1-1-课程导学">1-1 课程导学</h3><blockquote><ul><li>课程目标对标大厂P7</li><li>课程准备从招聘、提高自身实力、分析未来发展展开</li><li>课程内容：5大核心系统、12个代码仓库、4万行代码等构成一个体系完整的闭关系统项目。</li><li>项目预览、体系关系图、知识点图谱等。</li><li>收获：具有web前端架构师能力、亲身精力实战研发过程、拥有架构师思维。</li><li>对前置知识：TS/Vue/React/Webpack/nodejs等自行查漏补缺。</li><li>多实践、记录笔记。</li></ul></blockquote><h2 id="第二章-周介绍">第二章 周介绍</h2><h3 id="2-1-周介绍">2-1 周介绍</h3><blockquote><ul><li>本周内容：需求和架构设计</li><li>收获：研发流程规范化、熟悉产品需求、以架构师思维分析理解需求、《整体技术方案设计》文档、学会如何写技术方案设计。</li></ul></blockquote><h2 id="第三章-需求分析">第三章 需求分析</h2><blockquote><p>脱离业务的架构就是耍流氓 、架构师必须深入理解需求、参与需求、看透需求背后的业务本质。</p></blockquote><h3 id="3-1-产品研发流程">3-1 产品研发流程</h3><blockquote><p>公司起步-&gt; 项目启动 -&gt;需求 -&gt; 技术方案设计 -&gt; 开发 -&gt; 联调 -&gt; 测试 -&gt; 上线(版本升级) -&gt; 项目总结 -&gt; 年度总结</p></blockquote><h3 id="3-2-以架构师的思维分析需求">3-2 以架构师的思维分析需求</h3><blockquote><p>一道面试题开始–要对业务本身以及延伸展开考虑</p></blockquote><h3 id="3-3-项目浅层需求">3-3 项目浅层需求</h3><blockquote><p>简言之就是从项目前端业务展示看整个项目的流程</p></blockquote><h3 id="3-4-深度需求">3-4 深度需求</h3><blockquote><p>不容易一眼看出来，却很重要的需求</p><ul><li>作品管理(删除恢复、转增、复制)</li><li>作品统计(通过统计看结果，分渠道统计)</li><li>作品发布(url不变、支持多渠道)</li><li>H5分享(对业务增长服务)</li><li>后台管理(数据全局把控)</li></ul></blockquote><h3 id="3-5-需求总结">3-5 需求总结</h3><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/1-1.3zdavyzs87o0.webp" alt="1-1"></p><h2 id="第四章-架构设计">第四章 架构设计</h2><hr><h3 id="4-1-整体架构设计–章介绍">4-1 整体架构设计–章介绍</h3><blockquote><ul><li>任何看似复杂的架构，都是让整个系统变得简单</li><li>学会如何写技术方案设计</li><li>看整体、考虑扩展性、可行性、多调研、莫为设计而设计、用最简单实现方式。</li></ul></blockquote><h3 id="4-2-分析需要多少个项目">4-2 分析需要多少个项目</h3><blockquote><p>B端编辑器(前端、后端)、H5、管理后台(前端、后端)<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/1-2.2e0ewaz403dw.webp" alt="1-2"></p></blockquote><h3 id="4-3-需要自研统计服务">4-3 需要自研统计服务</h3><blockquote><p>需要自研统计服务的原因：第三方贵且不能很好满足需求。<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/1-3.3q75htn37s80.webp" alt="1-3"></p></blockquote><h3 id="4-4-各个项目之间的关系图">4-4 各个项目之间的关系图</h3><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/1-4.3kb9ai4d5ue0.webp" alt="1-4"></p><h3 id="4-5-作品数据结构设计">4-5 作品数据结构设计</h3><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/1-5.6des6vxddxk0.webp" alt="1-5"></p><h3 id="4-6-数据流转关系图">4-6 数据流转关系图</h3><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/1-6.3sw8kn3xle00.webp" alt="1-6"></p><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/1-7.44vetze5b740.webp" alt="1-7"></p><h3 id="4-7-技术方案文档的重要性">4-7 技术方案文档的重要性</h3><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/1-8.62hin585ocw0.webp" alt="1-8"></p><h3 id="4-8-写架构设计文档">4-8 写架构设计文档</h3><blockquote><p>通过此节内容，整理一个架构设计文档的范本，方便以后在写架构设计文档的时候有个demo参考。<br><a href="https://www.yuque.com/liugezhou/jiagou/qs4mtc">整体架构设计范本</a></p></blockquote><h3 id="4-9-本周总结以及下一步操作">4-9 本周总结以及下一步操作</h3><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/imooc-course/1-9.2k4kut6208o0.webp" alt="1-9"></p><h2 id="第五章-本周总结">第五章 本周总结</h2><hr><h3 id="5-1-本周总结">5-1 本周总结</h3><blockquote><p>以架构师思维分析需求、理解需求，写整体技术方案设计。</p></blockquote><h3 id="5-2-关于作业和打卡">5-2 关于作业和打卡</h3><blockquote><p><a href="homework.imooc-lego.com">homework.imooc-lego.com</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web架构之脚手架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web架构之脚手架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Week0-整体架构设计文档范本V0.1</title>
      <link href="/Week0-%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3%E8%8C%83%E6%9C%ACV0.1/"/>
      <url>/Week0-%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3%E8%8C%83%E6%9C%ACV0.1/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章目录排版做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="需求">需求</h2><blockquote><p>将需求链接或者内容摘录至此</p></blockquote><h2 id="范围-背景描述-目的">范围(背景描述/目的)</h2><blockquote><p>整体设计、架构设计、没有细节</p></blockquote><h2 id="模块设计">模块设计</h2><blockquote><p>模块的拆分和关系图，结果</p></blockquote><blockquote><p>模块的关键功能、职责等描述</p></blockquote><h2 id="特殊的模块重点说明：">特殊的模块重点说明：</h2><blockquote><ul><li>组件库、独立第三方，同时用于编辑和H5.</li></ul></blockquote><blockquote><ul><li>自研统计服务，为何自研</li></ul></blockquote><h2 id="作品的数据结构">作品的数据结构</h2><blockquote><p>vuex store的结构、解释</p></blockquote><blockquote><p>数据流转关系图</p></blockquote><h2 id="扩展性保证">扩展性保证</h2><blockquote><p>扩展组件，数据结构层面</p></blockquote><blockquote><p>扩展编辑器的功能，例如：组件隐藏、锁定  vnode</p></blockquote><blockquote><p>扩展页面的配置</p></blockquote><blockquote><p>（讨论、集思广益）</p></blockquote><h2 id="开发提效">开发提效</h2><blockquote><p>脚手架</p></blockquote><blockquote><p>组件平台</p></blockquote><h2 id="运维保障">运维保障</h2><blockquote><p>线上服务和运维服务</p></blockquote><blockquote><p>安全</p></blockquote><blockquote><p>监控和报警</p></blockquote><blockquote><p>服务扩展性：流量大</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web架构之脚手架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web架构之脚手架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jsonp温故</title>
      <link href="/010-jsonp%E6%B8%A9%E6%95%85/"/>
      <url>/010-jsonp%E6%B8%A9%E6%95%85/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><blockquote><p>今天重新学习之前写了半截的项目，其中提到了jsonp，当时也是查了很多资料，做了很多笔记，但是最近在写一个项目的时候，竟然遗忘了很多，所以特此做个总结，在下次再遇到jsonp的时候，可以有一个清晰的认识。</p></blockquote><span id="more"></span><h2 id="jsonp原理介绍">jsonp原理介绍</h2><blockquote><p>jsonp就是为了解决前端的跨域问题而进行的一项设计，jsonp之所以能实现跨域，是因为<code>它发送的不是ajax请求</code>，它<code>动态创建了script标签</code>，script标签是不受同源策略限制的，将script的src指向正式的服务器地址。</p></blockquote><p><em>查找资料：</em></p><blockquote><p>目前为止(2012年)最被推崇或者说首选的方案还是用JSON来传数据，靠JSONP来跨域。<br>JSON是一种数据交换格式，而JSONP是一种依靠开发人员的聪明才智创造出的一种非官方跨域数据交互协议。</p></blockquote><h2 id="JSONP是怎么产生的：">JSONP是怎么产生的：</h2><blockquote><p>1、一个众所周知的问题，Ajax直接请求普通文件存在跨域无权限访问的问题，甭管你是静态页面、动态网页、web服务、WCF，只要是跨域请求，一律不准；</p><p>2、不过我们又发现，Web页面上调用js文件时则不受是否跨域的影响（不仅如此，我们还发现凡是拥有&quot;src&quot;这个属性的标签都拥有跨域的能力，比如<code>&lt;script&gt;</code>、<code>&lt;img&gt;</code>、<code>&lt;iframe&gt;</code>）；</p><p>3、于是可以判断，当前端如果想通过纯web端（ActiveX控件、服务端代理、属于未来的HTML5之Websocket等方式不算）跨域访问数据就只有一种可能，那就是在远程服务器上设法把数据装进js格式的文件里，供客户端调用和进一步处理；</p><p>4、恰巧我们已经知道有一种叫做JSON的纯字符数据格式可以简洁的描述复杂数据，更妙的是JSON还被js原生支持，所以在客户端几乎可以随心所欲的处理这种格式的数据；</p><p>5、这样子解决方案就呼之欲出了，web客户端通过与调用脚本一模一样的方式，来调用跨域服务器上动态生成的js格式文件（一般以JSON为后缀），显而易见，服务器之所以要动态生成JSON文件，目的就在于把客户端需要的数据装入进去。</p><p>6、客户端在对JSON文件调用成功之后，也就获得了自己所需的数据，剩下的就是按照自己需求进行处理和展现了，这种获取远程数据的方式看起来非常像AJAX，但其实并不一样。</p><p>7、为了便于客户端使用数据，逐渐形成了一种非正式传输协议，人们把它称作JSONP，该协议的一个要点就是允许用户传递一个callback参数给服务端，然后服务端返回数据时会将这个callback参数作为函数名来包裹住JSON数据，这样客户端就可以随意定制自己的函数来自动处理返回数据了。</p></blockquote><h2 id="安装">安装</h2><blockquote><p>npm install jsonp --save</p></blockquote><h2 id="GithubAPI"><a href="https://github.com/webmodules/jsonp">GithubAPI</a></h2><blockquote><p>API介绍很简洁，下面为全文。</p><p>//语法：<br><strong>jsonp(url,opts,fn)</strong></p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">url (String) url to fetch   </span><br><span class="line"><span class="comment">&lt;!-- &gt; 要获取的网址 --&gt;</span></span><br><span class="line">opts(Object) ,optional       </span><br><span class="line"><span class="comment">&lt;!-- 一个参数对象   --&gt;</span></span><br><span class="line">·param(String) name of the query string parameter to specify the callback (default to callback)</span><br><span class="line"><span class="comment">&lt;!-- 用于指定回调的查询字符串参数的名称 (默认为callback) --&gt;</span></span><br><span class="line">·timeout(Number) how long after a timeout error is emitted. 0 to disable(default to 60000)</span><br><span class="line"><span class="comment">&lt;!-- 超时错误多长时间后出发。 0表示禁用（默认为60s） --&gt;</span></span><br><span class="line">·prefix(String) prefix for the global callback functions that handle jsonp responses(default to __ip)</span><br><span class="line"><span class="comment">&lt;!-- 处理jsonp响应的全局回调函数的前缀 --&gt;</span></span><br><span class="line">·name(String) name of the global callback funcitions that handle jsonp responses(default to `prefix` + incremented counter)</span><br><span class="line"><span class="comment">&lt;!-- 处理jsonp响应的全局回调函数的名称 --&gt;</span></span><br><span class="line">fn callback </span><br><span class="line">The callback is called with `err`,`data` parameters.</span><br><span class="line"><span class="comment">&lt;!-- 使用`err`，`data`参数调用回调。 --&gt;</span></span><br><span class="line">If it times out ,the err will be an ERROR object whose message is Timeout.</span><br><span class="line"><span class="comment">&lt;!-- 如果超时，则错误将是ERROR对象，其消息为Timeout。 --&gt;</span></span><br><span class="line">Return a function that ,when called,will cancel the in-progress jsonp request( `fn` wont&#x27;t be called)</span><br><span class="line"><span class="comment">&lt;!-- 返回一个函数，当出现错误时，将取消正在进行的jsonp请求（`fn`不会被调用） --&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>电脑更换如何继续写hexo博客</title>
      <link href="/010-continue%20blog/"/>
      <url>/010-continue%20blog/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h2 id="背景">背景</h2><blockquote><p>之前我用hexo搭建过一个博客，不过后来由于换了电脑之后，理所应当接着在搭建好的博客上继续写，可是没有成功。<br>我当时是这么操作的：直接将原电脑博客的源文件copy到新电脑并直接部署，导致了时间的全部错乱，博客时间没有同步，当时也是查了很多资料，结果还是没有成功，于是当初便又重新搭建了现在用的这个博客。<br>其实当时只有在每篇文章标题上加个date字段就能解决我上述所说的问题,还是因为之前对HEXO配置什么的都没看过的原因。<br>然后因为这个date问题看了半天，最后在【电脑更换继续写博客】这个问题上找到了一个对于我来说最佳的方案。</p></blockquote><blockquote><p>这篇文章要解决总结的问题是：使用hexo搭建完博客之后 ，如果换了电脑，怎么继续写搭建好的hexo博客。<br>这篇总结欠了很久，这篇总结也是在我完全明白如何操作后的总结。</p></blockquote><h2 id="操作">操作</h2><blockquote><p>首先假设的场景是这样的：你在本地搭建好了博客（你本地文件夹为blog），且已经写了一段时间的博客，然后你准备回回家中的电脑继续写博客，于是在原有的电脑上你要这么操作：<br>第一步：在你的Github博客上新建一个分支，我们设为hexo分支，并且在你的Github上将hexo分支设为默认分支。<br>第二步：先在你原来的电脑上新建一个文件夹（newBlog）且clone这个hexo分支到你本地，把除了.git之外的文件全部删掉。<br>第三步：把你博客源文件（blog下的文件）除了.deploy_git文件外全部复制到newBlog下【注意如果你之前克隆过theme中的主题文件，那么应该把主题文件中的.git文件夹删掉】<br>第四步：执行提交文件操作：<code>git add .</code> <code>git commit –m &quot;add branch&quot;</code>  <code>git push</code><br>第五步：这个时候你将要开始在newBlog这个文件下<code>hexo d </code>|| <code>git add. </code> 、<code> git push</code>等操作，之前的blog文件可以扔到垃圾箱了。</p></blockquote><h2 id="继续">继续</h2><p>以上本地的操作完成后，你提交完代码就回家了，这个时候你到了家中（一些基础配置就不说了）：</p><blockquote><p>第一步：clone你在公司<code>git push</code>的项目到你的本地。<br>第二步：<br><code>cd xxx.github.io</code>、<br><code>npm install</code>、<br><code>npm install hexo-deployer-git --save</code><br>第三步：<code>hexo g</code>、<code>hexo d</code>。<br>这个时候你便可以在家继续写博客了，只不过写完的时候别忘了<code>git push</code> 一下.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开源许可证介绍</title>
      <link href="/009-%E5%BC%80%E6%BA%90%E8%AE%B8%E5%8F%AF%E8%AF%81%E4%BB%8B%E7%BB%8D/"/>
      <url>/009-%E5%BC%80%E6%BA%90%E8%AE%B8%E5%8F%AF%E8%AF%81%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><blockquote><p>Github上新建项目的时候，会让添加开源许可证，一搬情况下我们自己建项目的时候：<code>Add a licence:None</code>,即：不添加许可证。<br>刚开始的时候我们都不会在意这个许可证到底是什么，但是随着项目专业、职业化，我们一定要对开源许可证有个清楚的了解。<br>那么，现在就动脑、动手记录一下关于开源许可证的小介绍。</p></blockquote><span id="more"></span><h2 id="分析图">分析图</h2><blockquote><p>乌克兰程序员Paul Bagwell，画了一张分析图，说明应该怎么选择。只用两分钟，你就能搞清楚这六种许可证之间的最大区别。<br>下面的图片是来自阮一峰博客制作的中文版，请点击看大图。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/licence.40rwv5syxkg0.webp" alt="licence"></p><blockquote><p>这里介绍的是最流行的五种开源许可证：  MIT BSD  Apache GPL  LGPL</p></blockquote><h2 id="MIT">MIT</h2><blockquote><p>非常宽松的许可证，就是说你什么都可以干，但是开发方不负责质量，相当于免责声明。<br>MIT内容与三条款BSD许可证（3-clause BSD license）内容颇为近似，但是赋予软件被授权人更大的权利与更少的限制。<br>应用该许可证的项目：jQuery Rails Express Lua等</p></blockquote><h2 id="BSD">BSD</h2><blockquote><p>也是宽松的协议，但比起MIT，BSD不允许软件的衍生版用原作者名字促销，BSD依然是一个免责声明，与MIT相比差异很少。<br>Javascript常用BSD许可协议。因为javascript库很多，替代品也多。作者要做的仅仅是免责而已。</p></blockquote><h2 id="Apache">Apache</h2><blockquote><p>Apache的许可很长，比BSD和MIT要严格不少,需要保留全部的原始版权，如果修改，则需要加上主要的修改通知。</p></blockquote><h2 id="GPL">GPL</h2><blockquote><p>GPL是常用许可协议中最严格的。<br>GPL最最重要的一条就是GPL的衍生品也必须是GPL协议，也就是说GPL协议发布的软件，其后继版本将都是GPL.<br>Linux就是GPL。</p></blockquote><h2 id="LGPL">LGPL</h2><blockquote><p>GPL过于严格,于是GUN发布了LGPL这个限制较少的许可证。<br>LGPL和GPL最大的不同是LGPL允许在私有软件上使用它，而GPL只允许在自由软件上使用。<br>如果你使用一个LGPL下的库，你需要遵循LGOL，如果仅仅是连接这个库，则不需要遵循LGPL。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程概念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最近搭建博客遇到的一系列问题</title>
      <link href="/008-some%20problem%20about%20hexo/"/>
      <url>/008-some%20problem%20about%20hexo/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><blockquote><p>最近在重新搭博客的时候，发生了一系列问题，今天抓紧记录下。</p></blockquote><h2 id="环境介绍">环境介绍</h2><blockquote><p>首先介绍一下我的博客部署：<br>我的博客是通过hexo搭建、上传至Github上，之前的博客访问便都是：<a href="https://liugezhou.github.io">https://liugezhou.github.io</a><br>但是最新搭建的这个博客，我想给自己已有的域名进行绑定：www.liugezhou.online.<br>于是，查找了一些资料，知道需要将我的域名进行解析， 需要添加 CNAME 记录。<br>在域名解析的时候，发现其实没服务器什么事，直接在解析设置上添加两条记录（并暂停其它的一些配置）：</p></blockquote><table><thead><tr><th style="text-align:left">记录类型</th><th style="text-align:left">主机记录</th><th style="text-align:left">解析线路</th><th style="text-align:left">记录值</th></tr></thead><tbody><tr><td style="text-align:left">A</td><td style="text-align:left">@</td><td style="text-align:left">默认</td><td style="text-align:left">192.30.252.153</td></tr><tr><td style="text-align:left">CNAME</td><td style="text-align:left">www</td><td style="text-align:left">默认</td><td style="text-align:left"><a href="http://liugezhou.github.io">liugezhou.github.io</a></td></tr></tbody></table><blockquote><p>我也记不清为什么是这么配置了，总之这个时候我的个人域名便可以直接访问我的博客内容了。</p></blockquote><h2 id="问题出现">问题出现</h2><blockquote><p>在写博客的时候，避免不了要使用图片，于是我专门在Github上建了个仓库放图片，这样我每次需要插入图片的时候，直接使用Markdown语法引入图片便好了。<br>用这样的方法，<code>在github网站上访问项目博客文件</code>的时候，看md文件的确是可以访问到图片的。</p><p>但是用HEXO搭建的博客网站，其中图片便死活不出来，就这样写了两篇文章后，感觉是真难受。</p><p>一篇文章怎么可以没有图片呢？<br>怎么可以没有自己上传的图片呢？<br>怎么可以总是引用别人的图片地址呢？</p></blockquote><h2 id="解决图片存储问题">解决图片存储问题</h2><blockquote><p>七牛云有个免费存储图片的功能–使我可以便于链接访问。</p></blockquote><blockquote><p>这里记录的我使用到它所做的简单步骤。</p></blockquote><blockquote><p>1️⃣  不管你用什么方法首先登录七牛云网站，不管你用什么方法首先有个自己的域名。</p></blockquote><blockquote><p>2️⃣  进入首页–查找产品–对象存储–立即使用–新建存储空间</p></blockquote><blockquote><p>3️⃣  绑定域名[融合 CDN 加速域名] （重点⭐⭐⭐）<br>这里又需要在域名控制台配置一下CNAME，但是我之前已经将Github与liugehzou.online的域名使用了一次CANME,于是犯了嘀咕。。</p><p>继续，查阅<a href="https://developer.qiniu.com/fusion/kb/1322/how-to-configure-cname-domain-name">官方资料</a>、等资料，经过多次尝试：</p></blockquote><blockquote><p>绑定域名选择【普通域名】、加速域名设置为：【img.liugezhou.online】,然后到这里在七牛云上的配置便结束！</p></blockquote><blockquote><p>接着进入域名管理平台，进行域名解析：<br>同上，只需要添加一条记录即可：</p></blockquote><table><thead><tr><th style="text-align:left">记录类型</th><th style="text-align:left">主机记录</th><th style="text-align:left">解析线路</th><th style="text-align:left">记录值</th></tr></thead><tbody><tr><td style="text-align:left">CNAME</td><td style="text-align:left">img</td><td style="text-align:left">默认</td><td style="text-align:left"><a href="http://img.liugezhou.online.qiniudns.com">img.liugezhou.online.qiniudns.com</a></td></tr></tbody></table><blockquote><p>这时候回到七牛云平台，点击内容管理，直接上传照片，然后查看地址便可以访问了。<br>这期间还有一个加水印的功能，我试了一下没加上，这个应该是后台上传图片的时候才有效，也罢，到此最起码解决了图片的上传问题。</p></blockquote><h2 id="博客遗留问题">博客遗留问题</h2><blockquote><p>之前我的博客在另一台电脑上进行的部署，后来我换电脑后，出了一些状况。<br>就是：换了台电脑我不能很好的部署上传了，原因为文章的发布时间都错乱了，这也是导致我重新部署博客的原因。</p></blockquote><blockquote><p>但是，如果我再换电脑是不是意味着我还有继续重新部署，博客文章归为0呢？<br>当然不是，查阅了一些资料后，我知道情况是这样的：</p></blockquote><blockquote><p>首先HEXO博客搭建上传至Github使用的命令是hexo clean &amp;&amp; hexo g &amp;&amp; hexo d,这时候上传到Github上的只是由HEXO生成的静态文件，而本地的关于hexo的文件其实还是在本地的，这个时候就需要在liugezhou.github.io的项目上，再建一个分支，将本地的HEXO项目上传至另一个分支，每次提交代码的时候hexo d部署到主分支，本地的文件提交到新建的分支，这样在其它电脑上再写博客的时候，只需要将新建的那个分支上的代码下载到本地即可。（这里说的比较混乱，因为这里我现在还没有新建分支提代码，这里只是记录一下思路，待有兴趣或者迫不得已的时候再去实践）</p></blockquote><blockquote><p>行吧，大概就是这个样子。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序Request的封装</title>
      <link href="/007-%E5%B0%8F%E7%A8%8B%E5%BA%8FRequest%E7%9A%84%E5%B0%81%E8%A3%85/"/>
      <url>/007-%E5%B0%8F%E7%A8%8B%E5%BA%8FRequest%E7%9A%84%E5%B0%81%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><blockquote><p>最近做了两个小程序，业务相对比较简单，关于公益方面的，收获颇多，其中感觉在开发中明显提升开发效率以及减少代码量的就是request的封装，下面稍稍做个总结。</p></blockquote><h2 id="通用封装">通用封装</h2><blockquote><p>在utils文件夹下新建两个文件，config.js以及request.js,代码分别如下。</p></blockquote><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="comment">&lt;!-- config.js--&gt;</span></span></span><br><span class="line"><span class="language-xml">module.exports = </span><span class="template-variable">&#123;</span></span><br><span class="line"><span class="template-variable">  appid: &quot;wxcXXXXXXXXXXXXXX349f&quot;,</span></span><br><span class="line"><span class="template-variable">  API_BASE_URL: &#x27;https://liugezhou.github.io/&#x27;,//暂时测试环境地址、上线需要修改</span></span><br><span class="line"><span class="template-variable">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- request--&gt;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">CONFIG</span> = <span class="built_in">require</span>(<span class="string">&quot;./config.js&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">request</span> = (<span class="params">url,method,data</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> _url = <span class="variable constant_">CONFIG</span>.<span class="property">API_BASE_URL</span>+url</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve ,reject</span>)=&gt;</span>&#123;</span><br><span class="line">    wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: _url,</span><br><span class="line">        <span class="attr">method</span>:method,</span><br><span class="line">      <span class="attr">data</span>:data,</span><br><span class="line">      <span class="attr">header</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;content-type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span> <span class="comment">// 默认值</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="title function_">success</span>(<span class="params">request</span>) &#123;</span><br><span class="line">        <span class="title function_">resolve</span>(request.<span class="property">data</span>)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="title function_">fail</span>(<span class="params">error</span>) &#123;</span><br><span class="line">        <span class="title function_">reject</span>(error)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="title function_">complete</span>(<span class="params">aaa</span>) &#123;</span><br><span class="line">        <span class="comment">// 加载完成</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 小程序的promise没有finally方法，自己扩展下</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="title class_">Promise</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">finally</span> = <span class="keyword">function</span> (<span class="params">callback</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> <span class="title class_">Promise</span> = <span class="variable language_">this</span>.<span class="property">constructor</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">then</span>(</span><br><span class="line">    <span class="keyword">function</span> (<span class="params">value</span>) &#123;</span><br><span class="line">      <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="title function_">callback</span>()).<span class="title function_">then</span>(</span><br><span class="line">        <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> value;</span><br><span class="line">        &#125;</span><br><span class="line">      );</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">function</span> (<span class="params">reason</span>) &#123;</span><br><span class="line">      <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="title function_">callback</span>()).<span class="title function_">then</span>(</span><br><span class="line">        <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">          <span class="keyword">throw</span> reason;</span><br><span class="line">        &#125;</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">//所有接口定义在这里</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  request,</span><br><span class="line">  <span class="comment">//app.js登录</span></span><br><span class="line">  <span class="attr">login</span>:<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(<span class="string">&#x27;WeChat/Login.aspx&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>,data)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//获取验证码</span></span><br><span class="line">  <span class="attr">getMessageCode</span>: <span class="function">(<span class="params">mobile</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(<span class="string">&#x27;Donor/DonorPhoneCode.aspx?&#x27;</span>+mobile,<span class="string">&#x27;POST&#x27;</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  ……</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>通过上面两个小文件我们就将request封装完毕，在业务层调用代码的时候只需要：</p></blockquote><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">const REQUEST = require(<span class="string">&#x27;../../utils/request.js&#x27;</span>);</span><br><span class="line">…………………………………………</span><br><span class="line"><span class="keyword">var</span> that =this</span><br><span class="line">    REQUEST.login(&#123;</span><br><span class="line">      <span class="attr">tokenkey</span>: res.code</span><br><span class="line">    &#125;).then(<span class="keyword">function</span>(<span class="params">res</span>)&#123;</span><br><span class="line">         that.globalData.openId = res.data.tokenkey</span><br><span class="line">         that.globalData.isBind = res.code</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">res</span> =&gt;</span> &#123;<span class="comment">//catch  fail在这里</span></span><br><span class="line">        <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;fail:&#x27;</span>,res); </span><br><span class="line">      &#125;).finally(<span class="function"><span class="params">()</span>=&gt;</span>&#123;<span class="comment">//finally在这里</span></span><br><span class="line">       <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;finally:&#x27;</span>, <span class="string">&quot;结束&quot;</span>); </span><br><span class="line">      &#125;)</span><br><span class="line">………………………………………</span><br></pre></td></tr></table></figure><h2 id="队列封装（不常用）">队列封装（不常用）</h2><blockquote><p>一般情况下，上面的封装我们按着自己的需求稍微修改就应该可以方便使用。<br>接下来介绍的一种是接口队列化封装。因为在我们的开发需求中，每一次接口的请求需要上一个接口返回的两个数据，因此稍作整理如下：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- request.<span class="property">js</span> --&gt;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">CONFIG</span> = <span class="built_in">require</span>(<span class="string">&quot;./config.js&quot;</span>)</span><br><span class="line"><span class="keyword">let</span> requestlist = [];</span><br><span class="line"><span class="keyword">let</span> doing = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">request</span> = (<span class="params">link, data, back</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">var</span> link = <span class="variable constant_">CONFIG</span>.<span class="property">API_BASE_URL</span> + link</span><br><span class="line">  requestlist.<span class="title function_">push</span>(&#123; <span class="attr">link</span>: link, <span class="attr">data</span>: data, <span class="attr">back</span>: back &#125;)</span><br><span class="line">  <span class="keyword">if</span> (!doing) <span class="title function_">dorequest</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">dorequest</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">  doing = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">let</span> task = requestlist.<span class="title function_">shift</span>();</span><br><span class="line">  <span class="keyword">if</span> (task) &#123;</span><br><span class="line">    wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: task.<span class="property">link</span>,</span><br><span class="line">      <span class="attr">data</span>: <span class="title class_">Object</span>.<span class="title function_">assign</span>(&#123;</span><br><span class="line">         seq : wx.<span class="title function_">getStorageSync</span>(<span class="string">&quot;seq&quot;</span>) || <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">         token : wx.<span class="title function_">getStorageSync</span>(<span class="string">&quot;token&quot;</span>) || <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">         openid : wx.<span class="title function_">getStorageSync</span>(<span class="string">&quot;openId&quot;</span>) || <span class="string">&#x27;&#x27;</span>&#125;, task.<span class="property">data</span>),</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">      <span class="attr">header</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;content-type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span> <span class="comment">// 默认值</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">success</span>: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        wx.<span class="title function_">setStorageSync</span>(<span class="string">&quot;seq&quot;</span>, res.<span class="property">data</span>.<span class="property">seq</span>)</span><br><span class="line">        wx.<span class="title function_">setStorageSync</span>(<span class="string">&quot;token&quot;</span>, res.<span class="property">data</span>.<span class="property">token</span>)</span><br><span class="line">        task.<span class="title function_">back</span>(res.<span class="property">data</span>);</span><br><span class="line">        <span class="title function_">dorequest</span>();</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">fail</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">          <span class="attr">title</span>: <span class="string">&#x27;服务器出现故障&#x27;</span>,</span><br><span class="line">          <span class="attr">image</span>: <span class="string">&#x27;../../assets/icon/wrong.png&#x27;</span>,</span><br><span class="line">          <span class="attr">duration</span>: <span class="number">3000</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">complete</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">    doing = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  request,</span><br><span class="line">  <span class="comment">//获取用户openid</span></span><br><span class="line">  <span class="attr">getOpenid</span>: <span class="function">(<span class="params">data,res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(<span class="string">&#x27;get-wx-openid&#x27;</span>,data,res)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//获取验证码</span></span><br><span class="line">  <span class="attr">getLoginCode</span>: <span class="function">(<span class="params">data,res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(<span class="string">&#x27;send-phone-code&#x27;</span>, data, res)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序开发需要注意的一些规范</title>
      <link href="/006-%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E4%B8%80%E4%BA%9B%E8%A7%84%E8%8C%83/"/>
      <url>/006-%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E4%B8%80%E4%BA%9B%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><blockquote><p>今天的工作已经做完，在马上就进入五一假期的下班焦躁时刻，来个简单的微信小程序开发规范总结。</p></blockquote><h2 id="小程序应避免出现任何-JavaScript-异常">小程序应避免出现任何 JavaScript 异常</h2><blockquote><p>出现 JavaScript 异常可能导致小程序的交互无法进行下去，我们应当追求零异常，保证小程序的高鲁棒性和高可用性，相信这一点一般情况下都不会出现，需要注意的是代码测试中多场景的试错。</p></blockquote><h2 id="合理控制图片的大小">合理控制图片的大小</h2><blockquote><p>图片太大会增加下载时间和内存的消耗，应根据显示区域大小合理控制图片大小。<br>一般情况下图片较大的，我们应该都会选择直接放在服务器上，直接拿到地址，但是官方说这样读取的图片：<code>存在网络图片资源未开启 HTTP 缓存控制</code>,这是个什么意思，我也未完全弄懂。</p></blockquote><h2 id="小程序所有请求应响应正常">小程序所有请求应响应正常</h2><blockquote><p>请求失败可能导致小程序的交互无法进行下去，应当保证所有请求都能成功。然而，请求成功只是第一步，还可能存在的问题就是请求的耗时太长、存在短时间内发起太多的请求这样的情况。</p></blockquote><h2 id="避免setData的数据过大且避免setData的调用过于频繁。">避免setData的数据过大且避免setData的调用过于频繁。</h2><blockquote><p>由于小程序运行逻辑线程与渲染线程之上，setData的调用会把数据从逻辑层传到渲染层，数据太大会增加通信时间.<br>setData接口的调用涉及逻辑层与渲染层间的线程通过，通信过于频繁可能导致处理队列阻塞，界面渲染不及时而导致卡顿，应避免无用的频繁调用.</p></blockquote><h2 id="避免将未绑定在-WXML-的变量传入-setData">避免将未绑定在 WXML 的变量传入 setData</h2><blockquote><p>setData操作会引起框架处理一些渲染界面相关的工作，一个未绑定的变量意味着与界面渲染无关，传入setData会造成不必要的性能消耗。<br>这一条我想是很多开发人员在初次接触小程序开发的时候都会犯的一个错误吧。因为刚开始的时候由于这种setData的语法，让我们忘了还有全局变量的使用，于是会经常出现使用Page中定义的data做中间过渡。</p></blockquote><h2 id="wxss-覆盖率较高，较少或没有引入未被使用的样式">wxss 覆盖率较高，较少或没有引入未被使用的样式</h2><blockquote><p>我们应该按需引入 wxss 资源，如果小程序中存在大量未使用的样式，会增加小程序包体积大小，从而在一定程度上影响加载速度。<br>这个也是比较常见的一种不规范，写了很多CSS样式，很多不用的就留来了代码里面，越来越多，所以在编写代码过程中，尽量去对每一行代码（特别是自己写的）了如指掌。</p></blockquote><h2 id="避免首屏时间太长的情况">避免首屏时间太长的情况</h2><blockquote><p>首屏时间是指用户开始看到第一屏的内容的时间，首屏时间太长会导致用户长时间看到的都是白屏，会一直等待有意义的内容展示出来。出现这一情况，应仔细检查这个过程都有哪个操作，一般来说，可能是请求数据的时间太长，或者是一次渲染的数据太大导致渲染时间太长。</p></blockquote><blockquote><p>这些东西是我感觉比较常见且容易修改的，其它还存在一些规范，不妨打开微信开发者工具，点击<code>Audits</code>,对你写的代码进行一个测试，测试结果会让你很好的处理自己的代码。<br>That’s really cool!</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编译型语言 VS 解释型语言</title>
      <link href="/005-%E7%BC%96%E8%AF%91%E5%9E%8B%E8%AF%AD%E8%A8%80%E4%B8%8E%E8%A7%A3%E9%87%8A%E5%9E%8B%E8%AF%AD%E8%A8%80%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/005-%E7%BC%96%E8%AF%91%E5%9E%8B%E8%AF%AD%E8%A8%80%E4%B8%8E%E8%A7%A3%E9%87%8A%E5%9E%8B%E8%AF%AD%E8%A8%80%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h1>简单经历</h1><p>在详述前，先记录一下自己的经历：之前写过一段时间Java代码，现在主要写前端，在这个过程中有一个场景让我印象深刻，但原理还有待深究：<br>之前写Java代码的时候记得修改一些内容的时候必须要重启Tomcat服务器，才能看到修改代码过后的运行结果，但是有些又不用重启。而在写前端语言的时候，抛去缓存，代码修改后可以马上运行显示，当时根本就没去想这个问题，我能简单的想起编译型语言与解释型语言的区别也就是这个了。</p><h1>文章正文</h1><blockquote><p>那么到底什么是<font color=Red>编译型语言</font>，什么是<font color=Red>解释型语言</font>呢？他们之间有什么共同点和区别呢？</p></blockquote><h2 id="概念">概念</h2><blockquote><ul><li>编译型语言代表有：<code>C</code>语言，<code>C++</code>、<code>Object-C</code>以及最近很火的苹果新语言<code>swift</code><br>通常都会对源代码进行编译，生成可以执行的二进制代码，执行的是编译后的结果</li><li>解释型语言代表有：<code>JavaScript</code>、<code>Python</code>、<code>Erlang</code>、<code>PHP</code>、<code>Perl</code>、<code>Ruby</code><br>通常不用对源代码进行编译，一般是通过解释器载入脚本后运行。由于每个语句都是执行的时候才进行解释翻译，这样解释性语言每次执行就要翻译一次，效率相对要低。</li><li><code>Java</code>具有编译与解释两种特性：既可以将其源代码当作脚本执行，也可以进行编译成.class代码（字节码）载入运行</li></ul></blockquote><h2 id="对比">对比</h2><h3 id="编译型语言：">编译型语言：</h3><blockquote><ul><li>优点：编译器一般会有预编译的过程对代码进行优化。因为编译只做一次，运行时不需要编译，所以编译型语言的程序执行效率高。可以脱离语言环境独立运行。</li><li>缺点：编译之后如果需要修改就需要整个模块重新编译。编译的时候根据对应的运行环境生成机器码，不同的操作系统之间移植就会有问题，需要根据运行的操作系统环境编译不同的可执行文件。</li></ul></blockquote><h3 id="解释型语言">解释型语言</h3><blockquote><ul><li>优点：有良好的平台兼容性，在任何环境中都可以运行，前提是安装了解释器（虚拟机）。灵活，修改代码的时候直接修改就可以，可以快速部署，不用停机维护。</li><li>缺点：每次运行的时候都要解释一遍，性能上不如编译型语言。</li></ul></blockquote><h2 id="区别（本段落参考文章地址-戳这里）">区别（本段落参考文章地址 戳<a href="https://www.jianshu.com/p/f726e4766ac7">这里</a>）</h2><h3 id="区别1：从效果上来比">区别1：从效果上来比</h3><blockquote><p>编译型语言要全部写完之后，然后通过某个编译器，去生成一个类似*.exe的二进制文件，然后手工双击这个文件才看的到效果；解释型语言则没生成你看的到的那种.exe文件，而是直接发出效果。那么区别之一就是：是否显性的生成二进制文件供你去双击。</p></blockquote><h3 id="区别2：运行的时候是否需要编译器">区别2：运行的时候是否需要编译器</h3><blockquote><p>编译型语言运行的是最终的二进制代码了，所以不在需要编译器在身边守护。但解释型语言则不然，它是边解释、边运行，所以运行的时候很可能还有部分代码没有解释好，所以需要编译器守护（解释型语言把该工具叫：解释器）。那么编译器在哪里？就在<code>浏览器</code>里，所以你要看html效果，必须是用浏览器这种工具，或者有编译工具在内的其他工具，如：模拟浏览器的工具。</p></blockquote><h3 id="区别3：执行速度对比">区别3：执行速度对比</h3><blockquote><p>编译型语言由于运行的已经是完全的二进制内容了，所以运行起来很干净利落，自然速度快。但解释型语言，运行的不一定是完全的二进制内容，因为它是边解释（成二进制），边运行。所以当它执行看出效果的时候，程序后半部分还不一定解释成二进制呢。所以它是“三心二意”的做事，速度没有前者快，但是<code>CPU的运行速度如果很快</code>(注：这就是【Python】作为一门解释型语言，弊端有所减轻的原因)，你可能看不出来，偶尔会看到“有点卡”的效果。原因就是：它边解释、边运行，你看到效果了，可能还有一少半的代码没解释成二进制呢，所以你看到的效果会是残缺的，这就是为什么查看网页的时候，很容易就看到这样的情况：先是出现一堆没有布局的文字，然后才出现那种布局好的效果。</p></blockquote><h3 id="区别4：可移植性对比">区别4：可移植性对比</h3><blockquote><p>编译型语言是运行二进制内容，所以：一旦CPU指令系统改变，之前的二进制文件可能运行不了。比如：如果到其他硬件平台上运行，就可能出现错误，就需要根据该平台重新编译出新的二进制文件。所以：可移植性差；而解释型语言则不然。它并没有实现弄成什么二进制内容，而是在需要的时候才开始编译、运行。所以：它自然具有可移植性，即：在任何平台都可以马上运行起来。注意：它的解释工具如：<code>浏览器</code>，本身就是编译型语言解释出来的二进制代码，所以浏览器本身不具有移植性，是需要针对不同的平台弄出对应的浏览器最终二进制文件的。这里千万不要混淆了。</p></blockquote><h3 id="区别5：升级上对比">区别5：升级上对比</h3><blockquote><p>编译型语言弄出来的二进制文件如果要升级，自然要重新下载一个新的二进制文件了。所以重新下载，安装，覆盖是最大的特点。比如QQ的升级，就是要重新下载，重新安装，重新覆盖，等个半天，而且很耗费CPU资源，体验性就不大好；而解释型的语言，只要重新写好源代码即可。用户提要到最新效果，只要刷新一下即可。所以体验性好。比如：某网站平台升级了，用户只要重新刷新一下…</p></blockquote><h3 id="区别6：应用领域">区别6：应用领域</h3><blockquote><p>编译型语言应用领域通常是那些安装软件，如：桌面上的那种安装软件；解释型的语言的应用领域通常是：互联网，网站等，那种刷新了一下就可以看到最新效果的领域。</p></blockquote><h2 id="实现原理">实现原理</h2><blockquote><p>实现原理，简单来说就是：是不是做成了“实时采集”；<br>编译型语言没有做“实时采集”。它选择了一次性解决问题，表现为：先弄出完整的二进制代码之后，再让用户去执行该二进制代码，这样省事、省力、省心。但造成可移植性差、升级麻烦的后果。</p></blockquote><blockquote><p>解释型语言，采用了“实时采集”的措施，做成“边解释、边运行”。但这样带来的直接弊端就是：边走边看，因此速度自然要慢一些。不过<code>现在的CPU、内存等硬件能力都很强大，这个方面的影响可以忽略</code>。而它带来的非常便捷的升级，让它更显示出独特的魅力。所以它在移动互联网的领域，在只要刷新一下就可以看到最新效果的领域，是独一无二的霸主。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程概念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chicken Soup</title>
      <link href="/004-Chicken%20Soup/"/>
      <url>/004-Chicken%20Soup/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h1>亚当·斯密 《道德情操论》</h1><blockquote><p>我们在这个世界上辛苦劳作，来回奔波是为了什么？所有这些贪婪和欲望，所有这些对财富、权利和名声的追求，其目的到底何在呢？归根结底，是为了得到他人的爱和认同。</p></blockquote><h1><a href="https://news.ycombinator.com/item?id=27565815">关于离职</a></h1><blockquote><p>年轻时，我犯的最大错误，就是<strong>没有及时离职</strong>。我以为我必须向公司证明自己，然后再离开，但这其实没有任何意义。<br>你不欠雇主任何东西，不必向雇主证明任何事情。他们对你丝毫没有忠诚度，对你做对或做错、是聪明还是愚蠢，毫不在意。<br>把时间用在你最终不会引以为豪的东西上面，是一件可怕的事情，浪费了你在地球上的短暂旅程。</p></blockquote><blockquote><p><a href="https://news.ycombinator.com/item?id=27565815">原文链接</a></p></blockquote><blockquote><p>My biggest mistake, that I made again and again, was not leaving a job when it was time. I thought I had something to prove, but there was never any point to it. You don’t owe anything to an employer. You can’t prove anything to an employer. They have absolutely no loyalty to you, and care less than nothing about what is right or wrong, wise or foolish.<br>So: If you ever think things might not turn out as well as you hoped, move on. There is so much else going on in the world that is at least as interesting as what you are doing, where you have a much better chance of making a difference, that spending time on things that you might not end up proud of is a terrible waste of your short time on Earth.</p></blockquote><h1><a href="https://jacobobryant.com/blog/understand/">关于创业</a></h1><blockquote><p>创业者要做两件事：第一件是弄清楚要做什么，第二件就是去做。<br>但是，大多数创业者不认为第一件事很重要，如果花费一天时间思考，试图更好地理解一个问题，他往往觉得那一天是浪费掉的，没有行动力。</p></blockquote><blockquote><p><a href="https://jacobobryant.com/blog/understand/">原文链接</a></p></blockquote><h1>fearless</h1><blockquote><p>无所畏惧（fearless）不是没有恐惧；而是你依然心怀恐惧，但无论如何都决定要跳进去。</p></blockquote><h1><a href="https://news.ycombinator.com/item?id=27534343">逐字输入</a></h1><blockquote><p>我从互联网上得到的最好的经验之一，就是永远不要复制和粘贴不是自己编写的代码。如果你一定要复制，那就照着它逐字输入，逼着自己思考，这些代码实际上是什么意思。</p></blockquote><blockquote><p><a href="https://news.ycombinator.com/item?id=27534343">原文链接</a></p></blockquote><h1>文摘</h1><ul><li>一个人觉得最引以为自豪的事情，往往是那些做起来最艰难的事情。这一点你千万不要怀疑。</li><li>在一定通货膨胀率下，我们的钱在多长时间后会贬值一半。按72除以3%的通货膨胀率计算，得到24，就是说24年以后，你的钱只值现在的一半。你们直接用72除以你们投资的年利润百分比，得出的数字就是这笔钱翻一倍所要的年数。</li><li>当你决定做一件事情的时候，你必须在72小时之内完成，否则你很可能永远不会再做了。</li><li>过度自信比不自信要好。</li><li>没有准时这回事，你要么迟到，要么早到。</li></ul><h1>悟</h1><ul><li>生活就是信息差</li><li>生活的真正运行规则不会留下话柄和文字</li><li>勤快一点总是没错的</li><li>得有一个总体的规划  不能守着现在的一亩三分地  为了一时的精明遗失未来的价值</li><li>人都不愿意做决定，而学会做决定，学会在思考之后不犹豫不决，是做人过程的必修课。</li><li>如果生活当中，你有看不惯的人，看不顺眼的地方，是你自己的修养不够。</li></ul><h1>理查德·斯托曼</h1><blockquote><p>我是悲观主义者。别人为胜利而战，我不是。我总是战斗，偶尔会赢。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端跨域问题</title>
      <link href="/003-%E5%89%8D%E7%AB%AF%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
      <url>/003-%E5%89%8D%E7%AB%AF%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：删除了原总结内容</font><br><font color=blue> 更新时间：2022-05-04</font></p><p>原作者：Qyouu<br>链接：<a href="https://www.imooc.com/article/70123">https://www.imooc.com/article/70123</a></p><blockquote><p>原总结已删除</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>服务端渲染</title>
      <link href="/002-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B8%B2%E6%9F%93/"/>
      <url>/002-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B8%B2%E6%9F%93/</url>
      
        <content type="html"><![CDATA[<p><font color=blue>更新说明：对文章排版以及内容格式做了调整。</font><br><font color=blue> 更新时间：2022-05-04</font></p><h1>导读</h1><blockquote><p>本文主要是从三个方面学习服务端渲染，内容整理自多个博客。</p><ul><li>服务端渲染是什么？什么是服务端渲染？（服务端渲染的运行机制）</li><li>为什么使用服务端渲染？服务端渲染解决了什么问题？</li><li>什么情况下使用服务端渲染？（服务端渲染的应用实例与使用场景）</li></ul></blockquote><h1>概念</h1><blockquote><p>首先，说到服务端渲染我们要先对渲染这个概念有一个大概的了解<br>渲染：就是将数据和模版组装成html</p><p><font color=Red>客户端渲染（CSR）VS服务端渲染(SSR)</font><br>那么，为了更好的理解服务端渲染，我们也很有必要去了解一下客户端渲染。将客户端渲染与服务端渲染同时进行学习理解。</p></blockquote><h2 id="客户端渲染">客户端渲染</h2><h3 id="概念">概念</h3><blockquote><p>解释一：客户端渲染模式下，服务端把渲染的静态文件给到客户端，客户端拿到服务端发送过来的文件自己跑一遍js，根据JS运行结果，生成相应DOM，然后渲染给用户。</p></blockquote><blockquote><p>解释二：html 仅仅作为静态文件，客户端在请求时，服务端不做任何处理，直接以原文件的形式返回给客户端客户端，然后根据 html 上的 JavaScript，生成 DOM 插入 html。</p></blockquote><h3 id="延伸">延伸</h3><blockquote><p>客户端渲染的方式起源于JavaScript的兴起，ajax的大热更是让前端渲染更加成熟，前端渲染真正意义上的实现了前后端分离，前端只专注于UI的开发，后端只专注于逻辑的开发，前后端交互只通过约定好的API来交互，后端提供json数据，前端循环json生成DOM插入到页面中去。</p></blockquote><h3 id="利弊">利弊</h3><blockquote><p><font color=Red>好处</font>： 网络传输数据量小、减少了服务器压力、前后端分离、局部刷新，无需每次请求完整页面、交互好可实现各种效果</p></blockquote><blockquote><p><font color=Red>坏处</font>：不利于SEO、爬虫看不到完整的程序源码、首屏渲染慢（渲染前需要下载一堆js和css等）</p></blockquote><h2 id="服务端渲染">服务端渲染</h2><h3 id="概念-2">概念</h3><blockquote><p>解释一：服务端在返回 html 之前，在特定的区域，符号里用数据填充，再给客户端，客户端只负责解析 HTML 。</p></blockquote><blockquote><p>解释二：服务端渲染的模式下，当用户第一次请求页面时，由服务器把需要的组件或页面渲染成 HTML 字符串，然后把它返回给客户端。客户端拿到手的，是可以直接渲染然后呈现给用户的 HTML 内容，不需要为了生成 DOM 内容自己再去跑一遍 JS 代码。使用服务端渲染的网站，可以说是“所见即所得”，页面上呈现的内容，我们在 html 源文件里也能找到。</p></blockquote><h3 id="利弊-2">利弊</h3><blockquote><p><font color=Red>好处</font>：首屏渲染快、利于SEO、可以生成缓存片段，生成静态化文件、节能（对比客户端渲染的耗电）</p></blockquote><blockquote><p><font color=Red>坏处</font>：用户体验较差、不容易维护，通常前端改了部分html或者css，后端也需要修改。</p></blockquote><h3 id="对比">对比</h3><blockquote><p>其实前后端的渲染本质是一样的，都是字符串的拼接，将数据渲染进一些固定格式的html代码中形成最终的html展示在用户页面上。  因为字符串的拼接必然会损耗一些性能资源。<br>如果在服务器端渲染，那么消耗的就是server端的性能。<br>如果是在客户端渲染，常见的手段，比如是直接生成DOM插入到html 中，或者是使用一些前端的模板引擎等。他们初次渲染的原理大多是将原html中的数据标记（例如）替换。</p></blockquote><h1>为什么使用服务端渲染</h1><p>简单总结起来就是两点：</p><blockquote><p><font color=Red>首屏加载快</font>：<br>相比于加载单页应用，我只需要加载当前页面的内容，而不需要像 React 或者 Vue 一样加载全部的 js 文件<br><font color=Red>SEO 优化</font>：<br>对于单页应用，搜索引擎并不能收录到 ajax 爬取数据之后然后再动态 js 渲染出来的页面。</p></blockquote><p>为了更便于理解，下面几段话摘自掘金小册：</p><blockquote><p>事实上，很多网站是出于效益的考虑才启用服务端渲染，性能倒是在其次。<br>假设 A 网站页面中有一个关键字叫“前端性能优化”，这个关键字是 JS 代码跑过一遍后添加到 HTML 页面中的。那么客户端渲染模式下，我们在搜索引擎搜索这个关键字，是找不到 A 网站的——搜索引擎只会查找现成的内容，不会帮你跑 JS 代码。A 网站的运营方见此情形，感到很头大：搜索引擎搜不出来，用户找不到我们，谁还会用我的网站呢？为了把“现成的内容”拿给搜索引擎看，A 网站不得不启用服务端渲染。<br>但性能在其次，不代表性能不重要。服务端渲染解决了一个非常关键的性能问题——首屏加载速度过慢。在客户端渲染模式下，我们除了加载 HTML，还要等渲染所需的这部分 JS 加载完，之后还得把这部分 JS 在浏览器上再跑一遍。这一切都是发生在用户点击了我们的链接之后的事情，在这个过程结束之前，用户始终见不到我们网页的庐山真面目，也就是说用户一直在等！相比之下，服务端渲染模式下，服务器给到客户端的已经是一个直接可以拿来呈现给用户的网页，中间环节早在服务端就帮我们做掉了，用户岂不“美滋滋”？</p></blockquote><h1>什么情况下使用服务端渲染？</h1><p>通过服务端渲染的概念以及它的两个特点：<font color=Red><code>首屏加载速度快</code>、<code>SEO优化</code></font><br>我们知道，服务端渲染其实就是<code>由浏览器做的一些事情，我们放到了服务端去做</code>，那么对于掘金、简书、CSDN、知乎等网站的搭建，这种在网上一搜搜出一堆东西的网站，SEO做的很好，应该多少都用到服务端渲染了吧？当然，做服务端渲染成本是高昂的。<br>vue全家桶或者react全家桶，都是推荐通过服务端渲染来实现路由的。<br>服务端渲染并非完全之策（服务器稀少而宝贵），关于首屏渲染体验以及SEO的优化方案很多，在不使用服务端渲染这个操作下，我们最好的处理方式就是找寻替代优化方案。</p><p>关于在server端还是在browser端渲染的选择，更多的是要看业务场景。</p><h1>相关文章延伸阅读</h1><p><a href="https://blog.csdn.net/b9q8e64lo6mm/article/details/79418969">https://blog.csdn.net/b9q8e64lo6mm/article/details/79418969</a> （力荐）</p>]]></content>
      
      
      <categories>
          
          <category> 前端小技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程概念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建个人-博客极简</title>
      <link href="/001-hexo%20first%20blood/"/>
      <url>/001-hexo%20first%20blood/</url>
      
        <content type="html"><![CDATA[<blockquote><p>进入<a href="https://hexo.io/zh-cn/">HEXO</a>官方文档，可以查看完全的个人博客的搭建。<br>本文只是对个人在搭建博客过程中，极简的总结，几乎涵盖搭建一个个人免费博客的全部命令，还是非常推荐去官方网站学习。</p></blockquote><h2 id="官网主题">官网主题</h2><p>在搭建个人博客本地版的时候，总共使用六个个命令就可以看到样板。</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-<span class="keyword">cli</span> -<span class="keyword">g</span> </span><br><span class="line"><span class="keyword">cd</span> DeskTop</span><br><span class="line">hexo init liugezhou</span><br><span class="line"><span class="keyword">cd</span> liugezhou</span><br><span class="line">npm install</span><br><span class="line">hexo <span class="keyword">g</span> &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>此时，本地效果图如下：<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/001hexo.3c8e8gvca6g0.webp" alt="001hexo"></p><h2 id="更改主题">更改主题</h2><blockquote><p>$ git clone <a href="https://github.com/Haojen/hexo-theme-Anisina.git">https://github.com/Haojen/hexo-theme-Anisina.git</a> themes/lmz</p></blockquote><h2 id="项目部署">项目部署</h2><blockquote><p>$  npm install hexo-deployer-git --save<br>$  hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</p></blockquote><h2 id="效果查看">效果查看</h2><p>使用该主题，初次搭建的博客效果：<a href="https://www.liugezhou.online">https://www.liugezhou.online</a><br>PC版：<br><img src="https://cdn.jsdelivr.net/gh/liugezhou/image@master/img/primary.webp" alt="primary"></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
